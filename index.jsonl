{"content":"provides attributes for use on annotations, e.g. notes and groups of notes\n  describing the existence and position of an anchor for annotations. Declarations for classes, datatypes, and macros available to all TEI modules indicates whether the copy text shows the exact place of reference for the note. points to the end of the span to which the note is attached, if the note is not embedded\n        in the text at that point.","title":"<a href=\"ref/att.anchoring\">att.anchoring</a>","tag":"reference"}
{"content":"provides attributes for elements representing speech or action that can be ascribed to a\n    specific individual. Declarations for classes, datatypes, and macros available to all TEI modules indicates the person, or group of people, to whom the element content is ascribed. In the following example from Hamlet, speeches (sp) in the body of the play \n        are linked to castItem elements in the castList using the who\n        attribute.","title":"<a href=\"ref/att.ascribed\">att.ascribed</a>","tag":"reference"}
{"content":"provides attributes for elements representing speech or action that can be directed at a\n        group or individual. Declarations for classes, datatypes, and macros available to all TEI modules indicates the person, or group of people, to whom a speech act or action is directed. In the following example from Mary Pix's The False Friend, speeches (sp) in the body of the play \n                    are linked to castItem elements in the castList using the toWhom\n                    attribute, which is used to specify who the speech is directed to. Additionally, the stage\n                    includes toWhom to indicate the directionality of the action. \n                ","title":"<a href=\"ref/att.ascribed.directed\">att.ascribed.directed</a>","tag":"reference"}
{"content":"provides attributes that can be used to associate a representation such as a name or title\n    with canonical information about the object being named or referenced. Declarations for classes, datatypes, and macros available to all TEI modules provides an externally-defined means of identifying the entity (or entities) being\n        named, using a coded value of some kind. provides an explicit means of locating a full definition or identity for the entity being named by\n        means of one or more URIs.","title":"<a href=\"ref/att.canonical\">att.canonical</a>","tag":"reference"}
{"content":"provides attributes for describing numerical ranges. Declarations for classes, datatypes, and macros available to all TEI modules gives a minimum estimated value for the approximate measurement. gives a maximum estimated value for the approximate measurement. where the measurement summarizes more than one observation\n      or a range, supplies the minimum value\n        observed. where the measurement summarizes more than one observation\n        or a range, supplies the maximum value\n        observed. specifies the degree of statistical confidence (between zero and one) that a value falls within the range\n        specified by min and max, or the proportion of observed values that fall within that range.","title":"<a href=\"ref/att.ranging\">att.ranging</a>","tag":"reference"}
{"content":"provides attributes for describing the size of physical objects. Declarations for classes, datatypes, and macros available to all TEI modules names the unit used for the measurement specifies the length in the units specified indicates the size of the object concerned using a project-specific vocabulary combining\n        quantity and units in a single string of words. characterizes the precision of the values specified by the other attributes. where the measurement summarizes more than one observation, specifies the applicability\n        of this measurement.","title":"<a href=\"ref/att.dimensions\">att.dimensions</a>","tag":"reference"}
{"content":"provides attributes to indicate the hand in which\n    the content of an element was written in the source being transcribed. Declarations for classes, datatypes, and macros available to all TEI modules points to a handNote element describing the hand considered responsible for the\n  \t    content of the element concerned.","title":"<a href=\"ref/att.written\">att.written</a>","tag":"reference"}
{"content":"provides attributes describing the nature of any physical damage affecting a reading. Declarations for classes, datatypes, and macros available to all TEI modules categorizes the cause of the damage, if it can be identified. provides a coded representation of the degree of damage, either as\n a number between 0 (undamaged) and 1 (very extensively damaged), or\n      as one of the codes high, medium, low, \n        or unknown. The damage element\n        with the degree attribute should only be used where the text may be read with\n        some confidence; text supplied from other sources should be tagged as supplied. assigns an arbitrary number to each stretch of damage regarded as forming part of the\n        same physical phenomenon.","title":"<a href=\"ref/att.damaged\">att.damaged</a>","tag":"reference"}
{"content":"provides attributes to indicate whether or not the element\n  concerned is considered to  mark the end of an orthographic token in the same way\n  as whitespace. Declarations for classes, datatypes, and macros available to all TEI modules indicates whether or not the  element\n\tbearing this attribute should be considered to mark the end of\n\tan orthographic token in the same way as whitespace. In the following lines from the Dream of the Rood, \n      linebreaks occur in the middle of the words lāðost \n      and reord-berendum.\n    ","title":"<a href=\"ref/att.breaking\">att.breaking</a>","tag":"reference"}
{"content":"provides attributes for normalization of elements that contain datable events to a custom dating system\n    (i.e. other than the Gregorian used by W3 and ISO). Names and dates supplies the value of a date or time in some custom standard form. The following are examples of custom date or time formats that are not valid ISO or W3C format\n                    normalizations, normalized to a different dating system Not all custom date formulations will have Gregorian equivalents. The when-custom attribute and other custom dating are not constrained to a datatype by the TEI, but\n        individual projects are recommended to regularize and document their dating formats. specifies the earliest possible date for the event in some custom standard form. specifies the latest possible date for the event in some custom standard form. indicates the starting point of the period in some custom standard form. indicates the ending point of the period in some custom standard form. supplies a pointer to some location defining a named point in time with reference to which the datable item is understood to have occurred supplies a pointer to a calendar element or other\n        means of interpreting the values of the custom dating attributes. In this example, the calendar attribute points to a calendar element for the \n          Julian calendar, specifying that the text content of the date element is a \n          Julian date, and the datingMethod attribute also points to the Julian calendar\n          to indicate that the content of the when-custom attribute value is Julian too.","title":"<a href=\"ref/att.datable.custom\">att.datable.custom</a>","tag":"reference"}
{"content":"provides attributes that may be used to supply a\n  canonical reference as a means of identifying the\n  target of a pointer. Declarations for classes, datatypes, and macros available to all TEI modules specifies the destination of the pointer by supplying a canonical reference expressed using the\n        scheme defined in a refsDecl element in the TEI header","title":"<a href=\"ref/att.cReferencing\">att.cReferencing</a>","tag":"reference"}
{"content":"provides attributes for normalization of elements that contain\n  datable events  conforming to the W3C\n  XML Schema Part 2: Datatypes Second Edition. Declarations for classes, datatypes, and macros available to all TEI modules supplies the value of the date or time in a standard form,\n        e.g. yyyy-mm-dd. Examples of W3C date, time, and date & time formats. specifies the earliest possible date for the event in\n        standard form, e.g. yyyy-mm-dd. specifies the latest possible date for the event in\n        standard form, e.g. yyyy-mm-dd. indicates the starting point of the period in standard form, e.g. yyyy-mm-dd. indicates the ending point of the period in standard\n        form, e.g. yyyy-mm-dd.","title":"<a href=\"ref/att.datable.w3c\">att.datable.w3c</a>","tag":"reference"}
{"content":"provides attributes for normalization of elements\n    that contain dates, times, or datable events. Declarations for classes, datatypes, and macros available to all TEI modules indicates one or more systems or calendars to which the\n        date represented by the content of this element belongs. supplies pointers to one or more definitions of \n        named periods of time (typically categorys or calendars) within which the datable item is understood to have occurred.","title":"<a href=\"ref/att.datable\">att.datable</a>","tag":"reference"}
{"content":"provides attributes that are used to \n    align XML elements or attributes with the appropriate Data Categories (DCs) defined by the ISO 12620:2009 \n    standard and stored in the Web repository called ISOCat at 1 . Declarations for classes, datatypes, and macros available to all TEI modules contains a PID (persistent identifier) that aligns the given element with the appropriate \n        Data Category (or categories) in ISOcat. contains a PID (persistent identifier) that aligns the content of the given\n        element or the value of the given attribute with the appropriate simple Data\n        Category (or categories) in ISOcat.","title":"<a href=\"ref/att.datcat\">att.datcat</a>","tag":"reference"}
{"content":"provides attributes for elements which may be independently associated with a particular declarable element within the header, thus overriding the inherited default for that element. Declarations for classes, datatypes, and macros available to all TEI modules identifies one or more declarable elements within the\nheader, which are understood to apply to the element bearing this\nattribute and its content.","title":"<a href=\"ref/att.declaring\">att.declaring</a>","tag":"reference"}
{"content":"provides attributes for those elements in the TEI header which\n  may be independently selected by means of  the special purpose decls attribute. Declarations for classes, datatypes, and macros available to all TEI modules indicates whether or not this element is selected by default when\nits parent is selected.","title":"<a href=\"ref/att.declarable\">att.declarable</a>","tag":"reference"}
{"content":"provides attributes for representing\n    fragmentation of a structural element, typically as \n  a consequence of some overlapping hierarchy. Declarations for classes, datatypes, and macros available to all TEI modules specifies whether or not its parent element is fragmented\n      in some way, typically by some other overlapping structure: for\n      example a speech which is divided between two or more verse\n      stanzas, a paragraph which is split across a page division, a\n      verse line which is divided between two speakers.","title":"<a href=\"ref/att.fragmentable\">att.fragmentable</a>","tag":"reference"}
{"content":"provides attributes common to all elements which behave in the same way as divisions. Declarations for classes, datatypes, and macros available to all TEI modules specifies how the content of the division is organized. indicates whether this division is a sample of the\n\t\toriginal source and if so, from which part.","title":"<a href=\"ref/att.divLike\">att.divLike</a>","tag":"reference"}
{"content":"provides attributes for recording normalized temporal durations. Declarations for classes, datatypes, and macros available to all TEI modules indicates the length of this element in time.","title":"<a href=\"ref/att.duration.w3c\">att.duration.w3c</a>","tag":"reference"}
{"content":"provides attributes for use on metadata elements\n  describing the status of a document. Declarations for classes, datatypes, and macros available to all TEI modules describes the status of a document either currently or, when\nassociated with a dated element, at the time indicated.","title":"<a href=\"ref/att.docStatus\">att.docStatus</a>","tag":"reference"}
{"content":"provides attributes for normalization of elements that contain datable events. Transcribed Speech","title":"<a href=\"ref/att.duration\">att.duration</a>","tag":"reference"}
{"content":"provides attributes indicating the agent\n    responsible for some aspect of the text, the markup or \n    something asserted by the markup, and the degree of certainty \n    associated with it. Declarations for classes, datatypes, and macros available to all TEI modules signifies the degree of certainty associated with the intervention or interpretation. indicates the agency responsible for the intervention or interpretation, for example an\n        editor or transcriber.","title":"<a href=\"ref/att.global.responsibility\">att.global.responsibility</a>","tag":"reference"}
{"content":"provides attributes describing the nature of an encoded scholarly intervention or\n    interpretation of any kind. Declarations for classes, datatypes, and macros available to all TEI modules indicates the nature of the evidence supporting the reliability or accuracy of the\n        intervention or interpretation. indicates whether this is an instant revision or not.","title":"<a href=\"ref/att.editLike\">att.editLike</a>","tag":"reference"}
{"content":"provides rendering attributes common to all elements in the TEI encoding scheme. Declarations for classes, datatypes, and macros available to all TEI modules indicates how the element in question was rendered or presented in the source text. contains an expression in some formal style definition language\nwhich defines the rendering or presentation\nused for this element in the source text points to a description of the rendering or presentation used for this element in the\n        source text.","title":"<a href=\"ref/att.global.rendition\">att.global.rendition</a>","tag":"reference"}
{"content":"provides attributes common to all elements in the TEI encoding scheme. Declarations for classes, datatypes, and macros available to all TEI modules provides a unique identifier for the element bearing the attribute. gives a number (or other label) for an element, which is not necessarily unique within\n        the document. indicates the language of the element content using a tag generated\n        according to BCP 47. provides a base URI reference with which applications can resolve relative URI\n        references into absolute URI references. signals an intention about how white space should be \n      managed by  applications.","title":"<a href=\"ref/att.global\">att.global</a>","tag":"reference"}
{"content":"provides attributes used by elements to point to an\n    external source. Declarations for classes, datatypes, and macros available to all TEI modules specifies the source from which some aspect of\n        this element is drawn.","title":"<a href=\"ref/att.global.source\">att.global.source</a>","tag":"reference"}
{"content":"provides attributes describing aspects of the hand in which a\n  manuscript is written. Declarations for classes, datatypes, and macros available to all TEI modules gives a name or other identifier for the scribe\nbelieved to be responsible for this hand. points to a full description of the scribe concerned, typically supplied by a person element\n      elsewhere in the description. characterizes the particular script or writing style used by\nthis hand, for example secretary, copperplate, Chancery, Italian, etc. points to a full description of the script or writing style used by\nthis hand, typically supplied by a scriptNote element\n      elsewhere in the description. describes the tint or type of ink, e.g. brown, or other\nwriting medium, e.g. pencil\n          specifies how widely this  hand is used in the manuscript.","title":"<a href=\"ref/att.handFeatures\">att.handFeatures</a>","tag":"reference"}
{"content":"provides attributes for specifying the type of a computer\n  resource using a standard taxonomy. Declarations for classes, datatypes, and macros available to all TEI modules specifies the applicable multimedia internet mail extension (MIME) media type","title":"<a href=\"ref/att.internetMedia\">att.internetMedia</a>","tag":"reference"}
{"content":"provides attributes for specifying display and related properties of\n  external media. Declarations for classes, datatypes, and macros available to all TEI modules Where the media are displayed, indicates the  display width Where the media are displayed, indicates the display height Where the media are displayed, indicates a scale factor to\n      be applied when generating the desired display size","title":"<a href=\"ref/att.media\">att.media</a>","tag":"reference"}
{"content":"provides attributes by which a resource (such as an externally\n  held media file) may be located. Declarations for classes, datatypes, and macros available to all TEI modules specifies the URL from which the media concerned may be obtained.","title":"<a href=\"ref/att.resourced\">att.resourced</a>","tag":"reference"}
{"content":"provides attributes for elements which represent a formal analysis or interpretation. Declarations for classes, datatypes, and macros available to all TEI modules indicates what kind of phenomenon is being noted in the passage. provides a sub-categorization of the phenomenon is being noted in the passage, if needed points to instances of the analysis or interpretation represented\nby the current element.","title":"<a href=\"ref/att.interpLike\">att.interpLike</a>","tag":"reference"}
{"content":"provides attributes to represent a regularized or normalized measurement. Declarations for classes, datatypes, and macros available to all TEI modules indicates the units used for the measurement, usually\n      using the standard symbol for the desired units. points to a unique identifier stored in the xml:id of a unitDef element that defines a unit of measure. specifies the number of the specified units that\n      comprise the measurement indicates the substance that is being measured","title":"<a href=\"ref/att.measurement\">att.measurement</a>","tag":"reference"}
{"content":"provides attributes to indicate the type of section which is changing at a specific milestone. Elements common to all TEI documents provides a conventional name for the kind of section changing at this milestone.","title":"<a href=\"ref/att.milestoneUnit\">att.milestoneUnit</a>","tag":"reference"}
{"content":"provides attributes common to elements which refer to named persons, places, organizations etc. Declarations for classes, datatypes, and macros available to all TEI modules may be used to specify further information about the entity referenced by\nthis name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place. provides a means of locating the canonical form\n      (nym) of the names associated with the object\n       named by\n      the element bearing it.","title":"<a href=\"ref/att.naming\">att.naming</a>","tag":"reference"}
{"content":"provides attributes to indicate any specialised notation used for element content. Declarations for classes, datatypes, and macros available to all TEI modules names the notation used for the content of the element.","title":"<a href=\"ref/att.notated\">att.notated</a>","tag":"reference"}
{"content":"provides attributes for describing where on the source page or\n  object a textual element appears. Declarations for classes, datatypes, and macros available to all TEI modules specifies where this item is placed.","title":"<a href=\"ref/att.placement\">att.placement</a>","tag":"reference"}
{"content":"provides attributes that can be used to classify or subclassify elements in any way. Declarations for classes, datatypes, and macros available to all TEI modules characterizes the element in some sense, using any convenient\n classification scheme or typology. provides a sub-categorization of the element, if needed","title":"<a href=\"ref/att.typed\">att.typed</a>","tag":"reference"}
{"content":"provides a set of attributes used by all elements which point\n  to other elements by means of one or more URI references. Declarations for classes, datatypes, and macros available to all TEI modules specifies the language of the content to be found at the destination referenced by target, using a language tag generated\n        according to BCP 47. In the example above, the linkGrp combines\n        pointers at parallel fragments of the Universal\n        Declaration of Human Rights: one of them is in Polish,\n        the other in Swahili. specifies the destination of the reference by supplying one or more URI References specifies the intended meaning when the target of a\n      pointer is itself a pointer.","title":"<a href=\"ref/att.pointing\">att.pointing</a>","tag":"reference"}
{"content":"provides a set of attributes common to all elements which\n  enclose groups of pointer elements. Declarations for classes, datatypes, and macros available to all TEI modules optionally specifies the identifiers of the elements\n      within which all elements indicated by the contents of this\n      element lie. describes the function of each of the values of the\n      target attribute of the enclosed link,\n      join, or alt tags.","title":"<a href=\"ref/att.pointing.group\">att.pointing.group</a>","tag":"reference"}
{"content":"provides attributes for selecting particular elements\n    within a document. Declarations for classes, datatypes, and macros available to all TEI modules points at one or more sets of zero or more elements each. supplies an XPath selection pattern using the\n        syntax defined in 1  which identifies a set of nodes, selected within\n        the context identified by the target attribute if this is supplied, or within the \n        context of the parent element if it is not. ","title":"<a href=\"ref/att.scoping\">att.scoping</a>","tag":"reference"}
{"content":"provides attributes for elements used for arbitrary segmentation. Declarations for classes, datatypes, and macros available to all TEI modules characterizes the function of the segment.","title":"<a href=\"ref/att.segLike\">att.segLike</a>","tag":"reference"}
{"content":"provides attributes for elements in lists or groups that are sortable, but whose sorting key cannot be derived mechanically from the element content. Declarations for classes, datatypes, and macros available to all TEI modules supplies the sort key for this element in an index, list or group which contains it.","title":"<a href=\"ref/att.sortable\">att.sortable</a>","tag":"reference"}
{"content":"provides attributes identifying the source edition from which\n  some encoded feature derives. Declarations for classes, datatypes, and macros available to all TEI modules supplies a sigil or other arbitrary identifier for the source edition in which\n      the associated feature (for example, a  page, column, or line\n      break) occurs at this point in the text. provides a pointer to the source edition in which\n      the associated feature (for example, a  page, column, or line\n      break) occurs at this point in the text.","title":"<a href=\"ref/att.edition\">att.edition</a>","tag":"reference"}
{"content":"provides attributes for elements which delimit a span of text by pointing mechanisms rather than by enclosing it. Declarations for classes, datatypes, and macros available to all TEI modules indicates the end of a span initiated by the element\n        bearing this attribute.","title":"<a href=\"ref/att.spanning\">att.spanning</a>","tag":"reference"}
{"content":"provides attributes to specify the name of a formal definition\n  language used to provide formatting or rendition information. Declarations for classes, datatypes, and macros available to all TEI modules identifies the language used to describe the rendition. supplies a version number for the style language provided in scheme.","title":"<a href=\"ref/att.styleDef\">att.styleDef</a>","tag":"reference"}
{"content":"provides attributes used to decorate rows or cells of a table. Tables, formulæ, notated music, and figures indicates the kind of information held in this cell or\nin each cell of this row. indicates the number of rows occupied by this cell or row. indicates the number of columns occupied by this cell or\n\trow.","title":"<a href=\"ref/att.tableDecoration\">att.tableDecoration</a>","tag":"reference"}
{"content":"provides attributes common to those elements which\n  have a duration in time, expressed either absolutely or by reference\n  to an alignment map. Declarations for classes, datatypes, and macros available to all TEI modules indicates the location within a temporal alignment at\n      which this element begins. indicates the location within a temporal alignment at\n      which this element ends.","title":"<a href=\"ref/att.timed\">att.timed</a>","tag":"reference"}
{"content":"provides attributes specific to elements encoding authorial or\n  scribal intervention in a text when\n  transcribing manuscript or similar sources. Declarations for classes, datatypes, and macros available to all TEI modules indicates the effect of the intervention, for example in\n      the case of a deletion, strikeouts\n      which include too much or too little text, or in the case of an\n      addition, an insertion which duplicates some of the text\n      already present. documents the presumed cause for the intervention. assigns a sequence number related to the order in which\n      the encoded features carrying this attribute are believed to have occurred.","title":"<a href=\"ref/att.transcriptional\">att.transcriptional</a>","tag":"reference"}
{"content":"provides attributes for specifying the specific part of a bibliographic item being cited. Declarations for classes, datatypes, and macros available to all TEI modules identifies the unit of information conveyed by the element, e.g. columns, pages, volume, entry. specifies the starting point of the range of units indicated by the unit attribute. specifies the end-point of the range of units indicated by the unit attribute.","title":"<a href=\"ref/att.citing\">att.citing</a>","tag":"reference"}
{"content":"groups elements which contain names of individuals\nor corporate bodies. Declarations for classes, datatypes, and macros available to all TEI modules This class is used in the content model of elements which\n    reference names of people or organizations.","title":"<a href=\"ref/model.nameLike.agent\">model.nameLike.agent</a>","tag":"reference"}
{"content":"groups elements used for arbitrary segmentation. Declarations for classes, datatypes, and macros available to all TEI modules The principles on which segmentation is carried out, and any special codes or attribute\n      values used, should be defined explicitly in the segmentation element of the\n        encodingDesc within the associated TEI header.","title":"<a href=\"ref/model.segLike\">model.segLike</a>","tag":"reference"}
{"content":"groups phrase-level elements which are typographically\n  distinct and to which a specific function can be attributed. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.emphLike\">model.emphLike</a>","tag":"reference"}
{"content":"groups phrase-level elements which are typographically distinct but to which no specific\n    function can be attributed. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.hiLike\">model.hiLike</a>","tag":"reference"}
{"content":"groups phrase-level elements which are typographically distinct. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.highlighted\">model.highlighted</a>","tag":"reference"}
{"content":"groups elements containing temporal expressions. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.dateLike\">model.dateLike</a>","tag":"reference"}
{"content":"groups elements which describe a measurement forming part of\n  the physical dimensions of some object. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.dimLike\">model.dimLike</a>","tag":"reference"}
{"content":"groups elements containing examples or illustrations. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.egLike\">model.egLike</a>","tag":"reference"}
{"content":"groups elements containing images, formulae, and \n  similar objects. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.graphicLike\">model.graphicLike</a>","tag":"reference"}
{"content":"groups elements which can appear only as part of a place name. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.offsetLike\">model.offsetLike</a>","tag":"reference"}
{"content":"groups phrase-level elements used in manuscript description. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.pPart.msdesc\">model.pPart.msdesc</a>","tag":"reference"}
{"content":"groups phrase-level elements for simple editorial interventions that may be useful both\nin transcribing and in authoring. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.pPart.editorial\">model.pPart.editorial</a>","tag":"reference"}
{"content":"groups phrase-level elements used for editorial transcription of pre-existing source\n    materials. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.pPart.transcriptional\">model.pPart.transcriptional</a>","tag":"reference"}
{"content":"groups phrase-level elements for simple editorial correction and transcription. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.pPart.edit\">model.pPart.edit</a>","tag":"reference"}
{"content":"groups transcriptional elements which appear within lines or\n  zones of a source-oriented transcription within a sourceDoc\n  element. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.linePart\">model.linePart</a>","tag":"reference"}
{"content":"groups phrase-level elements which may appear within verse only. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.lPart\">model.lPart</a>","tag":"reference"}
{"content":"groups elements used for purposes of location and reference. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.ptrLike\">model.ptrLike</a>","tag":"reference"}
{"content":"groups globally available elements which describe the status of other elements. Declarations for classes, datatypes, and macros available to all TEI modules Elements in this class are typically used to hold groups of links or of abstract\n      interpretations, or by provide indications of certainty etc. It may find be convenient to\n      localize all metadata elements, for example to contain them within the same divison as the\n      elements that they relate to; or to locate them all to a division of their own. They may\n      however appear at any point in a TEI text.","title":"<a href=\"ref/model.global.meta\">model.global.meta</a>","tag":"reference"}
{"content":"groups milestone-style\nelements used to represent reference systems. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.milestoneLike\">model.milestoneLike</a>","tag":"reference"}
{"content":"groups elements used to represent individual non-Unicode characters or glyphs. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.gLike\">model.gLike</a>","tag":"reference"}
{"content":"groups elements which generate declarations in some markup language in ODD documents. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.oddDecl\">model.oddDecl</a>","tag":"reference"}
{"content":"groups elements which reference declarations in some markup language in ODD documents. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.oddRef\">model.oddRef</a>","tag":"reference"}
{"content":"groups phrase-level elements used to encode XML constructs such as element names, attribute\n    names, and attribute values Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.phrase.xml\">model.phrase.xml</a>","tag":"reference"}
{"content":"groups elements for referring to specification elements. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.specDescLike\">model.specDescLike</a>","tag":"reference"}
{"content":"groups elements containing a bibliographic description. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.biblLike\">model.biblLike</a>","tag":"reference"}
{"content":"groups elements used to provide a title or heading at the start of a text\n  division. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.headLike\">model.headLike</a>","tag":"reference"}
{"content":"groups elements used to gloss or explain other parts of a document. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.labelLike\">model.labelLike</a>","tag":"reference"}
{"content":"groups globally-available note-like elements. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.noteLike\">model.noteLike</a>","tag":"reference"}
{"content":"groups list-like elements. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.listLike\">model.listLike</a>","tag":"reference"}
{"content":"groups elements representing metrical components such as verse lines. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.lLike\">model.lLike</a>","tag":"reference"}
{"content":"groups paragraph-like elements. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.pLike\">model.pLike</a>","tag":"reference"}
{"content":"groups elements containing stage directions or similar things defined by the module for\n    performance texts. Declarations for classes, datatypes, and macros available to all TEI modules Stage directions are members of class inter: that is, they can appear between or\n      within component-level elements.","title":"<a href=\"ref/model.stageLike\">model.stageLike</a>","tag":"reference"}
{"content":"group elements used to represent atomic feature values in feature structures. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.featureVal.single\">model.featureVal.single</a>","tag":"reference"}
{"content":"groups elements which express complex feature values in feature\nstructures. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.featureVal.complex\">model.featureVal.complex</a>","tag":"reference"}
{"content":"groups non-morphological elements appearing within a dictionary entry. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.entryPart\">model.entryPart</a>","tag":"reference"}
{"content":"groups high level elements within a structured dictionary entry Declarations for classes, datatypes, and macros available to all TEI modules Members of this class typically contain related parts of a\ndictionary entry which form a coherent\nsubdivision, for example a particular sense, homonym, etc.\n","title":"<a href=\"ref/model.entryPart.top\">model.entryPart.top</a>","tag":"reference"}
{"content":"groups elements which describe events. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.eventLike\">model.eventLike</a>","tag":"reference"}
{"content":"groups globally available elements which perform a specifically editorial function. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.global.edit\">model.global.edit</a>","tag":"reference"}
{"content":"groups  elements\nwhich may appear globally within spoken texts. Transcribed Speech This class groups elements which can appear anywhere within\n    transcribed speech. ","title":"<a href=\"ref/model.global.spoken\">model.global.spoken</a>","tag":"reference"}
{"content":"groups paragraph-level elements appearing directly within divisions. Declarations for classes, datatypes, and macros available to all TEI modules Note that this element class does not include members of the model.inter class, which can appear either within or between paragraph-level items.\n    ","title":"<a href=\"ref/model.divPart\">model.divPart</a>","tag":"reference"}
{"content":"groups elements describing changeable characteristics of a person which have a definite\n    duration, for example occupation, residence, or name. Declarations for classes, datatypes, and macros available to all TEI modules These characteristics of an individual are typically a consequence of their own action or\n      that of others.","title":"<a href=\"ref/model.persStateLike\">model.persStateLike</a>","tag":"reference"}
{"content":"groups elements which provide information about people and their relationships. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.personLike\">model.personLike</a>","tag":"reference"}
{"content":"groups elements which form part of the description of a person. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.personPart\">model.personPart</a>","tag":"reference"}
{"content":"groups elements which form part of a place name. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.placeNamePart\">model.placeNamePart</a>","tag":"reference"}
{"content":"groups elements which describe changing states of a place. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.placeStateLike\">model.placeStateLike</a>","tag":"reference"}
{"content":"groups elements which form part of the description of an\n  organization. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.orgPart\">model.orgPart</a>","tag":"reference"}
{"content":"groups the agency-specific child elements of the publicationStmt element of the TEI header. Declarations for classes, datatypes, and macros available to all TEI modules A detail child element may not occur\n    unless an agency child element precedes\n    it. See also model.publicationStmtPart.agency.","title":"<a href=\"ref/model.publicationStmtPart.detail\">model.publicationStmtPart.detail</a>","tag":"reference"}
{"content":"groups the child\n  elements of a publicationStmt element of the TEI header\n  that indicate an authorising agent. Declarations for classes, datatypes, and macros available to all TEI modules The agency child elements, while not\n    required, are required if one of the detail\n    child elements is to be used. It is not valid to have a\n    detail child element without a\n    preceding agency child element. See also model.publicationStmtPart.detail.","title":"<a href=\"ref/model.publicationStmtPart.agency\">model.publicationStmtPart.agency</a>","tag":"reference"}
{"content":"groups elements such as licences and paragraphs of text which may appear as part of an\n  availability statement Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.availabilityPart\">model.availabilityPart</a>","tag":"reference"}
{"content":"groups elements which are used to indicate uncertainty or\n  precision of other elements. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.certLike\">model.certLike</a>","tag":"reference"}
{"content":"groups elements which contain a description of their function. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.descLike\">model.descLike</a>","tag":"reference"}
{"content":"groups elements which provide an alternative name, explanation, or description for any\n    markup construct. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.glossLike\">model.glossLike</a>","tag":"reference"}
{"content":"groups elements used to directly contain quotations. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.quoteLike\">model.quoteLike</a>","tag":"reference"}
{"content":"groups elements that contain a word or phrase that can be attributed to a source. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.attributable\">model.attributable</a>","tag":"reference"}
{"content":"groups elements which contain a single reading, other than the lemma, within a textual\n    variation. Critical Apparatus This class allows for variants of the rdg element to be easily created via TEI\n      customizations.","title":"<a href=\"ref/model.rdgLike\">model.rdgLike</a>","tag":"reference"}
{"content":"groups elements which are used to indicate intellectual or other significant responsibility,\n    for example within a bibliographic element. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.respLike\">model.respLike</a>","tag":"reference"}
{"content":"groups elements which can occur only at the beginning of a text division. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.divTopPart\">model.divTopPart</a>","tag":"reference"}
{"content":"groups elements which can appear at either top or bottom of a\n  textual division. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.divWrapper\">model.divWrapper</a>","tag":"reference"}
{"content":"groups elements appearing at  the beginning of a\n  text division. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.divTop\">model.divTop</a>","tag":"reference"}
{"content":"groups elements which appear at the level of divisions within front or back matter of\n    performance texts only. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.frontPart.drama\">model.frontPart.drama</a>","tag":"reference"}
{"content":"groups paragraph-like elements which can occur as direct constituents of front matter. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.pLike.front\">model.pLike.front</a>","tag":"reference"}
{"content":"groups elements which can occur only at the end of a text\n  division. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.divBottomPart\">model.divBottomPart</a>","tag":"reference"}
{"content":"groups elements appearing at the end of a text\n    division. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.divBottom\">model.divBottom</a>","tag":"reference"}
{"content":"groups elements which can occur as direct constituents of a title page, such as\n    docTitle, docAuthor, docImprint, or epigraph. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.titlepagePart\">model.titlepagePart</a>","tag":"reference"}
{"content":"groups elements which represent passages such as titles quoted from a manuscript as a part\n    of its description. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.msQuoteLike\">model.msQuoteLike</a>","tag":"reference"}
{"content":"groups elements which can appear within a manuscript item description. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.msItemPart\">model.msItemPart</a>","tag":"reference"}
{"content":"groups elements (other than choice itself) which can be used within a\n    choice alternation. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.choicePart\">model.choicePart</a>","tag":"reference"}
{"content":"groups elements used to describe details of an audio or video recording. Transcribed Speech","title":"<a href=\"ref/model.recordingPart\">model.recordingPart</a>","tag":"reference"}
{"content":"groups component elements of the TEI header Category Description. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.catDescPart\">model.catDescPart</a>","tag":"reference"}
{"content":"groups elements used to describe the setting of a linguistic interaction. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.settingPart\">model.settingPart</a>","tag":"reference"}
{"content":"groups elements used to categorize a text for example in terms of its situational\n    parameters. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.textDescPart\">model.textDescPart</a>","tag":"reference"}
{"content":"groups component elements of an entry in a cast list, such as dramatic role or actor's name. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.castItemPart\">model.castItemPart</a>","tag":"reference"}
{"content":"groups elements used to represent a postal or email address. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.addressLike\">model.addressLike</a>","tag":"reference"}
{"content":"groups specialized elements forming part of the physical description of a manuscript or\n    similar written source. Manuscript Description","title":"<a href=\"ref/model.physDescPart\">model.physDescPart</a>","tag":"reference"}
{"content":"groups elements which name or refer to a person, place, or organization. Declarations for classes, datatypes, and macros available to all TEI modules A superset of the naming elements that may appear in datelines, addresses, statements of\n      responsibility, etc.","title":"<a href=\"ref/model.nameLike\">model.nameLike</a>","tag":"reference"}
{"content":"groups elements which form part of a personal name. Names and dates","title":"<a href=\"ref/model.persNamePart\">model.persNamePart</a>","tag":"reference"}
{"content":"groups elements which represent feature values in feature structures. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.featureVal\">model.featureVal</a>","tag":"reference"}
{"content":"groups elements which may appear at any point within a TEI text. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.global\">model.global</a>","tag":"reference"}
{"content":"groups elements which represent components of a bibliographic description. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.biblPart\">model.biblPart</a>","tag":"reference"}
{"content":"groups elements which appear at the level of divisions within front or back matter. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.frontPart\">model.frontPart</a>","tag":"reference"}
{"content":"groups elements such as names or postal codes which may appear as part of a\n    postal address. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.addrPart\">model.addrPart</a>","tag":"reference"}
{"content":"groups phrase-level elements containing names, dates, numbers, measures, and similar data. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.pPart.data\">model.pPart.data</a>","tag":"reference"}
{"content":"groups elements which can appear either within or between paragraph-like elements. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.inter\">model.inter</a>","tag":"reference"}
{"content":"groups common chunk- and inter-level elements. Declarations for classes, datatypes, and macros available to all TEI modules This class defines the set of chunk- and inter-level elements; it is used in many content\n      models, including those for textual divisions.","title":"<a href=\"ref/model.common\">model.common</a>","tag":"reference"}
{"content":"groups elements which can occur at the level of individual words or phrases. Declarations for classes, datatypes, and macros available to all TEI modules This class of elements can occur within paragraphs, list items, lines of verse, etc.","title":"<a href=\"ref/model.phrase\">model.phrase</a>","tag":"reference"}
{"content":"groups elements used to represent un-numbered generic structural divisions. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.divLike\">model.divLike</a>","tag":"reference"}
{"content":"groups phrase-level elements excluding those elements primarily intended for transcription\n    of existing sources. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.limitedPhrase\">model.limitedPhrase</a>","tag":"reference"}
{"content":"groups elements used to represent a structural division which is generated rather than\n    explicitly present in the source. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.divGenLike\">model.divGenLike</a>","tag":"reference"}
{"content":"groups top-level structural divisions. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.div1Like\">model.div1Like</a>","tag":"reference"}
{"content":"groups second-level structural divisions. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.div2Like\">model.div2Like</a>","tag":"reference"}
{"content":"groups third-level structural divisions. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.div3Like\">model.div3Like</a>","tag":"reference"}
{"content":"groups fourth-level structural divisions. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.div4Like\">model.div4Like</a>","tag":"reference"}
{"content":"groups the bibliographic elements which occur inside imprints. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.imprintPart\">model.imprintPart</a>","tag":"reference"}
{"content":"groups fifth-level structural divisions. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.div5Like\">model.div5Like</a>","tag":"reference"}
{"content":"groups elements which denote a number, a quantity, a measurement, or similar piece of text\n    that conveys some numerical meaning. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.measureLike\">model.measureLike</a>","tag":"reference"}
{"content":"groups sixth-level structural divisions. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.div6Like\">model.div6Like</a>","tag":"reference"}
{"content":"groups elements used to record application-specific information about a document in its\n    header. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.applicationLike\">model.applicationLike</a>","tag":"reference"}
{"content":"groups high level elements which may appear more than once in a TEI header. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.teiHeaderPart\">model.teiHeaderPart</a>","tag":"reference"}
{"content":"groups elements which may be used inside sourceDesc and appear multiple times. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.sourceDescPart\">model.sourceDescPart</a>","tag":"reference"}
{"content":"groups elements which may be used inside encodingDesc and appear multiple times. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.encodingDescPart\">model.encodingDescPart</a>","tag":"reference"}
{"content":"groups elements which may be used inside editorialDecl and appear multiple times. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.editorialDeclPart\">model.editorialDeclPart</a>","tag":"reference"}
{"content":"groups elements which may be used inside profileDesc\nand appear multiple times. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.profileDescPart\">model.profileDescPart</a>","tag":"reference"}
{"content":"defines the content of paragraphs and similar elements. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/macro.paraContent\">macro.paraContent</a>","tag":"reference"}
{"content":"groups elements which may be used as children of standOff. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.standOffPart\">model.standOffPart</a>","tag":"reference"}
{"content":"defines the content of prose elements that are not used for transcription of extant materials. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/macro.limitedContent\">macro.limitedContent</a>","tag":"reference"}
{"content":"defines a sequence of character data and phrase-level elements. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/macro.phraseSeq\">macro.phraseSeq</a>","tag":"reference"}
{"content":"defines a sequence of character data and those phrase-level elements that are not typically\nused for transcribing extant documents. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/macro.phraseSeq.limited\">macro.phraseSeq.limited</a>","tag":"reference"}
{"content":"defines the content model of elements such as notes or list items, which either contain a\n    series of component-level elements or else have the same structure as a paragraph, containing a\n    series of phrase-level and inter-level elements. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/macro.specialPara\">macro.specialPara</a>","tag":"reference"}
{"content":"defines a sequence of character data and gaiji elements. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/macro.xtext\">macro.xtext</a>","tag":"reference"}
{"content":"defines the range of attribute values expressing a degree of certainty. Certainty may be expressed by one of the predefined symbolic values high,\n        medium, or low. The value\n\tunknown should be used in cases where the encoder\n\tdoes not wish to assert an opinion about the matter. \n\t  確信度は，high, medium, lowのうち の1つが選択される．より詳細に示したい場合には， teidata.probabilityを単独または追加と して使用することができる．  Le degré de certitude peut être exprimé par l'une des valeurs symboliques prédéfinies\n        high, medium, ou low. ","title":"<a href=\"ref/teidata.certainty\">teidata.certainty</a>","tag":"reference"}
{"content":"defines the range of attribute values expressing a probability. Probability is expressed\n       as a real number between 0 and 1;  0  representing certainly false and 1 representing certainly\n        true. 出現度は，0から1までの実数で表現される．0は 確実に偽，1は， 確実に真を示す．  Le degré de probabilité est exprimé\n       par un nombre réel entre 0 et 1 ;\n     0       représentant certainement faux et 1 certainement\n        vrai.","title":"<a href=\"ref/teidata.probability\">teidata.probability</a>","tag":"reference"}
{"content":"defines the range of attribute values used for numeric values. Any numeric value, represented as a decimal number, in floating point format, or as a ratio. To represent a floating point number, expressed in scientific notation, E\n      notation, a variant of exponential notation, may be used. In\n      this format, the value is expressed as two numbers separated by the letter E. The first\n      number, the significand (sometimes called the mantissa) is given in decimal format, while the\n      second is an integer. The value is obtained by multiplying the mantissa by 10 the number of\n      times indicated by the integer. Thus the value represented in decimal notation as 1000.0 might\n      be represented in scientific notation as 10E3. A value expressed as a ratio is represented by two integer values separated by a solidus (/)\n      character. Thus, the value represented in decimal notation as 0.5 might be represented as a\n      ratio by the string 1/2.  10進数を作る数値．   また，IEEE倍精度浮動小数点(64bit長)をとることもできる．例えば， ±10⁻³²³ から ±10³⁰⁸など．   科学的数値を評点する際，指数表現は，属性値と して記述される．\n      10進数による仮数部，続いて記号E，続いて指数 部がくる．\n      \n        乗算記号と底(10)は省略される．仮数部と指数 部には負になるかもしれない．記号Eと指数部を\n      分けるために空白文字を入れる必要はない．例えば，3×10⁸ は 3E8と書かれる．   他の例として，以下のようなものがある．    仮数部と指数部を分ける記号はeまたは Eのどちらでもよいが，当ガイドラインでは\n        Eを使うことを推奨する．これは，他の規格との 整合性を保ち，数学における定数との混同を避けるためである．   Toute valeur numérique, représentée en nombre décimal, notée en virgule flottante ou\n      en fraction. Pour représenter un nombre en virgule flottante, exprimé en notation scientifique,\n        E notation, une variante de la notation\n      exponentielle peut être utilisée. Dans ce format, la valeur est exprimée par deux\n      nombres séparés par la lettre E. Le premier facteur, le significande (parfois appelé mantisse)\n      est donné sous forme décimale, tandis que le second est un entier. La valeur est obtenue en\n      multipliant la mantisse par 10 fois le nombre indiqué par l'entier. Ainsi la valeur\n      représentée en notation décimale 1000.0 pourrait être représentée en notation\n      scientifique 10E3. Une valeur exprimée en fraction est représentée par deux nombres entiers séparés par une\n      barre oblique (/). Ainsi, la valeur représentée en notation décimale 0.5 pourrait être\n      représentée en fraction par la chaîne de caractères 1/2.","title":"<a href=\"ref/teidata.numeric\">teidata.numeric</a>","tag":"reference"}
{"content":"defines attribute values used to express an interval value. Any value greater than zero or any one of the values\n    regular, irregular, unknown.","title":"<a href=\"ref/teidata.interval\">teidata.interval</a>","tag":"reference"}
{"content":"defines the range of attribute values used for a non-negative\ninteger value used as a count. Any positive integer value or zero is permitted 非負整数値のみが許される． Seules des valeurs positives entières sont autorisées.","title":"<a href=\"ref/teidata.count\">teidata.count</a>","tag":"reference"}
{"content":"defines the range of attribute values expressing a temporal\n  expression such as a date, a time, or a combination of them, that\n  conform to the W3C XML Schema Part 2: Datatypes Second Edition\n  specification. If it is likely that the value used is to be compared with\n    another, then a time zone indicator should always be included, and\n    only the dateTime representation should be used. \n    当該属性値が他の値と比較される場合，時間帯は必ず示されるべきである．\n    またはdateTimeを使うべきである(訳注：この文は修正されるかもしれな\n    い)．\n     S'il est probable que la valeur utilisée doive être comparée à \n      d’autres, alors une indication de fuseau horaire sera  toujours incluse, et \n      seule la représentation de dateTime sera employée.\n    ","title":"<a href=\"ref/teidata.temporal.w3c\">teidata.temporal.w3c</a>","tag":"reference"}
{"content":"defines the range of\n  values, conforming to the W3C XML Schema Part 2:\n  Datatypes Second Edition specification, expressing a date or\n  a date and a time within the working life of the document. If it is likely that the value used is to be compared with\n    another, then a time zone indicator should always be included, and\n    only the dateTime representation should be used. The earliest time expressable with this datatype is 01 January\n    1970 (the Unix Epoch), which could be written as either 1970-01-01\n    or 1970-01-01T00:00:00Z.","title":"<a href=\"ref/teidata.temporal.working\">teidata.temporal.working</a>","tag":"reference"}
{"content":"defines the range of attribute values used to express a truth\nvalue. The possible values of this datatype are 1 or\n    true, or 0 or false. This datatype applies only for cases where uncertainty is\n    inappropriate; if the attribute concerned may have a value other\n    than true or false, e.g. unknown, or\n    inapplicable, it should have the extended version of\n    this datatype: teidata.xTruthValue. \n    曖昧な値が許されない場合に使われるデータ型になる．属性値が真偽値で\n    ない場合，例えば\"unknown\"や\"inapplicable\"の場合には，当該データ型\n    の拡張版であるteidata.xTruthValueを使うべきである．\n     Ce type de données ne s'applique que dans les cas où l'incertitude est \n      inappropriée ; c’est-à-dire si l'attribut concerné peut avoir une valeur autre \n      que vrai ou faux, par ex. inconnu, ou inapplicable, il devrait  alors y\n      avoir la version étendue de ce  type de données : teidata.xTruthValue.\n    ","title":"<a href=\"ref/teidata.truthValue\">teidata.truthValue</a>","tag":"reference"}
{"content":"defines the range of attribute values available for representation of a duration in time using W3C datatypes. A duration is expressed as a sequence of number-letter pairs,\n    preceded by the letter P; the letter gives the unit and may be Y\n    (year), M (month), D (day), H (hour), M (minute), or S (second),\n    in that order. The numbers are all unsigned integers, except for\n    the S number, which may have a decimal component\n    (using . as the decimal point). If any number is\n    0, then that number-letter pair may be\n    omitted. If any of the H (hour), M (minute), or S (second)\n    number-letter pairs are present, then the separator T\n    must precede the first time number-letter\n    pair. For complete details, see the W3C\n    specification. \n    時間幅は，先頭文字Pに続いて，数値-文字のペア列で示される．\n    文字は単位を示している．Y(年), M(月), D(日), H(時間), M(分), S(秒)\n    の順番になる．数値は符号のない整数である．但し，Sの場\n    合，最後に10進数の表記記号(小数点を示す.)をとることが\n    ある．数値が0の場合，数値-文字のペアは省略\n    されることがある．H(時間), M(分), S(秒)が数値-文字のペアを作る場合，\n    区切子Tを先頭にして時間を示す\n    数値-文字のペアを示す必要がある。\n     \n    詳細については，\n    \n    W3C specificationを参照のこと．\n     Une durée est exprimée par une suite de paires alphanumériques, précédée par la lettre P ; la lettre donne l'unité et peut être Y\n      (année), M (mois), D (jour), H (heure), M (minute), ou S (seconde),\n      dans cet ordre. Les nombres sont des entiers non signés à l'exception du dernier, qui peut comporter une décimale (en utilisant soit \n      . soit , pour la virgule ; la dernière possibilité est préférable). Si un nombre est 0, alors\n      la paire alphanumérique peut être omise. Si les paires alphanumériques H (heure), M\n      (minute), ou S (seconde) sont présentes, alors le séparateur\n      T doit précéder la première paire alphanumérique\n      time. Pour des détails complets, voir W3C\n      specification.","title":"<a href=\"ref/teidata.duration.w3c\">teidata.duration.w3c</a>","tag":"reference"}
{"content":"defines the range of attribute values used to express a truth value which may be unknown. In cases where where uncertainty is inappropriate, use the\n    datatype teidata.TruthValue.  不明な場合がなければ，データ型teidata.TruthValueを使用する．  Dans le cas où l'incertitude n’est pas adaptée, employer plutot\n    le type de données teidata.TruthValue.","title":"<a href=\"ref/teidata.xTruthValue\">teidata.xTruthValue</a>","tag":"reference"}
{"content":"defines the range of attribute values used to identify a particular combination of human\n    language and writing system. The values for this attribute are language tags as defined in BCP 47. Currently BCP 47 comprises RFC 5646\n      and RFC 4647; over time, other IETF documents may succeed these as the best current practice. A language tag, per BCP 47, is assembled from a sequence of components\n      or subtags separated by the hyphen character (-, U+002D).\n      The tag is made of the following subtags, in the following order. Every subtag except the\n      first is optional. If present, each occurs only once, except the fourth and fifth components\n      (variant and extension), which are repeatable.   There are two exceptions to the above format. First, there are language tags in the IANA registry that\n      do not match the above syntax, but are present because they have been\n      grandfathered from previous specifications. Second, an entire language tag can consist of only a private use subtag. These tags start\n      with x-, and do not need to follow any further rules established by the IETF and\n      endorsed by these Guidelines. Like all language tags that make use of private use subtags, the\n      language in question must be documented in a corresponding language element in the\n      TEI header. Examples include   The W3C Internationalization Activity has published a useful introduction to BCP 47, Language\n        tags in HTML and XML.  当該属性値は， BCP 47\n      で定義されている言語タグになる． 現行のBCPには，RFC4646とRFC4647の内容が含まれている．\n      今後は，他のIETF文書も採用されるかもしれない．   BCP 47にある言語タグは，ハイフン (-, U+002D)で区切られた一連の\n        下位タグから構成されている．下位タグは，以下の順番 らなる．下位タグは，初めの1つは必須で，あとは選択的である．\n      variantとextensionは複数回，他は1回のみ出現出現する．この下位タグ のグループは繰り返し可能である．    上記記述形式には，2つの例外がある．ひとつは，ここにある言語タグは， \n      IANAにある統語規則に違反しているものがある． これはIANAでは昔の規定を継承しているからであ る．   ふたつめは，言語タグを，下位タグprivateだけで構成することができる ことである．x-で始まるタグの内容は，IETFにある規定に\n      も当該TEIガイドラインにある規定にも従う必要はない．他の言語タグと 同様に，このタグを使用した場合には，TEIヘダーにある要素\n      languageにこのタグを記述しなければならない．   言語コードには，以下のようなものがある．    W3Cの国際化活動では，BCP 47の解説を以下に用意している． \n        HTMLとXMLで使用される言語タグ.  Les valeurs pour cet attribut sont les étiquettes de langue définies\n        dans la norme BCP 47. Actuellement, la norme BCP 47\n      intègre les normes RFC 4646 et RFC 4647 ; à l'avenir, d'autres documents de l'IETF pourront leur succéder en\n      tant que meilleure pratique. Une étiquette de langue, pour la norme BCP 47, est formée par l'assemblage d'une\n      suite de composants ou de sous-étiquettes reliés par un trait d'union\n        (-, U+002D). L'étiquette est composée des sous-étiquettes suivantes,\n      dans l'ordre indiqué. Chaque sous-étiquette est facultative, à l'exception de la première.\n      Chacune ne peut avoir qu'une occurrence, sauf les quatrième et cinquième (variante\n      et extension), qui sont répétables.   Il y a deux exceptions au format ci-dessus. Premièrement, il y a des codes de langue dans\n        le registre de l'IANA\n      qui ne correspondent pas à la syntaxe ci-dessus, mais qui sont présents car ils ont été\n        hérités de spécifications antérieures. En second lieu, une étiquette complète de langue peut consister seulement en une sous-étiquette d'usage privé. Ces étiquettes commencent par x- ; il n'est pas\n      nécessaire qu'elles suivent les autres règles établies par l'IETF et acceptées par les présents \n      Principes directeurs. Comme toutes les étiquettes de langue qui utilisent des sous-étiquettes d'usage\n      privé, la langue en question doit être documentée dans un élément correspondant language dans l'en-tête TEI. Les exemples incluent :  La W3C Internationalization Activity a publié une introduction à la norme BCP 47 dont la lecture peut être utile : Language\n        tags in HTML and XML.","title":"<a href=\"ref/teidata.language\">teidata.language</a>","tag":"reference"}
{"content":"defines the range of attribute values used to indicate XML namespaces as defined by the W3C\n    Namespaces in XML\n    Technical Recommendation. The range of syntactically valid values is defined by RFC 3986 Uniform Resource Identifier\n          (URI): Generic Syntax\n         \n        当該データ値は，RFC 2396 Uniform Resource\n          Identifier (URI) Reference\n          に定義されている．  La gamme des valeurs  syntaxiquement valides est définie par RFC 3986 Uniform Resource Identifier\n          (URI): Generic Syntax\n         .","title":"<a href=\"ref/teidata.namespace\">teidata.namespace</a>","tag":"reference"}
{"content":"defines attribute values which contain either an absolute namespace URI or a qualified XML name.","title":"<a href=\"ref/teidata.namespaceOrName\">teidata.namespaceOrName</a>","tag":"reference"}
{"content":"defines a range of values for use in specifying the size of an object that is intended for\n    display.  These values map directly onto the values used by XSL-FO and CSS. For definitions of the\n      units see those specifications; at the time of this writing the most complete list is in the\n        CSS3 working\n      draft.  当該値は，XSLFOやCSSで使用される値になる．詳細は各規格を参照のこと． 現時点で一番詳細なリストは，  CSS3 working\n      draftになる．   Ces valeurs peuvent être reportées directement sur des valeurs utilisées par XSL-FO et CSS. Pour les\n      définitions des unités, voir ces spécifications ; à ce jour la\n      liste la plus complète est dans un\n        CSS3 working\n      draft.","title":"<a href=\"ref/teidata.outputMeasurement\">teidata.outputMeasurement</a>","tag":"reference"}
{"content":"defines the data type used to express a point in cartesian space. A point is defined by two numeric values, which should be\n    expressed as decimal numbers. Neither number can end in a decimal\n    point. E.g., both 0.0,84.2 and 0,84 are\n    allowed, but 0.,84. is not.\n    \n    ","title":"<a href=\"ref/teidata.point\">teidata.point</a>","tag":"reference"}
{"content":"defines attribute values which\n    are expressed as a regular expression. \n      \n        A regular expression, often called a pattern, is an\n          expression that describes a set of strings. They are usually used to\n          give a concise description of a set, without having to list all\n          elements. For example, the set containing the three strings\n            Handel, Händel, and\n            Haendel can be described by the pattern\n            H(ä|ae?)ndel (or alternatively, it is said that the\n          pattern H(ä|ae?)ndel\n          matches each of the three strings)\n        Wikipedia \n      \n     This TEI datatype is mapped to the XSD token datatype, and may therefore\n      contain any string of characters. However, it is recommended that the\n      value used conform to the particular flavour of regular expression syntax\n      supported by XSD Schema.  \n      \n         正規表現は，よくパタン/パターンともいわれるもので，\n          一連の文字列を示すための表現方法である．一般には，簡潔な表現で， 多くのものを表現するために使用される．例えば，3つの文字列\n            Handel, Händel,\n            Haendelを，１つのパタン\n          H(ä|ae?)ndelで示すことができる(または，\n          H(ä|ae?)ndelは，3つの文字列のいずれにも マッチする，といえる)． \n        wikipedia\n      \n     \n      \n        Une expression régulière, souvent appelée modèle,\n          est une expression qui décrit un jeu de chaînes de caractères. Elles\n          sont généralement utilisées pour donner une brève description d'un\n          jeu, sans avoir à en lister tous les éléments. Par exemple, le jeu\n          contenant les trois chaînes de caractères\n            Handel, Händel, et\n            Haendel peut être décrit comme le modèle\n            H(ä|ae?)ndel (ou on peut dire que\n            H(ä|ae?)ndel\n          équivaut à chacune des trois chaînes)\n        wikipedia\n        wikipedia\n      \n    ","title":"<a href=\"ref/teidata.pattern\">teidata.pattern</a>","tag":"reference"}
{"content":"defines attribute values which derive from an \n    authority list, which may be an enumerated list defined in the document's schema, a list \n    or taxonomy elsewhere in the document, or an online taxonomy, gazetteer, or other authority. Attribute values with this datatype should either come from a value list in the attribute\n      specification (teidata.enumerated) or be a valid URI (teidata.pointer).","title":"<a href=\"ref/teidata.authority\">teidata.authority</a>","tag":"reference"}
{"content":"defines the range of attribute values used to provide a single\n  URI, absolute or relative, pointing to some other\nresource, either within the current document or elsewhere. The range of syntactically valid values is defined by\n     RFC 3986\n         Uniform Resource Identifier (URI): Generic\n    Syntax. Note that the values themselves are encoded using\n    RFC\n    3987 \n         Internationalized Resource Identifiers (IRIs) mapping\n    to URIs. For example, \n    https://secure.wikimedia.org/wikipedia/en/wiki/% is encoded\n    as https://secure.wikimedia.org/wikipedia/en/wiki/%25\n    while http://موقع.وزارة-الاتصالات.مصر/ is encoded as\n    http://xn--4gbrim.xn----rmckbbajlc6dj7bxne2c.xn--wgbh1c/\n       \n    当該属性値は，\n    RFC 3986\n    Uniform Resource Identifier (URI) Reference\n         \n    に定義されている．\n     La gamme des valeurs valides syntaxiquement est définie parRFC 3986\n      Uniform Resource Identifier (URI): Generic\n        Syntax\n         \n      ","title":"<a href=\"ref/teidata.pointer\">teidata.pointer</a>","tag":"reference"}
{"content":"defines the range of attribute values which may be used to\n  specify a TEI or Unicode version number. The value of this attribute follows the pattern specified by\n    the Unicode consortium for its version number (1 ). A version number\n    contains digits and fullstop characters only. The first number\n    supplied identifies the major version number. A second and third\n    number, for minor and sub-minor version numbers, may also be\n    supplied.\n La valeur de cet attribut devrait suivre le format proposé par\n    le Consortium Unicode pour identifier les versions (1 ). Un numéro de version\n    ne contient que des chiffres et des points. Le numéro\n    initiale identifie le numéro majeur de la version. Un deuxième et\n    un troisième numéro sont aussi disponibles pour la numérotation\n    facultative des versions mineures ou sous-mineurs.\n","title":"<a href=\"ref/teidata.version\">teidata.version</a>","tag":"reference"}
{"content":"defines the range of attribute values used for version numbers. ","title":"<a href=\"ref/teidata.versionNumber\">teidata.versionNumber</a>","tag":"reference"}
{"content":"defines attribute values which contain a replacement template. ","title":"<a href=\"ref/teidata.replacement\">teidata.replacement</a>","tag":"reference"}
{"content":"defines attribute values\nwhich contain an XPath expression. Any XPath expression using the syntax\n  defined in 1 . When writing programs that evaluate XPath expressions,\n  programmers should be mindful of the possibility of malicious code\n  injection attacks. For further information about XPath injection\n  attacks, see the article at\n  OWASP.","title":"<a href=\"ref/teidata.xpath\">teidata.xpath</a>","tag":"reference"}
{"content":"defines the range of attribute values expressed as a single\n  word or token. Attributes using this datatype must contain a single\n    word which contains only letters, digits,\n    punctuation characters, or symbols: thus it cannot include\n    whitespace. \n    当該データ型を使用する属性値は，ひとつの単語\n    になる．単語とは，文字，数字，句読点などの記号から構成されている．\n    空白文字は含むことができない．\n     Les attributs employant ce type de données doivent contenir un \n      mot simple  ne contenant que des lettres, des chiffres, \n      des signes de ponctuation, ou des symboles : ils ne peuvent donc pas inclure \n      d’espace.\n    ","title":"<a href=\"ref/teidata.word\">teidata.word</a>","tag":"reference"}
{"content":"defines the range of attribute values used to express some\n  kind of identifying string as a single sequence\n  of Unicode characters possibly including whitespace. Attributes using this datatype must contain a single\n    token in which whitespace and other\n    punctuation characters are permitted. ","title":"<a href=\"ref/teidata.text\">teidata.text</a>","tag":"reference"}
{"content":"defines the range of attribute values expressed as an XML Name. Attributes using this datatype must contain a single word which follows the rules defining a\n      legal XML name (see 1 ): for example they\n      cannot include whitespace or begin with digits.   当該属性は，妥当なXML名前(詳細は 1 を参照)である\n      ひとつの単語をとる．例えば，空白文字を含まず，数字が先頭文字にこな いもの．  Les attributs utilisant ce type de données doivent contenir un seul mot, qui suit les règles\n      de définition d'un nom XML valide (voir 1 ) :\n      par exemple ils ne peuvent contenir de blancs ou commencer par des chiffres. ","title":"<a href=\"ref/teidata.name\">teidata.name</a>","tag":"reference"}
{"content":"defines attribute values which contain an XML name. The rules defining an XML name form a part of the XML Specification.","title":"<a href=\"ref/teidata.xmlName\">teidata.xmlName</a>","tag":"reference"}
{"content":"defines a range of values that may function as a URI scheme name. This datatype is used to constrain a string of characters to\n    one that can be used as a URI scheme name according to RFC 3986, section\n    3.1. Thus only the 26 lowercase letters a–z, the 10\n    digits 0–9, the plus sign, the period, and the hyphen are\n    permitted, and the value must start with a letter.","title":"<a href=\"ref/teidata.prefix\">teidata.prefix</a>","tag":"reference"}
{"content":"defines the range of attribute values used to\n    represent the gender of a person, persona, or character. Values for attributes using this datatype may be defined locally by a project, or they may refer to an external standard. Values for this datatype should not be used to encode morphological gender (cf. gen,\n        msd as defined in att.linguistic, and 9.3.1 Information on Written and Spoken Forms).","title":"<a href=\"ref/teidata.gender\">teidata.gender</a>","tag":"reference"}
{"content":"defines the range of attribute values expressed as a single XML name taken from a list of\n    documented possibilities. Attributes using this datatype must contain a single\n      word which contains only letters, digits,\n      punctuation characters, or symbols: thus it cannot include\n      whitespace. Typically, the list of documented possibilities will be provided (or exemplified) by a value\n      list in the associated attribute specification, expressed with a valList element.  当該データ型は，妥当なXML名前 (詳細は1 \n      を参照のこと)である単語でなくてはならない．例えば， 属性値として空白文字，または数値で始まる名前をとることはできない．   典型例は，可能な記述またはその例のリストが，要素valList 中に属性定義として示されている．  Les attributs utilisant ce type de données doivent contenir un mot qui suit les règles de\n      définition d'un nom XML valide (voir 1 ):\n      par exemple ils ne peuvent pas contenir des blancs ni commencer par des chiffres.  Normalement, la liste des possibilités documentées est fournie (ou exemplifiée) par une liste\n      de valeurs dans la spécification de l'attribut associé, exprimée par un élément\n      valList.","title":"<a href=\"ref/teidata.enumerated\">teidata.enumerated</a>","tag":"reference"}
{"content":"defines the range of attribute values used to identify\n    the sex of an organism. Values for attributes using this datatype may be defined locally by a project, or they may refer to an external standard. Les valeurs de cet attribut peuvent être définies localement par un projet ou peuvent faire\n      référence à un standard externe.","title":"<a href=\"ref/teidata.sex\">teidata.sex</a>","tag":"reference"}
{"content":"defines a range of attribute values which can be expressed either as a numeric probability or as a coded certainty value.","title":"<a href=\"ref/teidata.probCert\">teidata.probCert</a>","tag":"reference"}
{"content":"defines an attribute value which can be either any non-negative\ninteger or the string \"unbounded\".","title":"<a href=\"ref/teidata.unboundedInt\">teidata.unboundedInt</a>","tag":"reference"}
{"content":"defines attribute values which contain either the null string or an XML name. The rules defining an XML name form a part of the XML Specification.","title":"<a href=\"ref/teidata.nullOrName\">teidata.nullOrName</a>","tag":"reference"}
{"content":"supplies descriptive and\n    declarative metadata associated with a digital resource or set of\n    resources. The TEI header One of the few elements unconditionally required in any TEI\n      document.","title":"<a href=\"ref/teiHeader\">teiHeader</a>","tag":"reference"}
{"content":"contains a full bibliographic description of an electronic file. The TEI header The major source of information for those seeking to create a catalogue entry or\n      bibliographic citation for an electronic file. As such, it provides a title and statements of\n      responsibility together with details of the publication or distribution of the file, of any\n      series to which it belongs, and detailed bibliographic notes for matters not addressed\n      elsewhere in the header. It also contains a full bibliographic description for the source or\n      sources from which the electronic text was derived.","title":"<a href=\"ref/fileDesc\">fileDesc</a>","tag":"reference"}
{"content":"specifies the name of a sponsoring organization or institution. The TEI header Sponsors give their intellectual authority to a project; they are to be distinguished from\n        funders (see element funder), who provide the funding but do not necessarily take intellectual\n      responsibility.","title":"<a href=\"ref/sponsor\">sponsor</a>","tag":"reference"}
{"content":"groups information about the title of a work and those responsible for its content. The TEI header","title":"<a href=\"ref/titleStmt\">titleStmt</a>","tag":"reference"}
{"content":"specifies the name of an individual, institution, or organization responsible for the\n    funding of a project or text. The TEI header Funders provide financial support for a project; they are distinct from\n      sponsors (see element sponsor), who provide intellectual support and authority.","title":"<a href=\"ref/funder\">funder</a>","tag":"reference"}
{"content":"supplies the name of the principal researcher responsible for the\ncreation of an electronic text. The TEI header","title":"<a href=\"ref/principal\">principal</a>","tag":"reference"}
{"content":"groups information relating to one edition of a text. The TEI header","title":"<a href=\"ref/editionStmt\">editionStmt</a>","tag":"reference"}
{"content":"describes the particularities of one edition of a text. The TEI header","title":"<a href=\"ref/edition\">edition</a>","tag":"reference"}
{"content":"describes the approximate size of a text stored on some carrier medium or of some other object, digital  or non-digital,  specified in any convenient units. The TEI header Das measure-Element kann dazu verwendet werden, um normalisierte oder maschinenlesbare Versionen der Größen-Angaben bereitzustellen.","title":"<a href=\"ref/extent\">extent</a>","tag":"reference"}
{"content":"groups information concerning the publication or distribution of an electronic or other text. The TEI header Where a publication statement contains several members of the\n      model.publicationStmtPart.agency or\n      model.publicationStmtPart.detail\n      classes rather than one or\n    more paragraphs or anonymous blocks, care should be taken to\n    ensure that the repeated elements are presented in a meaningful\n    order. It is a conformance requirement that elements supplying\n    information about publication place, address, identifier,\n    availability, and date be given following the name of the\n    publisher, distributor, or authority concerned, and preferably in\n    that order.","title":"<a href=\"ref/publicationStmt\">publicationStmt</a>","tag":"reference"}
{"content":"supplies the name of a person or other agency responsible for the\ndistribution of a text. The TEI header","title":"<a href=\"ref/distributor\">distributor</a>","tag":"reference"}
{"content":"supplies the name of a person or other agency responsible for\n  making a work available, other than a publisher or\n  distributor. The TEI header","title":"<a href=\"ref/authority\">authority</a>","tag":"reference"}
{"content":"supplies any form of identifier used to identify some\n    object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized\n    way. The TEI header categorizes the identifier, for example as an\n        ISBN, Social Security number, etc. idno should be used for labels which identify an object or concept in a formal\n      cataloguing system such as a database or an RDF store, or in a distributed system such as the\n      World Wide Web. Some suggested values for type on idno are\n      ISBN, ISSN, DOI, and URI. In the last case, the identifier includes a non-Unicode character which is defined elsewhere\n      by means of a glyph or char element referenced here as #sym.\n    ","title":"<a href=\"ref/idno\">idno</a>","tag":"reference"}
{"content":"supplies information about the availability of a text, for example any restrictions on its\n  use or distribution, its copyright status, any licence applying to it, etc. The TEI header supplies a code identifying the current availability of the text. A consistent format should be adopted","title":"<a href=\"ref/availability\">availability</a>","tag":"reference"}
{"content":"contains information about a licence or other legal agreement\n  applicable to the text. The TEI header A licence element should be supplied for each licence\n    agreement applicable to the text in question. The\n    target attribute may be used to reference a full\n    version of the licence. The when, notBefore,\n    notAfter, from or to attributes\n    may be used in combination to indicate the date or dates of\n    applicability of the licence.","title":"<a href=\"ref/licence\">licence</a>","tag":"reference"}
{"content":"groups information about the series, if any, to which a publication belongs. The TEI header","title":"<a href=\"ref/seriesStmt\">seriesStmt</a>","tag":"reference"}
{"content":"collects together any notes providing information about a text additional to that recorded\n    in other parts of the bibliographic description. The TEI header Information of different kinds should not be grouped together into the same note.","title":"<a href=\"ref/notesStmt\">notesStmt</a>","tag":"reference"}
{"content":"describes the source(s) from which an electronic text was derived or generated, typically a\n    bibliographic description in the case of a digitized text, or a phrase such as \"born digital\"\n    for a text which has no previous existence. The TEI header","title":"<a href=\"ref/sourceDesc\">sourceDesc</a>","tag":"reference"}
{"content":"contains a fully-structured bibliographic citation, in which all components of the TEI file\n    description are present. The TEI header","title":"<a href=\"ref/biblFull\">biblFull</a>","tag":"reference"}
{"content":"documents the relationship between an electronic text and the\nsource or sources from which it was derived. The TEI header","title":"<a href=\"ref/encodingDesc\">encodingDesc</a>","tag":"reference"}
{"content":"describes or points to a related customization or schema file The TEI header the identifier used for the customization or schema","title":"<a href=\"ref/schemaRef\">schemaRef</a>","tag":"reference"}
{"content":"describes in detail the aim or purpose for which an electronic file was encoded, together\n    with any other relevant information concerning the process by which it was assembled or\n    collected. The TEI header","title":"<a href=\"ref/projectDesc\">projectDesc</a>","tag":"reference"}
{"content":"contains a prose description of the rationale and methods used in sampling texts in the\n    creation of a corpus or collection. The TEI header This element records all information about systematic inclusion or omission of portions of\n      the text, whether a reflection of sampling procedures in the pure sense or of systematic\n      omission of material deemed either too difficult to transcribe or not of sufficient\n    interest.","title":"<a href=\"ref/samplingDecl\">samplingDecl</a>","tag":"reference"}
{"content":"provides details of editorial principles and practices applied\nduring the encoding of a text. The TEI header","title":"<a href=\"ref/editorialDecl\">editorialDecl</a>","tag":"reference"}
{"content":"states how and under what circumstances corrections have been made in the text. The TEI header indicates the degree of correction applied to the text. indicates the method adopted to indicate corrections within the text. May be used to note the results of proof reading the text against its original, indicating\n      (for example) whether discrepancies have been silently rectified, or recorded using the\n      editorial tags described in section 3.5 Simple Editorial Changes.","title":"<a href=\"ref/correction\">correction</a>","tag":"reference"}
{"content":"indicates the extent of normalization or regularization of the original source carried out\n    in converting it to electronic form. The TEI header indicates the method adopted to indicate normalizations within the text.","title":"<a href=\"ref/normalization\">normalization</a>","tag":"reference"}
{"content":"summarizes the way in which hyphenation in a source text has been treated in an encoded\n    version of it. The TEI header indicates whether or not end-of-line hyphenation has been retained in a text.","title":"<a href=\"ref/hyphenation\">hyphenation</a>","tag":"reference"}
{"content":"specifies editorial practice adopted with respect to quotation marks in the original. The TEI header indicates whether or not quotation marks have been retained as content within the text.","title":"<a href=\"ref/quotation\">quotation</a>","tag":"reference"}
{"content":"describes the principles according to which the text has been segmented, for example into\n    sentences, tone-units, graphemic strata, etc. The TEI header","title":"<a href=\"ref/segmentation\">segmentation</a>","tag":"reference"}
{"content":"specifies the format used when standardized date or number values are supplied. The TEI header","title":"<a href=\"ref/stdVals\">stdVals</a>","tag":"reference"}
{"content":"documents the usage of a specific element within a specified document. The TEI header specifies the name\n      (generic identifier) of the element indicated by the tag,  within the namespace indicated by the parent\n        namespace element. specifies the number of occurrences of this element within the text. specifies the number of occurrences of this element within the text which bear a\n        distinct value for the global xml:id attribute.","title":"<a href=\"ref/tagUsage\">tagUsage</a>","tag":"reference"}
{"content":"supplies the formal name of the namespace to which the elements documented by its children\n    belong. The TEI header specifies the full formal name of the namespace concerned.","title":"<a href=\"ref/namespace\">namespace</a>","tag":"reference"}
{"content":"supplies information about the rendition or appearance of one or more elements in the source\n    text. The TEI header where CSS is used, provides a way of defining\npseudo-elements, that is, styling rules\napplicable to specific sub-portions of an element. \n        contains a selector or series of selectors specifying the elements to which the contained style \n        description applies, expressed in the language specified in the scheme attribute.\n      ","title":"<a href=\"ref/rendition\">rendition</a>","tag":"reference"}
{"content":"specifies the name of the formal language in which style or\n  renditional information is supplied elsewhere in the document. The\n  specific version of the scheme may also be supplied. The TEI header","title":"<a href=\"ref/styleDefDecl\">styleDefDecl</a>","tag":"reference"}
{"content":"specifies how canonical references are constructed for this\n  text. The TEI header This example is a formal representation for the referencing\n    scheme described informally in the following example.","title":"<a href=\"ref/refsDecl\">refsDecl</a>","tag":"reference"}
{"content":"declares a structure and method for citing the current document. The TEI header supplies a delimiting string preceding the structural component. supplies an XPath selection pattern using the\n        syntax defined in 1  which identifies a set of nodes which are \n        citable structural components. The expression may be absolute (beginning with /) or relative. \n        match on a citeStructure without a citeStructure parent must be an absolute XPath. If it is\n        relative, its context is set by the match of the parent citeStructure.  describes the structural unit indicated by the citeStructure.","title":"<a href=\"ref/citeStructure\">citeStructure</a>","tag":"reference"}
{"content":"specifies how information may be extracted from citation structures. The TEI header A URI indicating a property definition.","title":"<a href=\"ref/citeData\">citeData</a>","tag":"reference"}
{"content":"provides attributes for selecting particular elements\n    within a document. The TEI header supplies an XPath selection pattern using the\n        syntax defined in 1 . The XPath pattern is relative to the context given\n        in match, which will either be a sibling attribute in the case of\n          citeStructure or on the parent citeStructure in the case of\n          citeData.","title":"<a href=\"ref/att.citeStructurePart\">att.citeStructurePart</a>","tag":"reference"}
{"content":"provides attributes for regular-expression matching and replacement. The TEI header specifies a regular expression against which the values of other attributes\n        can be matched. specifies a replacement pattern, that is, the skeleton of a relative or absolute URI containing references to groups in\n        the matchPattern which, once subpattern substitution\n        has been performed, complete the URI.","title":"<a href=\"ref/att.patternReplacement\">att.patternReplacement</a>","tag":"reference"}
{"content":"specifies an expression and replacement pattern for transforming a canonical reference into\n    a URI. The TEI header The result of the substitution may be either an absolute or a relative URI reference. In the\n      latter case it is combined with the value of xml:base in force at the place where\n      the cRef attribute occurs to form an absolute URI in the usual manner as prescribed\n      by XML Base.","title":"<a href=\"ref/cRefPattern\">cRefPattern</a>","tag":"reference"}
{"content":"defines a prefixing scheme used in teidata.pointer values,\n  showing how abbreviated URIs using the scheme may be expanded into full URIs. The TEI header supplies a name which functions as the prefix for an abbreviated\n          pointing scheme such as a private URI scheme. The prefix constitutes the \n        text preceding the first colon. The abbreviated pointer may be dereferenced to produce either\n    an absolute or a relative URI reference. In the latter case it is\n    combined with the value of xml:base in force at the\n    place where the pointing attribute occurs to form an absolute URI\n    in the usual manner as prescribed by XML Base.","title":"<a href=\"ref/prefixDef\">prefixDef</a>","tag":"reference"}
{"content":"contains a list of definitions of prefixing schemes used in teidata.pointer values, showing how abbreviated URIs using each scheme may be expanded into full URIs. The TEI header In this example, two private URI scheme prefixes are defined and patterns are provided \n    for dereferencing them. Each prefix is also supplied with a human-readable explanation in a\n    p element.","title":"<a href=\"ref/listPrefixDef\">listPrefixDef</a>","tag":"reference"}
{"content":"contains one or more taxonomies defining any classificatory\ncodes used elsewhere in the text. The TEI header","title":"<a href=\"ref/classDecl\">classDecl</a>","tag":"reference"}
{"content":"specifies one component of a canonical reference defined by the milestone method. The TEI header specifies the fixed length of the reference component. supplies a delimiting string following the reference component.","title":"<a href=\"ref/refState\">refState</a>","tag":"reference"}
{"content":"defines a typology either implicitly, by means of a bibliographic\n  citation, or explicitly by a structured taxonomy. The TEI header Nested taxonomies are common in many fields, so the\n    taxonomy element can be nested.","title":"<a href=\"ref/taxonomy\">taxonomy</a>","tag":"reference"}
{"content":"contains an individual descriptive category, possibly nested within a superordinate\n  category, within a user-defined taxonomy. The TEI header","title":"<a href=\"ref/category\">category</a>","tag":"reference"}
{"content":"describes some category within a taxonomy or text typology, either in the form of a brief\n    prose description or in terms of the situational parameters used by the TEI formal textDesc. The TEI header","title":"<a href=\"ref/catDesc\">catDesc</a>","tag":"reference"}
{"content":"documents the notation and the datum used for geographic coordinates expressed as content of\n    the geo element elsewhere within the document. The TEI header supplies a commonly used code name for the datum employed.","title":"<a href=\"ref/geoDecl\">geoDecl</a>","tag":"reference"}
{"content":"provides information about units of measurement that are not members of the International System of Units. The TEI header","title":"<a href=\"ref/unitDecl\">unitDecl</a>","tag":"reference"}
{"content":"contains descriptive information related to a specific unit of measurement. The TEI header","title":"<a href=\"ref/unitDef\">unitDef</a>","tag":"reference"}
{"content":"groups seventh-level structural divisions. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.div7Like\">model.div7Like</a>","tag":"reference"}
{"content":"groups elements used to represent annotations. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.annotationLike\">model.annotationLike</a>","tag":"reference"}
{"content":"groups elements which may be used as an annotation body. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.annotationPart.body\">model.annotationPart.body</a>","tag":"reference"}
{"content":"defines how to calculate one unit of measure in terms of another. The TEI header indicates a source unit of measure that is to be converted into another unit indicated in toUnit. the target unit of measurement for a conversion from a source unit referenced in fromUnit. The conversion element is designed to store information about converting from one unit of measurement to another. The formula attribute holds an XPath expression that indicates how the measurement system in fromUnit is converted to the system in toUnit. Do not confuse the usage of the dating attributes (from and to) in the examples with the attributes (fromUnit and toUnit) designed to reference units of measure.","title":"<a href=\"ref/conversion\">conversion</a>","tag":"reference"}
{"content":"provides attributes for referencing locations by pointing to entries in a canonical list of places. Declarations for classes, datatypes, and macros available to all TEI modules indicates one or more locations by pointing to a place element or other canonical description.","title":"<a href=\"ref/att.locatable\">att.locatable</a>","tag":"reference"}
{"content":"records information about an application which has\n  edited the TEI file. The TEI header","title":"<a href=\"ref/appInfo\">appInfo</a>","tag":"reference"}
{"content":"provides information about an application which has acted upon the document. The TEI header supplies an identifier for the application, independent of its version number or display\n        name. supplies a version number for the application, independent of its identifier or display\n        name. This example shows an appInfo element documenting the fact that version 1.5 of the Image\n      Markup Tool1 application has an interest in two parts of a document which was last saved on\n      June 6 2006. The parts concerned are accessible at the URLs given as target for the two\n        ptr elements. ","title":"<a href=\"ref/application\">application</a>","tag":"reference"}
{"content":"describes a particular style or hand distinguished within a manuscript. The TEI header","title":"<a href=\"ref/handNote\">handNote</a>","tag":"reference"}
{"content":"provides a detailed description of non-bibliographic aspects of a text, specifically the\n    languages and sublanguages used, the situation in which it was produced, the participants and\n    their setting. The TEI header Although the content model permits it, it is rarely\nmeaningful to supply multiple occurrences for any of the child\nelements of  profileDesc unless these are documenting multiple texts.","title":"<a href=\"ref/profileDesc\">profileDesc</a>","tag":"reference"}
{"content":"contains a summary or formal\n    abstract prefixed to an existing source document by the encoder. The TEI header This element is intended only for cases where no abstract is available in the\n      original source. Any abstract already present in the source document\n      should be encoded as a div within the front, as it\n      should for a born-digital document. ","title":"<a href=\"ref/abstract\">abstract</a>","tag":"reference"}
{"content":"contains information about the creation of a text. The TEI header The creation element may be used to record details of\n    a text's creation, e.g. the date and place it was composed, if\n    these are of interest. It may also contain a more structured account of the various\n    stages or revisions associated with the evolution of a text; this\n    should be encoded using the listChange element.  It\n    should not be confused with the publicationStmt element,\n    which records date and place of publication.","title":"<a href=\"ref/creation\">creation</a>","tag":"reference"}
{"content":"describes the languages, sublanguages, registers, dialects, etc.\nrepresented within a text. The TEI header","title":"<a href=\"ref/langUsage\">langUsage</a>","tag":"reference"}
{"content":"characterizes a single language or sublanguage used within a text. The TEI header Supplies a language code constructed as defined in BCP 47 which is used to identify the\n        language documented by this element, and which is referenced by the global\n        xml:lang attribute. specifies the approximate percentage (by volume) of the text which uses this language. Particularly for sublanguages, an informal prose characterization should be\n      supplied as content for the element.","title":"<a href=\"ref/language\">language</a>","tag":"reference"}
{"content":"contains a list of keywords or phrases identifying the topic or nature of a text. The TEI header identifies the controlled vocabulary within which the set of keywords concerned is\n        defined, for example by a taxonomy element, or by\n      some other resource. Each individual  keyword (including compound subject headings) should\nbe supplied as a term element directly within the\nkeywords  element. An alternative usage, in which each\nterm appears within an item inside a list is\npermitted for backwards compatibility, but is deprecated. If no control list exists for the keywords used, then no value\nshould be supplied for the scheme attribute.","title":"<a href=\"ref/keywords\">keywords</a>","tag":"reference"}
{"content":"groups information which describes the nature or topic of a text in terms of a standard\n    classification scheme, thesaurus, etc. The TEI header","title":"<a href=\"ref/textClass\">textClass</a>","tag":"reference"}
{"content":"specifies one or more defined categories within some taxonomy or text typology. The TEI header identifies the classification scheme within which the set of categories concerned is\n        defined, for example by a taxonomy element, or by\n      some other resource. The scheme attribute needs to be supplied only if more than one\n    taxonomy has been declared. ","title":"<a href=\"ref/catRef\">catRef</a>","tag":"reference"}
{"content":"contains the classification code used for this text in some standard classification system. The TEI header identifies the\n      classification system in use, as defined by, e.g. a taxonomy element, or\n      some other resource.","title":"<a href=\"ref/classCode\">classCode</a>","tag":"reference"}
{"content":"contains a description of the calendar system used in any\n  dating expression found in the text. The TEI header In the first example above, calendars and short codes for \n      xml:ids are  from W3 guidelines at \n      http://www.w3.org/TR/xpath-functions-11/#lang-cal-country\n      ","title":"<a href=\"ref/calendarDesc\">calendarDesc</a>","tag":"reference"}
{"content":"describes the scope of any analytic or interpretive information added to the text in\n    addition to the transcription. The TEI header","title":"<a href=\"ref/interpretation\">interpretation</a>","tag":"reference"}
{"content":"specifies editorial practice adopted with respect to punctuation marks in the original. The TEI header indicates whether or not punctation marks have been retained as content within the text.  indicates the positioning of punctuation marks that are associated with marked up text as being encoded within the element surrounding the text or immediately before or after it.","title":"<a href=\"ref/punctuation\">punctuation</a>","tag":"reference"}
{"content":"describes a calendar or dating system used in a dating formula in the text. The TEI header","title":"<a href=\"ref/calendar\">calendar</a>","tag":"reference"}
{"content":"provides detailed information about the tagging applied to a document. The TEI header indicates whether\n      the element types listed exhaustively include all those found\n      within text, or represent only a subset. If the partial attribute were not specified here, the implication would be that\n    the document in question contains only hi, title, and para elements.","title":"<a href=\"ref/tagsDecl\">tagsDecl</a>","tag":"reference"}
{"content":"contains a structured\n  description of the place, the name of a person/organization and the\n  date related to the sending/receiving of a message or any other\n  action related to the correspondence. The TEI header describes the nature of the action.","title":"<a href=\"ref/correspAction\">correspAction</a>","tag":"reference"}
{"content":"groups elements which may \n        appear as part of the correspContext element Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.correspContextPart\">model.correspContextPart</a>","tag":"reference"}
{"content":"provides a container\n  element into which metadata in non-TEI formats may be\n  placed. The TEI header This example presumes that the prefix dc has been bound to the namespace\n        http://purl.org/dc/elements/1.1/ and the prefix rdf is bound to\n      the namespace http://www.w3.org/1999/02/22-rdf-syntax-ns#. Note: The\n        about attribute on the rdf:Description in this example gives a URI\n      indicating the resource to which the metadata contained therein refer. The\n        rdf:Description in the second xenoData block has a blank\n        about, meaning it is pointing at the current document, so\n      the RDF is about the document within which it is contained, i.e. the TEI document containing\n      the xenoData block. Similarly, any kind of relative URI may be used, including\n      fragment identifiers (see 5.6.2 Identifiers and Indicators). Do note, however, that if the contents of\n      the xenoData block are to be extracted and used elsewhere, any relative URIs will\n      have to be resolved accordingly.","title":"<a href=\"ref/xenoData\">xenoData</a>","tag":"reference"}
{"content":"groups together metadata\n        elements for describing correspondence Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.correspDescPart\">model.correspDescPart</a>","tag":"reference"}
{"content":"summarizes the revision history for a file. The TEI header If present on this element, the status attribute\n    should indicate the current status of the document. The same\n    attribute may appear on any change to record the status\n    at the time of that change. Conventionally change elements should\n    be given in reverse date order, with the most recent change at the\n    start of the list.","title":"<a href=\"ref/revisionDesc\">revisionDesc</a>","tag":"reference"}
{"content":"marks paragraphs in prose. Elements common to all TEI documents","title":"<a href=\"ref/p\">p</a>","tag":"reference"}
{"content":"documents a change or set of changes made during the production\n    of a source document, or during the revision of an electronic file. The TEI header points to one or more elements that belong to this change. The who attribute may be used to point to any other element, but will typically\n      specify a respStmt or person element elsewhere in the header, identifying\n      the person responsible for the change and their role in making it. It is recommended that changes be recorded with the most recent\n    first. The status attribute may be used to indicate the\n    status of a document following the change documented.  ","title":"<a href=\"ref/change\">change</a>","tag":"reference"}
{"content":"identifies a word or phrase as belonging to some language other than that of the\n                surrounding text. Elements common to all TEI documents The global xml:lang attribute should be supplied for this element to\n                        identify the language of the word or phrase marked. As elsewhere, its value\n                        should be a language tag as defined in 6.1 Language Identification. This element is intended for use only where no other element is available to mark\n                        the phrase or words concerned. The global xml:lang attribute\n                        should be used in preference to this element where it is intended to mark\n                        the language of the whole of some text element. The distinct element may be used to identify phrases belonging to\n                        sublanguages or registers not generally regarded as true languages.","title":"<a href=\"ref/foreign\">foreign</a>","tag":"reference"}
{"content":"marks words or phrases which are stressed or emphasized for\n        linguistic or rhetorical effect. Elements common to all TEI documents","title":"<a href=\"ref/emph\">emph</a>","tag":"reference"}
{"content":"marks a word or phrase as graphically distinct from the\n        surrounding text, for reasons concerning which no claim is\n        made. Elements common to all TEI documents","title":"<a href=\"ref/hi\">hi</a>","tag":"reference"}
{"content":"identifies any word or phrase which is regarded as linguistically distinct, for example as\n        archaic, technical, dialectal, non-preferred, etc., or as forming part of a sublanguage. Elements common to all TEI documents specifies the sublanguage or register to which the word or phrase is being\n                assigned specifies how the phrase is distinct diachronically specifies how the phrase is distinct diatopically specifies how the phrase is distinct diastratically","title":"<a href=\"ref/distinct\">distinct</a>","tag":"reference"}
{"content":"indicates passages thought or spoken aloud, whether explicitly indicated in the source or\n    not, whether directly or indirectly reported, whether by real people or fictional characters. Elements common to all TEI documents may be used to indicate whether the quoted matter is regarded as having been vocalized\n        or signed. may be used to indicate whether the quoted matter is regarded as direct or indirect\n        speech.","title":"<a href=\"ref/said\">said</a>","tag":"reference"}
{"content":"contains a phrase or passage attributed by the narrator or author to some agency external\n        to the text. Elements common to all TEI documents If a bibliographic citation is supplied for the source of a quotation, the two may be\n            grouped using the cit element.","title":"<a href=\"ref/quote\">quote</a>","tag":"reference"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TitlePageVerso#TitlePageVerso\">1 Releases of the TEI Guidelines</a>","content":"\n\t1 Releases of the TEI Guidelines\n\tP11990, C.M. Sperberg-McQueen and Lou BurnardP21992, C.M. Sperberg-McQueen and Lou BurnardP31994, C.M. Sperberg-McQueen and Lou BurnardP42001, Lou Burnard, Syd Bauman, and Steven DeRoseP52007, Lou Burnard and Syd Bauman\n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=dedication#dedication\">2 Dedication</a>","content":"\n  2 Dedication\n  \n    \n\tDonald E. Walker\n\t22 November 1928 – 26 November 1993\n      \n\tAntonio Zampolli\n\t1937 – 22 August 2003\n      \n\tSebastian Rahtz\n\t13 February 1955 – 15 March 2016\n      \n  \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FM1#FM1\">3 Preface and Acknowledgments</a>","content":"\n  3 Preface and Acknowledgments\n\n  This publication constitutes the fifth distinct version of the\n  Guidelines for Electronic Text Encoding and\n  Interchange, and the first complete revision since the\n  appearance of P3 in 1994. It includes substantial amounts of new\n  material and a major revision of the underlying technical\n  infrastructure. With this version, these Guidelines enter a new stage in\n  their development as a community-maintained open source project. This\n  edition is the first version to have benefitted from the close\n  overview and oversight of an elected TEI Technical Council. The\n  editors are therefore particularly pleased to acknowledge with\n  gratitude the hard work and dedication put into this project by the\n  Council over the last five years.\n\n  The Chair of the TEI Board sits on the Technical Council, and the\n  Board appoints the Chair of the Technical Council and one other\n  member of the Council. Other Council members are all elected by the\n  Consortium membership, and serve periods of up to two years at a\n  time. The names and affiliations of all Council members who served\n  during the production of this edition of the Guidelines are listed\n  below.\n\n  2004–2005: Julia Flanders (Brown University)2006: Matthew Zimmerman (New York University)2007–2011: Daniel O'Donnell (University of Lethbridge)2011: Martin Mueller (Northwestern University)2011–2012: John Unsworth (University of Illinois at Urbana-Champaign / Brandeis University)2012–2015: Elena Pierazzo (King's College London / Université Stendhal-Grenoble 3)2016–2017: Michelle Dalmau (Indiana University)2018–2021: Kathryn Tomasek (Wheaton College)2022: Diane K. Jakacki (Bucknell University)\n\n  2002–2003: John Unsworth (University of Virginia)2003–2007: Christian Wittern (Kyoto University)2008–2011: Laurent Romary (Max Planck Digital Library / Inria & Humboldt-Universität zu Berlin)2012–2014: James Cummings (University of Oxford)2015–2017: Hugh Cayless (Duke University)2018–2022: Martina Scholger (University of Graz)\n\n  2001–2009: Sebastian Rahtz (University of Oxford)2010–2014: Lou Burnard (University of Oxford / TGE Adonis / Independent Consultant)\n\n  2001–2007: Syd Bauman (Brown Univesity)2001–2007: Lou Burnard (University of Oxford)\n\n  2011–2012: Piotr Bański (University of Warsaw)2010–2013: Brett Barney (University of Nebraska)2013–2023: Syd Bauman (Brown University / Northeastern University)2021–2022: Helena Bermúdez Sabel (Université de Neuchâtel)2016–2024: Elisa Beshero-Bondar (University of Pittsburgh at Greensburg / Penn State Erie, The Behrend College)2022: Elli Bleeker (Huygens Institute for the History of the Netherlands)2019–2020: Vanessa Bigot Juloux (Ecole Pratique des Hautes Etudes / Paris Sciences et Lettres / Andrews University, Michigan)2003–2006, 2017–2018: Alejandro Bia (University of Alicante) 2004–2007: David Birnbaum (University of Pittsburgh)2008–2013: Gabriel Bodard (King's College London)2008–2009: Peter Boot (Huygens Institute for Netherlands History)2020–2021: Meaghan Brown (Papers of the Bibliographical Society of America)2007–2008: Tone Merete Bruvik (University of Bergen)2015–2016: Lou Burnard (Independent Consultant)2013–2023: Hugh Cayless (New York University / Duke University)2014–2015: Fabio Ciotti (University of Rome “Tor Vergata”)2007–2009: Arianna Ciula (King's College London / European Science Foundation)2005–2019: James Cummings (University of Oxford / Newcastle University)2020: Nicholas Cole (Pembroke College Oxford)2002–2007, 2010: Matthew Driscoll (University of Copenhagen)2002–2004: David Durand (Ingenta plc)2002–2004: Tomas Erjavec (Jozef Stefan Institute, Ljubljana)2014–2015: Stefanie Gehrke (Biblissima)2010–2013: Kevin Hawkins (University of Michigan)2010–2015: Martin Holmes (University of Victoria)2002: Fotis Jannidis (University of Munich) 2021–2023: Janelle Jenstad (University of Victoria)2006: Amit Kumar (University of Illinois at Urbana-Champaign)2020–2021: Jessica H. Lu (University of Maryland)2015–2016: Stefan Majewski (Austrian National Library)2002: Martin Mueller (Northwestern University)2013–2014, 2016–2019: Elli Mylonas (Brown University)2010–2011: Julianne Nyhan (University of Trier / University College London)2008–2011: Elena Pierazzo (King's College London)2006–2007, 2009–2010: Dot Porter (University of Kentucky / Digital Humanities Observatory / Indiana University)2002–2003: Merillee Proffitt (Research Libraries Group)2002: Peter Robinson (De Montfort University)2009–2014: Sebastian Rahtz (University of Oxford)2002: Geoffrey Rockwell (Macmaster University)2002–2007: Laurent Romary (Inria / CNRS / Max Planck Digital Library)2008–2009, 2012–2015: Paul Schaffner (University of Michigan)2016–2024: Martina Scholger (University of Graz)2003–2007: Susan Schreibman (University of Maryland)2022-2024: Sabine Seifert (University of Potsdam)2008–2009: David Sewell (University of Virginia)2004–2005: Natasha Smith (University of North Carolina at Chapel Hill)2014–2022: Peter Stadler (Carl-Maria-von-Weber-Gesamtausgabe / University of Paderborn)2017–2019: Sarah Stanley (Florida State University)2008–2009: Manfred Thaller (University of Cologne)2006–2007: Conal Tuohy (Victoria University of Wellington)2016–2024: Magdalena Turska (eXist Solutions / University of Oxford)2004–2005: Edward Vanhoutte (Royal Academy of Dutch Language and Literature)2015–2023: Raffaele Viglianti (University of Maryland)2005–2008: John Walsh (Indiana University)2012–2013: Rebecca Welzenbach (University of Michigan)2002–2005: Perry Willett (Indiana University / University of Michigan)2011–2012: Stuart Yeates (New Zealand Electronic Text Centre)\n\n\nThe bulk of the Council's work has been carried out by email and by\nregular telephone conference. In addition, the Council has held many\ntwo-day face-to-face meetings. During production of P5,\nthese meetings were generously hosted by the following institutions:\nKing's College, London (2002)Oxford University Computing Services (2003)Royal Academy of Dutch Language and Literature, Ghent (2004)AFNOR: Association française de normalisation, Paris (2005)Institute for Research in Humanities, Kyoto University (2006)Berlin-Brandenburgische Akademie der Wissenschaften, Berlin (2007)National University of Ireland, Galway (2008)Ecole Normale Supérieure, Lyon (2009)Royal Irish Academy, Dublin (2010)Big Ten Center, Chicago (2011)Inria, Paris (2011)University of Michigan, Ann Arbor (2012)University of Oxford (2012)Brown University (2013)University of Oxford (2013)University of Oxford (2014)Duke University (2014)University of Michigan, Ann Arbor (2015)Lyon (2015)Brown University (2016)Austrian Academy of Sciences (2016)Prague (2017)Victoria (2017)CCEH, Cologne University (2018)University of Tokyo (2018)Folger Shakespeare Library, Washington, D.C. (2019)ZIM-ACDH, University of Graz (2019)Virtual meeting (May 2020)Virtual meeting (October 2020)Short virtual meeting (January 2021)Short virtual meeting (May 2021)Short virtual meeting (October 2021)Short virtual (April 2022)\n\nDuring the production of TEI P5, the Council chartered a number\nof smaller workgroups and similar activities, each of which\nmade significant contribution to the intellectual content of the\nwork. Active members of these are listed below:\nCharacter Set Workgroup\nActive between July 2001 and January 2005, this group revised and\ndeveloped the recommendations now forming chapters 6 Languages and Character Sets\nand 5 Characters, Glyphs, and Writing Modes. It was chaired by Christian Wittern, and its\nmembership included: Deborah Anderson (Berkeley); Michael Beddow\n(independent scholar); David Birnbaum (University of Pittsburgh); \nMartin Duerst (W3C/Keio University); \nPatrick Durusau (Society of Biblical Literature); \nTomohiko Morioka (Kyoto University); \n and Espen Ore (National Library of Norway).\nMeta Taskforce\nActive between February 2003 and February 2005, this group developed the\nmaterial now forming 22 Documentation Elements. It was chaired by Sebastian\nRahtz, and its membership included:\nAlejandro Bia; \nDavid G. Durand; \nLaurent Romary; \nNorman Walsh (Sun Microsystems); \nand Christian Wittern. \nWorkgroup on Stand-Off Markup, XLink and XPointer\nActive between February 2002 and January 2006, this\ngroup reviewed and expanded the\nmaterial now largely forming part of 16 Linking, Segmentation, and Alignment. It was\nchaired by David G. Durand, and its membership included: \nJean Carletta (Edinburgh University); \nChris Caton (University of Oxford); \nJessica P. Hekman (Ingenta plc);\nNancy M. Ide (Vassar College); \nand \nFabio Vitali (University of Bologna).Manuscript Description Task Force\nActive between February 2003 and December 2005, this group reviewed\nand finalised the material now forming 10 Manuscript Description. It was\nchaired by Matthew Driscoll and comprised David Birnbaum and Merrilee\nProffitt, in addition to the TEI Editors. Names and Places Activity\nActive between January 2006 and May 2007, this group formulated the\nnew material now forming part of 13 Names, Dates, People, and Places. It was chaired\nby  Matthew Driscoll. and its membership included \nGabriel Bodard (King's College London); \nArianna Ciula; \nJames Cummings; \nTom Elliott  (University of North Carolina at Chapel Hill); \nØyvind Eide (University of Oslo); \nLeif Isaksen (Oxford Archaeology plc);\nRichard Light (private consultant); \nTadeusz Piotrowski (Opole University); \nSebastian Rahtz; \nand\nTatiana Timcenko (Vilnius University).\n\nJoint TEI/ISO Activity on Feature Structures\nActive between January 2003 and August 2007,  this group reviewed  the\nmaterial now presented in 18 Feature Structures and revised it for\ninclusion in ISO Standard 24610. It was chaired by Kiyong Lee (Korea\nUniversity), and its active membership included the following:\nHarry Bunt (Tilburg);\nLionel Clément (INRIA); \nEric de la Clergerie (INRIA); \nThierry Declerck (Saarbrücken);\nPatrick Drouin (University of Montréal);\nLee Gillam (Surrey University);\nand\nKōiti Hasida (ICOT).\n\n\n\n From 2000 to 2008 the TEI had two appointed Editors, Lou Burnard\n (University of Oxford) and Syd Bauman (Brown University), who served\n ex officio on the Council and, as far as possible,\n on all Council workgroups.\n\n\nThe Council also oversees an Internationalization and Localization\nproject, led by Sebastian Rahtz and with funding from the ALLC. This\nactivity, ongoing since October 2005, is engaged in translating key\nparts of the P5 source into a variety of languages.\n\nProduction of the translations currently included in P5 has been\ncoordinated by the following: \nChinese Marcus Bingenheimer (Chung-hwa Institute\nof Buddhist Studies, Taipei / Temple University) and Weining  Hwang (Würzburg University)FrenchPierre-Yves Duchemin (ENSSIB); Jean-Luc\nBenoit (ATILF); Anila Angjeli (BnF); Joëlle Bellec Martini (BnF);\nMarie-France Claerebout (Aldine); Magali Le Coënt (BIUSJ); Florence\nClavaud (EnC); Cécile Pierre (BIUSJ).\nGerman Werner Wegstein (Würzburg University), Franz Fischer (Cologne University),  Martina Scholger (University of Graz) and Peter Stadler (Paderborn University) ItalianMarco Venuti (University of Venice) and Letizia Cirillo\n(University of Bologna) Japanese Ohya Kazushi (Tsurumi University), Kiyonori Nagasaki (University of Tokyo) and Martin Holmes (University of Victoria)KoreanBeom-mo Kang and Jungha Hong (Korea University)Spanish Carmen Arronis Llopis (University of\n  Alicante), Alejandro Bia (Miguel Hernández University), Gimena del Rio Riande (Consejo Nacional de Investigaciones Científicas y Técnicas) and Susanna Allés-Torrent (University of Miami)\n\n\nAny one who works closely with the TEI Guidelines, whether as\ntranslator, editor, or reader is constantly reminded of the\nambitious scope and exceptionally high editorial standards set by the original\nproject, now approaching twenty years ago. It is appropriate therefore to retain\na sense of the history of this document, as it has evolved since its\nfirst appearance in 1990, and to acknowledge with gratitude the\ncontributions made to that evolution by very many individuals and\ninstitutions around the world. The original prefatory notes to each\nmajor edition of the Guidelines recording these names are therefore\npreserved in an appendix to the current edition (see  8 Prefatory Notes).\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AB#AB\">4 About These Guidelines</a>","content":"\n4 About These Guidelines\n\nThese Guidelines have been developed and are maintained by the Text\nEncoding Initiative Consortium (TEI); see 4.2 Historical Background.  They\nare addressed to anyone who works with any kind of textual resource in\ndigital form.\n\nThey make recommendations about suitable ways of representing those\nfeatures of textual resources which need to be identified explicitly\nin order to facilitate processing by computer programs.  In\nparticular, they specify a set of markers (or tags) which\nmay be inserted in the electronic representation of the text, in order\nto mark the text structure and other features of interest.  Many, or\nmost, computer programs depend on the presence of such explicit\nmarkers for their functionality, since without them a digitized text\nappears to be nothing but a sequence of undifferentiated bits.  The\nsuccess of the World Wide Web, for example, is partly a consequence of\nits use of such markup to indicate such features as headings and lists\non individual pages, and to indicate links between pages. The process\nof inserting such explicit markers for implicit textual features is\noften called markup, or equivalently within this\nwork encoding; the term\ntagging is also used informally. We use the term\nencoding scheme or markup language to denote\nthe complete set of rules associated with the use of markup in a given\ncontext; we use the term markup vocabulary for the\nspecific set of markers or named distinctions employed by a given\nencoding scheme. Thus, this work both describes the TEI encoding\nscheme, and documents the TEI markup vocabulary.\n\nThe TEI encoding scheme is of particular usefulness in facilitating\nthe loss-free interchange of data amongst individuals and research\ngroups using different programs, computer systems, or application\nsoftware. Since they contain an inventory of the features most often\ndeployed for computer-based text processing, these Guidelines are also\nuseful as a starting point for those designing new systems and\ncreating new materials, even where interchange of information is not a\nprimary objective. \n\nThese Guidelines apply to texts in any natural language, of any\ndate, in any literary genre or text type, without restriction on form\nor content.  They treat both continuous materials (running\ntext) and discontinuous materials such as dictionaries and\nlinguistic corpora.  Though principally directed to the needs of the\nscholarly research community, these Guidelines are not restricted to\nesoteric academic applications.  They are also useful for librarians\nmaintaining and documenting electronic materials, and for publishers\nand others creating or distributing electronic texts.  Although they\nfocus on problems of representing in electronic form texts which\nalready exist in traditional media, these Guidelines are also\napplicable to textual material which is born\ndigital.  We believe them to be adequate to \nthe widest variety of currently existing practices in using\ndigital textual data, but by no means limited to them.\n\nThe rules and recommendations made in these Guidelines are\nexpressed in terms of what is currently the most widely-used markup\nlanguage for digital resources of all kinds: the Extensible Markup\nLanguage (XML), as defined by the World Wide Web Consortium's XML\nRecommendation. However, the TEI encoding scheme itself does not\ndepend on this language; it was originally formulated in terms of SGML\n(the ISO Standard Generalized Markup Language), a\npredecessor of XML, and\nmay in future years be re-expressed in other ways as the\nfield of markup develops and matures. For more information on markup\nlanguages see chapter 5 A Gentle Introduction to XML; for more\ninformation on the associated character encoding issues see chapter\n6 Languages and Character Sets.\n\n\nThis document provides the authoritative and complete statement of\nthe requirements and usage of the TEI encoding scheme.  As such,\nalthough it includes numerous small examples, it must be stressed that\nthis work is intended to be a reference manual rather than a tutorial\nguide. \n\nThe remainder of this chapter comprises three sections.  The first\ngives an overview of the structure and notational conventions used\nthroughout these Guidelines.  The second enumerates the design principles\nunderlying the TEI scheme and the application environments in which it\nmay be found useful.  Finally, the third section gives a brief account\nof the origins and development of the Text Encoding Initiative itself.\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AB#AB\">4 About These Guidelines</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABSTRUNC#ABSTRUNC\">4.1 Structure and Notational\nConventions of this Document</a>","content":"4.1 Structure and Notational\nConventions of this Document\n\nThe remaining two sections of the front matter to these Guidelines\nprovide background tutorial material for those unfamiliar with basic\nmarkup technologies. Following the present introductory section, we\npresent a detailed introduction to XML itself, intended to cover in a\nrelatively painless manner as much as the novice user of the TEI\nscheme needs to know about markup languages in general and XML in\nparticular. This is followed by a discussion of the general principles\nunderlying current practice in the representation of different\nlanguages and writing systems in digital form. This chapter is largely\nintended for the user unfamiliar with the Unicode encoding systems,\nthough the expert may also find its historical overview of\ninterest.\n\nThe body of this edition of these Guidelines proper contains 23\nchapters arranged in increasing order of specialist interest. The\nfirst five chapters discuss in depth matters likely to be of\nimportance to anyone intending to apply the TEI scheme to virtually\nany kind of text. The next seven focus on particular kinds of text:\nverse, drama, spoken text, dictionaries, and manuscript\nmaterials. The next nine chapters deal with a wide range of topics,\none or more of which are likely to be of interest in specialist\napplications of various kinds. The last two chapters deal with the XML\nencoding used to represent the TEI scheme itself, and provide\ntechnical information about its implementation. The last chapter also\ndefines the notion of TEI conformance and its implications for\ninterchange of materials produced according to these Guidelines.\n\nAs noted above, this is a reference work, and is not intended to be\nread through from beginning to end. However, the reader wishing to\nunderstand the full potential of the TEI scheme will need a thorough\ngrasp of the material covered by the first four chapters and the last\ntwo. Beyond that, the reader is recommended to select according to\ntheir specific interests: one of the strengths of the TEI architecture\nis its modular nature. \n\nAs far as possible, extensive cross referencing is provided\nwherever related topics are dealt with; these are particularly\neffective in the online version of these Guidelines. In addition, a\nseries of technical appendixes provide detailed formal definitions for\nevery element, every class, and every macro discussed in the body of\nthe work; these are also cross linked as appropriate. Finally, a\ndetailed bibliography is provided, which identifies the source of many\nexamples cited in the text as well as documenting works referred to,\nand listing other relevant publications.\n\n\nAs an aid to the reader, most chapters of these Guidelines follow\nthe same basic organization. The chapter begins with an overview of\nthe subjects treated within it, linked to the following\nsubsections. Within each section where new elements are described, a\nsummary table is first given, which provides their names and a brief\ndescription of their intended usage. This is then followed where\nappropriate by further discussion of each element, including wherever\npossible usage examples taken somewhat eclectically from a variety of\nreal sources. These examples are not intended to be exhaustive, but\nrather to suggest typical ways in which the elements concerned may\nusefully be applied. Where appropriate, a link to a statement of the\nsource for most examples is provided in the online version. Within the\nexamples, use of whitespace such as newlines or indentation is simply\nintended to aid legibility, and is not prescriptive or normative. \n\nWherever TEI elements or classes are mentioned in the text, they\nare linked in the online version to the relevant reference\nspecification for the element or class concerned. Element names are\nalways given in the form name, where name is the\ngeneric identifier of the element; empty elements such as\npb or anchor include a closing slash to distinguish\nthem wherever they are discussed. References to attributes take the\nform attname, where attname is the name of the\nattribute.  References to classes are also presented as links, for\nexample model.divLike for a model class,\nand att.global for an attribute class.\n\n\n  \n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AB#AB\">4 About These Guidelines</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABSTRUNC#ABSTRUNC\">4.1 Structure and Notational\nConventions of this Document</a><a class=\"breadcrumb\" href=\"p5.xml?id=AB-modal#AB-modal\">4.1.1 The use of modal verbs</a>","content":"\n    4.1.1 The use of modal verbs\n    In general the TEI guidelines try to be careful when using modal verbs and phrases such as 'must', 'must not, \n      'should', 'should not' and 'may'. In terms of the meanings, these generally follow https://tools.ietf.org/html/bcp14 in the different meanings of these words.\n      In particular:\n      MUSTThis word, or the terms \"REQUIRED\" or \"SHALL\", means that this is an absolute requirement of the TEI Guidelines \n          for production of a TEI conformant file.MUST NOTThis phrase, or the phrase \"SHALL NOT\", means that this is an absolute prohibition of the \n          TEI Guidelines for production of a TEI conformant file.SHOULDThis word, or the adjective \"RECOMMENDED\", means that there may exist valid reasons in \n          particular circumstances to ignore a particular recommendation, but the full implications \n          must be understood and carefully weighed before choosing a different course.SHOULD NOTThis phrase, or the phrase \"NOT RECOMMENDED\" means that there may exist valid reasons in \n          particular circumstances when the particular behavior is acceptable or even useful, but the full implications \n          should be understood and the case carefully weighed before implementing any behavior so described.MAYThis word, or the adjective \"OPTIONAL\", means that a recommendation is truly optional.  One user may \n          choose to follow the recommendation because a particular project requires it or feels that\n          it enhances their work while another project may choose to not follow this recommendation.\n      However, the prose of the TEI Guidelines continually undergoes revision and all uses may not reflect this. Please report \n      any errors or unclear use of these words.\n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AB#AB\">4 About These Guidelines</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABSTRUNC#ABSTRUNC\">4.1 Structure and Notational\nConventions of this Document</a><a class=\"breadcrumb\" href=\"p5.xml?id=AB-namecon#AB-namecon\">4.1.2 TEI Naming Conventions</a>","content":"\n4.1.2 TEI Naming Conventions\nThese Guidelines use a more or less consistent set of conventions\nin the naming of XML elements and classes. This section summarizes\nthose conventions.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AB#AB\">4 About These Guidelines</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABSTRUNC#ABSTRUNC\">4.1 Structure and Notational\nConventions of this Document</a><a class=\"breadcrumb\" href=\"p5.xml?id=AB-namecon#AB-namecon\">4.1.2 TEI Naming Conventions</a><span class=\"breadcrumb\">4.1.2.1 Element and Attribute Names</span>","content":"\n4.1.2.1 Element and Attribute Names\nAn unadorned name such as blort is the\nname of a TEI element or attribute. 1.\nThe following conventions apply to the choice of names:\nElements are given generic identifiers as far as possible\nconsisting of one or more tokens, by which we mean whole\nwords or recognisable abbreviations of them, taken from the English\nlanguage. Where an element name contains more than one token, the first\nletter of the second\ntoken, and of any subsequent ones, is capitalized, as in for example\nbiblStruct, listPerson. This\ncamelCasing is used also for attribute names and\nsymbolic values. Module names also use whole words, for the most part, but are\nalways all lower case. The specification for an element or attribute whose name\ncontains abbreviations generally also includes a gloss\nelement providing the expanded sense of the name.An element specification may also contain approved translations\nfor element or attribute names in one or more other languages using\nthe altIdent element; this is not however generally done in\nTEI P5.\n\n\nWhole words are generally preferred for clarity. The following\nabbreviations are however commonly used within generic identifiers:\nattattributebiblbibliographic description or reference in a bibliographycatcategory, especially as used in text classification charcharacter, typically a Unicode characterdocdocument: this usually refers to the original source document\nwhich is being encoded,decldeclaration: has a specific sense in the TEI\nheader, as discussed in 2.1.2 Types of Content in the TEI Headerdescdescription: has a specific sense in the TEI header, as\ndiscussed in 2.1.2 Types of Content in the TEI Header grpgroup. In TEI usage, a group is distinguished from a list in that\nthe former associates several objects which act as a single entity,\nwhile the latter does not. For example, a linkGrp combines\nseveral link elements which have certain properties in\ncommon, whereas a listBibl simply lists a number of otherwise\nunrelated bibl elements.interpinterpretation or analysislang(natural) languagemsmanuscriptorgorganization, that is, a named group of people or legal entityrdgreading or version found in a specific witnessrefreference or linkspectechnical specification or definitionstmtstatement: used in a specific sense in the TEI header,\nas discussed in 2.1.2 Types of Content in the TEI Headerstructstructured: that is, containing a specific set of\nnamed elements rather than mixed contentvalvalue, for example of a variable or an attributewitwitness: that is, a specific document which attests specific\nreadings in a textual tradition or apparatus\n\nSome abbreviations are used inconsistently: for example,\nadd is an addition, and addSpan is a spanning\naddition, but addName is an additional name, not the name of\nan addition. Such inconsistencies are relatively few in number, and it\nis hoped to remove them in subsequent revisions of these Guidelines.\nSome elements have very short abbreviated names: these are for the\nmost part elements which are likely to be used very frequently in a\nmarked up text, for example p (paragraph), s\n(segment) hi (highlighted phrase), ptr (pointer),\ndiv (division) etc. We do not specifically list such elements\nhere: as noted above, an expansion of each such abbreviated name is\nprovided within the documentation using the gloss element\n.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AB#AB\">4 About These Guidelines</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABSTRUNC#ABSTRUNC\">4.1 Structure and Notational\nConventions of this Document</a><span class=\"breadcrumb\">4.1.3 Class, Macro, and Datatype Names</span>","content":"\n4.1.3 Class, Macro, and Datatype Names\n\nAll named objects other than elements and attributes have one of\nthe following prefixes, which indicate whether the object is a module,\nan attribute class, a model class, a datatype, or a macro: \n\nComponent\nName\nExample\n\nAttribute \nClassesatt.*att.global\nModel \nClassesmodel.*model.biblPart\nMacrosmacro.*macro.paraContent\nDatatypesteidata.*teidata.pointer\n\n\nThe concepts of model class, attribute class, etc. are defined in\n1 The TEI Infrastructure.  Here we simply note some conventions about their\nnaming. \n\nThe following rules apply to attribute class names: Attribute class names take the form att.xxx, where\nxxx is typically an adjective, or a series of adjectives\nseparated by dots, describing a property common to the attributes\nwhich make up the class.Attributes with the same name are considered to have the same\nsemantics, whether the attribute is inherited from a class, or locally\ndefined.\n\n\nThe following rules apply to model class names: Model classes have names beginning model. followed\nby a root name, and zero or more suffixes as described\nbelow.A root name may be the name of an element, generally the\nprototypical parent or sibling for elements which are members of the\nclass.The first suffix should be Part, if the class\nmembers are all children of the element named rootname; or\nLike, if the class members are all siblings of the\nelement named rootname. The rootname global is used to indicate that class\nmembers are permitted anywhere in a TEI document.Additional suffixes may be added, prefixed by a dot, to\ndistinguish subclasses, semantic or structural.\n\nFor example, the class of elements which can form part of a\ndiv is called model.divPart. This class\nincludes as a subclass the elements which can form part of a\ndiv in a spoken text, which is named\nmodel.divPart.spoken\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AB#AB\">4 About These Guidelines</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABSTRUNC#ABSTRUNC\">4.1 Structure and Notational\nConventions of this Document</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABTEI2#ABTEI2\">4.1.4 Design Principles</a>","content":"4.1.4 Design Principles\n\t\nBecause of its roots in the humanities research community, the TEI\nscheme is driven by its original goal of serving the needs of research,\nand is therefore committed to providing a maximum of comprehensibility,\nflexibility, and extensibility.  More specific design goals of the TEI\nhave been that these Guidelines should:\nprovide a standard format for data interchangeprovide guidance for the encoding of texts in this formatsupport the encoding of all kinds of features of all\nkinds of texts studied by researchersbe application independent\nThis has led to a number of important design decisions, such as:\nthe choice of XML and Unicodethe provision of a large predefined tag setencodings for different views of textalternative encodings for the same textual featuresmechanisms for user-defined modification of the scheme\nWe discuss some of these goals in more detail below.\n\nThe goal of creating a common interchange format which is\napplication independent requires the definition of a specific markup\nsyntax as well as the definition of a large set of elements or\nconcepts.  The syntax of the recommendations made in this document\nconforms to the World Wide Web Consortium's XML Recommendation (1 )\nbut their definition is as far\nas possible independent of any particular schema language. \nThe goal of providing guidance for text encoding suggests that\nrecommendations be made as to what textual features should be recorded\nin various situations. However, when selecting certain features for\nencoding in preference to others, these Guidelines have tended to\nprefer generic solutions to specific ones, and to avoid areas where no\nconsensus exists, while attempting to accommodate as many diverse views\nas feasible.  Consequently, the TEI Guidelines make (with relatively\nrare exceptions) no suggestions or restrictions as to the relative\nimportance of textual features.  The philosophy of these Guidelines is\nif you want to encode this feature, do it this way—but very\nfew features are mandatory. In the same spirit, while these Guidelines\nvery rarely require you to encode any particular feature, they do\nrequire you to be honest about which features you have encoded, that\nis, to respect the meanings and usage rules they recommend for\nspecific elements and attributes proposed. \nThe requirement to support all kinds of materials likely to be of\ninterest in research has largely conditioned the development of the\nTEI into a very flexible and modular system. The development of other\nXML vocabularies or standards is typically motivated by the desire to\ncreate a single fully specified encoding scheme for use in a\nwell-defined application domain. By contrast, the TEI is intended for\nuse in a large number of rather ill-defined and often overlapping\ndomains. It achieves its generality by means of the modular\narchitecture described in 1 The TEI Infrastructure which enables each user\nto create a schema appropriate to their needs without compromising the\ninteroperability of their data.\nThe Guidelines have been written largely with a focus on text capture\n(i.e. the representation in electronic form of an already existing copy\ntext in another medium) rather than text creation (where no such copy\ntext exists).  Hence the frequent use of terms like\ntranscription, original,\ncopy text, etc.  However, these Guidelines are\nequally applicable to text creation, although certain elements, such as sourceDesc, and certain attributes, such as the rendition indicators, will not be relevant in this case. \nConcerning text capture the TEI Guidelines do not specify a\nparticular approach to the problem of fidelity to the source text and\nrecoverability of the original; such a choice is the responsibility of\nthe text encoder.  The current version of these Guidelines, however,\nprovides a more fully elaborated set of tags for markup of rhetorical,\nlinguistic, and simple typographic characteristics of the text than for\ndetailed markup of page layout or for fine distinctions among type fonts\nor manuscript hands. It should be noted also that, with the present\nversion of these Guidelines, it is no longer necessarily the case that\nan unmediated version of the source text can be recovered from an\nencoded text simply by removing the markup.\n\t\nIn these Guidelines, no hard and fast distinction is drawn between\nobjective and subjective\ninformation or between representation and\ninterpretation.  These distinctions, though\nwidely made and often useful in narrow, well-defined contexts, are\nperhaps best interpreted as distinctions between issues on which there\nis a scholarly consensus and issues where no such consensus exists.\nSuch consensus has been, and no doubt will be, subject to change.  The\nTEI Guidelines do not make suggestions or restrictions as to which of\nthese features should be encoded.  The use of the terms\ndescriptive and interpretive about different\ntypes of encoding in these Guidelines is not intended to support any\nparticular view on these theoretical issues. Historically, it reflects\na purely practical division of responsibility amongst the original\nworking committees (see further 4.2 Historical Background).  \nIn general, the accuracy and the reliability of the encoding and the\nappropriateness of the interpretation is for the individual user of the\ntext to determine.  The Guidelines provide a means of documenting the\nencoding in such a way that a user of the text can know the reasoning\nbehind that encoding, and the general interpretive decisions on which it\nis based.  The TEI header should be used to document and justify many\nsuch aspects of the encoding, but the choice of TEI elements for a\nparticular feature is in itself a statement about the interpretation\nreached by the encoder.\n\nIn many situations more than one view of a text is needed since no\nabsolute recommendation to embody one specific view of text can apply\nto all texts and all approaches to them.  Within limits, the syntax of\nXML ensures that some encodings can be ignored for some purposes.  To\nenable encoding multiple views, these Guidelines not only treat a\nvariety of textual features, but sometimes provide several alternative\nencodings for what appear to be identical textual phenomena.  These\nGuidelines offer the possibility of encoding many different\nviews of the text, simultaneously if necessary. Where different views\nof the formal structure of a text are required, as opposed to\ndifferent annotations on a single structural view, however, the formal\nsyntax of XML (which requires a single hierarchical view of text\nstructure) poses some problems; recommendations concerning ways of\novercoming or circumventing that restriction are discussed in chapter\n20 Non-hierarchical Structures. \n\nIn brief, the TEI Guidelines define a general-purpose encoding\nscheme which makes it possible to encode different views of text,\npossibly intended for different applications, serving the majority of\nscholarly purposes of text studies in the humanities.  Because no\npredefined encoding scheme can possibly serve all research purposes,\nthe TEI scheme is designed to facilitate both selection from a wide\nrange of predefined markup choices, and the addition of new (non-TEI)\nmarkup options. By providing a formally verifiable means of extending\nthe TEI recommendations, the TEI makes it simple for such\nuser-identified modifications to be incorporated into future releases\nof these Guidelines as they evolve. The underlying mechanisms which\nsupport these aspects of the scheme are introduced in chapter 1 The TEI Infrastructure, and detailed discussions of their use provided in\nchapter 23 Using the TEI. "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AB#AB\">4 About These Guidelines</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABSTRUNC#ABSTRUNC\">4.1 Structure and Notational\nConventions of this Document</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABAPP#ABAPP\">4.1.5 Intended Use</a>","content":"4.1.5 Intended Use\nWe envisage three primary functions for these Guidelines:\nguidance for individual or local practice in text\ncreation and data capture;support of data interchange;support of application-independent local processing.\nThese three functions are so thoroughly interwoven in practice that it\nis hardly possible to address any one without addressing the others.\nHowever, the distinction provides a useful framework for discussing the\npossible role of these Guidelines in work with electronic texts.\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AB#AB\">4 About These Guidelines</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABSTRUNC#ABSTRUNC\">4.1 Structure and Notational\nConventions of this Document</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABAPP#ABAPP\">4.1.5 Intended Use</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABAPP1#ABAPP1\">4.1.5.1 Use in Text Capture and Text Creation</a>","content":"4.1.5.1 Use in Text Capture and Text Creation\nThe description of textual features found in the chapters which\nfollow should provide a useful checklist from which scholars planning to\ncreate electronic texts should select the subset of features suitable\nfor their project.  \nProblems specific to text creation or text\ncapture have not been considered explicitly in\nthis document.  These Guidelines are not concerned with the process by\nwhich a digital text comes into being: it can be typed by hand,\nscanned from a printed book or typescript, read from a typesetter's\ntape, or acquired from another researcher who may have used another\nmarkup scheme (or no explicit markup at all).\nWe include here only some general points which are often raised about\nmarkup and the process of data capture.\nXML can appear distressingly verbose, particularly when (as in these\nGuidelines) the names of tags and attributes are chosen for clarity and\nnot for brevity.  Editor macros and keyboard shortcuts can allow a\ntypist to enter frequently used tags with single keystrokes.\nIt is often possible to transform word-processed or\nscanned text automatically.  Markup-aware software can help with\nmaintaining the hierarchical structure of the document, and display the\ndocument with visual formatting rather than raw tags.\nThe techniques described in chapter 23.3 Customization\nmay be used to develop simpler data capture TEI-conformant schemas,\nfor example with limited numbers of elements, or with shorter names\nfor the tags being used most often.  Documents created with such\nschemas may then be automatically converted to a more elaborated TEI\nform. \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AB#AB\">4 About These Guidelines</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABSTRUNC#ABSTRUNC\">4.1 Structure and Notational\nConventions of this Document</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABAPP#ABAPP\">4.1.5 Intended Use</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABAPP2#ABAPP2\">4.1.5.2 Use for Interchange</a>","content":"4.1.5.2 Use for Interchange\n\nThe TEI format may simply be used as an interchange format,\npermitting projects to share resources even when their local encoding\nschemes differ. If there are n different encoding\nformats, to provide mappings between each possible pair of formats\nrequires n×(n-1) translations; with an\ninterchange format, only 2×n such mappings\nare needed. However, for such translations to be carried out without\nloss of information, the interchange format chosen must be as\nexpressive (in a formal sense) as any of the target formats; this is a\nfurther reason for the TEI's provision of both highly abstract or\ngeneric encodings and highly specific ones.\nTo translate between any pair of encoding schemes implies:\nidentifying the sets of textual features distinguished\nby the two schemes;determining where the two sets of features correspond;creating a suitable set of mappings. \nFor example, to translate from encoding scheme X into the TEI\nscheme:\nMake a list of all the textual features distinguished in\nX. Identify the corresponding feature in the TEI scheme.\nThere are three possibilities for each feature:\nthe feature exists in both X and the TEI scheme;X has a feature which is absent from the TEI scheme;X has a feature which corresponds with more than one\nfeature in the TEI scheme.\nThe first case is a trivial renaming.  The second will require an extension to\nthe TEI scheme, as described in chapter 23.3 Customization.  The third\nis more problematic, but not impossible, provided that a consistent\nchoice can be made (and documented) amongst the alternatives.  \nThe ease with which this translation can be defined will of\ncourse depend on the clarity with which scheme X\nrepresents the features it encodes.\nTranslating from the TEI into scheme X follows the same pattern,\nexcept that if a TEI feature has no equivalent in X, and X cannot be\nextended, information must be lost in translation.\nThe rules defining conformance to these Guidelines are\ngiven in some detail in chapter 23.4 Conformance.\nThe basic principles informing those rules may be summarized as\nfollows:\nThe TEI abstract model (that is, the set of\ncategorical distinctions which it defines in the prose of the Guidelines) must be respected. The\ncorrespondence between a tag X and the semantic function assigned to\nit by these Guidelines may not be changed; such changes are known\nas tag abuse and strongly discouraged.A TEI document must be expressed as a valid XML-conformant\ndocument which uses the TEI namespace appropriately. If, for example,\nthe document encodes features not provided by these Guidelines, such\nextensions should not be associated with the TEI namespace.  It must be possible to validate a TEI document against a schema\nderived from these Guidelines, possibly with extensions provided in\nthe recommended manner. \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AB#AB\">4 About These Guidelines</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABSTRUNC#ABSTRUNC\">4.1 Structure and Notational\nConventions of this Document</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABAPP#ABAPP\">4.1.5 Intended Use</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABAPP3#ABAPP3\">4.1.5.3 Use for Local Processing</a>","content":"4.1.5.3 Use for Local Processing\nMachine-readable text can be manipulated in many ways; some users:\nedit texts (e.g. word processors, syntax-directed\neditors) edit, display, and link texts in hypertext systemsformat and print texts using desktop publishing systems,\nor batch-oriented formatting programs load texts into free-text retrieval databases or\nconventional databases unload texts from databases as search results or for\nexport to other software search texts for words or phrases perform content analysis on texts collate texts for critical editions scan texts for automatic indexing or similar purposesparse texts linguistically analyze texts stylistically scan verse texts metrically link text and images  \nThese applications cover a wide range of likely uses but are by no\nmeans exhaustive.  The aim has been to make the TEI Guidelines useful\nfor encoding the same texts for different purposes.  We have avoided\nanything which would restrict the use of the text for other\napplications.  We have also tried not to omit anything essential to any\nsingle application.\nBecause the TEI format is expressed using XML, \nalmost any modern text processing system is able to process it, and\nnew TEI-aware software systems are able to build on a solid base\nof existing software libraries.  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AB#AB\">4 About These Guidelines</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABTEI#ABTEI\">4.2 Historical Background</a>","content":"4.2 Historical Background\n\nThe Text Encoding Initiative grew out of a planning conference\nsponsored by the Association for Computers and the Humanities (ACH) and\nfunded by the U.S.  National Endowment for the Humanities (NEH), which\nwas held at Vassar College in November 1987.  At this conference some\nthirty representatives of text archives, scholarly societies, and\nresearch projects met to discuss the feasibility of a standard encoding\nscheme and to make recommendations for its scope, structure, content,\nand drafting.  During the conference, the Association for Computational\nLinguistics and the Association for Literary and Linguistic Computing\nagreed to join ACH as sponsors of a project to develop these Guidelines.\nThe outcome of the conference was a set of principles (the\nPoughkeepsie Principles, 1 ), which\ndetermined the further course of the project.\n\n\nThe Text Encoding Initiative project began in June 1988 with funding\nfrom the NEH, soon followed by further funding from the Commission of\nthe European Communities, the Andrew W. Mellon Foundation, and the\nSocial Science and Humanities Research Council of Canada.  Four working\ncommittees, composed of distinguished scholars and researchers from both\nEurope and North America, were named to deal with problems of text\ndocumentation, \ntext representation, text analysis and interpretation,  and\nmetalanguage and syntax issues.  Each committee was charged with the task of identifying\nsignificant particularities in a range of texts,\nand two editors appointed to harmonize the resulting recommendations. \nA first draft version (P1, with the P here and subsequently\nstanding for Proposal) of the Guidelines was distributed in July\n1990 under the title Guidelines for the Encoding and Interchange\nof Machine-Readable Texts. \nExtensive public comment and further work on areas not covered in\nthis version resulted in the drafting of a revised version, TEI P2,\ndistribution of which began in April 1992.  This version included\nsubstantial amounts of new material, resulting from work carried out by\nseveral specialist working groups, set up in 1990 and 1991 to propose\nextensions and revisions to the text of P1.  The overall organization,\nboth of the draft itself and of the scheme it describes, was entirely\nrevised and reorganized in response to public comment on the first\ndraft.\nIn June 1993 an Advisory Board met to review the current state of\nthe TEI Guidelines, and recommended the formal publication of the work\ndone to that time.  That version of the TEI Guidelines, TEI P3,\nconsolidated the work published as parts of TEI P2, along with some\nadditional new material and was finally published in May of 1994\nwithout the label draft, thus marking the\nconclusion of the initial development work.\n\nIn February of 1998 the World Wide Web Consortium issued a final\nRecommendation for the Extensible Markup Language, XML.2\nFollowing the rapid take-up of this new standard metalanguage, it\nbecame evident that the TEI Guidelines (which had been published\noriginally as an SGML application) needed to be re-expressed in this\nnew formalism if they were to survive. The TEI editors, with\nabundant assistance from others who had developed and used TEI,\ndeveloped an update plan, and made tentative decisions on relevant\nsyntactic issues. \n\nIn January of 1999, the University of Virginia and the University\nof Bergen formally proposed the creation of an international\nmembership organization, to be known as the TEI Consortium, which\nwould maintain, develop, and promote the TEI. Shortly thereafter, two\nfurther institutions with longstanding ties to the TEI (Brown\nUniversity and Oxford University) joined them in formulating an\nAgreement to Establish a Consortium for the Maintenance of the Text\nEncoding Initiative (1 ), on which basis the TEI\nConsortium was eventually established and incorporated as a\nnot-for-profit legal entity at the end of the year 2000. The first\nmembers of the new TEI Board took office during January of 2001. \n\t\t\t\t\nThe TEI Consortium was established in order to maintain a permanent\nhome for the TEI as a democratically constituted, academically and\neconomically independent, self-sustaining, non-profit organization. In\naddition, the TEI Consortium was intended to foster a broad-based user\ncommunity with sustained involvement in the future development and\nwidespread use of the TEI Guidelines (1 ). \n\nTo oversee and manage the revision process in collaboration with\nthe TEI Editors, the TEI Board formed a Technical Council, with a\nmembership elected from the TEI user community. The Council met for\nthe first time in January 2002 at King's College London. Its first\ntask was to oversee production of an XML version\nof the TEI Guidelines, updating P3 to enable users to\nwork with the emerging XML toolset. This, the P4 version of the Guidelines,\nwas published in June 2002. It was essentially an XML version of P3,\nmaking no substantive changes to the constraints expressed in the\nschemas apart from those necessitated by the shift to XML, and\nchanging only corrigible errors identified in the prose of the P3\nGuidelines. However, given that P3 had by this time been in steady use\nsince 1994, it was clear that a substantial revision of its content\nwas necessary, and work began immediately on the P5 version of the\nGuidelines. This was planned as a thorough overhaul, involving a\npublic call for features and new development in a number of important\nareas not previously addressed including character encoding, graphics,\nmanuscript description, biographical and geographical data, and the\nencoding language in which the TEI Guidelines themselves are written. \n\nThe members of the TEI Council and its associated workgroups are\nlisted in 3 Preface and Acknowledgments. In preparing this edition, they have\nbeen attentive to the requirements and practice of the widest possible\nrange of TEI users, who are now to be found in many different research\ncommunities across the world, and have been largely instrumental in\ntransforming the TEI from a grant-supported international research\nproject into a self-sustaining community-based effort. One effect\nof the incorporation of the TEI has been the legal requirement to hold\nan annual meeting of the Consortium members; these meetings have\nemerged as an invaluable opportunity to sustain and reinforce that\nsense of community. \nThe present\nwork is therefore the result of a sustained period of consultation,\ndrafting, and revision, with input from many different\nexperts. Whatever merits it may have are to be attributed to them; the\nEditors accept responsibility only for the errors remaining. \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AB#AB\">4 About These Guidelines</a><a class=\"breadcrumb\" href=\"p5.xml?id=ABTEI4#ABTEI4\">4.3 Future Developments and Version Numbers</a>","content":"4.3 Future Developments and Version Numbers\n\nThe encoding recommended by this document may be used without fear\nthat future versions of the TEI scheme will be inconsistent with it in\nfundamental ways.  The TEI will be sensitive, in revising these\nGuidelines, to the possible problems which revision might pose for those\nwho are already using this version of these Guidelines.  \n\nWith TEI P5, a version numbering system is introduced following \n  the pattern specified by \n    the Unicode Consortium: the first digit identifies a major \n  version number, the second digit a minor version number, and the \n  third digit a sub-minor version number. The TEI undertakes that no \n  change will be made to the formal expression of these Guidelines \n  (that is, a TEI schema, as defined in 23.4 Conformance) such that \n  documents conformant to a\ngiven major numbered release cease to be compatible with a subsequent\nrelease of the same major number. Moreover, as far as possible, new\nminor releases will be made only for the purpose of adding new\ncompatible features, or of correcting errors in existing features.\n \n  \nThe Guidelines are currently maintained as an open source project\n  on the Github site https://github.com/TEIC/TEI, from which released\n  and development versions may be freely downloaded. See Previous Releases of P5 for\n  information on how to find specific versions of TEI releases (Guidelines,\n  schemas etc.). Notice of errors detected and enhancements requested may \n  be submitted at https://github.com/TEIC/TEI/issues.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a>","content":"\n\n5 A Gentle Introduction to XML\n\nThe encoding scheme defined by these Guidelines is formulated as an\napplication of the Extensible Markup Language (XML) (1 ). XML is widely used for\nthe definition of device-independent, system-independent methods of\nstoring and processing texts in electronic form. It is now also the\ninterchange and communication format used by many applications on the\nWorld Wide Web. In the present chapter we informally introduce some of\nits basic concepts and attempt to explain to the reader encountering\nthem for the first time how and why they are used in the TEI\nscheme. More detailed technical accounts of TEI practice in this\nrespect are provided in chapters 23 Using the TEI, 1 The TEI Infrastructure, and 22 Documentation Elements of these Guidelines.\n\nStrictly speaking, XML is a metalanguage, that is, a\nlanguage used to describe other languages, in this case,\nmarkup languages. Historically, the word\nmarkup has been used to describe annotation or other\nmarks within a text intended to instruct a compositor or typist how a\nparticular passage should be printed or laid out. Examples include\nwavy underlining to indicate boldface, special symbols for passages to\nbe omitted or printed in a particular font, and so forth. As the\nformatting and printing of texts was automated, the term was extended\nto cover all sorts of special codes inserted into electronic texts to\ngovern formatting, printing, or other processing.\nGeneralizing from that sense, we define markup, or\n(synonymously) encoding, as any means of making explicit\nan interpretation of a text. Of course, all printed texts are\nimplicitly encoded (or marked up) in this sense: punctuation marks,\ncapitalization, disposition of letters around the page, even\nthe spaces between words all might be regarded as a kind of markup, the\npurpose of which is to help the human reader determine where one word\nends and another begins, or how to identify gross structural features\nsuch as headings or simple syntactic units such as dependent clauses\nor sentences. Encoding a text for computer processing is, in\nprinciple, like transcribing a manuscript from scriptio continua1; it is a process of making explicit what is\nconjectural or implicit, a process of directing the user as to how the\ncontent of the text should be (or has been) interpreted.\n\nBy markup language we mean a set of markup conventions\nused together for encoding texts. A markup language must specify how\nmarkup is to be distinguished from text, what markup is allowed, what\nmarkup is required, and what the markup means. XML provides the means\nfor doing the first three; documentation such as these Guidelines is\nrequired for the last.\n\nThe present chapter attempts to give an informal introduction to\nthose parts of XML of which a proper understanding is necessary to\nmake best use of these Guidelines. The interested reader should also\nconsult one or more of the many excellent introductory textbooks and\nweb sites now available on the subject.2\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG11#SG11\">5.1 What's Special about XML?</a>","content":"5.1 What's Special about XML?\n\nXML has three highly distinctive advantages: \n\nit places emphasis on descriptive rather than\nprocedural markup;\nit distinguishes the concepts of syntactic correctness and of\nvalidity with respect to a document type definition;\nit is independent of any one hardware or software\nsystem. These three aspects are discussed briefly below,\nand then in more depth in the remainder of this chapter.\n\nXML is frequently compared with HTML, the language in which web\npages have generally been written, which\nshares some of the above characteristics. Compared with HTML, however,\nXML has some other important features:\n\nXML is extensible: it does not consist of a fixed set of\ntags;XML documents must be well-formed according to a defined\nsyntax;an XML document can be formally validated against a set of schema rules for consistent application;XML is more interested in the meaning of data than in its\npresentation. \n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG11#SG11\">5.1 What's Special about XML?</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG111#SG111\">5.1.1 Descriptive Markup</a>","content":"5.1.1 Descriptive Markup\n\nIn a descriptive markup system, the markup codes used do little\nmore than categorize parts of a document. Markup codes such as\npara or \\end{list} simply identify a portion\nof a document and assert of it that the following item is a\nparagraph, or this is the end of the most recently begun\nlist, etc. By contrast, a procedural markup system defines what\nprocessing is to be carried out at particular points in a document:\ncall procedure PARA with parameters 42, b, and x here or move\nthe left margin 2 quads left, move the right margin 2 quads right,\nskip down one line, and go to the new left margin, etc. In XML,\nthe instructions needed to process a document for some particular\npurpose (for example, to format it) are sharply distinguished from the\nmarkup used to describe it.\n\nUsually, the markup or other information needed to process a\ndocument will be maintained separately from the document itself,\ntypically in a distinct document called a stylesheet,\nthough it may do much more than simply define the rendition or visual\nappearance of a document.3\n\nWhen descriptive markup is used, the same document can\nreadily be processed in many different ways, using only those parts of\nit which are considered relevant. For example, a content analysis\nprogram might disregard entirely the footnotes embedded in an\nannotated text, while a formatting program might extract and collect\nthem all together for printing at the end of each chapter. Different\nkinds of processing can be carried out with the same part of a file.\nFor example, one program might extract names of persons and places\nfrom a document to create an index or database, while another,\noperating on the same text, but using a different stylesheet, might\nprint names of persons and places in a distinctive typeface.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG11#SG11\">5.1 What's Special about XML?</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG112#SG112\">5.1.2 Types of Document</a>","content":"5.1.2 Types of Document \n\nA second key aspect of XML is its notion of a document\ntype: documents are regarded as having types, just as other\nobjects processed by computers do. The type of a document is formally\ndefined by its constituent parts and their structure. The definition\nof a report, for example, might be that it\nconsisted of a title and possibly an\nauthor, followed by an\nabstract and a sequence of one or more\nparagraphs. Anything lacking a title, according\nto this formal definition, would not formally be a report, and neither\nwould a sequence of paragraphs followed by an abstract, whatever other\nreport-like characteristics these might have for the human reader.\n\nIf documents are of known types, a special-purpose program (called\na parser), once provided with an unambiguous definition\nof a document type, can check that any document claiming to be of \nthat type does in fact conform to the specification. A parser\ncan check that all elements specified for a particular\ndocument type are present and no others, that they are combined in appropriate ways,\ncorrectly ordered, and so forth. More significantly, different\ndocuments of the same type can be processed in a uniform way. Programs\ncan be written which take advantage of the knowledge encapsulated in\nthe document type information, and which can thus behave in a\nmore intelligent fashion.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG11#SG11\">5.1 What's Special about XML?</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG113#SG113\">5.1.3 Data Independence</a>","content":"5.1.3 Data Independence\n\nA basic design goal of XML is to ensure that documents encoded\naccording to its provisions can move from one hardware and software\nenvironment to another without loss of information. The two features\ndiscussed so far both address this requirement at an abstract level;\nthe third feature addresses it at the level of the strings of data\ncharacters that make up a document. All XML documents,\nwhatever languages or writing systems they employ, use the same\nunderlying character encoding (that is, the same method of\nrepresenting as binary data those graphic forms making up a particular\nwriting system).4 This encoding is defined by an international\nstandard,5 which is implemented by a universal character set\nmaintained by an industry group called the Unicode Consortium, and\nknown as Unicode.6 Unicode \nprovides a standardized way of representing any of the many thousands of\ndiscrete symbols making up the world's writing systems, past and\npresent. \n\n\nMost modern computing systems now support Unicode directly; for\nthose which do not, XML provides a mechanism for the indirect\nrepresentation of single characters by means of\ntheir character number, known as character references; see further\n5.7.1 Character References.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG12#SG12\">5.2 Textual Structures</a>","content":"5.2 Textual Structures\nA text is not an undifferentiated sequence of words, much less of\nbytes. For different purposes, it may be divided into many different\nunits, of different types or sizes. A prose text such as this one\nmight be divided into sections, chapters, paragraphs, and sentences. A\nverse text might be divided into cantos, stanzas, and lines. Once\nprinted, sequences of prose and verse might be divided into volumes,\ngatherings, and pages.\n\nStructural units of this kind are most often used to identify\nspecific locations or refer to points within a text (the third\nsentence of the second paragraph in chapter ten; canto 10, line\n1234; page 412, etc.) but they may also be used to\nsubdivide a text into meaningful fragments for analytic purposes\n(is the average sentence length of section 2 different from that of\nsection 5? how many paragraphs separate each occurrence of the\nword nature?  how many pages?).\nOther structural units are more clearly analytic, in that they\ncharacterize a section of a text. A dramatic text might regard each\nspeech by a different character as a unit of one kind, and stage\ndirections or pieces of action as units of another kind. Such an\nanalysis is less useful for locating parts of the text (the 93rd\nspeech by Horatio in Act 2) than for facilitating comparisons\nbetween the words used by one character and those of another, or those\nused by the same character at different points of the play.\n\nIn a prose text one might similarly wish to regard as units of\ndifferent types passages in direct or indirect speech, passages\nemploying different stylistic registers (narrative, polemic,\ncommentary, argument, etc.), passages of different authorship and so\nforth. And for certain types of analysis (most notably textual\ncriticism) the physical appearance of one particular printed or\nmanuscript source may be of importance:  paradoxically, one may wish to\nuse descriptive markup to describe presentational features such as\ntypeface, line breaks, use of whitespace and so forth.\n\nThese textual structures overlap with one another in complex and\nunpredictable ways. Particularly when dealing with texts as\ninstantiated by paper technology, the reader needs to be aware of both\nthe physical organization of the book and the logical structure of the\nwork it contains. Many great works (Sterne's Tristram\nShandy for example) cannot be fully appreciated without an\nawareness of the interplay between narrative units (such as chapters\nor paragraphs) and presentational ones (such as page divisions). For\nmany types of research, the interplay among different levels\nof analysis is crucial: the extent to which syntactic structure\nand narrative structure mesh, or fail to mesh, for example, or the\nextent to which phonological structures reflect morphology."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG13#SG13\">5.3 XML Structures</a>","content":"5.3 XML Structures\n\nThis section describes the simple and consistent mechanism for the\nmarkup or identification of textual structure provided by XML. It\nalso describes the methods XML provides for the expression of rules\ndefining how units of textual structure can meaningfully be combined\nin a text.\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG13#SG13\">5.3 XML Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG131#SG131\">5.3.1 Elements</a>","content":"5.3.1 Elements \n\nThe technical term used in XML for a textual unit, viewed as a\nstructural component, is element. Different types of\nelements are given different names, but XML provides no way of\nexpressing the meaning of a particular type of element, other than its\nrelationship to other element types. That is, all one can say about\nan element called (say) blort is that instances of\nit may (or may not) occur within elements of type farble, and\nthat it may (or may not) be decomposed into elements of type\nblortette. It should be stressed that XML is entirely\nunconcerned with the semantics of textual elements,\nbecause these are considered to be application dependent. It is up to\nthe creators of XML vocabularies (such as these Guidelines) to choose\nintelligible element names and to define their\nintended use in text markup. That is the chief purpose of documents\nsuch as the TEI Guidelines. From the need to choose element names\nindicative of function comes the technical term for the name of an\nelement type, which is generic identifier, or GI.\nWithin a marked-up text (a document instance), each\nelement must be explicitly marked or tagged in some way. This is done\nby inserting a tag at the beginning of the element (a\nstart-tag) and another at its end (an\nend-tag). The start- and end-tag pair are used to bracket\noff element occurrences within the running text, in rather the\nsame way as different types of parentheses or quotation marks are used\nin conventional punctuation. For example, a quotation element in a\ntext might be tagged as follows:\nbibliography\n\nAs this example shows, a start-tag takes the form quote,\nwhere the opening angle bracket indicates the start of the start-tag,\nquote is the generic identifier of the element that is being\ndelimited, and the closing angle bracket indicates the end of the start-tag.\nAn end-tag takes an identical form, except that the opening angle\nbracket is followed by a solidus (slash) character, so that the\ncorresponding end-tag is /quote.7 The material between\nthe start-tag and the end-tag (the string of words This is the\nsilliest stuff that ere I heard of in the example above) is known\nas the content of the element. Sometimes there may be\nnothing between the start and the end-tag; in this case the two may\noptionally be merged together into a single composite tag with the\nsolidus at the end, like this: quote/. "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG13#SG13\">5.3 XML Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG132#SG132\">5.3.2 Content Models: an Example</a>","content":"5.3.2 Content Models: an Example\n\nAn element may be empty, that is, it may have no\ncontent at all, or it may contain just a sequence of characters with\nno other elements. Often, however, elements of one type will\nbe embedded (contained entirely) within elements of a\ndifferent type.\n\nTo illustrate this, we will consider a very simple structural\nmodel. Let us assume that we wish to identify within an anthology\nonly poems, their headings, and the stanzas and lines of which they are\ncomposed. In XML terms, our document type is the\nanthology, and it consists of a series of\npoems. Each poem has embedded within it one element, a\nheading, and several occurrences of another, a\nstanza, each stanza having embedded within it a number of\nline elements. Fully marked up, a text conforming to\nthis model might appear as follows:\nbibliography\nIt should be stressed that this example does not use\nthe names proposed for corresponding elements elsewhere\nin these Guidelines: the above is thus not a valid TEI\ndocument.8 It will, however, serve as an introduction to the basic notions of XML.\nWhitespace and line breaks have been added to the example for the\nsake of visual clarity only; they have no particular significance in the\nXML encoding itself. Also, the line\n\nis an XML comment and is not treated as part of the text.\nAs it stands, the above example is what is known as a\nwell-formed XML document because it obeys the following simple rules:\n\nthere is a single element\nenclosing the whole document: this is known as the root\nelement (anthology in our case);\neach element is completely contained by the root element,\nor by an element that is so contained; elements do not partially\noverlap one another;\na tag explicitly marks the start and end of each element.\n\n\nA well-formed XML document can be processed in a number of useful\nways. A simple indexing program could extract only the relevant text\nelements in order to make a list of headings, first lines, or words\nused in the poem text; a simple formatting program could insert blank\nlines between stanzas, perhaps indenting the first line of each, or\ninserting a stanza number. Different parts of each poem could be\ntypeset in different ways. A more ambitious analytic program could\nrelate the use of punctuation marks to stanzaic and metrical\ndivisions.9 Scholars wishing to see the implications of\nchanging the stanza or line divisions chosen by the editor of this\npoem can do so simply by altering the position of the tags. And of\ncourse, the text as presented above can be transported from one\ncomputer to another and processed by any program (or person) capable\nof making sense of the tags embedded within it with no need for the\nsort of transformations and translations needed for files which have\nbeen saved in one or other of the proprietary formats preferred by\nmost word-processing programs.\n\nAs we noted above, one of the attractions of XML is that it enables\nus to apply our own names for the elements rather than requiring us\nalways to use names predefined by other agencies. Clearly, however, if\nwe wish to exchange our poems with others, or to include poems others\nhave marked up in our anthology, we will need to know a bit more about\nthe names used for the tags. The means that XML provides for this is\ncalled a namespace. In our simple example, the tags just\ncontain a simple name. As we shall see, it is also possible to use\ntags that include a qualified name, that is, a name with\nan optional prefix identifying the set of names to which it\nbelongs. For example, we have defined an element line for the purpose of marking lines of\nverse. Another person might, however, define an element called line for the purpose of marking typographic\nlines, or drawn lines. Because of these different meanings, if we wish\nto share data it will be necessary to distinguish the two line\ncomponents in our marked-up texts. This is achieved by including a\nnamespace prefix within the markup, for example like\nthis: \n\nThis feature is particularly important if we have different\ndefinitions of what a line is, of course, but\nthere are many occasions when it is useful to distinguish groups of\ntags belonging to different markup vocabularies;\nwe discuss this further below (5.7.2 Namespaces). One\nparticularly useful namespace prefix is predefined for XML: it is\nxml and we will see examples of its use below.\n\nNamespaces allow us to represent the fact that a name belongs to a\ngroup of names, but don't allow us to do much more by way of checking\nthe integrity or accuracy of our tagging. Simple well-formedness alone\nis not enough for the full range of what might be useful in marking up\na document. It might well be useful if, in the process of preparing\nour digital anthology, a computer system could check some basic rules\nabout how stanzas, lines, and headings can sensibly co-occur in a\ndocument. It would be even more useful if the system could check that\nstanzas are always tagged stanza and not occasionally\ncanto or Stanza. An XML document in which such\nrules have been checked is technically known as a valid\ndocument, and the ability to perform such validation is one of the key\nadvantages of using XML. To carry this out, some way of formally\nstating the criteria for successful validation is necessary: in XML\nthis formal statement is provided by an additional document known\nas a schema.10\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG14#SG14\">5.4 Validating a Document's Structure</a>","content":"5.4 Validating a Document's Structure\n\nThe design of a schema may be as lax or as restrictive as the\noccasion warrants. A balance must be struck between the convenience\nof following simple rules and the complexity of handling real\ntexts. This is particularly the case when the rules being defined\nrelate to texts that already exist: the designer may have only the\nhaziest of notions as to an ancient text's original purpose or meaning\nand hence find it very difficult to specify consistent rules about its\nstructure. On the other hand, where a new text is being prepared to\nan exact specification, for entry into a textual database\nof some kind for example, the more precisely stated the rules, the better they can\nbe enforced. Even in marking up an existing text, a restrictive set of schema rules may be beneficial, especially when applied to test a particular view or hypothesis about the text. A schema\ndesigned for use by a small project or team is likely to take a\ndifferent position on such issues than one intended for use by a large\nand possibly fragmented community. It is\nimportant to remember that every schema results\nfrom an interpretation of a text. There is no single schema \nencompassing the absolute truth about any text, although it may\nbe convenient to privilege some schemas above others for particular\ntypes of analysis.\n\nXML is widely used in environments where uniformity of document\nstructure is a major desideratum. In the production of technical\ndocumentation, for example, it is of major importance that sections\nand subsections should be properly nested, that cross-references\nshould be properly resolved and so forth. In such situations,\ndocuments are seen as raw material to match against predefined sets\nof rules. As discussed above, however, the use of simple rules can\nalso greatly simplify the task of tagging accurately elements of less\nrigidly constrained texts. By making these schema rules explicit, scholars reduce their own burdens with consistently marking up and verifying the\nelectronic text. By defining and sharing their schema rules, scholars openly express a project-specific interpretation of the structure and significant particularities of the\ntext being encoded.\n  Schema validation for XML is usually written in the RELAX NG language (http://relaxng.org/) originally\n    developed within the OASIS Technical Committee and now an\n    ISO standard11, though other older methods include the Document Type Definition\n    (DTD) language which XML inherited from SGML and the XML Schema language (https://www.w3.org/XML/Schema) defined by the W3C.12 In this chapter, and throughout these\n    Guidelines, we give examples using the compact\n      syntax of RELAX NG for ease of reading. The specifications for the TEI Guidelines are first expressed in the TEI language itself and a RELAX NG schema is generated from them for processing convenience. Details about schema customization using the TEI ODD language are addressed in 22 Documentation Elements, 23.3 Customization and 23.5 Implementation of an ODD System.  \n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG14#SG14\">5.4 Validating a Document's Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG141bis#SG141bis\">5.4.1 An Example Schema</a>","content":"5.4.1 An Example Schema\nFor the purposes of illustrating how a schema works to restrict how XML may be written, we use the RELAX NG compact syntax in what follows. The following schema can be used to validate our example poem:\n\n\n\nNote that this is not the only way in which a RELAX NG schema might\nbe written; we have adopted this idiom, however, because it\nmatches that used throughout the rest of these Guidelines.\n\nA RELAX NG schema expresses rules about the possible structure of a\ndocument in terms of patterns; that is, it defines a\nnumber of named patterns, each of which acts as a kind of template\nagainst which an input document can be matched. The meaning of a\npattern is expressed in a schema either by reference to other patterns, or to\na small number of fundamental built-in concepts, as we shall see. In\nthe example above, the word to the left of the equals sign is the\npattern's name, and the material following it declares a meaning for\nthe pattern. Patterns may also be of particular types; the ones that\ninterest us here are called element patterns and\nattribute patterns. In this example we see definitions\nfor five element patterns. Note that we have used similar names for\nthe pattern and the element which the pattern describes: so, for\nexample, the line anthology_p = element anthology {poem_p+} defines an element pattern called anthology_p,\nthe value of which defines an element called\nanthology. These naming conventions are \narbitrary; we could use the same name for the pattern as\nfor the element, but we want to make clear that the two are syntactically quite distinct. The\nname, or generic identifier, of the element follows the\nword element, and the content model for the\nelement is given within the curly braces following that. Each of\nthese parts is discussed further below.\n\nThe last line of the schema above tells a RELAX NG validator which\nelement (or elements) in a document can be used as the root element:\nin our case only anthology. This enables\nthe validator to detect whether a particular document is well-formed\nbut incomplete; it also simplifies the processing task by providing an\nentry point.\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG14#SG14\">5.4 Validating a Document's Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG141bis#SG141bis\">5.4.1 An Example Schema</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG141x#SG141x\">5.4.1.1 Generic Identifier</a>","content":"5.4.1.1 Generic Identifier\nFollowing the word element each pattern declaration gives\nthe generic identifier (often abbreviated to GI) of the element being\ndefined, for example poem,\nheading, etc. A GI may contain letters,\ndigits, hyphens, underscore characters, or full stops, but must begin\nwith a letter and may not contain a space.13 Uppercase and lowercase letters are quite\ndistinct: an element with the GI foo is\nnot the same as an element with the GI Foo; the root element of a TEI-conformant\ndocument is TEI, not tei."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG14#SG14\">5.4 Validating a Document's Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG141bis#SG141bis\">5.4.1 An Example Schema</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG143#SG143\">5.4.1.2 Content Model</a>","content":"5.4.1.2 Content Model\nThe second part of each declaration, enclosed in curly braces, is\ncalled the content model of the element being defined, because it\nspecifies what may legitimately be contained within it. In RELAX NG,\nthe content model is defined in terms of other patterns, either by\nembedding them, or (as in our examples above) by naming or referring\nto them. The RELAX NG compact syntax also uses a small number of\nreserved words to identify other possible contents for an element, of which by\nfar the most commonly encountered is text, as in this\nexample: it means that the element being defined may contain any valid\ncharacter data, but no elements. If an XML document is thought of as a structure\nlike a family tree, with a single ancestor at the top (in our case,\nthis would be anthology), then almost always, following the\nbranches of the tree downwards (for example, from anthology\nto poem to stanza to line and\nheading) will lead eventually to text. In our example,\nheading and line are so defined, since their content\nmodels say text only and name no embedded elements."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG14#SG14\">5.4 Validating a Document's Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG141bis#SG141bis\">5.4.1 An Example Schema</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG144#SG144\">5.4.1.3 Occurrence Indicators</a>","content":"5.4.1.3 Occurrence Indicators\n\nThe declaration for stanza in the example above states\nthat a stanza consists of one or more lines. It uses an\noccurrence indicator (the plus sign) to indicate how many\ntimes something matching the pattern line_p may be\nrepeated. There are three occurrence indicators: the plus sign, the\nquestion mark, and the asterisk or star. The plus sign means that\nthe pattern can match one or more times; the\nquestion mark means that it may match at most once but is not\nmandatory; the star means that the pattern concerned is not\nmandatory, but may match more than once. Thus, if the content model for\nstanza were {line_p*}, stanzas with no lines\nwould be possible as well as those with more than one line. If it\nwere {line_p?}, again empty stanzas would be\npermitted, but no stanza could have more than a single line. The\ndeclaration for poem in the example above thus states that a\npoem cannot have more than one heading, but may have none,\nand that it must have at least one stanza and may have\nseveral.  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG14#SG14\">5.4 Validating a Document's Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG141bis#SG141bis\">5.4.1 An Example Schema</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG145#SG145\">5.4.1.4 Connectors</a>","content":"5.4.1.4 Connectors\nThe content model {heading_p?, stanza_p+} contains more than\none component, and thus needs additionally to specify the order in\nwhich these patterns (heading_p and stanza_p) may appear.\nThis ordering is determined by the connector (the comma)\nused between its components. The\ncomma connector indicates that the patterns concerned must appear in\nthe sequence given. Another commonly encountered connector is the\nvertical bar, representing alternation. If the comma in this example were replaced by a vertical\nbar, then a poem would consist of either a heading or just\nstanzas—but not both!"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG14#SG14\">5.4 Validating a Document's Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG141bis#SG141bis\">5.4.1 An Example Schema</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG146#SG146\">5.4.1.5 Groups</a>","content":"5.4.1.5 Groups\nIn our example so far, the components of each content model have\nbeen either single patterns or text. We often need to define content models in more complicated ways, in which the components\nare lists of patterns, combined by connectors. Such lists may also be\nmodified by occurrence indicators and themselves combined by\nconnectors. To demonstrate these facilities, let us expand our\nexample so that it may include non-stanzaic types of verse. For the sake of\ndemonstration, we will categorize poems as one of the following:\nstanzaic, couplets, or blank\n(or stichic). A blank-verse poem consists simply of\nlines (we ignore the possibility of verse paragraphs for the\nmoment),  so no additional elements need be defined\nfor it. We could define a couplet as a firstLine followed by a\n  secondLine, which distinction might be useful in a study of rhyme schemes.14\n  \n\n\t\n\t\nThe patterns firstLine_p and secondLine_p define elements\nfirstLine and secondLine; these will have exactly\nthe same content model as the existing line element. We will\ntherefore add the following two lines to our example schema: \nNext, we can change the declaration for the poem element to\ninclude all three possibilities:  That is, a poem\nconsists of an optional heading, followed by one or several stanzas,\nor one or several couplets, or one or several lines. Note the\ndifference between this declaration and the following:  The second version,\nby applying the occurrence indicator to the group rather than to each\nelement within it, would allow a single poem to contain a mixture\nof stanzas, couplets, and lines.\nA group of this kind can contain text as well as named\nelements: this combination, known as mixed content,\nallows for elements in which the sub-components appear with\nintervening stretches of character data. For example, if we wished to\nmark place names wherever they appear inside our verse lines, then,\nassuming we have also added a pattern for the\nname element, we could change the definition for\nline to \n\n\nSome XML schema languages place no constraints on the way that\nmixed content models may be defined, but in the XML DTD language, when\ntext appears with other elements in a content model, it\nmust always appear as the first option in an alternation; it may\nappear once only, and in the outermost model group; and if the group\ncontaining it is repeated, the star operator must be used. Although\nthese constraints are not strictly necessary in RELAX NG schemas, all TEI content models currently obey them.\n\nQuite complex models can be built in this way, to match\nthe structural complexity of many types of text. For example, consider the case of stanzaic verse in which a refrain or\nchorus appears. Like a stanza, a refrain consists of repetitions of\nthe line element. A refrain can appear at the start of a poem only,\nor as an optional addition following each stanza. This could be\nexpressed by a pattern such as the following:\n\n\nThat is, a poem consists of an optional heading, followed by either a\nsequence of lines or an unnamed group, which starts with an optional\nrefrain and is followed by one or more occurrences of another group, each\nmember of which is composed of a stanza followed by an optional\nrefrain. A sequence such as refrain - stanza - stanza -\nrefrain follows this pattern, as does the sequence\nstanza - refrain - stanza - refrain. The\nsequence refrain - refrain - stanza - stanza\ndoes not, however, and neither does the sequence stanza -\nrefrain - refrain - stanza. Among other conditions made\nexplicit by this content model are the requirements that at least one\nstanza must appear in a poem, if it is not composed simply of lines,\nand that if there is both a heading and a stanza they must appear in\nthat order.\nNote that the apparent complexity of this model derives from the\nconstraints expressed informally above. A simpler model, such as\n would not enforce any of them, and would therefore permit\nsuch anomalies as a poem consisting only of refrains, or an arbitrary mixture of\nlines and refrains.\n\n\n\n  It is beyond the scope of this \"Gentle Introduction to XML\" to provide a complete orientation to schema writing with Relax NG, but interested readers may wish to consult more thorough tutorials on the subject.15 The examples and explanation provided here may be helpful to consult when reading the schema declarations posted for groupings of TEI elements that share the same content model, such as macro.phraseSeq, whose declaration features an example of mixed text and element content. Due to the complexity of the TEI schema as expressed in Relax NG, it is best to customize its content model in TEI itself by writing an ODD, as discussed in 23.5 Implementation of an ODD System.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG152#SG152\">5.5 Complicating the Issue</a>","content":"5.5 Complicating the Issue\nIn the simple cases described so far, we have assumed that one\ncan identify the immediate constituents of every element in a\ntextual structure. A poem consists of stanzas, and an anthology\nconsists of poems. Stanzas do not float around unattached to poems or\ncombined into some other unrelated element; a poem cannot contain an\nanthology. All the elements of a given document type may be arranged\ninto a hierarchic structure like a family tree, with a single\nancestor at one end and many children (mostly the elements containing\nsimple text) at the other. For example, we could represent an anthology\ncontaining two poems, the first of which contains two four-line\nstanzas and the second a single stanza,  by a tree structure like the following figure:\n  \n\n\n \nThis graphic represents the hierarchical structure of an XML document,\nresembling a family tree. Most XML processing systems now use a standardized way of accessing\nparts of an XML document called XPath.16 XPath gives us a\nnon-graphical way of referring to any part of an XML document: for\nexample, we might refer to the last line of Blake's poem as\n/anthology/poem[1]/stanza[2]/line[4]. The square brackets\nhere indicate a numerical selection: we are talking about the fourth\nline in the second stanza of the first poem in the anthology. If we\nleft out all the square-bracketted selections, the corresponding XPath\nexpression would refer to all lines contained by stanzas contained by\npoems contained by anthologies. An XPath expression can refer to any\ncollection of elements: for example, the expression\n/anthology/poem refers to all poems in an anthology and\nthe expression /anthology/poem/heading refers to all their headings. \n  The forward slash (‘/’, U+002F SOLIDUS) within an XPath expression behaves in much the same way\nas a forward slash or backslash does in a filename specification.\nTo use a family tree analogy, a single slash indicates that the item to the\nimmediate left is a parent of the item(s) to the right of it. For example,\nin the XPath expression /anthology/poem, the single slash\nbetween anthology and poem indicates that anthology is a parent of the\npoem children elements. (The first forward slash in the XPath expression\nindicates the document node.) In XPath, it is also possible to refer to\nchildren, grandchildren, and other descendants of the family tree using two\nforward slashes together. For example, the XPath expression /anthology/poem//line\nwill refer to all of the lines of all of the stanzas of all the poems, without\nhaving to represent the stanza element in the XPath.\n\nClearly, there are many such trees that might be drawn to describe\nthe structure of this or other anthologies. Some of them might be\nrepresentable as further subdivisions of this tree: for example, we\nmight subdivide the lines into individual words, since in our simple\nexample no word crosses a line boundary. Surprisingly perhaps, this\ngrossly simplified view of what text is (memorably termed an\nordered hierarchy of content objects (OHCO) view of text\nby Renear et al.17) turns out to\nbe very effective for a large number of purposes. It is not, however,\nadequate for the full complexity of real textual structures, for which\nmore complex mechanisms need to be employed. There are many other\ntrees that might be drawn which do not fit within the\nanthology model which we have presented so far. We might, for\nexample, be interested in syntactic structures or other linguistic\nconstructs, which rarely respect the formal boundaries of verse. Or,\nto take a simpler example, we might want to represent the pagination\nof different editions of the same text.\n\nIn the OHCO model of text, representation of cases where different\nelements overlap so that several different trees may be identified in\nthe same document is generally problematic. All the elements marked\nup in a document, no matter what namespace they belong to, must fit\nwithin a single hierarchy. To represent overlapping structures,\ntherefore, a single hierarchy must be chosen, and the points at which\nother hierarchies intersect with it marked. For example,\nwe might choose the verse structure as our primary hierarchy, and then\nmark the pagination by means of empty elements inserted at the boundary\npoints between one page and the next. Or we could represent alternative\nhierarchies by means of the pointing and linking mechanisms described\nin chapter 16 Linking, Segmentation, and Alignment of these Guidelines. These mechanisms all\ndepend on the use of attributes, which may be used both to\nidentify particular elements within a document and to point to, link,\nor align them into arbitrary structures.\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG16#SG16\">5.6 Attributes</a>","content":"5.6 Attributes\nIn the XML context, the word attribute, like\nsome other words, has a specific technical sense. It is used to\ndescribe information that is in some sense descriptive of a specific\nelement occurrence but not regarded as part of its content. For\nexample, you might wish to add a status attribute to\noccurrences of some elements in a document to indicate their degree of\nreliability, or to add an identifier attribute so that you\ncould refer to particular element occurrences from elsewhere within a\ndocument. Attributes are useful in precisely such circumstances.\nAlthough different elements may have attributes with the same name\n(for example, in the TEI scheme, every element is defined as having an\nattribute named n), they are always regarded as\ndifferent, and may have different values assigned to them. If an\nelement has been defined as having attributes, the attribute values\nare supplied in the document instance as attribute-value\npairs inside the start-tag for the element occurrence. An\nend-tag cannot contain an attribute-value specification, since it\nwould be redundant.\nThe order in which attribute-value pairs are supplied inside a tag\nhas no significance; they must, however, be separated by at least one\nwhitespace (blank, newline, or tab) character. The value part\nmust always be given inside matching quotation marks, either single or\ndouble18.\nFor example: \nbibliography\nHere attribute values are being specified for two attributes\npreviously declared for the poem element: xml:id\nand status. For the instance of a poem in this\nexample, represented here by ellipsis points, the xml:id\nattribute has the value P1 and the status\nattribute has the value draft. An XML processor can use the\nvalues of the attributes in any way it chooses; for example, a\npoem in which the status attribute has the value\ndraft might be formatted differently from one in which the same\nattribute has the value revised; another processor might use the\nsame attribute to determine whether or not poem elements are to be\nprocessed at all. The xml:id attribute is a slightly\nspecial case in that, by convention, it is always used to supply a\nunique value to identify a particular element occurrence, which may be\nused for cross-reference purposes, as discussed further below (5.6.2 Identifiers and Indicators).\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG16#SG16\">5.6 Attributes</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG-att#SG-att\">5.6.1 Declaring Attributes</a>","content":"5.6.1 Declaring Attributes\n\nAttributes are declared in a schema in the same way as elements.\nAs well as specifying an attribute's name and the element to which it is to be\nattached, it is possible to specify (within limits) what kind of value\nis acceptable for an attribute.\n\nIn the compact syntax of RELAX NG, an attribute is defined by means\nof an attribute pattern, like the following: \n\n\n\nThis defines a new pattern, called att.status, whose\nvalue is an attribute pattern defining an attribute named\nstatus. Attribute names are subject to the same\nrestrictions as other names in XML; they need not be unique across the\nwhole schema, however, but only within the list of attributes for a\ngiven element.\n\nA pattern defining the possible values for this attribute is given\nwithin the curly braces, in just the same way as a content model is\ngiven for an element pattern. In this case, the attribute's value must\nbe one of the strings presented explicitly above. \n\nThe attribute pattern definition must be included or referenced\nwithin the definition for every element to which the attribute is\nattached. We therefore modify the definition for the\npoem_p pattern given above as follows:\n\n\n\nIn RELAX NG, an element pattern simply includes any attribute patterns\napplicable to it along with its other constituents, as shown\nabove. Attribute patterns can also be grouped and alternated in the\nsame way as element patterns, though this particular feature is not\nwidely used in the TEI scheme, since it is not available to the same\nextent in all schema languages. Because a question mark follows the\nreference to the att.status pattern in our example, a\ndocument in which the status attribute is not specified\nwill still be valid; without this occurrence indicator the\nstatus attribute would be required.\n\n\n\nInstead of supplying a list of explicit values, an attribute\npattern can specify that the attribute must have a value of a\nparticular type, for example a text string, a numeric value, a\nnormalized date, etc. This is accomplished by supplying a pattern\nthat refers to a datatype. In the example above,\nbecause a list of acceptable values is predefined, a parser can check\nthat no poem is defined for which the status\nattribute does not have one of draft, revised,\nor published as its value. By contrast, with a definition\nsuch as  a parser would accept almost any\nunbroken string of characters (status=\"awful\",\nstatus=\"awe-ful\", or status=\"12345678\") as\nvalid for this attribute. Sometimes, of course, the set of possible\nvalues cannot be predefined. Where it can, as in this case, it is\ngenerally better to do so.\n\nSchema languages vary widely in the extent to which they support\nvalidation of attribute values. Some languages predefine a small set\nof possibilities. Others allow the schema designer to use values from\na predefined library of possible datatypes, or to\nadd their own definitions, possibly of great complexity. A\ndatatype might be something fairly general (any\npositive integer), something very specific or idiosyncratic (any\nfour-character string ending with \"T\"), or somewhere between the\ntwo. In the RELAX NG schemas used by the TEI, general patterns have\nbeen defined for about half a dozen datatypes (using the W3C Schema\nDatatype Library,\nand discussed further in 1.4.2 Datatype Specifications). In addition to the two\npossibilities already mentioned—plain text or an explicit list of\npossible strings—other datatypes likely to be encountered include\nthe following:\nbooleanvalues must be either true or falsenumericvalues must represent a numeric quantity of some\nkinddatevalues must represent a possible date and time in some calendar\nTwo further datatypes of particular usefulness in managing XML documents\nare commonly known as ID—for identifier—and\nURI—for Universal Resource Indicator, or pointer for\nshort. These are discussed in the next section.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG16#SG16\">5.6 Attributes</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG-id#SG-id\">5.6.2 Identifiers and Indicators</a>","content":"5.6.2 Identifiers and Indicators\nIt is often necessary to refer to an occurrence of one textual\nelement from within another, an obvious example being phrases such as\nsee note 6 or as discussed in chapter 5. When a text is\nbeing produced the actual numbers associated with the notes or\nchapters may not be certain. If we are using descriptive markup, such\nthings as page or chapter numbers, being entirely matters of\npresentation, will not in any case be present in the marked-up text:\nthey will be assigned by whatever processor is operating on the text\n(and may indeed differ in different applications). XML therefore\npredefines an attribute that may be used to provide any element\noccurrence with a special identifier, a kind of label, which may be\nused to refer to it from anywhere else: since it is defined in the XML\nnamespace, the name of this attribute is xml:id and it is\nused throughout the TEI schema. Because it is intended to act as an\nidentifier, its values must be unique within a given document. The\ncross-reference itself will be supplied by an element bearing an\nattribute of a specific kind, which must also be declared in the\nschema. \nSuppose, for example, we wish to include a reference within\nthe notes on one poem that refers to another poem. We will\nfirst need to provide some way of attaching a label to each\npoem:  this is easily done using the xml:id attribute.\nNote that not every poem need carry an xml:id attribute and\nthe parser may safely ignore the lack of one in those that do not.\nOnly poems to which we intend to refer need use this attribute; for\neach such poem we should now include in its start-tag some unique\nidentifier, for example:\nbibliography\n\nNext we need to define a new element for the cross-reference\nitself. This will not have any content—it is only a\npointer—but it has an attribute, the value of which will be\nthe identifier of the element pointed at. This is achieved by\nthe following definition:\n\n\n\nThe poemRef element has no content, but a single attribute\ncalled target. The value of this attribute must be a\npointer or web reference of type anyURI;19\nfurthermore, because there is no indication of optionality on the\nattribute pattern, it must be supplied on each occurrence—a\npoemRef with no referent is an impossibility.\n\nWith these declarations in force, we can now encode a reference to\nthe poem whose xml:id attribute specifies that its\nidentifier is Rose as follows:\nbibliography\n\n\nA processor may take any number of actions when it encounters a\nlink encoded in this way: a formatter might construct an exact page\nand line reference for the location of the poem in the current\ndocument and insert it, or just quote the poem's title or first lines.\nA hypertext style processor might use this element as a signal to\nactivate a link to the poem being referred to, for example by\ndisplaying it in a new window. Note, however, that the purpose of the\nXML markup is simply to indicate that a cross-reference exists: it\ndoes not necessarily determine what the processor is to do with it.\n\nThe target of a URI can be located anywhere: it may not necessarily\nbe part of the same document, nor even located on the same computer\nsystem. Equally, it can be a resource of any kind, not necessarily an\nXML document or document fragment. It is thus a very convenient way of\nincluding references to non-XML data such as image files within a\ndocument. If, for example, we wished to include an illustration\ncontaining a reproduction of Blake's original in our anthology, the\nmost appropriate method would probably be to define a new element\ncalled (for the sake of argument) graphic\nwith a target attribute of datatype URI:\n With these additions to the schema, we\ncan now represent the location of the illustration within our text\nlike this:  By providing a location from which a reproduction of\nthe required image can be downloaded, this encoding makes it possible\nfor appropriate software able to display the image as well as record\nits existence. \nAttributes form part of the structure of an XML document in the\nsame way as elements, and can therefore be accessed using XPath. For\nexample, to refer to all the poems in our anthology whose\nstatus attribute has the value draft, we might\nuse an XPath such as /anthology/poem[@status='draft']. To\nfind the headings of all such poems, we would use the XPath\n/anthology/poem[@status='draft']/heading. \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG-oth#SG-oth\">5.7 Other Components of an XML Document</a>","content":"5.7 Other Components of an XML Document \n\nIn addition to the elements and attributes so far discussed, an XML\ndocument can contain a few other formally distinct things. An XML\ndocument may contain references to predefined strings of data that a\nvalidator must resolve before attempting to validate the document's\nstructure; these are called entity references. They may\nbe useful as a means of providing boilerplate text or\nrepresenting character data which cannot easily be keyboarded. As\nnoted earlier, an XML document may also contain instances of elements\ntaken from some other namespace. And an XML\ndocument may also contain arbitrary signals or flags for use when the\ndocument is processed in a particular way by some class of processor\n(a common example in document production is the need to force a\nformatter to start a new page at some specific point in a document);\nsuch flags are called processing instructions. We discuss each of these\nthree cases in the rest of this section.\n\nThe XML declaration should be supplied at the very\nbeginning of every XML file; while it looks like a processing\ninstruction, it is not, and may not occur anywhere other than at the\nvery beginning of an XML file. For example:  The XML declaration specifies\nthe version number of the XML Recommendation applicable to the\ndocument it introduces (in this case, version 1.0), and optionally\nalso the character encoding used to represent the Unicode characters\nwithin it. By default an XML document uses the character encoding\nUTF-8 or UTF-16; other commonly-encountered encodings include ISO\n8859-1. If any character present in the document is not available in\nthe specified character encoding, it must be represented as a\ncharacter reference (5.7.1 Character References). The XML declaration is\ndocumentary, but should normally be supplied at the start of any XML\nfile. If it is missing many XML-aware processors will be unable to\nprocess the associated text correctly.\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG-oth#SG-oth\">5.7 Other Components of an XML Document</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG-er#SG-er\">5.7.1 Character References</a>","content":"5.7.1 Character References\n\nAs mentioned above, all XML documents use the same internal\ncharacter encoding. Since not all computer systems currently support\nthis encoding directly, a special syntax is defined\nthat can be used to represent individual characters from the Unicode\ncharacter set in a portable way by providing their numeric value, in\ndecimal or hexadecimal notation.\n\nFor example, the character é is represented\nwithin an XML document as the Unicode character with hexadecimal value\n00E9. If such a document is being prepared on (or\nexported to) a system using a different character set in which this\ncharacter is not available, it may instead be represented by the\ncharacter reference &#x00E9; (the x indicating\nthat what follows is a hexadecimal value) or\n&#0233; (its decimal equivalent). References of this type do not need\nto be predefined, since the underlying character encoding for XML is\nalways the same.\n\nTo aid legibility, however, it is also possible to use a mnemonic\nname (such as eacute) for such character references,\nprovided that each such name is mapped to the required Unicode value\nby means of a construct known as an entity\ndeclaration. A reference to a named character entity always\ntakes the form of an ampersand, followed by the name, followed by a\nsemicolon. For example an XML document containing the string\nT&C might be encoded as T&amp;C. \n\nThere is a small set of such character\nentity references that do not have to be declared because they form\npart of the definition of XML. These include the names used for\ncharacters such as the ampersand (amp) and the open angle\nbracket or less-than sign (lt), which could not easily\notherwise be included in an XML document without ambiguity. Other\npredeclared entity names are those for quotation marks (quot\nand apos for double and single respectively), and for\ncompleteness the closing angle bracket or greater-than sign\n(gt).\n\nFor all other named character entities, a set of entity declarations\nmust be provided to an XML processor before the document referring to\nthem can be validated. The declaration itself uses a non-XML syntax\ninherited from SGML; for example, to define an entity named\neacute with the replacement value é, the declaration\ncould have any of the following forms:  or, using hexadecimal notation:  or, using decimal notation:\n\n \n\nEntities of this kind are useful also for string\nsubstitution purposes, where the same text needs to be repeated\nuniformly throughout a text. For example, if a declaration such as\n is included with a document,\nthen references such as &TEI; may be used within it,\neach of which will be expanded in the same way and replaced by the\nstring Text Encoding Initiative before the text is validated.\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG-oth#SG-oth\">5.7 Other Components of an XML Document</a><a class=\"breadcrumb\" href=\"p5.xml?id=SGname#SGname\">5.7.2 Namespaces</a>","content":"5.7.2 Namespaces\n\nA valid XML document necessarily specifies the schema in which its\nconstituent elements are defined. However, a well-formed XML document\nis not required to specify its schema (indeed, it may not even have a\nschema). It would still be useful to indicate that the element names used\nin it have some defined provenance. Furthermore, it might be desirable\nto include in a document elements that are defined (possibly\ndifferently) in different schemas. A cabinet-maker's schema might well\ndefine an element called table with very different\ncharacteristics from those of a documentalist's.\nThe concept of namespace was introduced into the XML\nlanguage as a means of addressing these and related problems. If the\nmarkup of an XML document is thought of as an expression in some\nlanguage, then a namespace may be thought of as analogous to the\nlexicon of that language. Just as a document can contain words taken\nfrom different languages, so a well-formed XML document can include\nelements taken from different namespaces. A namespace resembles a\nschema in that we may say that a given\nset of elements belongs to a given namespace, or\nare defined by a given schema. However, a schema\nis a set of element definitions, whereas a namespace is really only a\nproperty of a collection of elements: the only tangible form it takes\nin an XML document is its distinctive prefix and the\nidentifying name associated with it.\n\nSuppose for example that we wish to extend our anthology to include\na complex diagram. We might start by considering whether or\nnot to extend our simple schema to include XML markup for such\nfeatures as arcs, polygons, and other graphical elements. XML can be\nused to represent any kind of structure, not simply text, and there\nare clear advantages to having our text and our diagrams all expressed\nin the same way.\nFortunately we do not need to invent a schema for the\nrepresentation of graphical components such as diagrams; it already\nexists in the shape of the Scalable Vector Graphics (SVG) language\ndefined by the W3C.20 SVG\nis a widely used and rich XML vocabulary for representing all kinds of\ntwo-dimensional graphics; it is also well supported by existing\nsoftware. Using an SVG-aware drawing package, we can easily draw our\ndiagram and save it in XML format for inclusion within our\nanthology. When we do so, we need to indicate that this part of\nthe document contains elements taken from the SVG namespace, if only\nto ensure that processing software does not confuse our line\nelement with the SVG line, which means something quite\ndifferent. \nAn XML document need not specify any namespace: it is then said to\nuse the null namespace. Alternatively, the root element of a\ndocument may supply a default namespace, understood to apply to all elements which have no namespace prefix. This is the function of the\nxmlns attribute which provides a\nunique name for the default namespace, in the form of a URI:\n\nIn exactly the same way, on the root element for each part of our\ndocument which uses the SVG language, we might introduce the SVG\nnamespace name:\n\nAlthough a namespace name usually uses the URI (Uniform Resource\nIdentifier) syntax, it is not treated as an online address\nand an XML processor regards it just as a string, providing a longer name for the\nnamespace.\nThe xmlns attribute can also be used to associate a short prefix\nname with the namespace it defines. This is very useful if we want to\nmingle elements from different namespaces within the same document,\nsince the prefix can be attached to any element, overriding the\nimplicit namespace for itself (but not its children):\n\n\nThere is no limit on the number of namespaces that a document can\nuse. Provided that each is uniquely identified, an XML processor can\nidentify those that are relevant, and validate them appropriately. To\nextend our example further, we might decide to add a linguistic\nanalysis to each of the poems, using a set of elements such as aux, adj, etc.,\nderived from some pre-existing XML vocabulary for linguistic analysis.\nbibliography\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG-oth#SG-oth\">5.7 Other Components of an XML Document</a><a class=\"breadcrumb\" href=\"p5.xml?id=SGname#SGname\">5.7.2 Namespaces</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG-ms#SG-ms\">5.7.2.1 Marked Sections</a>","content":"5.7.2.1 Marked Sections\nWe mentioned above that the syntax of XML requires the encoder to\ntake special action if characters with a syntactic meaning in XML\n(such as the left angle bracket or ampersand) are to be used in a\ndocument to stand for themselves, rather than to signal the start of a\ntag or an entity reference respectively. The predefined entities\n&amp;, &lt;, and\n&gt; provide one method of dealing with this problem,\nif the number of occurrences of such things is small. Other methods\nmay be considered when the number is large, as in an XML document like\nthe present Guidelines, which contains hundreds of examples of XML\nmarkup. One is to label the XML examples as belonging to a different\nnamespace from that of the document itself, which is the approach\ntaken in the present Guidelines. Another and simpler approach is\nprovided by one of the features inherited by XML from its parent SGML:\nthe marked section. \nA marked section is a block of text within an XML document\nintroduced by the characters <![CDATA[ and terminated\nby the characters ]]>. Between these rather strange\nbrackets, markup recognition is turned off, and any tags or entity\nreferences encountered are therefore treated as if they were plain\ntext. For example, when we come to write the users' manual for our\nanthology, we may find ourselves often producing text like the\nfollowing:\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG-oth#SG-oth\">5.7 Other Components of an XML Document</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG-pi#SG-pi\">5.7.3 Processing Instructions</a>","content":"5.7.3 Processing Instructions\n\nAlthough one of the aims of using XML is to remove any information\nspecific to the processing of a document from the document itself, it\nis occasionally very convenient to be able to include such information—if \nonly so that it can be clearly distinguished from the\nstructure of the document. As suggested above, one common example is\nthe need, when processing an XML document for printed output, to\ninclude a suggestion that the formatting processor might use to\ndetermine where to begin a new page of output. Page-breaking decisions\nare usually best made by the formatting engine alone, but there will\nalways be occasions when it may be necessary to override these. An XML\nprocessing instruction inserted into the document is one very simple\nand effective way of doing this without interfering with other aspects\nof the markup.\nHere is an example XML processing instruction:  It begins with <? and ends with\n?>. In between are two strings separated by a space:\nthe first is the name of some processor (tex in the above\nexample) and the second is some data intended for the use of that\nprocessor (in this case, the instruction to start a new page). The\nonly constraint placed by XML on the strings is that the first one\nmust be a valid XML name other than XML,\nXml, or xml, etc. The second string can be\nany arbitrary sequence of characters, not including the closing\ncharacter-sequence ?>.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG18#SG18\">5.8 Putting It All Together</a>","content":"5.8 Putting It All Together\n\nIn this chapter we have discussed most of the components of an XML\ndocument and its associated schema. We have described informally \nhow an XML document is represented, and also introduced one\nway of representing the rules a RELAX NG validator might use to\nvalidate it. In a working system, the following issues will also need\nto be addressed:\nhow does a processor determine the schema (or schemas) that\nshould be used to validate a given XML document instance?if a document contains entity references that must be processed before the\ndocument can be validated, where are those entities defined?an XML document instance may be stored in a number of different\noperating system files; how should they be assembled together?how does a processor determine which stylesheets it should use\nwhen processing an XML document, or how to interpret any processing\ninstructions it contains?how does a processor enforce more exact validation than simple\ndatatypes permit (for example of element content)?\n\n\nDifferent schema languages and different XML processing systems\ntake very different positions on all of these topics, since none of\nthem is explicitly addressed in the XML specification itself. Consequently,\nthe best answer is likely to be specific to a particular software\nenvironment and schema language. Since this chapter is concerned with\nXML considered independently of its processing environment, we only\naddress them in summary detail here. \n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG18#SG18\">5.8 Putting It All Together</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG-ass1#SG-ass1\">5.8.1 Associating Entity Definitions with a Document\nInstance</a>","content":"5.8.1 Associating Entity Definitions with a Document\nInstance\nIn 5.7.1 Character References we introduced the syntax used for the\ndefinition of named character entities such as eacute,\nwhich XML inherited from SGML. Different schema languages vary in the\nways they make a collection of such definitions available\nto an XML processor, but fortunately there is one method that all\ncurrent schema languages support.\nAs well as, and following, the XML declaration (5.7.3 Processing Instructions), an XML document instance may be prefixed with a\nspecial DOCTYPE statement. This declarative statement has\nbeen inherited by XML from SGML; in its full form it provides a large\nnumber of facilities, but we are here concerned only with the small\nsubset of those facilities recognized by all schema languages.\nHere is an example DOCTYPE statement which we might consider\nprefixing to the final version of our anthology:\n\nAny XML processor encountering this statement will use it to add the\ntwo named entities it defines to those already predefined for\nXML. Before the document instance itself is validated, any references\nto these entities will be expanded to the character string\ngiven. Thus, wherever in the document instance the string\n&legalese; appears, it will be replaced by the\nformulation above. This makes life a little easier for those\nkeyboarding our anthology.21 The word anthology following the string\nDOCTYPE in this example is, of course, the name of the root element of\nthe document to which this declaration is prefixed; however, only an XML\nDTD processor will take note of this fact. "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG18#SG18\">5.8 Putting It All Together</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG-assoc#SG-assoc\">5.8.2 Associating a Document Instance with Its Schema</a>","content":"5.8.2 Associating a Document Instance with Its Schema\n\nIn the past, different schema languages adopted entirely different attitudes to\nthis question, leading to a variety of different methods of associating schemas with \ndocument instances. However, a W3C Working Group Note, \n  Associating Schemas with XML documents, \n(https://www.w3.org/TR/xml-model/) now provides a \nstandardized method of doing this through the use of a processing instruction:\n\n  \n\nThe href pseudo-attribute points to the location of the schema. This is the only mandatory\n  pseudo-attribute, but others can be added to give more information about the schema:\n  \n  \n\nSee the XML Model WG Note for more information on the pseudo-attributes available and \nhow to use them.\n  \n  A document instance may be valid according to many\ndifferent schemas, each appropriate to a different processing task. All of these may be expressed in the same way:\n\n  \n\nThis example includes a standard schema in XML Schema format, along with a Schematron schema which might be \nused for checking the format and linking of names.\n\nAny modern XML processing software tool will provide\nconvenient methods of validating documents which are appropriate to the particular\nschema language chosen. In the interests of maximizing portability of\ndocument instances, they should contain as little processing-specific\ninformation as possible.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG18#SG18\">5.8 Putting It All Together</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG-mult#SG-mult\">5.8.3 Assembling Multiple Resources into a Single Document</a>","content":"5.8.3 Assembling Multiple Resources into a Single Document\nAs we have already indicated, a single XML document may be made up\nof several different operating system files that need to be pulled\ntogether by a processor before the whole document can be\nvalidated. The XML DTD language defines a special kind of entity (a\nsystem entity) that can be used to embed references to\nwhole files into a document for this purpose, in much the same way as\nthe character or string entities discussed in 5.7.1 Character References. Neither RELAX NG nor W3C Schema directly supports\nthis mechanism, however, and we do not\ndiscuss it further here.\nAn alternative way of achieving the same effect is to use a special\nkind of pointer element to refer to the resources that need to be\nassembled, in exactly the same way as we proposed for the illustration\nin our anthology. The W3C Recommendation XML Inclusions\n (XInclude)22 defines a generic mechanism\nfor this purpose, which is supported by an increasing number of XML\nprocessors.  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG18#SG18\">5.8 Putting It All Together</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG-style#SG-style\">5.8.4 Stylesheet Association and Processing</a>","content":"5.8.4 Stylesheet Association and Processing\nAs mentioned above,  the processing of an XML document will usually\ninvolve the use of one or more stylesheets, often but not exclusively\nto provide specific details of how the document should be displayed or\nrendered. In general, there is no reason to associate a document\ninstance with any specific stylesheet and the schema languages we have\ndiscussed so far do not therefore make any special provision for such\nassociation. The association is made when the stylesheet processor is\ninvoked, and is thus entirely application-specific.\nHowever, since one very common application for XML documents is to\nserve them as browsable documents over the Web, the W3C has defined a\nprocedure and a syntax for associating a document instance with its\nstylesheet (see https://www.w3.org/TR/xml-stylesheet/). This Recommendation\nallows a document to supply a link to a default stylesheet and also to\ncategorize the stylesheet according to its MIME type,\nfor example to indicate whether the stylesheet is written in CSS or\nXSLT, using a specialized form of processing instruction.\nAssuming therefore that we have made a CSS-conformant stylesheet\nfor our anthology and stored it in a file called\nanthology.css which is available from the same location\nas the anthology itself, we could make it available over the Web simply\nby adding a processing instruction like the following to the anthology:\n\nMultiple stylesheets can be defined for the same document, and\noptions are available to specify how a web browser should select\namongst them. For example, if the document also contained a directive:\na different stylesheet\ncalled anthology_m.css could be used when rendering the\ndocument on a handheld device such as a mobile phone.\nMost modern web browsers support CSS (although the extent\nof their implementation varies), and some of them\nsupport XSLT.\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SG#SG\">5 A Gentle Introduction to XML</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG18#SG18\">5.8 Putting It All Together</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG-style#SG-style\">5.8.4 Stylesheet Association and Processing</a><a class=\"breadcrumb\" href=\"p5.xml?id=SG-val#SG-val\">5.8.4.1 Content Validation</a>","content":"5.8.4.1 Content Validation\n\nAs we noted above, most schema languages provide some degree of\ndatatype validation for attribute values (5.6.1 Declaring Attributes). They vary greatly in the validation facilities\nthey offer for the content of elements, other than the syntactic\nconstraints already discussed. Thus, while we may very easily check\nthat our stanza elements contain only line elements, we cannot easily check that line elements contain between five and 500\ncorrectly-spelled English words, should we wish to constrain our\npoetry in such a way. Also, because attributes and elements are\ntreated differently, it is difficult or impossible to express\nco-occurrence constraints: for example, if the status of a poem is draft we might\nwish to permit elements such as editorialQuery within its content, but not\notherwise.  \n\nThe XML DTD language offers very little beyond syntactic checking\nof element content. By contrast, a major impetus behind the design and\ndevelopment of the W3C schema language was the addition of a much more\ngeneral and powerful constraint language to the existing structural\nconstraints of XML DTDs. In RELAX NG the opposite approach was taken,\nin that all datatype validation, whether of attributes or element\ncontent, is regarded as external to the schema language. For\nattributes, as we have seen, RELAX NG makes use of the W3C Schema\nDatatype Library (but permits use of others). Because RELAX NG treats\nboth elements and attributes as special cases of patterns, the same\ndatatype validation facilities are available for element content as\nfor attribute values; it is unlike other schema languages in\nthis respect. In addition, for content validation,\na different component of DSDL known as Schematron can be used. Schematron\nis a pattern matching (rather than a grammar-based) language, which\nallows us to test the components of a document against\ntemplates that express constraints such as those mentioned above.\n\nLike other XML processors, Schematron uses XPath to identify parts\nof an XML document; in addition, it provides elements that describe\nassertions to be tested and conditions which must be validated, as\nwell as elements to report the results of the test. \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CH#CH\">6 Languages and Character Sets</a>","content":" \n6 Languages and Character Sets\nThe documents which users of these Guidelines may wish to encode\nencompass all kinds of material, potentially expressed in the full\nrange of written and spoken human languages, including the extinct,\nthe non-existent, and the conjectural. Because of this wide scope,\nspecial attention has been paid to two particular aspects of the\nrepresentation of linguistic information often taken for granted:\nlanguage identification and character encoding.\nEven within a single document, material in many different languages\nmay be encountered. Human culture, and the texts which embody it, is\nintrinsically multilingual, and shows no sign of ceasing to be so.\nTraditional philologists and modern computational linguists alike work\nin a polyglot world, in which code-switching (in the linguistic sense)\nand accurate representation of differing language systems constitute\nthe norm, not the exception. The current increased interest in studies\nof linguistic diversity, most notably in the recording and\ndocumentation of endangered languages, is one aspect of this long\nstanding tradition. Because of their historical importance, the needs\nof endangered and even extinct languages must be taken into account\nwhen formulating Guidelines and recommendations such as these. \nBeyond the sheer number and diversity of human languages, it should\nbe remembered that in their written forms they may deploy a huge\nvariety of scripts or writing systems. These scripts are in turn\ncomposed of smaller units, which for simplicity we term here\ncharacters. A primary goal when encoding a text should be to capture\nenough information for subsequent users to correctly identify\nnot only the constituent characters, but also the language and script. In this chapter we\naddress this requirement, and propose recommended mechanisms to\nindicate the languages, scripts and characters used in a document or a\npart thereof.  \nIdentification of language is dealt with in 6.1 Language Identification. In summary, it recommends the use of pre-defined\nidentifiers for a language where these are available, as they\nincreasingly are, in part as a result of the twin pressures of an\nincreasing demand for language-specific software and an increased\ninterest in language documentation. Where such identifiers are not\navailable or not standardized, these Guidelines recommend a method for\ndocumenting language identifiers and their significance, in the same\nway as other metadata is documented in the TEI header.\nStandardization of the means available to represent characters and\nscripts has moved on considerably since the publication of the first\nversion of these Guidelines. At that time, it was essential to\nexplicitly document the characters and encoded character sets used by\nalmost any digital resource if it was to have any chance of being\nusable across different computer platforms or environments, but this\nis no longer the case. With the availability of the Unicode standard,\nmore than 128,000 different characters representing almost all of the world's\ncurrent writing systems are available and usable in any XML processing\nenvironment without formality. Nevertheless, however large the number\nof standardized characters, there will always be a need to encode\ndocuments which use non-standard characters and glyphs, particularly\nbut not exclusively in historical material. The second part of\nthis chapter discusses in some detail the concepts and\npractice underlying this standard, and also introduces the methods\navailable for extending beyond it, which are more fully discussed in\n5 Characters, Glyphs, and Writing Modes.\n\n\n  \n  \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CH#CH\">6 Languages and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=CHSH#CHSH\">6.1 Language Identification</a>","content":"6.1 Language Identification\n  \nIdentification of the language a document or part thereof is\nwritten in is a crucial requirement for many envisioned usages of\nan electronic document. The TEI therefore accommodates this need in the\nfollowing way:A global attribute xml:lang is defined for all TEI\n elements. Its value identifies the language and writing system\n used.The TEI header has a section set aside for the information\n about the languages used in a document: see further 2.4.2 Language Usage.\nThe value of the attribute xml:lang identifies the\nlanguage (and, optionally, script) using a coded value. For maximal compatibility with existing\nprocesses, the identifier for the language must be constructed as in\nBest Current Practice 471. This\nsame identifier has to be used to identify\nthe corresponding language element in the TEI header, if one\nis present.\nThe first part of BCP 47 is called Tags for Identifying\nLanguages, and proposes the following mechanism for\nconstructing an identifier (tag) for languages as administered by the\nInternet Assigned Numbers Authority (IANA). The tag is assembled from\na sequence of subtags separated by the hyphen (-, U+002D) character.\nIt gives the language (possibly further identified with a\nsublanguage), a script, and a region for the language, each possibly\nfollowed by a variant subtag.\nThe authoritative list of registered subtags is maintained by IANA\nand is available at http://www.iana.org/assignments/language-subtag-registry.\nFor a good general overview of the construction of language tags, see\nhttps://www.w3.org/International/articles/language-tags/,\nand for a practical step-by-step guide, see https://www.w3.org/International/questions/qa-choosing-language-tags.en.php.\nIn addition to the list of registered subtags, BCP 47 provides\nextensions that can be employed by private convention. The constructs\nprovided can thus be used to generate identifiers for any language,\npast and present, in any usage in any area of the world. If such\nprivate extensions are used within the context of the TEI, they should\nbe documented within the language element of the TEI header,\nwhich might also provide a prose description of the language described\nby the language tag.\n\nWhile language, region, and script can be adequately identified\nusing this mechanism, there is only very rough provision to express a\ndimension of time for the language of a document; those codes provided\n(e.g. grc for Greek, Ancient (to 1453)) might not\nreflect the segments appropriate for a text at hand. Text encoders\nmight express the time window of the language used in the document by\nmeans of the extension mechanism defined in BCP 47 and relate that\nto a date element in the corresponding language\nsection of the TEI header.\nEquivalences to language identifiers by other authorities can be\ngiven in the language section as well, but no formal\nmechanism for doing so has been defined.\nThe scope of the language identification extends to the whole\nsubtree of the document anchored at the element that carries the\nxml:lang attribute, including all elements and those\nattributes, if any, where a language might apply.2"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CH#CH\">6 Languages and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=CHCS#CHCS\">6.2 Characters and Character Sets</a>","content":"\n   6.2 Characters and Character Sets\n  All document encoding has to do with representing one thing by\n   another in an agreed and systematic way. Applied to the smallest\n   distinctive units in any given writing system, which for the\n   moment we may loosely call characters, such representation\n   raises surprisingly complex and troublesome issues. The reasons\n   are partly historical and partly to do with conceptual\n   unclarities about what is involved in identifying, encoding,\n   processing and rendering the characters of a natural\n   language.             \n   \n   \n   \n  \n   \n  \n  \n  \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CH#CH\">6 Languages and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=CHCS#CHCS\">6.2 Characters and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=D4-41#D4-41\">6.2.1 Historical Considerations</a>","content":"            \n   6.2.1 Historical Considerations           \n   When the first methods of representing text for storage or\n   transmission by machines were devised, long before the\n   development of computers, the overriding aim was to identify the\n   smallest set of symbols needed to convey the essential semantic\n   content, and to encode that symbol set in the most economical\n   way that the storage or transmission media allowed. The initial\n   outcome were systems that encoded only such content as could be\n   expressed in uppercase letters in the Latin script, plus a few\n   punctuation marks and some control characters needed to\n   regulate the storage and transmission devices. Such encodings,\n   originally developed for telegraphy, strongly influenced the way\n   the pioneers of computing conceived of and implemented the\n   handling of text, with consequences that are with us still. \n   For many years after the invention of computers, the way they\n   represented text continued to be constrained by the imperative\n   to use expensive resources with maximal efficiency. Even when\n   storage and processing costs began their dramatic fall, the\n   Anglo-centric outlook of  most hardware designers and software\n   engineers hampered initiatives to devise a more generous and\n   flexible model for text representation. The wish to retain\n   compatibility with legacy data was an additional disincentive.\n   Eventually, tension in East Asia between commitment to\n   technological progress and the inability of existing computers\n   to cope with local writing systems led to decisive developments.\n   Japanese, Korean, and Chinese standards bodies, who long before\n   the advent of computers had been engaged in the specification of\n   character sets, joined with computer manufacturers and software\n   houses to devise ways of mapping those character sets to numeric\n   encodings and processing the resulting text data.\n   Unfortunately, in the early years there was little or no\n   co-ordination among either the national standards bodies or the\n   manufacturers concerned, so that although commercial necessity\n   dictated that these various local standards were all compatible\n   with  the representation of US-American English, they were not\n   straightforwardly compatible with one another. Even within Japan\n   itself there emerged a number of mutually incompatible systems,\n   thanks to a mixture of commercial rivalry, disagreements about\n   how best to manage certain intractable problems, and the fact\n   that such pioneering work inevitably involved some false starts,\n   leading to incompatibilities even between successive products of\n   the same bodies. Roughly at the same time, and for similar\n   reasons, multiple and incompatible ways of representing\n   languages that use Cyrillic scripts were devised, along with\n   methods of encoding ancient writing systems which inevitably\n   could not aim for compatibility with other writing systems apart\n   from basic Latin script. Many of the earliest projects that fed\n   into the TEI were shaped in this developmental phase of the\n   computerized representation of texts, and it was also the\n   context in which SGML was devised and finalized.  \n   SGML had of necessity to offer ways of coping with multiple\n   writing systems in multiple representations; or rather, it\n   provided a framework within which SGML-compliant applications\n   capable of handling such multiple representations might be\n   developed by those with sufficient financial and personnel\n   resources (such as are seldom found in academia). Earlier\n   editions of these Guidelines offered advice on character set and\n   writing system issues addressed to the condition of those for\n   whom SGML was the only feasible option. That advice is here\n   substantially altered because of two closely-related\n   developments: the availability of the ISO/Unicode character set\n   as an international standard, and the emergence of XML and\n   related technologies which are committed to the theory and\n   practice of character representation which Unicode embodies.\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CH#CH\">6 Languages and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=CHCS#CHCS\">6.2 Characters and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=D4-42#D4-42\">6.2.2 Terminology and Key\n   Concepts</a>","content":" 6.2.2 Terminology and Key\n   ConceptsBefore the significance of Unicode and the\n   implications of the association between XML and Unicode can be\n   adequately explained, it is necessary to clarify some key\n   concepts and attempt to establish an adequately precise\n   terminology for them. \n   \n   \n    The word character will not of itself take us\n    very far towards greater terminological precision. It tends to be\n    used to refer indiscriminately both to the visible symbol on a\n    page and to the letter or ideograph which that symbol represents,\n    two things that it is essential to keep conceptually distinct. The\n    visible symbol obviously has some aspects by which we interpret it\n    as representing one character rather than another; but its\n    appearance may also be significantly determined by features that\n    have no effect on our notion of which character in a writing\n    system it represents. A familiar instance is the lowercase\n    a, which in printed texts may be\n    represented either by a single storey symbol\n    (cf. figure 1 in the examples from\n    URW Gothic L on the bottom row) or by a two\n    storey version (as in figure\n    1 in the examples from Umpush, or URW Bookman L Demi Bold).\n    We say that the single and double-storey symbols both represent\n    one and the same the same abstract\n    character a using two different\n    glyphs. Similarly, an uppercase\n    A in a serif typeface has additional\n    strokes that are absent from the same letter when printed using a\n    sans-serif typeface, so that once again we have differing glyphs\n    standing for the same abstract character. The distinction\n    between abstract characters and glyphs is fundamental to all\n    machine processing of documents.\n   In most scholarly encoding projects, the accurate recording of\n   the abstract characters which make up the text is of prime\n   importance, because it is the essential prerequisite of\n   digitizing and processing the document without semantic loss. In\n   many cases (though there are important exceptions, to be touched\n   on shortly) it may not be necessary to encode the specific\n   glyphs used to render those abstract characters in the original\n   document. An encoding that faithfully registers the abstract\n   characters of a document allows us to search and analyse our\n   document's content, language, and structure, and to access its full\n   semantics. That same encoding, however, may not contain\n   sufficient information to allow an exact visual representation\n   of the glyphs in the source text or manuscript to be recreated.\n   \n   The importance of this distinction between information content\n   and its visual representation is not always immediately apparent\n   to people unused to the specific complexities of text handling\n   by machine. Such users tend to ask first what (in order of\n   conceptual priority) should actually be their very last\n   question: how do I get a physical image that looks like\n   character x in my source document to appear on to the screen or\n   the output page? Their first question should in fact be: how can\n   I get an abstract representation of character x into my encoded\n   document in a way that will be universally and unambiguously\n   identifiable, no matter what it happens to look like in printout\n   or on any particular display? And occasionally the response they\n   receive as a result of their misguided initial question is a\n   custom solution that satisfies their\n   immediate rendering wishes at the price of making their\n   underlying document unintelligible to other users (or even to\n   the original user in other times and places) because it encodes\n   the abstract character in an idiosyncratic way. \n   That said, there will certainly be documents or projects where\n   it is a matter of scholarly significance that the compositor or\n   scribe chose to represent a given abstract character using one\n   particular glyph or set of strokes rather than a\n   semantically-equivalent but visually distinct alternative, and\n   in that case the specific appearance of the form will have to be\n   encoded in one way or another. But that encoding need not (and\n   in most cases will not) involve a notation that visually\n   resembles the original, any more than italicized text in an\n   original document will be represented by the use of italic\n   characters in the encoded version. \n   A collection of the abstract characters needed to represent\n   documents in a given writing system is known as a \ncharacter set, and the character set or\n   character repertoire of a processing or\n   rendering device is the set of abstract characters that it is\n   equipped to recognize and handle appropriately. There is,\n   however, a subtle distinction between these two parallel uses of\n   the same term, involving one more key concept which it is\n   essential to grasp. The character set of a document (or the\n   writing system in which it is recorded) is purely a collection\n   of abstract characters. But the character set of a computing\n   device is a set of abstract characters which have been mapped in\n   a well-defined way to a set of numbers or code points \n   by which the device represents\n   those abstract characters internally. It can therefore be\n   referred to as a coded character set,\n   meaning a set of abstract characters each of which has been\n   assigned a numerical code point (or in some instances a sequence\n   of code points) which unambiguously identifies the character\n   concerned.\nIt is now possible to use this terminology to\n   say what Unicode is: it is a coded character set, devised and\n   actively maintained by an international public body, where each\n   abstract character is identified by a unique name and assigned a\n   distinctive code point.3 Unicode is \n  distinguished from other coded character sets by its\n  (current and potential) size and scope; its built-in provision\n  for (in practical terms) limitless expansion; the range and\n  quality of linguistic and computational expertise on which it\n  draws; the stability, authority, and accessibility it derives\n  from its status as an international public standard; and,\n  perhaps most importantly, the fact that today it is implemented\n  by almost every provider of hardware and software platforms\n  worldwide. "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CH#CH\">6 Languages and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=CHCS#CHCS\">6.2 Characters and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=D4-43#D4-43\">6.2.3 Abstract Characters, Glyphs, and Encoding Scheme\n   Design</a>","content":" \n   6.2.3 Abstract Characters, Glyphs, and Encoding Scheme\n   Design \n   The distinction between abstract characters and glyphs can be\n   crucial when devising an encoding scheme.  When performing \n   searches, text retrieval, or creating concordances, users of \n   electronic text will expect the system to recognize and treat \n   different glyphs as instances of the same character; but when \n   perusing the text itself they may well expect to see glyph variants \n   preserved and rendered. When encoding a pre-existing text, the \n   encoder should determine whether a particular\n   letter or symbol is a character or a glyphic variant. The Unicode \n   Consortium and an ISO work group (ISO/IEC JTC1\n   SC2/WG2) have developed a detailed model of the relationship\n   between characters and glyphs. This model, presented in Unicode Technical\n     Report 17: Character Encoding Model, is the underpinning\n   of much standards work since, including the current chapter.\n   The model makes explicit the distinction between two different\n   properties of the components of written language: \ntheir content, i.e. its meaning and phonetic value\n    (represented by characters)their graphical\n    appearance (represented by glyphs). \n     \n    When searching for information, a system generally operates\n   on the content aspects of characters,  with little or no\n   attention to their appearance. A layout or formatting process,\n   on the other hand, must of necessity be concerned with the exact\n   appearance of characters. Of course, some operations\n   (hyphenation for example) require attention to both kinds of\n   feature, but in general the kind of text encoding described in\n   these Guidelines tends to focus on content rather than\n   appearance (see further 3.3 Highlighting and Quotation).\n    An encoder wishing to record information about which glyphs\n   are present in a given document may do so at either or both of\n   two levels:  \nthe level of character encoding, using an appropriate\n    Unicode code point to represent the glyph concerned the markup level, with the glyph indicated via\n    appropriate elements or attributes  \n   The encoding practice adopted may be guided by, among other\n   things, an assessment of the most  frequent uses to which the\n   encoded text will be put. For example, if recognition of\n   identical characters represented by a variety of glyphs is the\n   main priority, it may be advisable to represent the glyph\n   variations at markup level, so that the character value can be\n   immediately exposed to the indexing and retrieval software.\n   Plainly, an encoding project will need to consider such issues\n   carefully and document the outcome of their\n   deliberations in their TEI customization file (or other local\n   encoding documentation) to ensure encoding consistency. Using\n   Unicode code points to represent glyph information requires that\n   such choices be documented in the TEI header. Such documentation\n   cannot of itself guarantee proper display of the desired\n   glyph but at least makes the intention of the encoder\n   discoverable. \n   At present the Unicode Standard does not offer detailed\n   specifications for the encoding of glyph variations. These\n   Guidelines do give some recommendations; some discussion of\n   related matters is given in 11 Representation of Primary Sources,\n   and  5 Characters, Glyphs, and Writing Modes  offers some features for the definition of variant\n   glyphs.  \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CH#CH\">6 Languages and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=CHCS#CHCS\">6.2 Characters and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=D4-44#D4-44\">6.2.4 Entry of Characters</a>","content":" \n  6.2.4 Entry of Characters    \n  The entry of characters was much more complicated before the near-universal\n    adoption of Unicode, for which there are Input Method Editors\n    (IMEs) available in most languages and fonts that provide glyphs for the full \n    range of the Unicode specification. In those rare situations where there is\n    difficulty entering the specific character you want, or some problem representing\n    it on the system you are working in, Numeric Character References\n    (NCRs) should be used. These take the general form &#D; where \n    D is an integer representing the code point of the character in \n    base 10, or &#xH;, where H is the code point in\n    hexadecimal notation. Every XML processor is capable of recognising NCRs and \n    replacing them with the required code point value without needing access to \n    any additional data. The disadvantage of NCRs as a means of entering, \n    representing and proofing character data is that most human beings find them\n    anything but readable and it is all too easy\n    for the wrong character to be entered in error and retained undetected. \n    Where characters are not defined in Unicode, these Guidelines provide advice\n    on the strategies available for handling their representation in Chapter 25 Representation of non-standard Characters and \n    Glyphs. \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CH#CH\">6 Languages and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=CHCS#CHCS\">6.2 Characters and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=D4-45a#D4-45a\">6.2.5 Output of Characters</a>","content":"\n   6.2.5 Output of Characters\n   The rendering of the encoded text is a complicated process that\n   depends largely on the purpose, external requirements, local\n   equipment and so forth, it is thus outside the scope of coverage\n   for these Guidelines. \n   It might however nevertheless be helpful to put some of the\n   terminology used for the rendering process in the context of the\n   discussion of this chapter.  As was mentioned above, Unicode\n   encodes abstract characters, not specific glyphs.  For any\n   process that makes characters visible, however, concrete,\n   specifically designed glyph shapes have to be used.  For a printing\n   process, for example, these shapes\n   describe exactly at which point ink has to be put on the paper\n   and which areas have to be left blank.  If we want to print a character\n   from the Latin script, besides the selection of\n   the overall glyph shape, this process also requires that a\n   specific weight of the font has been selected, a specific size\n   and to what degree the shape should be slanted.  Beyond\n   individual characters, the overall typesetting process also\n   follows specific rules of how to calculate the distance between\n   characters, how much whitespace occurs between words, at which\n   points line breaks might occur and so forth.  \n   If we concern ourselves only with the rendering process of the\n   characters themselves, leaving out all these other parameters, we\n   will realize that of all the information required for this process, only a small\n   amount will be drawn from the encoded text itself.  This\n   information is the code point used to encode the character in the\n   document.  With this information, the font selected for printing\n   will be queried to provide a glyph shape for this character.\n   Some modern font formats (e.g. OpenType) implement a\n   sophisticated mapping from a code point to the glyph selected,\n   which might take into account surrounding characters (to create\n   ligatures where necessary) and the language or even area this character is\n   printed for to accommodate different typesetting traditions and\n   differences in the usage of glyphs.  \n   A TEI document might provide some of the information that is\n   required for this process, for example by identifying the\n   linguistic context with the xml:lang attribute. The\n   selection of fonts and sizes is usually done in a stylesheet,\n   while the actual layout of a page is determined by the\n   typesetting system used. Similarly, if a document is rendered\n   for publication on the Web, information of this kind can be\n   shipped with the document in a stylesheet.4\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CH#CH\">6 Languages and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=CHCS#CHCS\">6.2 Characters and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=D4-45b#D4-45b\">6.2.6 Unicode and\n   XML</a>","content":" 6.2.6 Unicode and\n   XML \n   XML was designed with Unicode in mind as its means of representing\n   abstract characters. It is possible to use other character encoding\n   schemes, but in general they are best avoided, as you run the risk \n   of encountering compatibility issues with different XML processors,\n   as well as potential difficulties with rendering their output. We \n   recommend using the UTF-8 encoding, which for the Basic\n   Latin range is identical to ASCII, and which uses a variable-length\n   set of bytes to represent characters. It should be noted that it is\n   not sufficient simply to declare in the XML Declaration that a document\n   is in UTF-8 format. Doing so merely means that processors will treat the\n   content therein as if it were UTF-8, and may fail to process the \n   document if it is not. For further discussion of UTF-8, see the \n   section below on 6.2.8 Issues Arising from the Internal Representations of\n   Unicode. \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CH#CH\">6 Languages and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=CHCS#CHCS\">6.2 Characters and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=D4-46#D4-46\">6.2.7 Special Aspects of Unicode Character Definitions</a>","content":" \n  6.2.7 Special Aspects of Unicode Character Definitions \n   \n   \n  \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CH#CH\">6 Languages and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=CHCS#CHCS\">6.2 Characters and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=D4-46#D4-46\">6.2.7 Special Aspects of Unicode Character Definitions</a><a class=\"breadcrumb\" href=\"p5.xml?id=D4-46-1#D4-46-1\">6.2.7.1 Compatibility Characters</a>","content":" \n   6.2.7.1 Compatibility Characters \n   The principles of Unicode are judiciously tempered with\n   pragmatism. This means, among other things, that the actual\n   repertoire of characters which the standard encodes, especially\n   those parts dating from its earlier days, include a number of\n   items which on a strict interpretation of the Unicode\n   Consortium's theoretical approach should not have been regarded\n   as abstract characters in their own right. Some of these\n   characters are grouped together into a\n   code-point regions assigned to  compatibility characters.\n   Ligatures are a case in point. Ligatures (e.g. the joining of\n   adjacent lowercase letters s and t or f and i in Latin\n   scripts, whether produced by a scribal practice of not lifting\n   the pen between strokes or dictated by the aesthetics of a type\n   design) are representational features with no added semantic\n   value beyond that of the two letters they unite (though for\n   historians of typography their presence and form in a given\n   edition may be of scholarly significance). However, by the time\n   the Unicode standard was first being debated, it had become\n   common practice to include single glyphs representing the more\n   common ligatures in the  repertoires of some typesetting devices\n   and high-end printers, and for the coded character sets built\n   into those devices to use a single code point for such glyphs,\n   even though they represent two distinct abstract characters. So\n   as to increase the acceptance of Unicode among the makers and\n   users of such devices, it was agreed that some such\n   pseudo-characters should be incorporated into the standard as compatibility characters.\n   Nevertheless, if a project requires the presence of such\n   ligatured forms to be encoded, this should normally be done via\n   markup, not by the use of a compatibility character. That way,\n   the presence of the ligature can still be identified (and, if\n   desired, rendered visually) where appropriate, but indexing and\n   retrieval software will treat the code points in the document as\n   a simple sequential occurrence of the two constituent characters\n   concerned and so correctly align their semantics with\n   non-ligatured equivalents. Such ligatures should not be confused\n   with digraphs (usually) indicating diphthongs, as in the French\n   word \"cœur\". A digraph is an atomic orthographic unit\n   representing an abstract character in its own right, not purely an amalgamation\n   of glyphs, and indexing and retrieval software will need to \n   treat it as such. Where a digraph occurs in a source text, it\n   should normally be encoded using the appropriate code point for\n   the single abstract character which it represents.  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CH#CH\">6 Languages and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=CHCS#CHCS\">6.2 Characters and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=D4-46#D4-46\">6.2.7 Special Aspects of Unicode Character Definitions</a><a class=\"breadcrumb\" href=\"p5.xml?id=D4-46-2#D4-46-2\">6.2.7.2 Precomposed and Combining Characters and\n   Normalization</a>","content":" \n   6.2.7.2 Precomposed and Combining Characters and\n   Normalization    \n    The treatment of characters with\n   diacritical marks within Unicode shows a similar combination of\n   rigour and pragmatism. It is obvious enough that it would be\n   feasible to represent many characters with diacritical marks in\n   Latin and some other scripts by a sequence of code points, where\n   one code point designated the base character and the remainder\n   represented one or more diacritical marks that were to be\n   combined with the base character to produce an appropriate\n   glyphic rendering of the abstract character concerned. From its\n   earliest phase, the Unicode Consortium espoused this view in\n   theory but was prepared in practice to compromise by assigning\n   single code points to precomposed characters which were\n   already commonly assigned a single distinctive code point in\n   existing encoding schemes. This means, however, that for quite a\n   large number of commonly-occurring abstract characters, Unicode\n   has two different, but logically and semantically equivalent\n   encodings: a precomposed single code point, and a code point\n   sequence of a base character plus one or more combining\n   diacritics. Scripts more recently added to Unicode no longer\n   exhibit this code-point duplication (in current practice no new\n   precomposed characters are defined where the use of combining\n   characters is possible) but this does nothing to remove the\n   problem caused by the duplications from older character sets that \n   have been permanently embodied in Unicode. Together with essentially analogous\n   issues arising from the encoding of certain East Asian\n   ideographs. This duplication gives rise to the need to practice\n   normalization of Unicode documents. Normalization is\n   the process of ensuring that a given abstract character is represented in one\n   way only in a given Unicode document or document collection.\n   The Unicode Consortium provides four standard normalization\n   forms, of which the Normalization Form C (NFC)\n   seems to be most appropriate for text encoding projects. The NFC, as \n   far as possible, defines conversions for all base characters followed \n   by one or more combining characters into the corresponding precomposed \n   characters. The World Wide Web Consortium has produced a document entitled\n   Character Model for the World Wide Web 1.05, which among other things\n   discusses normalization issues and outlines some relevant\n   principles. An authoritative reference is Unicode Standard Annex\n   #15 Unicode Normalization Forms6.  \n   It is important that every Unicode-based project should agree\n   on, consistently implement, and fully document a comprehensive and\n   coherent normalization practice. As well as ensuring data integrity\n   within a given project, a consistently implemented and properly\n   documented normalization policy is essential for successful\n   document interchange. While different input methods may themselves differ\n   in what normalization form they use, any programming language that implements Unicode\n   will provide mechanisms for converting between normalization forms, so it \n   is easy in practice to ensure that all documents in a project are in a consistent form,\n   even if different methods are used to enter data.\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CH#CH\">6 Languages and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=CHCS#CHCS\">6.2 Characters and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=D4-46#D4-46\">6.2.7 Special Aspects of Unicode Character Definitions</a><a class=\"breadcrumb\" href=\"p5.xml?id=D4-46-3#D4-46-3\">6.2.7.3 Character Semantics</a>","content":" \n   6.2.7.3 Character Semantics    \n   In addition to the Universal Character Set itself, the\n    Unicode Consortium maintains a database of additional character\n    semantics7. This\n    includes names for each character code point and normative\n    properties for it.  Character properties, as given in this\n    database, determine the semantics and thus the intended use of a\n    code point or character. The database also contains information that might be\n    needed for correctly processing this character for different\n    purposes. It is an important reference in determining which Unicode \n    code point to use to encode a certain character.  \n   In addition to the printed documentation and lists made\n   available by the Unicode consortium, the information it contains\n   may also be accessed by a number of search systems over the Web\n   (e.g. http://www.eki.ee/letter/). Examples of\n   character properties included in the database include case, numeric\n   value, directionality, and, (where applicable) status as a\n   compatibility character8. Where a\n   project undertakes local definition of characters with code points\n   in the PUA, it is desirable that any relevant additional\n   information about the characters concerned should be recorded in an\n   analogous way, as further discussed under 5 Characters, Glyphs, and Writing Modes.\n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CH#CH\">6 Languages and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=CHCS#CHCS\">6.2 Characters and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=D4-48#D4-48\">6.2.8 Issues Arising from the Internal Representations of\n   Unicode</a>","content":" \n   6.2.8 Issues Arising from the Internal Representations of\n   Unicode \n   In theory it should not be necessary for encoders to have any\n   knowledge of the various ways in which Unicode code points can\n   be represented internally within a document or in the memory of\n   a processing system, but experience shows that problems\n   frequently arise in this area because of mistaken practice or\n   defective software, and in order to recognize the resulting\n   symptoms and correct their causes an outline knowledge of\n   certain aspects of Unicode internal representation is desirable.\n   There are three encodings of Unicode available for use: UTF-8, which\n   uses 1–4 bytes per character, UTF-16, which uses 2–4, and UTF-32,\n   which uses 4 bytes per character. Current practice for documents to\n   be transmitted via the Web recommends only UTF-8.9\n    \n    \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CH#CH\">6 Languages and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=CHCS#CHCS\">6.2 Characters and Character Sets</a><a class=\"breadcrumb\" href=\"p5.xml?id=D4-48#D4-48\">6.2.8 Issues Arising from the Internal Representations of\n   Unicode</a><a class=\"breadcrumb\" href=\"p5.xml?id=D4-48-1#D4-48-1\">6.2.8.1 Encoding Errors Related to UTF-8</a>","content":" \n   6.2.8.1 Encoding Errors Related to UTF-8 \n   The code points assigned by Unicode 3.0 and later are\n    notionally 32-bit integers, and the most straightforward way to\n    represent each such integer in computer storage would be to use\n    4 eight-bit bytes. However, many of the code points for\n    characters most commonly used in Latin scripts can be\n    represented in one byte only and the vast majority of the\n    remainder which are in common use (including those assigned\n    from the most frequently used PUA range) can be expressed in\n    two bytes alone. This accounts for the use of UTF-8 and UTF-16\n    and their special place in the XML standard. UTF-8 and UTF-16\n    are ways of representing 32-bit code points in an economical\n    way. UTF-8 is a variable length encoding: the more\n    significant bits there are in the underlying code point (or in\n    everyday terminology the bigger the number used to represent\n    the character), the more bytes UTF-8 uses to encode it. What\n    makes UTF-8 particularly attractive for representing Latin\n    scripts, explaining its status as the default encoding in XML\n    documents, is that all code points that can be expressed in\n    seven or fewer bits (the 127 values in the original ASCII\n    character set) are also encoded as the same seven or fewer bits\n    (and therefore in a single byte) in UTF-8. That is why a\n    document which is actually encoded in pure 7-bit ASCII can be\n    fed to an XML processor without alteration and without its\n    encoding being explicitly declared: the processor will regard\n    it as being in the UTF-8 representation of Unicode and be able\n    to handle it correctly on that basis.\n   However, even within the domain of Latin-based scripts, some\n    projects have documents which use characters from 8 bit\n    extensions to ASCII, e.g. those in the ISO-8859-n series of\n    encodings, and the way characters which under ISO-8859-n use\n    all eight bits are encoded in UTF-8 is significantly different,\n    giving rise to puzzling errors. Abstract characters that have a\n    single byte code point where the\n    highest bit is set (that is, they have a decimal numeric\n    representation between 129 and 255) are encoded in ISO-8859-n\n    as a single byte with the same value\n    as the code point. But in UTF-8 code-point values inside that\n    range are expressed as a two byte\n    sequence. That is to say, the abstract character in question is\n    no longer represented in the file or in memory by the same number\n    as its code-point value: it is transformed (hence the T in\n    UTF) into a sequence of two different numbers. Now as a\n    side-effect of the way such  UTF-8 sequences are derived from\n    the underlying code-point value, many of the single-byte\n    eight-bit values employed in ISO-8859-n encodings are illegal\n    in UTF-8.\n   This complicated situation has a simple consequence which can\n    cause great bewilderment. XML processors will effortlessly\n    handle character data in pure 7-bit ASCII without that encoding\n    needing to be declared to the parser, and will similarly accept\n    documents encoded in an undeclared ISO-8859-n encoding if they\n    happen to use no characters outside the strict ASCII subset of\n    the ISO character sets; but the parse will immediately fail if\n    an eight-bit character from an ISO-8859-n set is encountered in\n    the input stream, unless the document's encoding has been\n    explicitly and correctly declared. Explicitly declaring the\n    encoding ought to solve the problem, and if the file is\n    correctly encoded throughout, it will do so. But projects dealing \n    with documents of sufficient age may find that they have to deal with some files  encoded\n    in UTF-8 along with others in, say, ISO-8859-1. Such encoding\n    differences may go unnoticed, especially if the proportion of\n    characters where the internal encodings are distinguishable is\n    relatively small (for example in a long English text with a\n    smattering of French words). These types of error may or may not\n    manifest in actual processing errors, and may only become visible\n    as garbage characters in the eventual display of documents.\n   In projects that routinely handle documents in non-Latin\n    scripts, everyone is well aware of the need to ensure correct\n    and consistent encoding, so in such places mixed encoding\n    problems seldom arise, and when they do are readily identified\n    and remedied. Real confusion tends to arise, however, in\n    projects which have a low awareness of the issues because they\n    employ predominantly unaccented Latin characters, with only\n    thinly-distributed instances of accented letters, or other\n    special characters where the internal representation under\n    ISO-8859-n and UTF-8 are different (such as the copyright\n    symbol, or, a frequent troublemaker where eventual HTML output\n    is envisaged, the non-breaking space). Even, or especially,\n    if such projects view themselves as concerned only with\n    English documents, the close relationship between XML and\n    Unicode means they will need to acquire an understanding of\n    these encoding issues and develop procedures which assure\n    consistency and integrity of encoding and its correct\n    declaration, including the use of appropriate software for\n    transcoding and verification.  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a>","content":"\n  1 The TEI Infrastructure\n  This chapter describes the infrastructure for the encoding scheme defined by these Guidelines.\n    It introduces the conceptual framework within which the following chapters are to be understood,\n    and the means by which that conceptual framework is implemented. It assumes some familiarity\n    with XML and XML schemas (see chapter 5 A Gentle Introduction to XML) but is intended to be accessible to\n    any user of these Guidelines. Other chapters supply further technical details, in particular\n    chapter 22 Documentation Elements which describes the XML schema used to express these Guidelines\n    themselves, and chapter 23 Using the TEI which combines a discussion of modification and\n    conformance issues with a description of the intended behaviour of an ODD processor; these\n    chapters should be read by anyone intending to implement a new TEI-based system.\n  The TEI encoding scheme consists of a number of modules, each of which declares\n    particular XML elements and their attributes. Part of an element's declaration includes its\n    assignment to one or more element classes. Another part defines its possible\n    content and attributes with reference to these classes. This indirection gives the TEI system\n    much of its strength and its flexibility. Elements may be combined more or less freely to form a\n      schema appropriate to a particular set of requirements. It is also easy to add\n    new elements which reference existing classes or elements to a schema, as it is to exclude some\n    of the elements provided by any module included in a schema.\n  In principle, a TEI schema may be constructed using any combination of modules. However,\n    certain TEI modules are of particular importance, and should always be included in all but\n    exceptional circumstances: the module tei described in the present\n    chapter is of this kind because it defines classes, macros, and datatypes which are used by all\n    other modules. The core module, defined in chapter 3 Elements Available in All TEI Documents contains declarations for elements and attributes which are likely to be needed\n    in almost any kind of document, and is therefore recommended for global use. The header module defined in chapter 2 The TEI Header provides\n    declarations for the metadata elements and attributes constituting the TEI header, a component\n    which is required for TEI conformance, while the textstructure\n    module defined in chapter 4 Default Text Structure declares basic structural elements needed for the\n    encoding of most book-like objects. Most schemas will therefore need to include these four\n    modules.\n  The specification for a TEI schema is itself a TEI document, using elements from the module\n    described in chapter 22 Documentation Elements: we refer to such a document informally as an\n      ODD document, from the design goal originally formulated for the system: One\n      Document Does it all. Stylesheets for maintaining and processing ODD documents are\n    maintained by the TEI, and these Guidelines are also maintained as such a document. As further\n    discussed in 23.5 Implementation of an ODD System, an ODD document can be processed to generate a schema\n    expressed using any of the three schema languages currently in wide use: the XML DTD language,\n    the ISO RELAX NG language, or the W3C Schema language, as well as to generate documentation such\n    as the Guidelines and their associated web site.\n  The bulk of this chapter describes the TEI infrastructure module itself. Although it may be\n    skipped at a first reading, an understanding of the topics addressed here is essential for\n    anyone planning to take full advantage of the TEI customization techniques described in chapter\n      23.3 Customization.\n  The chapter begins by briefly characterizing each of the modules available in the TEI scheme.\n    Section 1.2 Defining a TEI Schema describes in general terms the method of constructing a TEI schema\n    in a specific schema language such as XML DTD language, RELAX NG, or W3C Schema.\n  The next and largest part of the chapter introduces the attribute and element classes used to\n    define groups of elements and their characteristics (section 1.3 The TEI Class System).\n  Finally, section 1.4 Macros introduces the concept of macros, which\n    are used to express some commonly used content models, and lists the datatypes used\n    to constrain the range of legal values for TEI attributes (section 1.4.2 Datatype Specifications). \n  \n  \n  \n  \n  \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STMA#STMA\">1.1 TEI Modules</a>","content":"\n    1.1 TEI Modules\n    These Guidelines define several hundred elements and attributes for marking up documents of\n      any kind. Each definition has the following components: a prose descriptiona formal declaration, expressed using a special-purpose XML vocabulary defined by\n          these Guidelines in combination with elements taken from the ISO schema language RELAX\n          NGusage examples\n    Each chapter of these Guidelines presents a group of related elements, and also defines a\n      corresponding set of declarations, which we call a module. All the definitions\n      are collected together in the reference sections provided as an appendix. Formal declarations\n      for a given chapter are collected together within the corresponding module. For convenience,\n      each element is assigned to a single module, typically for use in some specific application\n      area, or to support a particular kind of usage. A module is thus simply a convenient way of\n      grouping together a number of associated element declarations. In the simple case, a TEI\n      schema is made by combining together a small number of modules, as further described in\n      section 1.2 Defining a TEI Schema below.\n    The following table lists the modules defined by the current release of these Guidelines: \n      \n      \n        \n          Module name\n          Formal public identifier\n          Where defined\n        \n        \n          analysis\n          Analysis and Interpretation\n          17 Simple Analytic Mechanisms\n        \n        \n          certainty\n          Certainty and Uncertainty\n          21 Certainty, Precision, and Responsibility\n        \n        \n          core\n          Common Core\n          3 Elements Available in All TEI Documents\n        \n        \n          corpus\n          Metadata for Language Corpora\n          15 Language Corpora\n        \n        \n        \n          dictionaries\n          Print Dictionaries\n          9 Dictionaries\n        \n        \n          drama\n          Performance Texts\n          7 Performance Texts\n        \n        \n          figures\n          Tables, Formulae, Figures\n          14 Tables, Formulæ, Graphics, and Notated Music\n        \n        \n          gaiji\n          Character and Glyph Documentation\n          5 Characters, Glyphs, and Writing Modes\n        \n        \n          header\n          Common Metadata\n          2 The TEI Header\n        \n        \n          iso-fs\n          Feature Structures\n          18 Feature Structures\n        \n        \n          linking\n          Linking, Segmentation, and Alignment\n          16 Linking, Segmentation, and Alignment\n        \n        \n          msdescription\n          Manuscript Description\n          10 Manuscript Description\n        \n        \n          namesdates\n          Names, Dates, People, and Places\n          13 Names, Dates, People, and Places\n        \n        \n          nets\n          Graphs, Networks, and Trees\n          19 Graphs, Networks, and Trees\n        \n        \n          spoken\n          Transcribed Speech\n          8 Transcriptions of Speech\n        \n        \n          tagdocs\n          Documentation Elements\n          22 Documentation Elements\n        \n        \n          tei\n          TEI Infrastructure\n          1 The TEI Infrastructure\n        \n        \n        \n          textcrit\n          Text Criticism\n          12 Critical Apparatus\n        \n        \n          textstructure\n          Default Text Structure\n          4 Default Text Structure\n        \n        \n          transcr\n          Transcription of Primary Sources\n          11 Representation of Primary Sources\n        \n        \n          verse\n          Verse\n          6 Verse\n        \n      \n    \n    For each module listed above, the corresponding chapter gives a full description of the\n      classes, elements, and macros which it makes available when it is included in a schema. Other\n      chapters of these Guidelines explore other aspects of using the TEI scheme.\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STIN#STIN\">1.2 Defining a TEI Schema</a>","content":"\n    1.2 Defining a TEI Schema\n    To determine that an XML document is valid (as opposed to merely well-formed), its structure\n      must be checked against a schema, as discussed in chapter 5 A Gentle Introduction to XML. For a valid TEI\n      document, this schema must be a conformant TEI schema, as further defined in chapter 23.4 Conformance. Local systems may allow their schema to be implicit, but for interchange\n      purposes the schema associated with a document must be made explicit. The method\n      of doing this recommended by these Guidelines is to provide explicitly or by reference a TEI\n      schema specification against which the document may be validated.\n    A TEI-conformant schema is a specific combination of TEI modules, possibly also including\n      additional declarations that modify the element and attribute declarations contained by each\n      module, for example to suppress or rename some elements. The TEI provides an\n      application-independent way of specifying a TEI schema by means of the schemaSpec\n      element defined in chapter 22 Documentation Elements. The same system may also be used to specify a\n      schema which extends the TEI by adding new elements explicitly, or by reference to other XML\n      vocabularies. In either case, the specification may be processed to generate a formal schema,\n      expressed in a variety of specific schema languages, such as XML DTD language, RELAX NG, or\n      W3C Schema. These output schemas can then be used by an XML processor such as a validator or\n      editor to validate or otherwise process documents. Further information about the processing of\n      a TEI formal specification is given in chapter 23 Using the TEI.\n    \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STIN#STIN\">1.2 Defining a TEI Schema</a><a class=\"breadcrumb\" href=\"p5.xml?id=STINsimpleExample#STINsimpleExample\">1.2.1 A Simple Customization</a>","content":"\n      1.2.1 A Simple Customization\n      The simplest customization of the TEI scheme combines just the four recommended modules\n        mentioned above. In ODD format, this schema specification takes this form: \n      This schema specification contains references to each of four modules, identified by the\n          key attribute on the moduleRef element. The schema specification\n        itself is also given an identifier (TEI-minimal). An ODD processor will\n        generate an appropriate schema from this set of declarations, expressed using the XML DTD\n        language, the ISO RELAX NG language, the W3C Schema language, or in principle any other\n        adequately powerful schema language. The resulting schema may then be associated with the\n        document instance by one of a number of different mechanisms, as further described in\n        chapter 5 A Gentle Introduction to XML. The start point (or root element) of document instances to be\n        validated against the schema is specified by means of the start attribute.\n        Further information about the processing of an ODD specification is given in 23.5 Implementation of an ODD System. \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STIN#STIN\">1.2 Defining a TEI Schema</a><a class=\"breadcrumb\" href=\"p5.xml?id=STINlargerExample#STINlargerExample\">1.2.2 A Larger Customization</a>","content":"\n      1.2.2 A Larger Customization\n      These Guidelines introduce each of the modules making up the TEI scheme one by one, and\n        therefore, for clarity of exposition, each chapter focusses on elements drawn from a single\n        module. In reality, of course, the markup of a text will draw on elements taken from many\n        different modules, partly because texts are heterogeneous objects, and partly because\n        encoders have different goals. Some examples of this heterogeneity include: a text may be a collection of other texts of different types: for example, an\n            anthology of prose, verse, and drama;a text may contain other smaller, embedded texts: for example, a poem or song\n            included in a prose narrative;some sections of a text may be written in one form, and others in a different form:\n            for example, a novel where some chapters are in prose, others take the form of\n            dictionary entries, and still others the form of scenes in a play; an encoded text may include detailed analytic annotation, for example of rhetorical\n            or linguistic features; an encoded text may combine a literal transcription with a diplomatic edition of the\n            same or different sources; the description of a text may require additional specialized metadata elements, for\n            example when describing manuscript material in detail.\n      The TEI provides mechanisms to support all of these and many other use cases. The\n        architecture permits elements and attributes from any combination of modules to co-exist\n        within a single schema. Within particular modules, elements and attributes are provided to\n        support differing views of the granularity of a text, for example:\n          a definition of a corpus or collection as a series of TEI documents,\n            sharing a common TEI header (see chapter 15 Language Corpora)a definition of composite texts which combine optional front- and back-matter with a\n            group of collected texts, themselves possibly composite (see section 4.3.1 Grouped Texts)an element for the representation of embedded texts, where one\n            narrative appears to float within another (see section 4.3.2 Floating Texts)\n      Subsequent chapters of these Guidelines describe in detail markup constructs appropriate\n        for these and many other possible features of interest. The markup constructs can be\n        combined as needed for any given set of applications or project.\n      For example, a project aiming to produce an ambitious digital edition of a collection of\n        manuscript materials, to include detailed metadata about each source, digital images of the\n        content, along with a detailed transcription of each source, and a supporting biographical\n        and geographical database might need a schema combining several modules, as follows: \n      Alternatively, a simpler schema might be used for a part of such a project: those preparing\n        the transcriptions, for example, might need only elements from the core, textstructure, and transcr modules, and might therefore prefer to use a simpler schema such as that\n        generated by the following: \n      \n      The TEI architecture also supports more detailed customization beyond the simple selection\n        of modules. A schema may suppress elements from a module, suppress some of their attributes,\n        change their names, or even add new elements and attributes. Detailed discussion of the kind\n        of modification possible in this way is provided in 23.3 Customization and conformance\n        rules relating to their application are discussed in 23.4 Conformance. These facilities\n        are available for any schema language (though some features may not be available in all\n        languages). The ODD language also makes it possible to combine TEI and non-TEI modules into\n        a single schema, provided that the non-TEI module is expressed using the RELAX NG schema\n        language (see further 22.8.2 Combining TEI and Non-TEI Modules).\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STEC#STEC\">1.3 The TEI Class System</a>","content":"\n    1.3 The TEI Class System\n    The TEI scheme distinguishes about five hundred different elements. To aid comprehension,\n      modularity, and modification, the majority of these elements are formally classified in some\n      way. Classes are used to express two distinct kinds of commonality among elements. The\n      elements of a class may share some set of attributes, or they may appear in the same locations\n      in a content model. A class is known as an attribute class if its members share\n      attributes, and as a model class if its members appear in the same locations. In\n      either case, an element is said to inherit properties from any classes of which\n      it is a member. \n    Classes (and therefore elements which are members of those classes) may also inherit\n      properties from other classes. For example, supposing that class A is a member (or a\n        subclass) of class B, any element which is a member of class A will inherit not\n      only the properties defined by class A, but also those defined by class B. In such a\n      situation, we also say that class B is a superclass of class A. The properties of\n      a superclass are inherited by all members of its subclasses. \n    A basic understanding of the classes into which the TEI scheme is organized is strongly\n      recommended and is essential for any successful customization of the system.\n    \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STEC#STEC\">1.3 The TEI Class System</a><a class=\"breadcrumb\" href=\"p5.xml?id=STECAT#STECAT\">1.3.1 Attribute Classes</a>","content":"\n      1.3.1 Attribute Classes\n      An attribute class groups together elements which share some set of common attributes.\n        Attribute classes are given names composed of the prefix att., often followed\n        by an adjective. For example, the members of the class att.canonical have in common a key and a ref attribute,\n        both of which are inherited from their membership in the class rather than individually\n        defined for each element. These attributes are said to be defined by (or inherited from) the\n          att.canonical class. If another element were to be added to\n        the TEI scheme for which these attributes were considered useful, the simplest way to\n        provide them would be to make the new element a member of the att.canonical class. Note also that this method ensures that the attributes in\n        question are always defined in the same way, taking the same default values etc., no matter\n        which element they are attached to.\n      Some attribute classes are defined within the tei\n        infrastructural module and are thus globally available. Other attribute classes are specific\n        to particular modules and thus defined in other chapters. Attributes defined by such classes\n        will not be available unless the module concerned is included in a schema.\n      The attributes provided by an attribute class are those specified by the class itself,\n        either directly, or by inheritance from another class. For example, the attribute class\n          att.pointing.group provides attributes domains and\n          targFunc to all of its members. This class is however a subclass of the att.pointing class, from which its members also inherit the\n        attributes target, targetLang and evaluate. Members of the\n        class att.pointing will thus have these three attributes, while\n        members of the class att.pointing.group will have all five.\n      Note that some modules define superclasses of an existing infrastructural class. For\n        example, the global attribute class att.divLike makes attributes\n          org and sample available, while the att.metrical class, which is specific to the verse\n        module, provides attributes met, real, and rhyme. Because\n          att.metrical is defined as a superclass of att.divLike, all five of these attributes are available to elements; the\n        declaration for att.metrical adds its three attributes to the\n        three already defined by att.divLike when the verse module is included in a schema. If, however, this module is\n        not included in a schema, then the att.divLike class supplies\n        only the two attributes first mentioned.\n      Attributes specific to particular modules are documented along with the relevant module\n        rather than in the present chapter. One particular attribute class, known as att.global, is common to all modules, and is therefore described in\n        some detail in the next section. A full list of all attribute classes is given in 2 Attribute Classes below. \n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STEC#STEC\">1.3 The TEI Class System</a><a class=\"breadcrumb\" href=\"p5.xml?id=STECAT#STECAT\">1.3.1 Attribute Classes</a><a class=\"breadcrumb\" href=\"p5.xml?id=STGA#STGA\">1.3.1.1 Global Attributes</a>","content":"\n        1.3.1.1 Global Attributes\n        The following attributes are defined in the infrastructure module for every TEI element. \n            <att.global> provides attributes common to all elements in the TEI encoding scheme.\n          \n        \n        Some of these attributes (specifically xml:id, n, xml:lang, \n          xml:base and xml:space) are provided by the att.global attribute class itself.\n          The others are provided by one its subclasses att.global.rendition,\n          att.global.responsibility, or att.global.source.\n          Their usage is discussed in the following subsections.Several other globally-available\n            attributes are defined by other subclasses of the att.global class. These \n          are provided by other modules, and are therefore discussed in the chapter discussing that module. \n          A brief summary table is provided in section 1.3.1.1.7 Other Globally Available Attributes below.\n        \n        \n        \n        \n     \n        \n        \n        \n        \n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STEC#STEC\">1.3 The TEI Class System</a><a class=\"breadcrumb\" href=\"p5.xml?id=STECAT#STECAT\">1.3.1 Attribute Classes</a><a class=\"breadcrumb\" href=\"p5.xml?id=STGA#STGA\">1.3.1.1 Global Attributes</a><a class=\"breadcrumb\" href=\"p5.xml?id=STGAid#STGAid\">1.3.1.1.1 Element Identifiers and Labels</a>","content":"\n          1.3.1.1.1 Element Identifiers and Labels\n          The value supplied for the xml:id attribute must be a legal\n              name, as defined in the World Wide Web Consortium's XML Recommendation. This means that it\n            must begin with a letter, or the underscore character (_), and contain no\n            characters other than letters, digits, hyphens, underscores, full stops, and certain\n            combining and extension characters.1\n          In XML names (and thus the values of xml:id in an XML TEI document)\n            uppercase and lowercase letters are distinguished, and thus\n              partTime and parttime are two distinctly\n            different names, and could (though perhaps unwisely) be used to denote two different\n            element occurrences.\n          If two elements are given the same identifier, a validating XML parser will signal a\n            syntax error. The following example, therefore, is not valid: bibliography\n          \n          For a discussion of methods of providing unique identifiers for elements, see section\n              3.11.2 Creating New Reference Systems.\n          The n attribute also provides an identifying name or number for an element,\n            but in this case the information need not be a legal xml:id value. Its value\n            may be any string of characters; typically it is a number or other similar enumerator or\n            label. For example, the numbers given to the items of a numbered list may be recorded\n            with the n attribute; this would make it possible to record errors in the\n            numeration of the original, as in this list of chapters, transcribed from a faulty\n            original in which the number 10 is used twice, and 11 is omitted: bibliography The n attribute may also be used to record non-unique names\n            associated with elements in a text, possibly together with a unique identifier as in the\n            following example: \n          \n          As noted above there is no requirement to record a value for either the\n              xml:id or the n attribute. Any XML processor can identify the\n            sequential position of one element within another in an XML document without any\n            additional tagging. An encoding in which each line of a long poem is explicitly labelled\n            with its numerical sequence such as the following  is therefore probably redundant.\n        "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STEC#STEC\">1.3 The TEI Class System</a><a class=\"breadcrumb\" href=\"p5.xml?id=STECAT#STECAT\">1.3.1 Attribute Classes</a><a class=\"breadcrumb\" href=\"p5.xml?id=STGA#STGA\">1.3.1.1 Global Attributes</a><a class=\"breadcrumb\" href=\"p5.xml?id=STGAla#STGAla\">1.3.1.1.2 Language Indicators</a>","content":"\n          1.3.1.1.2 Language Indicators\n          The xml:lang attribute indicates the natural language and writing system\n            applicable to the content of a given element. If it is not specified, the value is\n            inherited from that of the immediately enclosing element. As a rule, therefore, it is\n            simplest to specify the base language of the text on the TEI element, and allow\n            most elements to take the default value for xml:lang; the language of an\n            element then need be explicitly specified only for elements in languages other than the\n            base language. For this reason, it is recommended practice to supply a default value for\n            the xml:lang attribute, either on the TEI root element, or on both\n            the teiHeader and the text element. The latter is appropriate in the\n            not uncommon case where the text element in a TEI document uses a different default\n            language from that of the TEI header attached to it. Other language shifts in the source\n            should be explicitly identified by use of the xml:lang attribute on an\n            element at an appropriate level wherever possible. \n          In the following example schematic, an English language TEI header is attached to an\n            English language text: \n          \n          The same effect would be obtained by specifying the default language for both header\n            and text: \n          \n          The latter approach is necessary in the case where the two differ: for example, where\n            an English language header is applied to a French text: \n          \n          The same principle applies at any hierarchic level. In the following example, the\n            default language of the text is French, but one section of it is in German: \n          \n          Similarly, in the following example the xml:lang attribute on the\n              term element allows us to record the fact that the technical terms used are\n            Latin rather than English; no xml:lang attribute is needed on the q\n            element, by contrast, because it is in the same language as its parent. bibliography\n          \n          Note that in cases where it is advisable or necessary to identify the language of the\n            text that is pointed at, the (non-global) attribute targetLang should be\n            used, for example in  the pointer references text written in French.\n          The values used for the xml:lang and targetLang attributes must\n            be constructed in a particular way, using values from standard lists. See further 6.1 Language Identification.\n          Additional information about a particular language may be supplied in the\n              language element within the header (see section 2.4.2 Language Usage).\n        "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STEC#STEC\">1.3 The TEI Class System</a><a class=\"breadcrumb\" href=\"p5.xml?id=STECAT#STECAT\">1.3.1 Attribute Classes</a><a class=\"breadcrumb\" href=\"p5.xml?id=STGA#STGA\">1.3.1.1 Global Attributes</a><a class=\"breadcrumb\" href=\"p5.xml?id=STGAre#STGAre\">1.3.1.1.3 Rendition Indicators</a>","content":"\n          1.3.1.1.3 Rendition Indicators\n          The rend, rendition, and style attributes are all used\n            to give information about the physical presentation of the text in the source. In the\n            following example, rend is used to indicate that both the emphasized word and\n            the proper name are printed in italics: bibliography The same effect might be achieved using the style\n            attribute, as follows: bibliography If all or most emph and\n              name elements are rendered in the text by italics, it will be more convenient\n            to register that fact in the TEI header once and for all (using the rendition\n            element discussed below) and specify a rend or style value only\n            for any elements which deviate from the stated rendition. \n          The main difference between rend attribute and style is that the\n            value used for the former may contain one or more tokens from any vocabulary devised by\n            the encoder, separated by space characters, whereas the value used for the latter must\n            be a single string taken from a formally-defined style definition language such as CSS.\n            The rend attribute values are sequence-indeterminate set of\n            whitespace-separated tokens, whereas style values allow whitespace and\n            sequence relationships as part of the formally-defined style definition language.\n          The rendition element defined in 2.3.4 The Tagging Declaration may be used to hold\n            repeatedly-used format descriptions. A rendition element can then be associated\n            with any element, either by default, or by means of the global rendition\n            attribute. For example: bibliography\n          \n          The rendition attribute always points to one or more rendition\n            elements, each of which defines some aspect of the rendering or appearance of the text\n            in its original form. These details may most conveniently be described using a formal\n            style definition language, such as CSS (1 ) or XSL-FO (1 ); in some other formal language developed for a specific project; or\n            even informally in running prose. Although languages such as CSS and XSL-FO are\n            generally used to describe document output to screen or print, they nonetheless provide\n            formal and precise mechanisms for describing the appearance of source documents,\n            especially print documents, but also many aspects of manuscript documents. For example,\n            both CSS and XSL-FO provide mechanisms for describing typefaces, weight, and styles;\n            character and line spacing; and so on.\n          As noted above, the style attribute is provided for encoders wishing to\n            describe the appearance of individual source elements using a language such as CSS\n            directly rather than by reference to a rendition element. Its value may be any\n            expression in the chosen formal style definition language. \n          Formal definition languages such as CSS typically identity a series of\n              properties (such as font-style or margin-left) for which\n              values are specified. A sequence of such property-value pairs makes up a\n            stylesheet. The TEI uses such languages simply to describe the appearance of a source\n            document, rather than to control how it should be formatted. \n          In the TEI scheme, it is possible to supply information about the appearance of\n            elements within a source document in the following distinct ways: \n\t    One or more properties may be specified as the\n\t    default for a set of elements (based on an external\n\t    scheme, by default CSS), using rendition elements\n\t    and their selector attributes;\n              One or more properties may be specified for individual element occurrences,\n                using the rend attribute with any convenient set of one or more\n                sequence-indeterminate tokens; \n              One or more properties may be specified for individual element occurrences,\n                using the rendition attribute to point to rendition elements; \n              One or more properties may be supplied explicitly for individual element\n                occurrences, using the style attribute. \n            \n          \n          If the same property is specified in more than one of the above ways, the one with the\n            highest number in the list above is understood to be applicable. The resulting\n            properties from each way are then combined to provide the full set of property-value\n            pairs applicable to the given element, and (by default) to all of its children. \n          For simplicity of processing, the same formal style definition should be used\n            throughout; however, the architecture does permit this to be varied, by using the\n              scheme attribute to indicate a different language for one or more\n              rendition elements. Care should be taken to ensure that such values can be\n            meaningfully combined. Similar considerations apply to the use of the rend\n            attribute, if this is used in combination with either rendition or\n              style. \n          Note that these TEI attributes always describe the rendition or appearance of the\n            source document, not intended output renditions, although often the two may\n            be closely related. \n        "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STEC#STEC\">1.3 The TEI Class System</a><a class=\"breadcrumb\" href=\"p5.xml?id=STECAT#STECAT\">1.3.1 Attribute Classes</a><a class=\"breadcrumb\" href=\"p5.xml?id=STGA#STGA\">1.3.1.1 Global Attributes</a><a class=\"breadcrumb\" href=\"p5.xml?id=STGAso#STGAso\">1.3.1.1.4 Sources, certainty, and responsibility</a>","content":"\n          1.3.1.1.4 Sources, certainty, and responsibility\n          The source attribute is used to indicate the source of an element and its content, for example \n            by pointing to a bibliographic citation for a quotation to indicate the source from which it derives.  The target of the\n            pointer may be an entry in a bibliographic list of some kind, or a pointer to a digital version of the source itself. \n\n\t    As with other TEI pointers, the value of this attribute\n\t    is expressed as any form of URI, for example an absolute\n\t    URL, a relative URL, or a private scheme URI that is\n\t    expanded to a relative or absolute URL as documented in a\n\t    prefixDef. In the following typical example a\n\t    relative bare name URL value is used\n\t    to point to a bibl elsewhere in the bibliography\n\t    of the document which contains a bibliographic source for\n\t    the quotation itself:\n              bibliography\n                Alternatively, the quotation might be directly linked to the online edition of this source using a full URI :            \n                bibliography\n              \n              \n          The source attribute is\n            also used on schema documentation elements such as schemaSpec or elementRef to indicate\n            the location from which declarations for the components being defined may \n            be obtained by an ODD processor. For example, a customization wishing to include the p element specifically as it was in version 2.0.1 of TEI P5 would indicate the source for this on an elementRef element like\n            the following:\n            \n            Here the value of the source attribute is provided using  \n            private URI syntax, using a short cut predefined for the TEI Guidelines. More generally, an ODD customization can\n            point to a URI from which a compiled version of any ODD can be downloaded. The above shortcut is equivalent to\n              \n            Elements such as moduleRef or elementRef can use the source attribute in this way to\n            point to any previously compiled  set of TEI ODD specifications which are to be included in a schema,  as further \n            discussed in section 22.8.1 TEI customizations       \n          \n          The cert attribute provides a method of indicating the encoder's certainty \n           concerning an intervention or interpretation represented by the markup. It is typically used where\n           the encoder wishes to supply one or more possible corrections to a text, indicating the\n           certainty they wish to attach to each, as in the following example:\n       \n            bibliography\n          The cert attribute will usually, as here, characterize the degree of certainty simply as high, medium or low. \n            In situations where a more detailed or nuanced indication is required, it can instead supply a probability value between 0 (minimal\n            probability) and 1 (maximal probability). Other more sophisticated mechanisms are discussed in chapter 21 Certainty, Precision, and Responsibility.\n          \n          The resp attribute is used to indicate the person or organization considered responsible  for some aspects\n            of the information encoded by an element. For example, the preceding example might be revised as follows to indicate the editors responsible\n            for the two corrections:\n            bibliography\n            When a more detailed or nuanced representation of responsibility is required, it is recommended that the element\n            indicated by the resp attribute should not be a generic agent (for example a person or org) \n            but a more precise element such as respStmt, author, or editor which can document the \n            exact role played by the agent. In the following example, we indicate that the correction of n to u\n            was made by a particular named transcriber:\n            bibliography\n            Pointing to multiple respStmts allows the encoder to specify clearly each of the roles played in part of a TEI file (creating, transcribing, encoding, editing, proofing etc.). \n           If appropriate, the name element inside a respStmt may also be associated with a more detailed person\n            or org element using methods discussed in chapter 13 Names, Dates, People, and Places.\n        "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STEC#STEC\">1.3 The TEI Class System</a><a class=\"breadcrumb\" href=\"p5.xml?id=STECAT#STECAT\">1.3.1 Attribute Classes</a><a class=\"breadcrumb\" href=\"p5.xml?id=STGA#STGA\">1.3.1.1 Global Attributes</a><a class=\"breadcrumb\" href=\"p5.xml?id=STGAba#STGAba\">1.3.1.1.5 Evaluation of Links</a>","content":"\n          1.3.1.1.5 Evaluation of Links\n          Several TEI elements carry attributes whose values are defined as anyURI,\n            meaning that such attributes supply a link or pointer, typically expressed as a URL.\n            Like other XML applications, the TEI allows use of a special attribute to set the\n            context within which relative URLs are to be evaluated. The global attribute\n              xml:base is defined as part of the XML specification and belongs to the XML\n            namespace rather than the TEI namespace. We do not describe it in detail here: reference\n            information about xml:base is provided by 1 \n          \n          In essence xml:base is used to set a context for all relative URLs within\n            the scope of the element on which it is specified. For example: The first ptr element here is within the scope of a\n              div which supplies a value for xml:base; its target is therefore\n            to be found at http://www.example.org/elsewhere.xml. The second\n              ptr, however, is within the scope of a div which does not change the\n            default context, and its target is therefore a document in the same directory as the current\n            document. \n          The xml:base attribute is intended to enable the stable resolution of\n            relative URIs in a document after that document's context may have changed (for example as a\n            result of being embedded in another document via XInclude). Setting the xml:base\n            simply as a way to allow encoders to write shorter URIs is not recommended. In\n            particular, xml:base may cause ambiguity as to the referent of same-document\n            references in the form #id (where id is an xml:id).\n            RFC 3986 states that\n            URIs of this type should not result in the loading of a different document. The RFC\n            therefore assumes that such references are internal to the document in which they are located. \n            Using xml:base to denote arbitrary external bases while also using same-document \n            references may mean that software agents deal with these links in unexpected and\n            inconsistent ways. Further discussion of this attribute and its effect on TEI linking methods \n            is provided in chapter 16 Linking, Segmentation, and Alignment. \n        "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STEC#STEC\">1.3 The TEI Class System</a><a class=\"breadcrumb\" href=\"p5.xml?id=STECAT#STECAT\">1.3.1 Attribute Classes</a><a class=\"breadcrumb\" href=\"p5.xml?id=STGA#STGA\">1.3.1.1 Global Attributes</a><a class=\"breadcrumb\" href=\"p5.xml?id=STGAxs#STGAxs\">1.3.1.1.6 XML Whitespace</a>","content":"\n          1.3.1.1.6 XML Whitespace\n          The global attribute xml:space provides a mechanism for indicating to\n            systems processing an XML file how they should treat whitespace, that is, any sequences\n            of consecutive tab (#x09), space (#x20), carriage return (#x0D) or linefeed (#x0A)\n            characters. Like xml:id this attribute is defined as part of the XML\n            specification and belongs to the XML namespace rather than the TEI namespace. Complete\n            information about this attribute is provided by section 2.10 of the XML\n              Specification; here we provide a summary of how its use affects users of the TEI\n            scheme.\n          The xml:space attribute has only two permitted values: preserve\n            and default. The first indicates that whitespace in a text node—every\n            carriage return, every tab, etc.—should be maintained as is when the document is\n            processed. The second (which is implied when the attribute is not supplied), indicates\n            that whitespace should be handled as appropriate. Exactly what is\n            deemed appropriate is left unspecified by the XML Recommendation. \n          These Guidelines assume one of two different ways of processing whitespace will apply\n            in a given case, depending on an element's content model. For an element that can\n            contain only other elements with no intervening non-whitespace characters, whitespace is\n            considered to have no semantic significance, and should therefore be discarded by a\n            processor. For example, in a choice element, such as bibliography since non-whitespace text is not permitted between the choice\n            start-tag and the sic tags or between the sic and corr tags,\n            any whitespace found there has no significance and can be ignored completely by a\n            processor.\n          Similarly, the address element has a content model containing only elements:\n            any punctuation or whitespace required between the lines of an address must therefore be\n            supplied by the processor, as any whitespace present in the input document will be\n            ignored. \n          Elements with content models of this type are comparatively unusual in the TEI: a list\n            of them is provided in the TEI release file stripspace.xsl.model, formatted there for use as an xsl:strip-space\n            command for XSL stylesheets.\n          Most TEI elements permit what is known as mixed-content: that is, they can contain both\n            text and other elements. Here the assumption of these Guidelines is that whitespace will\n            be normalized. This means that all space, carriage return, linefeed, and tab characters\n            are converted into spaces, all consecutive spaces are then deleted and replaced by one\n            space, and then space immediately after a start-tag or immediately before an end-tag is\n            deleted. The result is that this encoding, bibliography would be rendered as Edward George Bulwer-Lytton, Baron Lytton of\n              Knebworth. The space before his name has been removed, a space is included between\n            his forenames, the comma is preserved, and the newlines within his name have all been\n            removed. \n          \n          If the default treatment described above is not appropriate for a mixed content\n            element, the processing required may be described in the encodingDesc element\n            of the TEI header, but generic XML processing tools may not take note of this. \n          Alternatively, the xml:space attribute may be supplied with a value of\n              preserve in order to indicate that every space, tab, carriage return and\n            linefeed character found within that element in the document being processed is\n            significant. Typically, the result of that processing will be to retain the whitespace\n            characters in the output. Thus if the above example began persName\n              xml:space=\"preserve\", the resulting text would most likely be rendered over five\n            lines, indented, and with a blank line following. \n          The xml:space=\"preserve\" attribute is rarely used in TEI documents because\n            such layout features are generally captured with less risk and more precision by using\n            native TEI elements such as lb or space, or by using the renditional\n            attributes described in section 1.3.1.1.3 Rendition Indicators."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STEC#STEC\">1.3 The TEI Class System</a><a class=\"breadcrumb\" href=\"p5.xml?id=STECAT#STECAT\">1.3.1 Attribute Classes</a><a class=\"breadcrumb\" href=\"p5.xml?id=STGA#STGA\">1.3.1.1 Global Attributes</a><a class=\"breadcrumb\" href=\"p5.xml?id=STGAothers#STGAothers\">1.3.1.1.7 Other Globally Available Attributes</a>","content":"1.3.1.1.7 Other Globally Available Attributes\n          The following table lists for convenience other potentially available global attributes.\n           The table specifies the name of the attribute class providing the attributes concerned, the module which must\n           be included in a schema if the attributes are to be made available, and the section of these Guidelines\n           where the class is discussed.\n           \n             class namemodule namesee further\n             att.global.linkinglinking16 Linking, Segmentation, and Alignment\n             att.global.analyticanalysis17 Simple Analytic Mechanisms             \n             att.global.facstranscr11.1 Digital Facsimiles \n             att.global.changetranscr11.7 Identifying Changes and Revisions \n       \n         \n          \n        "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STEC#STEC\">1.3 The TEI Class System</a><a class=\"breadcrumb\" href=\"p5.xml?id=STECCM#STECCM\">1.3.2 Model Classes</a>","content":"\n      1.3.2 Model Classes\n      As noted above, the members of a given TEI model class share the property that they can all\n        appear in the same location within a document. Wherever possible, the content model of a TEI\n        element is expressed not directly in terms of specific elements, but indirectly in terms of\n        particular model classes. This makes content models simpler and more consistent; it also\n        makes them much easier to understand and to modify.\n      Like attribute classes, model classes may have subclasses or superclasses. Just as elements\n        inherit from a class the ability to appear in certain locations of a document (wherever the\n        class can appear), so all members of a subclass inherit the ability to appear wherever any\n        superclass can appear. To some extent, the class system thus provides a way of reducing the\n        whole TEI galaxy of elements into a tidy hierarchy. This is however not entirely the\n        case.\n      In fact, the nature of a given class of elements can be considered along two dimensions: as\n        noted, it defines a set of places where the class members are permitted within the document\n        hierarchy; it also implies a semantic grouping of some kind. For example, the very large\n        class of elements which can appear within a paragraph comprises a number of other classes,\n        all of which have the same structural property, but which differ in their field of\n        application. Some are related to highlighting, while others relate to names or places, and\n        so on. In some cases, the set of places where class members are\n          permitted is very constrained: it may just be within one specific element, or\n        one class of element, for example. In other cases, elements may be permitted to appear in\n        very many places, or in more than one such set of places.\n      These factors are reflected in the way that model classes are named. If a model class has a\n        name containing part, such as model.divPart or model.biblPart then it is primarily defined in terms of its\n        structural location. For example, those elements (or classes of element) which appear as\n        content of a div constitute the model.divPart class;\n        those which appear as content of a bibl constitute the model.biblPart class. If, however, a model class has a name containing\n          like, such as model.biblLike or model.nameLike, the implication is that its members all have some additional\n        semantic property in common, for example containing a bibliographic description, or\n        containing some form of name, respectively. These semantically-motivated classes often\n        provide a useful way of dividing up large structurally-motivated classes: for example, the\n        very general structural class model.pPart.data (data\n          elements that form part of a paragraph) has four semantically-motivated member\n        classes (model.addressLike, model.dateLike, model.measureLike, and model.nameLike), the last of these being itself a superclass with\n        several members.\n      Although most classes are defined by the tei infrastructure\n        module, a class cannot be populated unless some other specific module is included in a\n        schema, since element declarations are contained by modules. Classes are not declared\n          top down, but instead gain their members as a consequence of\n        individual elements' declaration of their membership. The same class may therefore contain\n        different members, depending on which modules are active. Consequently, the content model of\n        a given element (being expressed in terms of model classes) may differ depending on which\n        modules are active. \n      Some classes contain only a single member, even when all modules are loaded. One reason for\n        declaring such a class is to make it easier for a customization to add new member elements\n        in a specific place, particularly in areas where the TEI does not make fully elaborated\n        proposals. For example, the TEI class model.rdgLike, initially\n        empty, is expanded by the textcrit module to include just the\n        TEI rdg element. A project wishing to add an alternative way of structuring\n        text-critical information could do so by defining their own elements and adding it to this\n        class.\n      Another reason for declaring single-member classes is where the class members are not\n        needed in all documents, but appear in the same place as elements which are very frequently\n        required. For example, the specialized element g used to represent a non-Unicode\n        character or glyph is provided as the only member of the model.gLike class when the gaiji module is added to\n        a schema. References to this class are included in almost every content model, since if it\n        is used at all the g must be available wherever text is available; however these\n        references have no effect unless the gaiji module is loaded.\n      At the other end of the scale, a few of the classes predefined by the tei module are\n        subsequently populated with very many members. For example, the class model.pPart.edit groups all the classes of element for simple editorial\n        correction and transcription which can appear within a p or paragraph element. The\n          core module alone adds more than fifty elements to this\n        class; the namesdates module adds another twenty, as does the\n          tagdocs module. Since the p element is one of the\n        basic building blocks of a TEI document it is not surprising that each module will need to\n        add elements to it. The class system here provides a very convenient way of controlling the\n        resulting complexity. Typically, elements are not added directly to these very general\n        classes, but via some intermediate semantically-motivated class. \n      Just as there are a few classes which have a single member, so there are some classes which\n        are used only once in the TEI architecture. These classes, which have no superclass and\n        therefore do not fit into the class hierarchy defined here, are a convenient way of\n        maintaining elements which are highly structured internally, but which appear from the\n        outside to be uniform objects like others at the same level.2 Members of such classes can only ever appear\n        within one element, or one class of elements. For example, the class model.addrPart is used only to express the content model for the element\n          address; it references some other classes of elements, which can appear\n        elsewhere, and also some elements which can only appear inside an address.\n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STEC#STEC\">1.3 The TEI Class System</a><a class=\"breadcrumb\" href=\"p5.xml?id=STECCM#STECCM\">1.3.2 Model Classes</a><a class=\"breadcrumb\" href=\"p5.xml?id=STBTC#STBTC\">1.3.2.1 Informal Element Classifications </a>","content":"\n        1.3.2.1 Informal Element Classifications \n        Most TEI elements may also be informally classified as belonging to one of the following\n          groupings: divisionshigh level, possibly self-nesting, major divisions of texts. These elements\n              populate such classes as model.divLike or model.div1Like, and typically form the largest component units\n              of a text. chunks\n            elements such as paragraphs and other paragraph-level elements, which can appear\n              directly within texts or within divisions of them, but not (usually) within other\n              chunks. These elements populate the class model.divPart,\n              either directly or by means of other classes such as model.pLike (paragraph-like elements), model.entryLike, etc.phrase-level elements\n            elements such as highlighted phrases, book titles, or editorial corrections which\n              can occur only within chunks, but not between them (and thus cannot appear directly\n              within a division). These elements populate the class model.phrase.3\n        \n        The TEI also identifies two further groupings derived from these three: inter-level elementselements such as lists, notes, quotations, etc. which can appear either between\n              chunks (as children of a div) or within them; these elements populate the\n              class model.inter. Note that this class is not a superset\n              of the model.phrase and model.divPart classes but rather a distinct grouping of elements which are\n              both chunk-like and phrase-like. However, the classes model.phrase, model.pLike, and model.inter are all disjoint.components\n            elements which can appear directly within texts or text divisions; this is a\n              combination of the inter- and chunk- level elements defined above. These elements\n              populate the class model.common, which is defined as a\n              superset of the classes model.divPart, model.inter, and (when the dictionary module is included in a schema)\n                model.entryLike. Broadly speaking, the front, body, and back of a text each comprises a series of\n          components, optionally grouped into divisions. \n        As noted above, some elements do not belong to any model class, and some model classes\n          are not readily associated with any of the above informal groupings. However, over\n          two-thirds of the 585 elements defined in the present edition of\n          these Guidelines are classified in this way, and future editions of these recommendations\n          will extend and develop this classification scheme.\n        A complete alphabetical list of all model classes is provided in 1 Model Classes.\n        \n        \n        \n  groups elements which contain names of individuals\nor corporate bodies.\n  \n  \n  \n  \n  \n  \n  \n  \n    This class is used in the content model of elements which\n    reference names of people or organizations.\n  \n  \n    Cette classe est utilisée dans le modèle de contenu des éléments qui référencent des\n                noms de personnes ou d'organisations.\n  \n  \n    Esta clase se utiliza en el modelo de elementos cuyos nombres se refieren a gente o a organizaciones.\n  \n  \n    \n    当該クラスは，人物や団体の名前を参照する要素の内容モデル中で使用さ\n    れる．\n    \n  \n  \n    3.6 Names, Numbers, Dates, Abbreviations, and Addresses\n  \n\n        \n  groups elements used for arbitrary segmentation.\n  \n  \n  \n  \n  \n  \n  \n  \n    The principles on which segmentation is carried out, and any special codes or attribute\n      values used, should be defined explicitly in the segmentation element of the\n        encodingDesc within the associated TEI header.\n  \n  \n    Les principes sur lesquels repose la segmentation, ainsi que tout code particulier ou valeur\n      d'attribut utilisée, doivent être définis explicitement dans l'élément segmentation de\n      l'élément encodingDesc situé dans l'En-tête TEI associé.\n  \n  \n    Los principios en los cuales se realiza la segmentación, y cualesquiera sean los códigos o\n      valores de atributo especiales usados, se deben definir explícitamente en el elemento\n        segmentación del encodingDesc dentro del encabezado TEI asociado.\n  \n  \n     どの区分，どのコード，どの属性値を使うかを決める原則は，関連する TEIヘダー内の要素encodingDescにある要素\n      segmentation中で明示的に宣言されるべきである． \n  \n  \n    16.3 Blocks, Segments, and Anchors\n    17.1 Linguistic Segment Categories\n  \n\n        \n  groups phrase-level elements which are typographically distinct but to which no specific\n    function can be attributed.\n  \n  \n  \n  \n  \n  \n  \n  \n      3.3 Highlighting and Quotation\n  \n\n        \n  groups phrase-level elements which are typographically\n  distinct and to which a specific function can be attributed.\n  \n  \n  \n  \n  \n  \n  \n  \n      3.3 Highlighting and Quotation\n  \n\n        \n  groups phrase-level elements which are typographically distinct.\n  \n  \n  \n  \n  \n  \n  \n  \n      3.3 Highlighting and Quotation\n  \n\n        \n  groups elements containing temporal expressions.\n  \n  \n  \n  \n  \n  \n  \n  \n    3.6.4 Dates and Times\n    13.4 Dates\n  \n\n        \n  groups elements which describe a measurement forming part of\n  the physical dimensions of some object.\n\n        \n  groups elements which denote a number, a quantity, a measurement, or similar piece of text\n    that conveys some numerical meaning.\n  \n  \n  \n  \n  \n  \n  \n  \n    3.6.3 Numbers and\nMeasures\n  \n\n        \n  groups elements containing examples or illustrations.\n  \n  \n  \n  \n  \n  \n  \n  \n      22.1.1 Phrase Level Terms\n  \n\n        \n  groups elements containing images, formulae, and \n  similar objects.\n  \n  \n  \n  \n  \n  \n  \n  \n      3.10 Graphics and Other Non-textual Components\n  \n\n        \n  groups elements which can appear only as part of a place name.\n  \n  \n  \n  \n  \n  \n  \n    13.2.3 Place Names\n  \n\n        \n  groups phrase-level elements used in manuscript description.\n  \n  \n  \n  \n  \n  \n  \n  \n    10 Manuscript Description\n  \n\n        \n  groups phrase-level elements for simple editorial interventions that may be useful both\nin transcribing and in authoring.\n  \n  \n  \n  \n  \n  \n  \n  \n    3.5 Simple Editorial Changes\n  \n\n        \n  groups phrase-level elements used for editorial transcription of pre-existing source\n    materials.\n  \n  \n  \n  \n  \n  \n  \n  \n    3.5 Simple Editorial Changes\n  \n\n        \n  groups phrase-level elements for simple editorial correction and transcription.\n  \n  \n  \n  \n  \n  \n  \n  \n    3.5 Simple Editorial Changes\n  \n\n        \n  groups transcriptional elements which appear within lines or\n  zones of a source-oriented transcription within a sourceDoc\n  element.\n  \n\n        \n  groups elements used for purposes of location and reference.\n  \n  \n  \n  \n  \n  \n  \n  \n    3.7 Simple Links and Cross-References\n  \n\n        \n  groups phrase-level elements which may appear within verse only.\n  \n  \n  \n  \n  \n  \n  \n  \n    6.2 Components of the Verse Line\n  \n\n        \n  groups globally available elements which describe the status of other elements.\n  \n  \n  \n  \n  \n  \n  \n  \n    Elements in this class are typically used to hold groups of links or of abstract\n      interpretations, or by provide indications of certainty etc. It may find be convenient to\n      localize all metadata elements, for example to contain them within the same divison as the\n      elements that they relate to; or to locate them all to a division of their own. They may\n      however appear at any point in a TEI text.\n  \n  \n     Les éléments de cette classe sont utilisés pour contenir des groupes de liens ou\n      d'interprétations abstraites, ou pour fournir des indications quant à la certitude, etc. Il\n      peut être commode de situer tous les éléments contenant des métadonnées, par exemple de les\n      rassembler dans la même divison que les éléments auxquels ils sont reliés ; ou de les\n      retrouver tous dans la division qui leur est propre. Ils peuvent cependant apparaître à un\n      point quelconque d'un texte TEI.\n  \n  \n    Los elementos en esta clase se utilizan típicamente para llevar a cabo los grupos de\n      conexiones o de interpretaciones abstractas, o bien para proporcionar indicaciones de la\n      certeza etc. Puede ser conveniente localizar todos los elementos de los metadatos, por ejemplo\n      para contenerlos dentro de la misma división que los elementos con los cuales se relacionan; o\n      para localizarlos todos en la división que les es propia. Sin embargo pueden aparecer en\n      cualquier momento en un texto de TEI.\n  \n  \n     当該クラスの要素は，リンクや確信度といった抽象的解釈をまとめるため に使われる．これは，ユーザがメタデータを記述する際に便利であろう．\n      例えば，関連する要素と同じ部分レベル内にあるものまとめたり，関連す る要素を，自身の部分レベル内にまめめたりする場合である．\n      しかし，これらは，TEIデータ中では，どこにでも出現可能である． \n  \n  \n    1.3 The TEI Class System\n  \n\n        \n  groups milestone-style\nelements used to represent reference systems.\n  \n  \n  \n  \n  \n  \n  \n  \n    1.3 The TEI Class System\n    3.11.3 Milestone\nElements\n  \n\n        \n  groups elements used to represent individual non-Unicode characters or glyphs.\n  \n  \n  \n  \n  \n  \n\n\n\n        \n  groups elements which generate declarations in some markup language in ODD documents.\n  \n  \n  \n  \n  \n  \n  \n\n        \n  groups elements which reference declarations in some markup language in ODD documents.\n  \n  \n  \n  \n  \n  \n\n        \n  groups phrase-level elements used to encode XML constructs such as element names, attribute\n    names, and attribute values\n  \n  \n  \n  \n  \n  \n  \n    22 Documentation Elements\n  \n\n        \n  groups elements for referring to specification elements.\n  \n  \n  \n  \n  \n  \n  \n  \n    22 Documentation Elements\n  \n\n        \n        \n  groups elements containing a bibliographic description.\n  \n  \n  \n  \n  \n  \n  \n  \n    3.12 Bibliographic Citations and References\n  \n\n        \n  groups elements used to provide a title or heading at the start of a text\n  division.\n  \n  \n  \n  \n  \n  \n\n        \n  groups elements used to gloss or explain other parts of a document.\n  \n  \n  \n  \n  \n  \n\n        \n  groups list-like elements.\n  \n  \n  \n  \n  \n  \n  \n  \n    3.8 Lists\n  \n\n        \n  groups globally-available note-like elements.\n  \n  \n  \n  \n  \n  \n  \n  \n    3.9 Notes, Annotation, and Indexing\n  \n\n        \n  groups elements representing metrical components such as verse lines.\n  \n  \n  \n  \n  \n  \n  \n\n        \n  groups paragraph-like elements.\n  \n  \n  \n  \n  \n  \n  \n\n        \n        \n  groups elements containing stage directions or similar things defined by the module for\n    performance texts.\n  \n  \n  \n  \n  \n  \n  \n  \n    Stage directions are members of class inter: that is, they can appear between or\n      within component-level elements.\n  \n  \n    Les indications scéniques appartiennent à la classe inter : cela signifie\n      qu'elles peuvent apparaître  à l'intérieur d'éléments de niveau composant  ou bien entre ces éléments.\n  \n  \n    Las direcciones de etapa son miembros de la clase inter: es decir, pueden\n      aparecer entre o dentro de los elementos del componente-nivel.\n  \n  \n     ト書きは，クラスinterのメンバーである．すなわち，構成 要素レベル要素内または間で出現可能である． \n  \n  \n    7.3 Other Types of Performance Text\n  \n\n        \n  groups elements which express complex feature values in feature\nstructures.\n  \n  \n  \n  \n  \n  \n  \n\n        \n  group elements used to represent atomic feature values in feature structures.\n  \n  \n  \n  \n  \n  \n  \n\n        \n  groups non-morphological elements appearing within a dictionary entry.\n  \n  \n  \n  \n  \n  \n  \n      9.1 Dictionary Body and Overall Structure\n  \n\n        \n  groups high level elements within a structured dictionary entry\n  \n  \n  \n  \n  \n  \n  \n    Members of this class typically contain related parts of a\ndictionary entry which form a coherent\nsubdivision, for example a particular sense, homonym, etc.\n\n  \n  \n    Les membres de cette classe contiennent typiquement des parties d'une entrée de\n                dictionnaire liées et formant une subdivision cohérente, par exemple un sens\n                particulier, un homonyme etc.\n  \n  \n    Los miembros de esta clase contienen normalmente partes relativas a entrada de diccionario y que forman una subdivisión coherente, por ejemplo un significado particular, un homónimo, etc.\n\n  \n  \n    \n当該クラスのメンバーは，干渉的下位部分である辞書項目に関連するを持つ．\n例えば，特別な意味や，同音同形異義語など．\n\n  \n  \n    9.2 The Structure of Dictionary Entries\n  \n\n        \n  groups elements which describe events.\n  \n\n        \n  groups globally available elements which perform a specifically editorial function.\n  \n  \n  \n  \n  \n  \n  \n  \n      1.3 The TEI Class System\n  \n\n        \n  groups  elements\nwhich may appear globally within spoken texts.\n  \n  \n  \n  \n  \n  \n  \n    This class groups elements which can appear anywhere within\n    transcribed speech. \n  \n  \n    Cette classe regroupe des éléments pouvant se situer n'importe où dans une\n                transcription de la parole. \n  \n  \n    Esta clase agrupa elementos que pueden aparecer dondequiera dentro del discurso transcrito. \n  \n  \n    \n    当該クラスは，転記された発話内でどこにでも出現可能な要素をまとめる．\n    \n  \n  \n    8.1 General Considerations and Overview\n  \n\n        \n  groups paragraph-level elements appearing directly within divisions.\n  \n  \n  \n  \n  \n  \n  \n  \n    Note that this element class does not include members of the model.inter class, which can appear either within or between paragraph-level items.\n    \n  \n  \n    Noter que cette classe d'éléments ne comprend pas les membres de la classe model.inter, qui peuvent apparaître soit à l'intérieur, soit entre des\n      items de niveau paragraphe.\n  \n  \n    Observa que esta clase de elemento no incluye a los miembros de la clase model.inter, que puede aparecer dentro o entre los items del nivel-párrafo. \n  \n  \n     当該要素クラスは，クラスmodel.interの メンバーを含まないことに注意すること． クラスmodel.interは，段落レベル項目内 または間にのみ出現可能である． \n  \n  \n    1.3 The TEI Class System\n  \n\n        \n  groups elements describing changeable characteristics of a person which have a definite\n    duration, for example occupation, residence, or name.\n  \n  \n  \n  \n  \n  \n  \n  \n    These characteristics of an individual are typically a consequence of their own action or\n      that of others.\n  \n  \n    Il s'agit en général des caractéristiques d'un individu résultant de sa propre action ou de\n      celle d'autrui.\n  \n  \n    Estas características de un individuo son típicamente una consecuencia de su propia acción o\n      de la de otros.\n  \n  \n     当該個人の特性は，自らの行動などによる結果である． \n  \n\n        \n  groups elements which provide information about people and their relationships.\n  \n  \n  \n  \n  \n  \n  \n  \n\n        \n  groups elements which form part of the description of a person.\n  \n  \n  \n  \n  \n  \n  \n    15.2.2 The Participant Description\n  \n\n        \n  groups elements which form part of a place name.\n  \n  \n  \n  \n  \n  \n  \n  \n    13.2.3 Place Names\n  \n\n        \n  groups elements which describe changing states of a place.\n  \n  \n  \n  \n  \n  \n\n        \n  groups elements which form part of the description of an\n  organization.\n\n        \n  groups the child\n  elements of a publicationStmt element of the TEI header\n  that indicate an authorising agent.\n  \n  \n  \n  \n  \n  \n  \n    The agency child elements, while not\n    required, are required if one of the detail\n    child elements is to be used. It is not valid to have a\n    detail child element without a\n    preceding agency child element.\n    See also model.publicationStmtPart.detail.\n  \n  \n    2.2.4 Publication, Distribution, Licensing, etc.\n  \n\n        \n  groups the agency-specific child elements of the publicationStmt element of the TEI header.\n  \n  \n  \n  \n  \n  \n  \n    A detail child element may not occur\n    unless an agency child element precedes\n    it.\n    See also model.publicationStmtPart.agency.\n  \n  \n    2.2.4 Publication, Distribution, Licensing, etc.\n  \n\n        \n  groups elements such as licences and paragraphs of text which may appear as part of an\n  availability statement\n  \n  \n    2.2.4 Publication, Distribution, Licensing, etc.\n  \n\n        \n  groups elements which are used to indicate uncertainty or\n  precision of other elements.\n  \n\n        \n  groups elements which contain a description of their function.\n  \n\n        \n  groups elements which provide an alternative name, explanation, or description for any\n    markup construct.\n  \n  \n  \n  \n  \n  \n\n        \n  groups elements used to directly contain quotations.\n  \n  \n  \n  \n  \n  \n  \n\n        \n  groups elements that contain a word or phrase that can be attributed to a source.\n  \n \n  \n  \n    3.3.3 Quotation\n    4.3.2 Floating Texts\n  \n\n        \n  groups elements which contain a single reading, other than the lemma, within a textual\n    variation.\n  \n  \n  \n  \n  \n  \n  \n  \n    This class allows for variants of the rdg element to be easily created via TEI\n      customizations.\n  \n  \n    Cette classe permet de créer facilement des variantes de l'élément rdg, par le biais\n      de personnalisations de la TEI.\n  \n  \n    Esta clase permite que las variantes del elemento rdg se creen fácilmente mediante\n      las personalizaciones particulares de TEI.\n  \n  \n     当該クラスは，TEIのカスタマイズ機能により簡単に作られる，各種の要 素rdgをとる． \n  \n  \n    12.1 The Apparatus Entry, Readings, and Witnesses\n  \n\n        \n  groups elements which are used to indicate intellectual or other significant responsibility,\n    for example within a bibliographic element.\n  \n  \n  \n  \n  \n  \n  \n\n        \n  groups elements which can appear at either top or bottom of a\n  textual division.\n  \n  \n  \n  \n  \n  \n  \n  \n      4.2 Elements Common to All Divisions\n  \n\n        \n  groups elements which can occur only at the beginning of a text division.\n  \n  \n  \n  \n  \n  \n  \n      4.6 Title Pages\n  \n\n        \n  groups elements appearing at  the beginning of a\n  text division.\n  \n  \n  \n  \n  \n  \n      4.2 Elements Common to All Divisions\n  \n\n        \n  groups elements which appear at the level of divisions within front or back matter of\n    performance texts only.\n  \n  \n  \n  \n  \n  \n  \n  \n      7.1 Front and Back Matter\n \n  \n\n        \n  groups paragraph-like elements which can occur as direct constituents of front matter.\n  \n  \n  \n  \n  \n  \n  \n    4.6 Title Pages\n  \n\n        \n  groups elements which can occur only at the end of a text\n  division.\n  \n  \n  \n  \n  \n  \n  \n    4.6 Title Pages\n  \n\n        \n  groups elements appearing at the end of a text\n    division.\n  \n  \n  \n  \n  \n  \n  \n    4.2 Elements Common to All Divisions\n  \n\n        \n  groups elements which can occur as direct constituents of a title page, such as\n    docTitle, docAuthor, docImprint, or epigraph.\n  \n  \n  \n  \n  \n  \n  \n    4.6 Title Pages\n  \n\n        \n  groups elements which represent passages such as titles quoted from a manuscript as a part\n    of its description.\n  \n  \n\n        \n  groups elements which can appear within a manuscript item description.\n  \n  \n  \n  \n  \n  \n\n        \n  groups elements (other than choice itself) which can be used within a\n    choice alternation.\n  \n  \n  \n  \n  \n  \n  \n  \n    3.5 Simple Editorial Changes\n  \n\n        \n  groups elements used to describe details of an audio or video recording.\n  \n  \n  \n  \n  \n  \n  \n    8.2 Documenting the Source of Transcribed Speech\n  \n\n        \n        \n  groups the bibliographic elements which occur inside imprints.\n  \n  \n  \n  \n  \n  \n  \n  \n      3.12 Bibliographic Citations and References\n  \n\n        \n  groups component elements of the TEI header Category Description.\n  \n  \n  \n  \n  \n  \n\n        \n  groups elements used to describe the setting of a linguistic interaction.\n  \n  \n  \n  \n  \n  \n  \n\n        \n  \n  groups elements used to categorize a text for example in terms of its situational\n    parameters.\n  \n  \n  \n  \n  \n  \n  \n\n        \n  groups component elements of an entry in a cast list, such as dramatic role or actor's name.\n  \n  \n  \n  \n  \n  \n  \n\n        \n  \n  groups specialized elements forming part of the physical description of a manuscript or\n    similar written source.\n  \n  \n  \n  \n  \n  \n  \n\n        \n  groups elements used to represent a postal or email address.\n  \n  \n  \n  \n  \n  \n  \n  \n    1 The TEI Infrastructure\n  \n\n        \n  groups elements which name or refer to a person, place, or organization.\n  \n  \n  \n  \n  \n  \n  \n  \n    A superset of the naming elements that may appear in datelines, addresses, statements of\n      responsibility, etc.\n  \n  \n    Un ensemble de niveau supérieur regroupant les éléments d'appellation qui peuvent apparaître\n      dans les dates, les adresses, les mentions de responsabilité, etc.\n  \n  \n    Un superconjunto de elementos de nombramiento que pueden aparecer en las líneas de fecha, de\n      dirección, de declaración de esponsabilidad,l etc.\n  \n  \n     日付欄，住所情報，責任表示等に現れる，名前を示す要素の親集合． \n  \n\n        \n  groups elements which form part of a personal name.\n  \n  \n  \n  \n  \n  \n  \n  \n    13.2.1 Personal Names\n  \n\n        \n        \n  groups elements which may appear at any point within a TEI text.\n  \n  \n  \n  \n  \n  \n      1.3 The TEI Class System\n  \n\n        \n  groups elements which represent feature values in feature structures.\n  \n  \n  \n  \n  \n  \n\n        \n  groups elements which represent components of a bibliographic description.\n  \n  \n  \n  \n  \n  \n  \n    3.12 Bibliographic Citations and References\n  \n\n        \n  groups elements which appear at the level of divisions within front or back matter.\n  \n  \n  \n  \n  \n  \n  \n      7.1 Front and Back Matter\n \n  \n\n        \n        \n  groups elements such as names or postal codes which may appear as part of a\n    postal address.\n  \n  \n  \n  \n  \n  \n  \n    3.6.2 Addresses\n  \n\n        \n  groups phrase-level elements containing names, dates, numbers, measures, and similar data.\n  \n  \n  \n  \n  \n  \n  \n  \n    3.6 Names, Numbers, Dates, Abbreviations, and Addresses\n  \n\n        \n  groups elements which can appear either within or between paragraph-like elements.\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n      1.3 The TEI Class System\n  \n\n        \n  groups common chunk- and inter-level elements.\n  \n  \n  \n  \n  \n  \n  \n    This class defines the set of chunk- and inter-level elements; it is used in many content\n      models, including those for textual divisions.\n  \n  \n    Cette classe définit l'ensemble des éléments de niveau fragment et de niveau intermédiaire ;\n      de nombreux modèles de contenu y font appel, y compris ceux qui sont relatifs aux divisions\n      textuelles.\n  \n  \n    Esta clase define el conjunto de los elementos de fragmento e inter-nivel; se utiliza en\n      muchos modelos de contención, incluyendo aquellos para las divisiones textuales.\n  \n  \n     当該クラスは，塊レベルと挿入レベルの要素集合を定義する．当該クラス は，テキスト部分の要素を含む，多くの内容モデルで使われる． \n  \n  \n    1.3 The TEI Class System\n  \n\n        \n        \n  groups elements which can occur at the level of individual words or phrases.\n  \n  \n  \n  \n  \n  \n  \n    This class of elements can occur within paragraphs, list items, lines of verse, etc.\n  \n  \n    Cette classe d'éléments peut se trouver dans des paragraphes, des entrées de\n      listes, des vers, etc.\n  \n  \n    Esta clase de elementos puede aparecer dentro de párrafos, en los elementos de una lista, en las líneas de verso, etc.\n  \n  \n     当該要素クラスは，クラスinterにある大きめの要素，すな わち塊の中で出現可能である．散文においては，当該要素\n      は，段落，リスト項目，韻文行などの中で出現可能である． \n  \n  \n    1.3 The TEI Class System\n  \n\n        \n  groups phrase-level elements excluding those elements primarily intended for transcription\n    of existing sources.\n  \n  \n  \n  \n  \n  \n  \n    1.3 The TEI Class System\n  \n\n        \n  groups elements used to represent un-numbered generic structural divisions.\n  \n  \n  \n  \n  \n  \n\n        \n  groups elements used to represent a structural division which is generated rather than\n    explicitly present in the source.\n  \n  \n  \n  \n  \n  \n\n        \n  groups top-level structural divisions.\n  \n  \n  \n  \n  \n  \n\n        \n  groups second-level structural divisions.\n  \n  \n  \n  \n  \n  \n\n        \n  groups third-level structural divisions.\n  \n  \n  \n  \n  \n  \n\n        \n  groups fourth-level structural divisions.\n  \n  \n  \n  \n  \n  \n\n        \n  groups fifth-level structural divisions.\n  \n  \n  \n  \n  \n  \n\n        \n  groups sixth-level structural divisions.\n  \n  \n  \n  \n  \n  \n\n        \n  groups seventh-level structural divisions.\n  \n  \n  \n  \n  \n  \n\n        \n        \n  groups elements used to represent annotations.\n  \n  \n    16.10 The standOff Container\n  \n\n        \n  groups elements which may be used as an annotation body.\n\n        \n  groups elements used to record application-specific information about a document in its\n    header.\n  \n  \n  \n  \n  \n\n        \n  groups high level elements which may appear more than once in a TEI header.\n  \n  \n  \n  \n  \n  \n  \n\n        \n  groups elements which may be used inside sourceDesc and appear multiple times.\n  \n  \n  \n  \n  \n  \n  \n\n        \n  groups elements which may be used inside encodingDesc and appear multiple times.\n  \n  \n  \n  \n  \n  \n  \n\n        \n  groups elements which may be used inside editorialDecl and appear multiple times.\n  \n  \n  \n  \n  \n  \n  \n\n        \n  groups elements which may be used inside profileDesc\nand appear multiple times.\n  \n  \n  \n  \n  \n  \n  \n\n        \n  groups elements which may be used as children of standOff.\n\n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STmacros#STmacros\">1.4 Macros</a>","content":"\n    1.4 Macros\n    The infrastructure module defined by this chapter also declares a number of\n        macros, or shortcut names for frequently occurring parts of other declarations.\n      Macros are used in two ways in the TEI scheme: to stand for frequently-encountered content\n      models, or parts of content models (1.4.1 Standard Content Models); and to stand for attribute\n      datatypes (1.4.2 Datatype Specifications).\n    \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STmacros#STmacros\">1.4 Macros</a><a class=\"breadcrumb\" href=\"p5.xml?id=STECST#STECST\">1.4.1 Standard Content Models</a>","content":"\n      1.4.1 Standard Content Models\n      As far as possible, the TEI schemas use the following set of frequently-encountered content\n        models to help achieve consistency among different elements. \n          <macro.paraContent> \n          <macro.limitedContent> \n          <macro.phraseSeq> \n          <macro.phraseSeq.limited> \n          <macro.specialPara> \n          <macro.xtext> \n        \n      \n      \n\n      The present version of the TEI Guidelines includes some 585 different\n        elements. 1  shows, in descending order of frequency, the\n        seven most commonly used content models.Content modelNumber of elements using thisDescriptionmacro.phraseSeq87defines a sequence of character data and phrase-level elements.macro.paraContent53defines the content of paragraphs and similar elements.macro.specialPara33defines the content model of elements such as notes or list items, which either contain a\n    series of component-level elements or else have the same structure as a paragraph, containing a\n    series of phrase-level and inter-level elements.macro.phraseSeq.limited25defines a sequence of character data and those phrase-level elements that are not typically\nused for transcribing extant documents.macro.xtext9defines a sequence of character data and gaiji elements.macro.limitedContent7defines the content of prose elements that are not used for transcription of extant materials.\n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STmacros#STmacros\">1.4 Macros</a><a class=\"breadcrumb\" href=\"p5.xml?id=DTYPES#DTYPES\">1.4.2 Datatype Specifications</a>","content":"\n      1.4.2 Datatype Specifications\n      The values which attributes may take in a TEI schema are defined, for the most part, by\n        reference to a TEI datatype specification. Each such specification is defined\n        in terms of other primitive datatypes, derived mostly from W3C Schema\n          Datatypes, literal values, or other datatypes. This indirection makes it possible\n        for a TEI application to set constraints either globally or in individual cases, by\n        redefining the datatype definition or the reference to it respectively. In some cases, the\n        TEI datatype includes additional usage constraints which cannot be enforced by existing\n        schema languages, although a TEI-compliant processor should attempt to validate them (see\n        further discussion in chapter 23.4 Conformance).\n      The following element is used to define a TEI datatype: \n          <dataSpec> documents a datatype.\n        \n      \n      TEI-defined datatypes may be grouped into those which define normalized values for numeric\n        quantities, probabilities, or temporal expressions, those which define various kinds of\n        shorthand codes or keys, and those which define pointers or links.\n      The following datatypes are used for attributes which are intended to hold normalized\n        values of various kinds. First, expressions of quantity or probability: \n          <teidata.certainty> \n          <teidata.probability> \n          <teidata.numeric> \n          <teidata.interval> \n          <teidata.count> \n        \n      \n      Examples of attributes using the teidata.probability\n        datatype include degree on damage or certainty; examples of\n          teidata.numeric include quantity on members of\n        the att.measurement class or value on\n          numeric; examples of teidata.count include\n          cols on cell and table.\n      \n      Next, the datatypes used for attributes which are intended to hold normalized dates or\n        times, durations, truth values, and language identifiers: \n          <teidata.duration.w3c> \n          \n          <teidata.temporal.w3c> \n          \n          <teidata.temporal.working> \n          \n          <teidata.truthValue> \n          <teidata.xTruthValue> \n          <teidata.language> \n        \n      \n      Note that in each of these cases the values used are those\n      recommended by existing international standards: ISO 8601 as\n      profiled by XML Schema Part 2: Datatypes\n      Second Edition in the case of durations, times, and\n      date; W3C Schema datatypes in the case of truth values; and BCP\n      47 in the case of language.\n      \n      The following datatypes have more specialized uses: \n          <teidata.namespace> \n          <teidata.namespaceOrName> \n          <teidata.outputMeasurement> \n          <teidata.pattern> \n          <teidata.point> \n          <teidata.pointer> \n          <teidata.authority> \n          <teidata.version> \n          <teidata.versionNumber> \n          <teidata.replacement> \n          <teidata.xpath> \n        \n      \n      \n      By far the largest number of TEI attributes take values which are coded values or names of\n        some kind. These values may be constrained or defined in a number of different ways, each of\n        which is given a different name, as follows: \n          <teidata.word> \n          <teidata.text> \n          <teidata.name> \n          <teidata.enumerated> \n          <teidata.gender> \n          <teidata.sex> \n          <teidata.xmlName> \n\t  <teidata.prefix> \n        \n      \n      Attributes of type teidata.word, such as age on\n          person, are used to supply an identifier expressed as any kind of single token or\n        word. The TEI places a few constraints on the characters which may be used for this purpose:\n        only Unicode characters classified as letters, digits, punctuation characters, or symbols\n        can appear in an attribute value of this kind. Note in particular that such values cannot\n        include whitespace characters. Legal values include cholmondeley, été,\n          1234, e_content, or xml:id, but not grand\n          wazoo. Attributes of this kind are sometimes used to associate (by co-reference)\n        elements of different types.\n      Where identifiers are defined externally, for example as part of a database or file system,\n        the inability to include whitespace or other special characters in a value may be\n        problematic. In other cases, it may also be simply more convenient to supply a short\n        sequence of natural language words including spaces as a single value. For these reasons, we\n        also provide a datatype teidata.text which does permit whitespace and indeed\n        any other Unicode character. Legal values include cholmondeley, été,\n          1234, e-content, xml:id, and grand wazoo. This\n        datatype should be used with care since XML will not normalize whitespace characters within\n        it: for example the values n=\"a  b\" (two spaces) and n=\"a   b\" (three\n        spaces) would be considered distinct. This case should be distinguished from that of an\n        attribute permitting multiple values, each of which may be separated by whitespace which\n          will be normalized (see further 22.5.3.1 Datatypes). \n      Attributes of type teidata.name are similar to those of type\n          teidata.word, but with the additional constraint that they\n        must be legal XML identifiers, as defined by the XML 1.0 specification, or successors.\n        Hence, they may not begin with digits or punctuation characters. Legal identifiers include\n          cholmondeley, été, e_content, or xml:id, but\n        not grand wazoo or 1234. Attributes of this kind are typically used to\n      represent XML element or attribute names.\n      Attributes of type teidata.xmlName are similar to those of\n      type teidata.name, but with the\n      additional constraint that they must not contain a colon\n      character (:, U+003A). Thus attributes of\n      this kind are used to represent XML element or attribute names\n      that do not have a namespace prefix.\n      Attributes of type teidata.prefix, such as ident\n      of prefixDef, are restricted to strings that form legal\n      URI prefixes.4 Examples of valid values are\n      http, https, tn3270,\n      xmlrpc.beep, and view-source.\n      Attributes of type teidata.enumerated, such as\n          new on shift or evidence supplied by att.editLike, have the same definition as teidata.word above, with the added constraint that the word supplied is taken\n        from a specific list of possibilities. In each case, the element or class specification\n        which includes the definition for the attribute will also contain a list of possible values,\n        together with a prose description of their intended significance. This list may be open (in\n        which case the list is advisory), or closed (in which case it determines the range of legal\n        values). In this latter case, the datatype will not be teidata.enumerated, but an explicit list of the possible values.\n      \n      An attribute may, of course, take more than one value of a given type, for example a list\n        of pointer values, or a list of words. In the TEI scheme, this information is regarded as a\n        property of the datatype element used to document the attribute in question rather\n        than as a distinct datatype, and is provided by the\n          minOccurs or maxOccurs attribute. See further 22.5.3.1 Datatypes.\n      In a small number of cases, an attribute may take a value of either one datatype or\n        another. These cases are considered as distinct datatypes: \n          <teidata.probCert> \n          <teidata.unboundedInt> \n          <teidata.nullOrName> \n\n        \n      \n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ST#ST\">1 The TEI Infrastructure</a><a class=\"breadcrumb\" href=\"p5.xml?id=STOV#STOV\">1.5 The TEI Infrastructure Module</a>","content":"\n    1.5 The TEI Infrastructure Module\n    The tei module defined by this chapter is a required component\n      of any TEI schema. It provides declarations for all datatypes, and initial declarations for\n      the attribute classes, model classes, and macros used by other modules in the TEI scheme. Its\n      components are listed below in alphabetical order:\n      \n        TEI Infrastructure\n        Declarations for classes, datatypes, and macros available to all TEI modules\n        \n        \n        \n        \n        \n      \n    \n    The order in which declarations are made within the infrastructure module is critical, since\n      several class declarations refer to others, which must therefore precede them. Other\n      constraints on the order of declarations derive from the way in which the modularity of the\n      TEI scheme is implemented in different schema languages. The XML DTD fragment implementing\n      this TEI module makes extensive use of parameter entities and marked\n        sections to effect a kind of conditional construction; the RELAX NG schema fragment\n      similarly predeclares a number of patterns with null (notAllowed) values.\n      These issues are further discussed in chapter 23.5 Implementation of an ODD System.\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a>","content":"\n2 The TEI Header\nThis chapter addresses the problems of describing an encoded work\nso that the text itself, its source, its encoding, and its revisions\nare all thoroughly documented. Such documentation is equally necessary\nfor scholars using the texts, for software processing them, and for\ncataloguers in libraries and archives. Together these descriptions and\ndeclarations provide an electronic analogue to the title page attached\nto a printed work. They also constitute an equivalent for the content\nof the code books or introductory manuals customarily accompanying\nelectronic data sets.\nEvery TEI-conformant text must carry such a set of descriptions,\nprefixed to it and encoded as described in this chapter.  The set is\nknown as the TEI header, tagged teiHeader,\nand  has five major parts:\n\na file description, tagged fileDesc,\ncontaining a full bibliographical description of the computer file\nitself, from which a user of the text could derive a proper\nbibliographic citation, or which a librarian or archivist could use in\ncreating a catalogue entry recording its presence within a library or\narchive.  The term computer file here is to be understood\nas referring to the whole entity or document described by the header,\neven when this is stored in several distinct operating system files.\nThe file description also includes information about the\nsource or sources from which the electronic document was derived.  The TEI\nelements used to encode the file description are described in section 2.2 The File Description\n below.\nan encoding description, tagged encodingDesc,\nwhich describes the relationship between an electronic text and its\nsource or sources.  It allows for detailed description of whether (or\nhow) the text was normalized during transcription, how the encoder\nresolved ambiguities in the source, what levels of encoding or analysis\nwere applied, and similar matters. The TEI elements used to encode the\nencoding description are described in section 2.3 The Encoding Description below.\na text profile, tagged profileDesc,\ncontaining classificatory and contextual information about the text,\nsuch as its subject matter, the situation in which it was produced, the\nindividuals described by or participating in producing it, and so forth.\nSuch a text profile is of particular use in highly structured composite\ntexts such as corpora or language collections, where it is often highly\ndesirable to enforce a controlled descriptive vocabulary or to perform\nretrievals from a body of text in terms of text type or origin.  The\ntext profile may however be of use in any form of automatic text\nprocessing.  The TEI elements used to encode the profile description\nare described in section 2.4 The Profile Description below.\na container element, tagged xenoData, which allows easy\ninclusion of metadata from non-TEI schemes (i.e., other than\nelements in the TEI namespace). For example, the MARC record for the\nencoded document might be included using MARCXML or MODS. A simple set\nof metadata for harvesting might be included encoded in Dublin\nCore.\na revision history, tagged revisionDesc,\nwhich allows the encoder to provide a history of changes made during the\ndevelopment of the electronic text.  The revision history is important\nfor version control and for resolving questions about the\nhistory of a file. The TEI elements used to encode the revision\ndescription are described in section 2.6 The Revision Description below.\n\nA TEI header can be a very large and complex object, or it may be a\nvery simple one.  Some application areas (for example, the construction\nof language corpora and the transcription of spoken texts) may require\nmore specialized and detailed information than others.  The present\nproposals therefore define both a core set of elements\n(all of which may be used without formality in any TEI header) and\nsome additional elements which become available within the header as\nthe result of including additional specialized modules within the\nschema. When the module for language corpora (described in  chapter\n15 Language Corpora) is in use, for example, several additional\nelements are available, as further detailed in that chapter.\n\n  The next section of the present chapter briefly introduces the\n  overall structure of the header and the kinds of data it may\n  contain. This is followed by a detailed description of all the\n  constituent elements which may be used in the core header. Section\n  2.7 Minimal and Recommended Headers, at the end of the present chapter, discusses\n  the recommended content of a minimal TEI header and its relation to\n  standard library cataloguing practices.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD1#HD1\">2.1 Organization of the TEI Header</a>","content":"2.1 Organization of the TEI Header\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD1#HD1\">2.1 Organization of the TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD11#HD11\">2.1.1 The TEI Header and Its Components</a>","content":"2.1.1 The TEI Header and Its Components\nThe teiHeader element should be clearly distinguished \nfrom the front matter of the text itself (for which see\nsection 4.5 Front Matter). A composite text, such as a corpus or\ncollection, may contain several headers, as further discussed below. In\nthe general case, however, a TEI-conformant text will contain a single\nteiHeader element, followed by a single text or\nfacsimile element, or both.\n\nThe header element has the following description:\n<teiHeader> supplies descriptive and\n    declarative metadata associated with a digital resource or set of\n    resources.\n\nAs discussed above, the teiHeader element has five principal\ncomponents:\n\n  <fileDesc> contains a full bibliographic description of an electronic file.\n  <encodingDesc> documents the relationship between an electronic text and the\nsource or sources from which it was derived.\n  <profileDesc> provides a detailed description of non-bibliographic aspects of a text, specifically the\n    languages and sublanguages used, the situation in which it was produced, the participants and\n    their setting.\n  <xenoData> provides a container\n  element into which metadata in non-TEI formats may be\n  placed.\n  <revisionDesc> summarizes the revision history for a file.\n\n\nOf these, only the fileDesc element is required in all TEI\nheaders; the others are optional. That is, only one of the five\ncomponents of the TEI header (the fileDesc) is mandatory, and\nit also has some mandatory components, as further discussed in 2.2 The File Description below. The smallest possible valid TEI header thus\nlooks like this:\n  \nThe content of the elements making up a TEI header may be given in\nany language, not necessarily that of the text to which the header\napplies, and not necessarily English. As elsewhere, the\nxml:lang attribute should be used at an appropriate level\nto specify the language.\nFor example, in the following schematic example, an\nEnglish text has been given a French header:\n  \n\nIn the case of language corpora or collections, it may be\ndesirable to record header information either at the level of the individual\ncomponents in the corpus or collection, or at the level of\nthe corpus or collection itself (more details\nconcerning the tagging of composite texts are given in section 15 Language Corpora, which should be read in conjunction with the current\nchapter). A corpus may thus take the form:\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD1#HD1\">2.1 Organization of the TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD12#HD12\">2.1.2 Types of Content in the TEI Header</a>","content":"2.1.2 Types of Content in the TEI Header\nThe elements occurring within the TEI header may contain several\ntypes of content; the following list indicates how these types of\ncontent are described in the following sections:\nfree proseMost elements contain simple running prose at some level. Many\n  elements may contain either prose (possibly organized into\n  paragraphs) or more specific elements, which themselves contain\n  prose. In this chapter's descriptions of element content, the phrase\n  prose description should be understood to\n  imply a series of paragraphs, each marked as a p element.\n  The word phrase, by contrast, should be\n  understood to imply character data, interspersed as need be with\n  phrase-level elements, but not organized into paragraphs. For more\n  information on paragraphs, highlighted phrases, lists, etc., see\n  section 3.1 Paragraphs.grouping elementsElements whose names end with the suffix\n  Stmt (e.g. editionStmt,\n  titleStmt) and the xenoData element enclose a\n  group of specialized elements recording some structured information.\n  In the case of the bibliographic elements, the suffix\n  Stmt is used in names of elements\n  corresponding to the areas of the International\n  Standard Bibliographic Description.1 In the case of the xenoData\n  element, the specialized elements are not TEI elements, but rather\n  come from some other metadata scheme. In most cases grouping\n  elements may contain prose descriptions as an alternative to the set\n  of specialized elements, thus allowing the encoder to choose whether\n  or not the information concerned should be presented in a structured\n  form or in prose.declarationsElements whose names end with the suffix\n  Decl (e.g. tagsDecl,\n  refsDecl) enclose information about specific encoding\n  practices applied in the electronic text; often these practices are\n  described in coded form. Typically, such information takes the form\n  of a series of declarations, identifying a code with some more\n  complex structure or description. A declaration which applies to\n  more than one text or division of a text need not be repeated in the\n  header of each such text or subdivision. Instead, the\n  decls attribute of each text (or subdivision of the text)\n  to which the declaration applies may be used to supply a\n  cross-reference to it, as further described in section 15.3 Associating Contextual\nInformation with a Text.descriptionsElements whose names end with the suffix\n  Desc (e.g. settingDesc,\n  projectDesc) contain a prose description, possibly, but not\n  necessarily, organized under some specific headings by suggested\n  sub-elements."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD1#HD1\">2.1 Organization of the TEI Header</a><span class=\"breadcrumb\">2.1.3 Model Classes in the TEI Header</span>","content":"2.1.3 Model Classes in the TEI Header\nThe TEI header provides a very rich collection of metadata\ncategories, but makes no claim to be exhaustive. It is certainly the\ncase that individual projects may wish to record specialized metadata\nwhich either does not fit within one of the predefined categories\nidentified by the TEI header or requires a more specialized element\nstructure than is proposed here. To overcome this problem, the encoder\nmay elect to define additional elements using the customization\nmethods discussed in 23.3 Customization. The TEI class system makes\nsuch customizations simpler to effect and easier to use in\ninterchange.\nThese  classes are specific to parts of the header:\n\n  <model.applicationLike> \n  <model.availabilityPart> \n  <model.catDescPart> \n  <model.editorialDeclPart> \n  <model.encodingDescPart> \n  <model.profileDescPart> \n  <model.teiHeaderPart> \n  <model.sourceDescPart> \n  <model.textDescPart> \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD2#HD2\">2.2 The File Description</a>","content":"2.2 The File Description\nThis section describes the fileDesc element, which is the\nfirst component of the teiHeader element.\nThe bibliographic description of a machine-readable or digital text\nresembles in structure that of a book, an article, or any other kind\nof textual object. The file description element of the TEI header has\ntherefore been closely modelled on existing standards in library\ncataloguing; it should thus provide enough information to allow users\nto give standard bibliographic references to the electronic text, and\nto allow cataloguers to catalogue it. Bibliographic citations\noccurring elsewhere in the header, and also in the text itself, are\nderived from the same model (on bibliographic citations in general,\nsee further section 3.12 Bibliographic Citations and References). See further section 2.8 Note for Library Cataloguers.\nThe bibliographic description of an electronic text should be\nsupplied by the  mandatory fileDesc element:\n\n  <fileDesc> contains a full bibliographic description of an electronic file.\n\n\nThe fileDesc element contains three mandatory elements and\nfour optional elements, each of which is described in more detail in\nsections 2.2.1 The Title Statement to 2.2.6 The Notes Statement below. These elements\nare listed below in the order in which they must be given within the\nfileDesc element.\n<titleStmt> groups information about the title of a work and those responsible for its content.<editionStmt> groups information relating to one edition of a text.<extent> describes the approximate size of a text stored on some carrier medium or of some other object, digital  or non-digital,  specified in any convenient units.<publicationStmt> groups information concerning the publication or distribution of an electronic or other text.<seriesStmt> groups information about the series, if any, to which a publication belongs.<notesStmt> collects together any notes providing information about a text additional to that recorded\n    in other parts of the bibliographic description.<sourceDesc> describes the source(s) from which an electronic text was derived or generated, typically a\n    bibliographic description in the case of a digitized text, or a phrase such as \"born digital\"\n    for a text which has no previous existence.\n\nA complete file description containing all possible sub-elements\nmight look like this:\n  \nOf these  elements, only the titleStmt,\npublicationStmt, and sourceDesc are required; the\nothers  may be omitted unless considered useful.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD2#HD2\">2.2 The File Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD21#HD21\">2.2.1 The Title Statement</a>","content":"2.2.1 The Title Statement\nThe titleStmt element is the first component of the\nfileDesc element, and is mandatory:\n<titleStmt> groups information about the title of a work and those responsible for its content.\nIt contains the title given to the electronic work, together with\none or more optional statements of responsibility which\nidentify the encoder, editor, author, compiler, or other parties responsible\nfor it:\n<title> contains a title for any kind of work.<author> in a bibliographic reference, contains the name(s) of an\n  author, personal or corporate, of a work; for example in the same\n  form as that provided by a recognized bibliographic name authority.<editor> contains a secondary statement of responsibility for a bibliographic item, for example the name of an\n    individual, institution or organization, (or of several such) acting as editor, compiler,\n    translator, etc.<sponsor> specifies the name of a sponsoring organization or institution.<funder> specifies the name of an individual, institution, or organization responsible for the\n    funding of a project or text.<principal> supplies the name of the principal researcher responsible for the\ncreation of an electronic text.<respStmt> supplies a statement of responsibility for the intellectual content of a text, edition,\n    recording, or series, where the specialized elements for authors, editors, etc. do not suffice\n    or do not apply. May also be used to encode information about individuals or organizations \n    which have played a role in the production or distribution of a bibliographic work.<resp> contains a phrase describing the nature of a person's intellectual responsibility, or an organization's role \n    in the production or distribution of a work.<name> contains a proper noun or noun phrase.\n\nThe title element contains the chief name of the\nelectronic work, including any alternative title or subtitles it may have.\nIt may be repeated, if the work has more than one title\n(perhaps in different languages) and takes whatever form is\nconsidered appropriate by its creator. Where the electronic work\nis derived from an existing source text, it is strongly\nrecommended that the title for the former should be derived\nfrom the latter, but clearly distinguishable from it, for example\nby the addition of a phrase such as : an electronic\ntranscription or a digital edition. \nThis will distinguish the electronic work from the source text in\ncitations and in catalogues which contain descriptions of both types of\nmaterial.\n\nThe electronic work will also have an external name (its\nfilename or data set name) or reference number on the\ncomputer system where it resides at any time.  This name is likely to\nchange frequently, as new copies of the file are made on the computer\nsystem.  Its form is entirely dependent on the particular computer\nsystem in use and thus cannot always easily be transferred from one\nsystem to another.  Moreover, a given work may be composed of many\nfiles. For these reasons, these Guidelines strongly\nrecommend that such names should not be used as the\ntitle for any electronic work.\n\nHelpful guidance on the formulation of useful descriptive titles in\ndifficult cases may be found in chapter 25 of 1 )\nor another national cataloguing code.\n\nThe elements author, editor, sponsor, funder,\nand principal, are specializations of the more general\nrespStmt element. These elements are used to provide the\nstatements of responsibility which identify the person(s)\nresponsible for the intellectual or artistic content of an item and\nany corporate bodies from which it emanates.\n\nAny number of such statements may occur within the title\nstatement.  At a minimum, identify the author of the text and (where\nappropriate) the\ncreator of the file.  If the bibliographic description\nis for a corpus, identify the creator of the corpus.    Optionally include also names of others involved in\nthe transcription or elaboration of the text, sponsors, and funding\nagencies.  The name of the person responsible for physical data input\nneed not normally be recorded, unless that person is also intellectually\nresponsible for some aspect of the creation of the file.\n\nWhere the person whose responsibility is to be documented is not an\nauthor, sponsor, funding body, or principal researcher, the respStmt\nelement should be used.  This has two subcomponents: a name\nelement identifying a responsible individual or organization, and a\nresp element indicating the nature of the responsibility.  No\nspecific recommendations are made at this time as to appropriate content\nfor the resp:  it should make clear the nature of the\nresponsibility concerned, as in the examples below.\n\nNames given may be personal names or corporate names.  Give all names\nin the form in which the persons or bodies wish to be publicly cited.\nThis would usually be the fullest form of the name, including first\nnames.2\n\nExamples:\nbibliography\nbibliography\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD2#HD2\">2.2 The File Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD22#HD22\">2.2.2 The Edition Statement</a>","content":"2.2.2 The Edition Statement\nThe editionStmt element is the second component of the\nfileDesc element.  It is optional but recommended.\n<editionStmt> groups information relating to one edition of a text.\nIt contains either phrases or more specialized elements identifying the\nedition and those responsible for it:\n<edition> describes the particularities of one edition of a text.<respStmt> supplies a statement of responsibility for the intellectual content of a text, edition,\n    recording, or series, where the specialized elements for authors, editors, etc. do not suffice\n    or do not apply. May also be used to encode information about individuals or organizations \n    which have played a role in the production or distribution of a bibliographic work.<name> contains a proper noun or noun phrase.<resp> contains a phrase describing the nature of a person's intellectual responsibility, or an organization's role \n    in the production or distribution of a work.\n\nFor printed texts, the word edition applies\nto the set of all the identical copies of an item produced from one\nmaster copy and issued by a particular publishing agency or a group of\nsuch agencies.  A change in the identity of the distributing body or\nbodies does not normally constitute a change of edition, while a\nchange in the master copy does.\n\nFor electronic texts, the notion of a master\ncopy is not entirely appropriate, since they are far more\neasily copied and modified than printed ones; nonetheless the term\nedition may be used for a particular state of a\nmachine-readable text at which substantive changes are made and fixed.\nSynonymous terms used in these Guidelines are\nversion, level, and\nrelease.  The words\nrevision and update, by\ncontrast, are used for minor changes to a file which do not amount to\na new edition.\nNo simple rule can specify how substantive\nchanges have to be before they are regarded as producing a new\nedition, rather than a simple update.  The general principle proposed\nhere is that the production of a new edition entails a significant\nchange in the intellectual content of the file, rather than its\nencoding or appearance.  The addition of analytic coding to a text\nwould thus constitute a new edition, while automatic conversion from\none coded representation to another would not.  Changes relating to\nthe character code or physical storage details, corrections of\nmisspellings, simple changes in the arrangement of the contents and\nchanges in the output format do not normally constitute a new edition,\nwhereas the addition of new information (e.g. a linguistic analysis\nexpressed in part-of-speech tagging, sound or graphics, referential\nlinks to external data sets) almost always does.\n\nClearly, there will always be borderline cases and the matter is\nsomewhat arbitrary.  The simplest rule is: if you think that your file\nis a new edition, then call it such.  An edition statement is optional\nfor the first release of a computer file; it is mandatory for\neach later release, though this requirement cannot be enforced by the\nparser.\n\nNote that all changes in a file considered significant, whether or not they are\nregarded as constituting a new edition or simply a new revision, should\nbe independently noted in the revision description section of the file\nheader (see section 2.6 The Revision Description).\n\nThe edition element should contain phrases describing the\nedition or version, including the word edition,\nversion, or equivalent, together with a number or date,\nor terms indicating difference from other editions such as new\nedition, revised edition etc.  Any dates that\noccur within the edition statement should be marked with the\ndate element.  The n attribute of the\nedition element may be used as elsewhere to supply any formal\nidentification (such as a version number) for the edition.\n\nOne or more respStmt elements may also be used to supply\nstatements of responsibility for the edition in question.  These may\nrefer to individuals or corporate bodies and can indicate functions such\nas that of a reviser, or can name the person or body responsible for the\nprovision of supplementary matter, of appendices, etc., in a new\nedition.  For further detail on the respStmt element,\nsee section 3.12 Bibliographic Citations and References.\nSome examples follow:\nbibliography\nbibliography\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD2#HD2\">2.2 The File Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD23#HD23\">2.2.3 Type and Extent of File</a>","content":"2.2.3 Type and Extent of File\nThe extent element is the third component of the\nfileDesc element.  It is optional.\n<extent> describes the approximate size of a text stored on some carrier medium or of some other object, digital  or non-digital,  specified in any convenient units.\n\nFor printed books, information about the carrier, such as the kind of\nmedium used and its size, are of great importance in cataloguing\nprocedures.  The print-oriented rules for bibliographic description of\nan item's medium and extent need some re-interpretation when applied to\nelectronic media.  An electronic file exists as a distinct entity quite\nindependently of its carrier and remains the same intellectual object\nwhether it is stored on a magnetic tape, a CD-ROM, a set of floppy disks,\nor as a file on a mainframe computer.  Since, moreover, these Guidelines\nare specifically aimed at facilitating transparent document storage and\ninterchange, any purely machine-dependent information should be\nirrelevant as far as the file header is concerned.\n\nThis is particularly true of information about file-type\nalthough library-oriented rules for cataloguing often distinguish two\ntypes of computer file:  data and programs.  This\ndistinction is quite difficult to draw in some cases, for example,\nhypermedia or texts with built in search and retrieval software.\n\nAlthough it is equally system-dependent, some measure of the size of\nthe computer file may be of use for cataloguing and other practical\npurposes.  Because the measurement and expression of file size is\nfraught with difficulties, only very general recommendations are\npossible; the element extent is provided for this purpose.  It\ncontains a phrase indicating the size or approximate size of the\ncomputer file in one of the following ways:\nin bytes of a specified length (e.g. 4000 16-bit bytes)as falling within a range of categories, for example:\nless than 1 Mbbetween 1 Mb and 5 Mbbetween 6 Mb and 10 Mbover 10 Mbin terms of any convenient logical units (for example,\nwords or sentences, citations, paragraphs)in terms of any convenient physical units (for example,\nblocks, disks, tapes)\n\nThe use of standard abbreviations for units of quantity is\nrecommended where applicable, here as elsewhere (see http://physics.nist.gov/cuu/Units/binary.html). \nExamples:\nbibliography\n\nThe measure element and its attributes may be used to supply\nmachine-tractable or normalised versions of the size or sizes given,\nas in the following example:\nbibliography\nNote that when more than one measure is supplied in a single\nextent, the implication is that all the measurements apply to\nthe whole resource.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD2#HD2\">2.2 The File Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD24#HD24\">2.2.4 Publication, Distribution, Licensing, etc.</a>","content":"2.2.4 Publication, Distribution, Licensing, etc.\nThe publicationStmt element is the fourth component of the\nfileDesc element and is mandatory. Its function is to name the agency by which a resource is made available (for example, a publisher or distributor) and to supply any additional information about the way in which it is made available such as licensing conditions, identifying numbers, etc.\n<publicationStmt> groups information concerning the publication or distribution of an electronic or other text.\nIt may contain either a simple prose description organized as one or\nmore paragraphs, or the more specialised elements described below.\n\nA structured publication statement must begin with one of the following elements:\n<publisher> provides the name of the organization responsible for the publication or distribution of a\n        bibliographic item.<distributor> supplies the name of a person or other agency responsible for the\ndistribution of a text.<authority> supplies the name of a person or other agency responsible for\n  making a work available, other than a publisher or\n  distributor.\nThese elements form the model.publicationStmtPart.agency class; if the agency making the resource available is unknown, but other structured information about it is available, an explicit statement such as publisher unknown should be used.\n\n\nThe publisher is the person or institution by whose\nauthority a given edition of the file is made public.  The\ndistributor is the person or institution from whom copies\nof the text may be obtained.  Where a text is not considered formally\npublished, but is nevertheless made available for circulation by some\nindividual or organization, this person or institution is termed the\nrelease authority.\n\nWhichever of these elements is chosen, it may be followed by one or more of the following elements, which together form the model.publicationStmtPart.detail class\n <pubPlace> contains the name of the place where a bibliographic item was published.<address> contains a postal address, for example of a publisher, an organization, or an\n    individual.<idno> supplies any form of identifier used to identify some\n    object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized\n    way.<availability> supplies information about the availability of a text, for example any restrictions on its\n  use or distribution, its copyright status, any licence applying to it, etc.<date> contains a date in any format.<licence> contains information about a licence or other legal agreement\n  applicable to the text.\n\nHere is a simple example:\nbibliography\n\n\nThe  model.publicationStmtPart.detail elements all supply additional information relating to the\nthe publisher, distributor, or release authority immediately preceding them.\nIn the following example, Benson is identified as responsible for distribution of some resource at the date and place cited:\n bibliography\n\n\nA resource may have (for example) both a publisher and a distributor, or more than one publisher each using different identifiers for the same resource, and so on. For this reason, the sequence of at least one model.publicationStmtPart.agency element followed by zero or more model.publicationStmtPart.detail elements may be repeated as often as necessary. \nThe following example shows a resource published by one agency (Sigma Press) at one address and date, which is also distributed by another (Oxford Text Archive), with a specified identifier and a different date: bibliography\n\nThe date element used within publicationStmt always refers to the date of publication, first distribution, or initial release.\nIf the text was created at some other date, this may be recorded using the creation element within the\nprofileDesc element. Other useful dates (such as dates of collection of data) may be given using a note in the notesStmt element.\n\n\nThe availability element may be used, as above, to provide a simple prose statement of any restrictions concerning the distribution of the resource. Alternatively, a more formal statement of the licensing conditions applicable may be provided using the licence element:\n  bibliography\nNote here the use of the target attribute to point to a location from which the licence document itself may be obtained. Alternatively, the licence document may simply be contained within the licence element.\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD2#HD2\">2.2 The File Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD26#HD26\">2.2.5 The Series Statement</a>","content":"2.2.5 The Series Statement\nThe seriesStmt element is the fifth component of the\nfileDesc element and is optional.\n<seriesStmt> groups information about the series, if any, to which a publication belongs.\n\nIn bibliographic parlance, a series may be defined in\none of the following ways:\nA group of separate items related to one another by the fact\nthat each item bears, in addition to its own title proper, a\ncollective title applying to the group as a whole.  The\nindividual items may or may not be numbered.Each of two or more volumes of essays, lectures, articles,\nor other items, similar in character and issued in sequence.A separately numbered sequence of volumes within a series or\nserial.\nA seriesStmt element may contain a prose description or one\nor more of the following more specific elements:\n<title> contains a title for any kind of work.<idno> supplies any form of identifier used to identify some\n    object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized\n    way.<respStmt> supplies a statement of responsibility for the intellectual content of a text, edition,\n    recording, or series, where the specialized elements for authors, editors, etc. do not suffice\n    or do not apply. May also be used to encode information about individuals or organizations \n    which have played a role in the production or distribution of a bibliographic work.<resp> contains a phrase describing the nature of a person's intellectual responsibility, or an organization's role \n    in the production or distribution of a work.<name> contains a proper noun or noun phrase.\n\nThe idno may be used to supply any identifying number\nassociated with the item, including both standard numbers such as an\nISSN and particular issue numbers. (Arabic numerals separated by\npunctuation are recommended for this purpose: 6.19.33,\nfor example, rather than VI/xix:33). Its type attribute is used to categorize\nthe number further, taking the value ISSN for an ISSN for\n  example. Multiple seriesStmt elements may be supplied if the TEI document is associated with more than one series.\n\nExamples:\nbibliography\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD2#HD2\">2.2 The File Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD27#HD27\">2.2.6 The Notes Statement</a>","content":"2.2.6 The Notes Statement\nThe notesStmt element is the sixth component of the\nfileDesc element and is optional.  If used, it contains one or\nmore note elements, each containing a single piece of\ndescriptive information of the kind treated as general\nnotes in traditional bibliographic descriptions.\n<notesStmt> collects together any notes providing information about a text additional to that recorded\n    in other parts of the bibliographic description.<note> contains a note or annotation.\n\nSome information found in the notes area in conventional bibliography\nhas been assigned specific elements in these Guidelines; in particular\nthe following items should be tagged as indicated, rather than as\ngeneral notes:\nthe nature, scope, artistic form, or purpose of the file; also\nthe genre or other intellectual category to which it may belong:\ne.g. Text types:  newspaper editorials and reportage, science\nfiction, westerns, and detective stories. These should be\nformally described within the profileDesc element\n(section 2.4 The Profile Description).an abstract or summary of the content of a document which has been supplied by the encoder because no such abstract forms part of the content of the source. This should be supplied in the abstract element within the profileDesc element (section 2.4 The Profile Description).summary description providing a factual, non-evaluative\naccount of the subject content of the file: e.g. Transcribes\ninterviews on general topics with native speakers of English in\n17 cities during the spring and summer of 1963. These should\nalso be formally described within the profileDesc element\n(section 2.4 The Profile Description).bibliographic details relating to the source or sources of\nan electronic text: e.g. Transcribed from the Norton\nfacsimile of the 1623 Folio. These should be formally\ndescribed in the sourceDesc element\n(section 2.2.7 The Source Description).further information relating to publication, distribution,\nor release of the text, including sources from which the text\nmay be obtained, any restrictions on its use or formal terms on\nits availability.  These should be placed in the appropriate\ndivision of the publicationStmt element\n(section 2.2.4 Publication, Distribution, Licensing, etc.).publicly documented numbers associated with the file:  e.g.\nICPSR study number 1803 or Oxford Text Archive text\nnumber 1243.  These should be placed in an idno\nelement within the appropriate division of the\npublicationStmt element.  International Standard\nSerial Numbers (ISSN), International Standard Book Numbers\n(ISBN), and other internationally agreed upon standard numbers\nthat uniquely identify an item, should be treated in the same\nway, rather than as specialized bibliographic notes.\n\nNevertheless, the notesStmt element may be used to record\npotentially significant details about the file and its features, e.g.:\ndates, when they are relevant to the content or condition of the\ncomputer file:  e.g.  manual dated 1983,  Interview wave I:\nApr. 1989; wave II: Jan. 1990names of persons or bodies connected with the technical production,\nadministration, or consulting functions of the effort which produced\nthe file, if these are not named in statements of responsibility in\nthe title or edition statements of the file description:\ne.g. Historical commentary provided by Mark Cohenavailability of the file in an additional medium or information not\nalready recorded about the availability of documentation:\ne.g. User manual is loose-leaf in eleven paginated sectionslanguage of work and abstract, if not encoded in the langUsage\nelement, e.g. Text in English with\nsummaries in French and GermanThe unique name assigned to a serial by the International Serials\nData System (ISDS), if not encoded in an idnolists of related publications, either describing the source itself,\nor concerned with the creation or use of the electronic work, e.g.\nTexts used in \n        \n          \n            John\n            Burrows\n          \n          Computation into Criticism: A Study of Jane Austen's Novel and an\n            Experiment in Method\n          \n            Oxford\n            Clarendon Press\n            1987\n          \n        \n      1 \nEach such item of information may be tagged using the\ngeneral-purpose note element, which is described in section\n3.9 Notes, Annotation, and Indexing. Groups of notes are contained within the\nnotesStmt element, as in the following example:\nbibliography\nThere are advantages, however, to encoding such information with more\nprecise elements elsewhere in the TEI header, when such elements are\navailable. For example, the notes above might be encoded as follows:\nbibliography\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD2#HD2\">2.2 The File Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD3#HD3\">2.2.7 The Source Description</a>","content":"2.2.7 The Source Description\nThe sourceDesc element is the seventh and final component of\nthe fileDesc element.  It is a mandatory element and is used to\nrecord details of the source or sources from which a computer file is\nderived.  This might be a printed text or manuscript, another computer\nfile, an audio or video recording of some kind, or a combination of\nthese.  An electronic file may also have no source, if what is being\ncatalogued is an original text created in electronic form.\n<sourceDesc> describes the source(s) from which an electronic text was derived or generated, typically a\n    bibliographic description in the case of a digitized text, or a phrase such as \"born digital\"\n    for a text which has no previous existence.\n \nThe sourceDesc element may contain little more than a\nsimple prose description, or a brief note stating that the document\nhas no source:\nbibliography\nAlternatively, it may contain elements drawn from the following\nthree classes:\n\n<model.biblLike> \n<model.sourceDescPart> \n<model.listLike> \n\n\nThese classes make available by default a range of ways of\nproviding bibliographic citations which specify the provenance of the\ntext.  For written or printed sources, the source may be described in\nthe same way as any other bibliographic citation, using one of the\nfollowing elements:\n\n<bibl> contains a loosely-structured bibliographic citation of which the sub-components may or may\n    not be explicitly tagged.\n\n<biblStruct> contains a structured bibliographic citation, in which only bibliographic sub-elements\n    appear and in a specified order.\n<listBibl> contains a list of bibliographic citations of any kind.\n\nThese elements are described in more detail in section 3.12 Bibliographic Citations and References.\nUsing them, a source might be described in very simple terms:\nbibliography\nor with more elaboration:\nbibliography\n \nWhen the header describes a text derived from some pre-existing\nTEI-conformant or other digital document, it may be simpler to use the\nfollowing element, which is designed specifically for documents\nderived from texts which were born digital:\n\n<biblFull> contains a fully-structured bibliographic citation, in which all components of the TEI file\n    description are present.\n\nFor further discussion see\nsection 2.2.8 Computer Files Derived from Other Computer Files.\nWhen the module for manuscript description is included in a schema,\nthis class also makes available the following element:\n\n<msDesc> contains a description of a single identifiable\n    manuscript or other text-bearing object such as an early printed book.\n\nThis element enables the encoder to record very detailed information about\none or more manuscript or analogous sources, as further discussed in\n10 Manuscript Description.\nThe model.sourceDescPart class also makes\navailable additional elements when additional modules are\nincluded. For example, when the spoken\nmodule is included, the\nsourceDesc element may also include the following\nspecial-purpose elements, intended for cases where an electronic text\nis derived from a spoken text rather than a written one:\n<scriptStmt> contains a citation giving details of the script used for\na spoken text.<recordingStmt> describes a set of recordings used as the basis for transcription of a\nspoken text.\nFull descriptions of these elements and their contents are given in\nsection 8.2 Documenting the Source of Transcribed Speech.\n\nA single electronic text may be derived from multiple source\ndocuments, in whole or in part. The sourceDesc may therefore\ncontain a listBibl element grouping together bibl,\nbiblStruct, or msDesc elements for each of the\nsources concerned. It is also possible to repeat the\nsourceDesc element in such a case.  The decls\nattribute described in section 15.3 Associating Contextual\nInformation with a Text may be used to\nassociate parts of the encoded text with the bibliographic element\nfrom which it derives in either case. \n\nThe source description may also include lists of names, persons,\nplaces, etc. when these are considered to form part of the source for\nan encoded document. When such information is recorded using the\nspecialized elements discussed in the namesdates module (13 Names, Dates, People, and Places), the class\nmodel.listLike makes available the\nfollowing elements to hold such information:\n\n<listNym> contains a list of nyms, that is, standardized names for any thing.\n<listOrg> contains a list of elements, each of which provides information about an identifiable\n        organization.\n<listPerson> contains a list of descriptions, each of which provides information about an identifiable\n    person or a group of people, for example the participants in a language interaction, or the\n    people referred to in a historical source.\n<listPlace> contains a list of places, optionally followed by a list of relationships (other than\n        containment) defined amongst them.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD2#HD2\">2.2 The File Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD31#HD31\">2.2.8 Computer Files Derived from Other Computer Files</a>","content":"2.2.8 Computer Files Derived from Other Computer Files\nIf a computer file (call it B) is derived not from a\nprinted source but from another computer file (call it\nA) which includes a TEI header, then the source text of\ncomputer file B is another computer file, A.  The five sections\nof A's file header will need to be incorporated into the new\nheader for B in slightly differing ways, as listed below:\nfileDescA's file description should be copied into the\n  sourceDesc section of B's file description, enclosed within\n  a biblFull elementprofileDescA's profileDesc should be copied into B's, in\n  principle unchanged; it may however be expanded by project-specific\n  information relating to B.encodingDescA's encoding practice may or (more likely) may not be the same\n  as B's. Since the object of the encoding description is to define\n  the relationship between the current file and its source, in\n  principle only changes in encoding practice between A and B need be\n  documented in B. The relationship between A and its source(s) is\n  then only recoverable from the original header of A. In practice it\n  may be more convenient to create a new complete\n  encodingDesc for B based on A's.xenoDataB is a new computer file, with a different source than A's\n  source (namely, A). Thus it is unlikely that metadata from other\n  schemes about A or its source can be copied wholesale to B, although\n  there may be similarities.revisionDescB is a new computer file, and should therefore have a new\n  revision description. If, however, it is felt useful to include some\n  information from A's revisionDesc, for example dates of\n  major updates or versions, such information must be clearly marked\n  as relating to A rather than to B.\nThis concludes the discussion of the fileDesc element and\nits contents.\n "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD5#HD5\">2.3 The Encoding Description</a>","content":"2.3 The Encoding Description\nThe encodingDesc element is the second major subdivision of\nthe TEI header.  It specifies the methods and editorial principles which\ngoverned the transcription or encoding of the text in hand and may also\ninclude sets of coded definitions used by other components of the\nheader.  Though not formally required, its use is highly recommended.\n\n  <encodingDesc> documents the relationship between an electronic text and the\nsource or sources from which it was derived.\n\nThe encoding description may contain any combination of\nparagraphs of text, marked up\nusing the p element, along with more specialized\nelements taken from the model.encodingDescPart\nclass. By default, this class makes available the following elements:\n\n  <projectDesc> describes in detail the aim or purpose for which an electronic file was encoded, together\n    with any other relevant information concerning the process by which it was assembled or\n    collected.\n  <samplingDecl> contains a prose description of the rationale and methods used in sampling texts in the\n    creation of a corpus or collection.\n  <editorialDecl> provides details of editorial principles and practices applied\nduring the encoding of a text.\n  <tagsDecl> provides detailed information about the tagging applied to a document.\n  <styleDefDecl> specifies the name of the formal language in which style or\n  renditional information is supplied elsewhere in the document. The\n  specific version of the scheme may also be supplied.\n  <refsDecl> specifies how canonical references are constructed for this\n  text.\n  <classDecl> contains one or more taxonomies defining any classificatory\ncodes used elsewhere in the text.\n  <geoDecl> documents the notation and the datum used for geographic coordinates expressed as content of\n    the geo element elsewhere within the document.\n  <unitDecl> provides information about units of measurement that are not members of the International System of Units.\n  <schemaSpec> generates a TEI-conformant schema and documentation for it.\n  <schemaRef> describes or points to a related customization or schema file\nEach of these elements is further described\nin the appropriate section below. Other modules have the ability to\nextend this class; examples are noted in section 2.3.12 Module-Specific Declarations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n  \n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD5#HD5\">2.3 The Encoding Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD51#HD51\">2.3.1 The Project Description</a>","content":"2.3.1 The Project Description\nThe projectDesc element may be used to describe, in prose,\nthe purpose for which a digital resource was created, together with\nany other relevant information concerning the process by which it was\nassembled or collected.  This is of particular importance for corpora\nor miscellaneous collections, but may be of use for any text, for\nexample to explain why one kind of encoding practice has been followed\nrather than another.\n\n  <projectDesc> describes in detail the aim or purpose for which an electronic file was encoded, together\n    with any other relevant information concerning the process by which it was assembled or\n    collected.\n\nFor example:\nbibliography\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD5#HD5\">2.3 The Encoding Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD52#HD52\">2.3.2 The Sampling Declaration</a>","content":"2.3.2 The Sampling Declaration\nThe samplingDecl element may be used to describe, in\nprose, the rationale and methods used in selecting texts, or parts of\ntext, for inclusion in the resource.\n\n<samplingDecl> contains a prose description of the rationale and methods used in sampling texts in the\n    creation of a corpus or collection.\n\nIt should include information about such matters as\nthe size of individual samplesthe method or methods by which they were selectedthe underlying population being sampledthe object of the sampling procedure used\nbut is not restricted to these.\n        \n\t\n\t\nbibliography\nIt may also include a simple\ndescription of any parts of the source text included or excluded.\nbibliography\nA sampling declaration which applies to more than one text or\ndivision of a text need not be repeated in the header of each such text.\nInstead, the decls attribute of each text (or subdivision of\nthe text) to which the sampling declaration applies may be used to\nsupply a cross-reference to it, as further described in section 15.3 Associating Contextual\nInformation with a Text.\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD5#HD5\">2.3 The Encoding Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD53#HD53\">2.3.3 The Editorial Practices Declaration</a>","content":"\n2.3.3 The Editorial Practices Declaration\nThe editorialDecl element is used to\nprovide details of the editorial practices applied during the encoding\nof a text.\n\n<editorialDecl> provides details of editorial principles and practices applied\nduring the encoding of a text.\nIt may contain a prose description only, or one or more of a set of\nspecialized elements, members of the TEI model.editorialDeclPart class. Where an encoder\nwishes to record an editorial policy not specified above, this may be\ndone by adding a new element to this class, using the mechanisms\ndiscussed in chapter 23.3 Customization.Some of these policy elements carry attributes to support automated\nprocessing of certain well-defined editorial decisions; all of them\ncontain a prose description of the editorial principles adopted with\nrespect to the particular feature concerned.  Examples of the kinds of\nquestions which these descriptions are intended to answer are given in\nthe list below.correction\n\n<correction> states how and under what circumstances corrections have been made in the text.\n\n\nWas the text corrected during or after data capture?  If\nso, were corrections made silently or are they marked using the\ntags described in section 3.5 Simple Editorial Changes?  What principles\nhave been adopted with respect to omissions, truncations, dubious\ncorrections, alternate readings, false starts, repetitions,\netc.?normalization\n\n<normalization> indicates the extent of normalization or regularization of the original source carried out\n    in converting it to electronic form.\n\n\nWas the text normalized, for example by regularizing any non-standard\nspellings, dialect forms, etc.? If so, were normalizations performed\nsilently or are they marked using the tags described in section 3.5 Simple Editorial Changes? What authority was used for the regularization?\nAlso, what principles were used when normalizing numbers to provide\nthe standard values for the value attribute described in\nsection 3.6.3 Numbers and\nMeasures and what format used for\nthem?punctuation\n    \n      <punctuation> specifies editorial practice adopted with respect to punctuation marks in the original.\n    \n    Are punctuation marks present in the original source retained? Are they identified with the element pc, or implied by markup? If retained, how are they placed with respect to related elements? For example, do commas and periods appear inside or outside elements marking phrases and sentences?quotation\n\n<quotation> specifies editorial practice adopted with respect to quotation marks in the original.\n\n\nHow were quotation marks processed?  Are apostrophes and quotation\nmarks distinguished?  How?  Are quotation marks retained as content in\nthe text or replaced by markup?  Are there any special conventions\nregarding for example the use of single or double quotation marks when\nnested?  Is the file consistent in its practice or has this not been\nchecked? See section 3.3.3 Quotation for discussion of ways in which\nquotation marks may be encoded.hyphenation\n\n<hyphenation> summarizes the way in which hyphenation in a source text has been treated in an encoded\n    version of it.\n\n\nDoes the encoding distinguish soft and\nhard hyphens?\nWhat principle has been adopted with respect to end-of-line hyphenation\nwhere source lineation has not been retained?  Have soft hyphens been\nsilently removed, and if so what is the effect on lineation and\npagination? See section 3.2.2 Hyphenation for discussion of ways in which\nhyphenation  may be encoded.\nsegmentation\n\n<segmentation> describes the principles according to which the text has been segmented, for example into\n    sentences, tone-units, graphemic strata, etc.\n\n\nHow is the text segmented?  If\ns or seg segmentation units have been used to divide\nup the text for analysis, how are they marked and how was the\nsegmentation arrived at?stdVals\n\n<stdVals> specifies the format used when standardized date or number values are supplied.\n\nIn most cases, attributes bearing standardized values (such as the\nwhen or when-iso attribute on dates) should\nconform to a defined W3C or ISO\ndatatype. In cases where this is not appropriate, this element may be\nused to describe the standardization methods underlying the values\nsupplied.  interpretation\n\n<interpretation> describes the scope of any analytic or interpretive information added to the text in\n    addition to the transcription.\n\n\nHas any analytic or interpretive information\nbeen provided—that is, information which is felt to be non-obvious,\nor potentially contentious? If so, how was it generated?\nHow was it encoded? If feature-structure analysis has been used, are\nfsdDecl elements (section 18.11 Feature System Declaration)\npresent?Any information about the editorial principles applied not falling\nunder one of the above headings should be recorded in a distinct list\nof items.  Experience shows that a full record should be kept of\ndecisions relating to editorial principles and encoding practice,\nboth for future users of the text and for the project which produced\nthe text in the first instance. Some simple examples follow:\nbibliography\n\nAn editorial practices declaration which applies to more than one text\nor division of a text need not be repeated in the header of each such\ntext.  Instead, the decls attribute of each text (or\nsubdivision of the text) to which it applies may\nbe used to supply a cross-reference to it, as further described in\nsection 15.3 Associating Contextual\nInformation with a Text.\n\t"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD5#HD5\">2.3 The Encoding Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD57#HD57\">2.3.4 The Tagging Declaration</a>","content":"2.3.4 The Tagging Declaration\nThe tagsDecl element is used to record\nthe following information about the tagging used within a particular\ndocument:\nthe namespace to which elements appearing within the transcribed\ntext belong.how often particular elements appear within the text, so that\na recipient can validate the integrity of a text during interchange.any comment relating to the usage of particular elements not\nspecified elsewhere in the header.a default rendition applicable to all instances\nof an element.\nThis information is conveyed by the following elements:\n\n<rendition> supplies information about the rendition or appearance of one or more elements in the source\n    text.\n  <att.styleDef> provides attributes to specify the name of a formal definition\n  language used to provide formatting or rendition information.\n<namespace> supplies the formal name of the namespace to which the elements documented by its children\n    belong.\n<tagUsage> documents the usage of a specific element within a specified document.\nThe tagsDecl element is descriptive, rather than prescriptive: if used, it simply documents\npractice in the TEI document containing it. The elements constituting a TEI customization file (discussed in chapter 22 Documentation Elements) by contrast\ndocument expected practice in a number of documents, and may thus be used prescriptively. If there is an inconsistency between \nthe actual state of a document and what is documented by its tagsDecl, then the latter should be corrected. If there is an\ninconsistency between a document and what is required by the customization file, or a schema derived from it, then it will usually be the\ndocument that requires correction.\nThe tagsDecl element consists of an optional sequence of\nrendition elements, each of which must bear a unique\nidentifier, followed by an optional sequence of one or more\nnamespace elements, each of which contains a series of\ntagUsage elements, up to one for each element type from that\nnamespace occurring within the associated text element. Note\nthat these tagUsage elements must be nested within a\nnamespace element, and cannot appear directly within the\ntagsDecl element.\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD5#HD5\">2.3 The Encoding Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD57#HD57\">2.3.4 The Tagging Declaration</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD57-1#HD57-1\">2.3.4.1 Rendition</a>","content":"2.3.4.1 Rendition\nThe rendition element allows the encoder to specify how\none or more elements are rendered in the original source in any of the\nfollowing ways:\nusing an informal prose descriptionusing a standard stylesheet language such as CSS or\nXSL-FOusing a project-defined formal language\nOne or more such specifications may be associated with elements of\na document in two ways:\nthe selector attribute on any rendition element may be used to select a collection of elements to which it appliesthe global rendition attribute may be used on any\nelement to\nindicate its rendition, overriding or complementing any supplied default value\nThe global rend and style attributes may also be\nused to  describe the rendering of an element. See further 1.3.1.1.3 Rendition Indicators.\n\n  The content of a rendition element may\ndescribe the appearance of the source material using prose, a\nproject-defined formal language, or any standard languages such as the\nCascading Stylesheet Language (1 ) or the XML\nvocabulary for specifying formatting semantics which forms a part of\nthe W3C's Extensible Stylesheet Language (1 ). A\nstyleDefDecl element (2.3.5 The Default Style Definition Language Declaration) may be\nsupplied within the encodingDesc to specify which of these\napplies by default, and it may be overridden for one or more specific\nrendition elements using the scheme attribute.\n\n  \n  The recommended way to indicate a default rendition on one or more elements is to use the selector attribute together with the scheme attribute on rendition. For example, suppose that all paragraphs in the front of a text appear in a large font, with significant top and bottom margins, while paragraphs in the main body are in regular font size and have no top and bottom margins. The use of selector together with scheme provides an efficient way to specify the distinct styling for distinct contexts of the paragraph by means of CSS selectors:\nbibliography\nbibliography\n\n\nIn the following extended example we consider how to capture the\nappearance of a typical early 20th century titlepage, such as that in the\nfollowing figure:  Elements for the encoding of\nthe information on a titlepage are presented in 4.6 Title Pages; here we consider how we might go about encoding\nsome of the visual information as well, using the rendition\nelement and its corresponding attributes.\nFirst we define a rendition element for each aspect of the source\npage rendition that we wish to retain. Details of CSS are given in 1 ; we use it here simply to  provide a vocabulary with\nwhich to describe such aspects\nas font size and style, letter and line spacing, colour, etc. Note\nthat the purpose of this encoding is to describe the original, rather\nthan specify how it should be reproduced, although the two are\nobviously closely linked.\n  bibliography\n\nThe global rendition attribute can now be used to\nspecify on any element which of the above rendition features apply to\nit. For example, a title page might be encoded as\nfollows:\nbibliography\nWhen CSS is used as the style definition language, the scope\nattribute may be used to specify CSS pseudo-elements. These\npseudo-elements are used to specify styling applicable to only a portion of the\ngiven text. For example, the  first-letter\npseudo-element defines styling to be applied  to the first letter in the targeted\nelement, while the before and\nafter pseudo-elements can be used often in conjunction with the\n\"content\" property to add additional characters which need to be added\nbefore or after the element content to\nmake it more closely resemble the appearance of the source.\nFor example, assuming that a text has been encoded using the q\nelement to enclose passages in quotation marks, but the quotation\nmarks themselves have been routinely omitted from the encoding, a set of\nrenditions such as the following:\n  bibliography\nmight be used to predefine pseudo-elements quoteBefore\nand quoteAfter. Where a q element is actually\nrendered in the source with initial and final quotation marks, it may\nthen be encoded as follows:\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD5#HD5\">2.3 The Encoding Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD57#HD57\">2.3.4 The Tagging Declaration</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD57-2#HD57-2\">2.3.4.2 Tag Usage</a>","content":"2.3.4.2 Tag Usage\nAs noted above, each namespace element, if present,\nshould contain up to one occurrence of a tagUsage element\nfor each element type from the given namespace that occurs within\nthe outermost text element associated with the\nteiHeader in which it appears.3 The tagUsage element may be used to supply\na count of the number of occurrences of this element within the text,\nwhich is given as the value of its occurs attribute. It may\nalso be used to hold any additional usage information, which is\nsupplied as running prose within the element itself.\nFor example:\nbibliography\nThis indicates that the hi element appears a total of 28 times\nin the text element in question, and that the encoder has used\nit to mark italicised English words only.\nThe withId attribute may optionally be used to specify\nhow many of the occurrences of the element in question bear a value\nfor the global xml:id attribute, as in the following\nexample: bibliography This indicates that the\npb element occurs 321 times, on each of which an identifier\nis provided.\n\nThe content of the tagUsage element is not susceptible of\nautomatic processing. It should not therefore be used to hold\ninformation for which provision is already made by other components of\nthe encoding description. A TEI-conformant document is not required to\nprovide any tagUsage elements or occurs\nattributes, but if it does, then the counts provided must correspond\nwith the number of such elements present in the associated\ntext.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD5#HD5\">2.3 The Encoding Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD57-1a#HD57-1a\">2.3.5 The Default Style Definition Language Declaration</a>","content":"2.3.5 The Default Style Definition Language Declaration\n  The content of  the rendition element, the value of its \n    selector attribute, and the value of the\nstyle attribute are expressed using one of a small number\nof formally defined style definition languages. For ease of processing, it is strongly\nrecommended to use a single such language throughout an encoding\nproject, although the TEI system permits a mixture. \nThe element styleDefDecl, a sibling of the\ntagsDecl element, is used to supply the name of the\ndefault style definition language. The name is supplied as the value\nof the scheme attribute and may take any of the\nfollowing values:\n\nfreeInformal free text descriptioncssCascading Stylesheet LanguagexslfoExtensible Stylesheet Language Formatting ObjectsotherA user-defined formal description\nlanguage. The schemeVersion attribute may be\n  used to supply the precise version of the style definition language\n  used, and the content of this element, if any, may\nsupply additional information.\nWhen the style attribute is used, its value must always\nbe expressed using whichever default style definition language is in\nforce. If more than one occurrence of the styleDefDecl is\nprovided, there will be more than one default available, and the\ndecls attribute must be used to select which is applicable\nin a given context, as discussed in section 15.3 Associating Contextual\nInformation with a Text. \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD5#HD5\">2.3 The Encoding Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD54#HD54\">2.3.6 The Reference System Declaration</a>","content":"2.3.6 The Reference System Declaration\nThe refsDecl element is  used to\ndocument the way in which any standard referencing scheme built into\nthe encoding works.\n\n<refsDecl> specifies how canonical references are constructed for this\n  text.\n\n It may contain either a series of prose paragraphs or the following specialized elements:\n\n<citeStructure> declares a structure and method for citing the current document.\n<cRefPattern> specifies an expression and replacement pattern for transforming a canonical reference into\n    a URI.\n<refState> specifies one component of a canonical reference defined by the milestone method.\n<att.patternReplacement> provides attributes for regular-expression matching and replacement.\n<att.citeStructurePart> provides attributes for selecting particular elements\n    within a document.\n\nNote that not all possible referencing schemes are equally easily\nsupported by current software systems.  A choice must be made between\nthe convenience of the encoder and the likely efficiency of the\nparticular software applications envisaged, in this context as in many\nothers. For a more detailed discussion of referencing\nsystems supported by these Guidelines, see section 3.11 Reference Systems below.\n\t\nA referencing scheme may be described in one of four ways using this\nelement:\nas a prose descriptionas nested set of citation structure declarationsas a series of pairs of regular expressions and XPathsas a concatenation of sequentially organized\nmilestones\nEach method is described in more detail below. Only one method can be\nused within a single refsDecl element.\nMore than one refsDecl element can be included in the\nheader if more than one canonical reference scheme is to be used in\nthe same document, but the current proposals do not check for mutual\ninconsistency.\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD5#HD5\">2.3 The Encoding Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD54#HD54\">2.3.6 The Reference System Declaration</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD54P#HD54P\">2.3.6.1 Prose Method</a>","content":"2.3.6.1 Prose Method\nThe referencing scheme may be specified within the refsDecl\nby a simple prose description.  Such a description should indicate which\nelements carry identifying information, and whether this information is\nrepresented as attribute values or as content.  Any special rules about\nhow the information is to be interpreted when reading or generating a\nreference string should also be specified here.  Such a prose\ndescription cannot be processed automatically, and this method of\nspecifying the structure of a canonical reference system is therefore\nnot recommended for automatic processing.\nFor example:\nbibliography"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD5#HD5\">2.3 The Encoding Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD54#HD54\">2.3.6 The Reference System Declaration</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD54S#HD54S\">2.3.6.2 Search-and-Replace Method</a>","content":"\n2.3.6.2 Search-and-Replace Method\nThis method often requires a significant investment of effort\ninitially, but permits extremely flexible addressing. For details, see\nsection 16.2.5 Canonical References.\n\n\n  <cRefPattern> specifies an expression and replacement pattern for transforming a canonical reference into\n    a URI.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD5#HD5\">2.3 The Encoding Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD54#HD54\">2.3.6 The Reference System Declaration</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD54M#HD54M\">2.3.6.3 Milestone Method</a>","content":"2.3.6.3 Milestone Method\nThis method is appropriate when only milestone\ntags (see section 3.11.3 Milestone\nElements) are available to provide the\nrequired referencing information. It does not provide any abilities\nwhich cannot be mimicked by the search-and-replace referencing method\ndiscussed in the previous section, but in the cases where it applies,\nit provides a somewhat simpler notation.\nA reference based on milestone tags concatenates the values specified\nby one or more such tags.  Since each tag marks the point at which a\nvalue changes, it may be regarded as specifying the refState\nof a variable.  A reference declaration using this method therefore\nspecifies the individual components of the canonical reference as a\nsequence of refState elements:\n\n<refState> specifies one component of a canonical reference defined by the milestone method.\n<att.milestoneUnit> provides attributes to indicate the type of section which is changing at a specific milestone.\n\nFor example, the reference Matthew 12:34 might be thought of\nas representing the state of three variables: the book variable\nis in state Matthew; the chapter variable\nis in state 12, and the verse variable is\nin state 34. If milestone tagging has been used, there should be\na tag marking the point in the text at which each of the above\nvariables changes its state.4\nTo find Matthew 12:34 therefore an application must scan left to\nright through the text, monitoring changes in the state of each of these\nthree variables as it does so.  When all three are simultaneously in the\nrequired state, the desired point will have been reached.  There may of\ncourse be several such points.\nThe delim and length attributes are used to\nspecify components of a canonical reference using this method in exactly\nthe same way as for the stepwise method described in the preceding\nsection.  The other attributes are used to determine which instances of\nmilestone tags in the text are to be checked for state-changes.\nA state-change is signalled whenever a new milestone tag is\nfound with unit and, optionally, ed attributes\nidentical to those of the refState element in question.  The value\nfor the new state may be given explicitly by the n attribute\non the milestone element, or it may be implied, if the\nn attribute is not specified.\nFor example, for canonical references in the form xx.yyy where\nthe xx represents the page number in the first edition, and\nyyy the line number within this page, a reference system\ndeclaration such as the following would be appropriate:\n\nThis implies that milestone tags of the form\n\nwill be found throughout the text, marking the positions at which page\nand line numbers change. Note that no value has been specified for the\nn attribute on the second milestone tag above; this implies\nthat its value at each state change is monotonically increased.\nFor more detail on the use of milestone tags,\nsee section 3.11.3 Milestone\nElements.\n\t\n\t\nThe milestone referencing scheme, though conceptually simple, is not\nsupported by a generic XML parser.  Its use places a\ncorrespondingly greater burden of verification and accuracy on the\nencoder.\n\nA reference system declaration which applies to more than one text or\ndivision of a text need not be repeated in the header of each such text.\nInstead, the decls attribute of each text (or subdivision of\nthe text) to which the declaration applies may be used to supply a\ncross-reference to it, as further described in section 15.3 Associating Contextual\nInformation with a Text.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD5#HD5\">2.3 The Encoding Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD55#HD55\">2.3.7 The Classification Declaration</a>","content":"2.3.7 The Classification Declaration\nThe classDecl element is used to group\ntogether definitions or sources for any descriptive classification\nschemes used by other parts of the header or elsewhere in the document.  Each such scheme is\nrepresented by a taxonomy element, which may contain either a\nsimple bibliographic citation, or a definition of the\ndescriptive typology concerned; the following elements are used\nin defining a descriptive classification scheme:\n\n  <classDecl> contains one or more taxonomies defining any classificatory\ncodes used elsewhere in the text.\n  <taxonomy> defines a typology either implicitly, by means of a bibliographic\n  citation, or explicitly by a structured taxonomy.\n  <category> contains an individual descriptive category, possibly nested within a superordinate\n  category, within a user-defined taxonomy.\n  <catDesc> describes some category within a taxonomy or text typology, either in the form of a brief\n    prose description or in terms of the situational parameters used by the TEI formal textDesc.\n\nThe taxonomy element has two slightly different, but related,\nfunctions. For well-recognized and documented public classification\nschemes, such as Dewey or other published descriptive thesauri, it\ncontains simply a bibliographic citation indicating where a full\ndescription of a particular taxonomy may be found.\nbibliography\nFor less easily accessible schemes, the taxonomy element\ncontains a description of the taxonomy itself as well as an optional\nbibliographic citation. The description consists of a number of\ncategory elements, each defining a single category within the\ngiven typology. The category is defined by the contents of a nested\ncatDesc element, which may contain either a phrase describing\nthe category, or any number of elements from the model.catDescPart class. When the corpus module\nis included in a schema, this class provides the textDesc\nelement whose components allow the definition of a text type in terms\nof a set of situational parameters (see further\nsection 15.2.1 The Text Description; if the corpus module is not included\nin a schema, this class is empty and the catDesc element may\ncontain only plain text. \nIf the category is subdivided, each subdivision is represented by a\nnested category element, having the same structure.\nCategories may be nested to an arbitrary depth in order to reflect the\nhierarchical structure of the taxonomy. Each category element\nbears a unique xml:id attribute, which is used as the\ntarget for catRef elements referring to it. \nbibliography\nLinkage between a particular text and a category within such a\ntaxonomy is made by means of the catRef element within the\ntextClass element, as described in section 2.4.3 The Text Classification.  \nWhere finer-grained analysis is desired, the ana attribute on an\nelement in the text could point to a category, as in the following abbreviated example:\n    \n \nWhere the taxonomy permits of classification along more\nthan one dimension, more than one category will be referenced by a\nparticular catRef, as in the following example, which\nidentifies a text with the sub-categories Daily, National,\nand Political within the category Press Reportage as\ndefined above.\n  \nA single category may contain more than one\ncatDesc child, when for example the category is described in\nmore than one language, as in the following example:\n    bibliography\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD5#HD5\">2.3 The Encoding Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HDGDECL#HDGDECL\">2.3.8 The Geographic Coordinates Declaration</a>","content":"2.3.8 The Geographic Coordinates Declaration\n    The following element is provided to indicate (within the\n    header of a document, or in an external location) that a\n    particular coordinate notation, or a particular datum, has been\n    employed in a text. The default notation\n    is  a string containing two real numbers separated by\n    whitespace, of which the first indicates latitude and the second\n    longitude according to the 1984 World Geodetic System (WGS84).\n    <geoDecl> documents the notation and the datum used for geographic coordinates expressed as content of\n    the geo element elsewhere within the document.\n    \n    \n  geographic coordinates declaration\n  지리적 좌표 선언\n  declaración de las coordenadas geográficas\n  déclaration de coordonnées géographiques.\n  dichiarazione di coordinate geografiche\n  documents the notation and the datum used for geographic coordinates expressed as content of\n    the geo element elsewhere within the document.\n  \n  \n  \n  \n  \n  \n  \n  \n    \n  \n  \n    \n  \n  \n    2.3.8 The Geographic Coordinates Declaration\n  \n\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD5#HD5\">2.3 The Encoding Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HDUDECL#HDUDECL\">2.3.9 The Unit Declaration</a>","content":"2.3.9 The Unit Declaration\n    When documents feature units of measurement that are not listed in the International System of Units, the unitDecl element may be used in the encoding description to provide definitions and information about their origins and equivalents.\n      \n        <unitDecl> provides information about units of measurement that are not members of the International System of Units.\n      \n    \n    The unitDecl contains one or more unitDef child elements that serve to describe units of measure which may be marked in unit elements within the text.  \n      \n        <unitDef> contains descriptive information related to a specific unit of measurement.\n        <unit> contains a symbol, a word or a phrase referring to a unit of measurement in any kind of formal or informal system.\n        <conversion> defines how to calculate one unit of measure in terms of another. \n        <att.formula> provides attributes for defining a mathematical formula.\n        <att.locatable> provides attributes for referencing locations by pointing to entries in a canonical list of places.\n      \nWithin the unitDef, a conversion element may be used to store information relating to conversion between units. \n      The conversion element holds a special pair of attributes, fromUnit and toUnit, which serve to indicate the direction of a calculation from one unit of measure (stored in fromUnit) to another (stored in toUnit). \n      A mathematical calculation to define the relation between these units may be stored in formula, as shown in the following examples.  \n      The formula attribute takes a value expressed as an XPath expression, for which see 1 . \n      Among other things, this means that division must be expressed with div as opposed to the more common forward slash (/, U+002F), so as not to be confused with path navigation.\n      The conversion element may also use attributes to store dates and date ranges as well as location(s) that specify when and where a conversion formula was applied.\n    \n    bibliography\n    \n    bibliography\n    \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD5#HD5\">2.3 The Encoding Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HDSCHSPEC#HDSCHSPEC\">2.3.10 The Schema Specification</a>","content":"2.3.10 The Schema Specification\n    The schemaSpec element contains a schema specification. When this element appears inside encodingDesc, it allows embedding of a TEI ODD customization file inside a TEI header; alternatively, this element may be used in the body of an ODD document. The use of ODD files, and their relationship to schemas, is described in detail in 22 Documentation Elements.\n\n    A schemaSpec element contains all the information needed to generate schemas for a particular TEI customization, and the ODD documentation elements, by reference to the TEI, are more succinct than the schemas derived from them. Therefore you may find it\n    convenient to make a copy of the schemaSpec from your project's ODD document inside the teiHeader itself, in addition to\n      supplying an external schema and/or ODD file; if the XML file becomes separated from its schema, the schema can be regenerated at\n      any time using the information in the schemaSpec element. For example:\n\n      \n    \n    Alternatively, it is possible to point to an external ODD customization file or schema through use of the schemaRef element. More than one schemaRef element may be provided for different sources, stages in a workflow, or formats.\n      \n      \n      The url attribute may be any form of URI pointer including a private URI syntax documented by a prefixDef.  \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD5#HD5\">2.3 The Encoding Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HDAPP#HDAPP\">2.3.11 The Application Information Element</a>","content":"\n2.3.11 The Application Information Element\nIt is sometimes convenient to store information relating to the\nprocessing of an encoded resource within its header. Typical uses for\nsuch information might be:\n to allow an\n  application to discover that it has previously\n  opened or edited a file, and what version of itself was used\n  to do that; to show (through a date) which\n  application last edited the file to allow for diagnosis of\n  any problems that might have been caused by that\n  application; to allow users to discover information\n  about an application used to edit the fileto allow\n  the application to declare an interest in elements of\n  the file which it has edited, so that other applications\n  or human editors may be more wary of making changes to\n  those sections of the file. The class model.applicationLike\nprovides an element, application, which may be used to record\nsuch information within the appInfo element.\n<appInfo> records information about an application which has\n  edited the TEI file.\n<application> provides information about an application which has acted upon the document.\n\nEach application element identifies the current state of\none software application with regard to the current file.  This\nelement is a member of the att.datable\nclass, which provides a variety of attributes for associating this\nstate with a date and time, or a temporal range. The ident\nand version attributes should be used to uniquely identify\nthe application and its major version number (for example,\nImageMarkupTool 1.5). It is not intended that an\napplication should add a new application each time it touches\nthe file.\nThe following example shows how these elements might be used to\ndocument the fact that version 1.5 of an application called   Image Markup\nTool  has an interest in two parts of a document\nwhich was last saved on June 6 2006. The parts concerned are\naccessible at the URLs given as target for the two ptr\nelements.     bibliography\n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD5#HD5\">2.3 The Encoding Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HDENCOTH#HDENCOTH\">2.3.12 Module-Specific Declarations</a>","content":"2.3.12 Module-Specific Declarations\nThe elements discussed so far are available to any\nschema. When the schema in use includes some of the more specialized\nTEI modules, these make available other more module-specific\ncomponents of the encoding description. These are discussed fully in\nthe documentation for the module in question, but are also noted\nbriefly here for convenience.\nThe fsdDecl element is available only when the iso-fs module is included in a schema. Its\npurpose is to document the feature system declaration (as\ndefined in chapter 18.11 Feature System Declaration) underlying any analytic\nfeature structures (as defined in chapter 18 Feature Structures) present in the text documented by this header. The metDecl element is available only when the verse module is included in a schema. Its\npurpose is to document any metrical notation scheme used in the text,\nas further discussed in section 6.4 Rhyme and Metrical Analysis. It consists\neither of a prose description or a series of metSym\nelements.The variantEncoding element is available only when the\ntextcrit module is included in a\nschema. Its purpose is to document the method used to encode textual\nvariants in the text, as discussed in section 12.2 Linking the Apparatus to the Text.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD4#HD4\">2.4 The Profile Description</a>","content":"2.4 The Profile Description\nThe profileDesc element is the third major subdivision of\nthe TEI header. It is an optional element, the purpose of which is to\nenable information characterizing various descriptive aspects of a text\nor a corpus to be recorded within a single unified framework.\n\n<profileDesc> provides a detailed description of non-bibliographic aspects of a text, specifically the\n    languages and sublanguages used, the situation in which it was produced, the participants and\n    their setting.\n\nIn principle, almost any component of the header might be of\nimportance as a means of characterizing a text.  The author of a written\ntext, its title or its date of publication, may all be regarded as\ncharacterizing it at least as strongly as any of the parameters\ndiscussed in this section.  The rule of thumb applied has been to\nexclude from discussion here most of the information which generally\nforms part of a standard bibliographic style description,\nif only because such information has already been included\nelsewhere in the TEI header.\n\nThe profileDesc element contains \nelements taken from the model.profileDescPart class. The\ndefault members of this class are the following :\n\n  <abstract> contains a summary or formal\n    abstract prefixed to an existing source document by the encoder.\n  <creation> contains information about the creation of a text.\n  <langUsage> describes the languages, sublanguages, registers, dialects, etc.\nrepresented within a text.\n  <textClass> groups information which describes the nature or topic of a text in terms of a standard\n    classification scheme, thesaurus, etc.\n  <correspDesc> contains a description\n    of the actions related to one act of correspondence.\n  <calendarDesc> contains a description of the calendar system used in any\n  dating expression found in the text.\n\nThese elements are further described in the remainder of this section.\nWhen the corpus\nmodule described in chapter 15 Language Corpora is included in a\nschema, three further elements become available  within the\nprofileDesc element:\n\n<textDesc> provides a description of a text in terms of its\nsituational parameters.\n<particDesc> describes the identifiable speakers, voices, or\n        other participants in any kind of text or other persons named or otherwise referred to in a\n        text, edition, or metadata.\n<settingDesc> describes the setting or settings within which a\n        language interaction takes place, or other places otherwise referred to in a text, edition,\n        or metadata.\n\nFor descriptions of these elements, see section 15.2 Contextual Information.\nWhen the transcr module for the\ntranscription of primary sources described in chapter 11 Representation of Primary Sources is included in a schema, the following elements become\navailable within the profileDesc element:\n\n<handNotes> contains one or more handNote elements documenting the\ndifferent hands identified within the source texts.\n<listTranspose> supplies a list of transpositions, each of which is  indicated at some point in\n   a document typically by means of metamarks.\n\nFor a description of the handNotes element, see section 11.3.2.1 Document Hands. Its purpose is to group together a number of\nhandNote elements, each of which describes a different hand\nor equivalent identified within a manuscript. The\nhandNote element can also appear within a structured manuscript\ndescription,  when the msdescription\nmodule described in chapter 10 Manuscript Description is included in a\nschema. For this reason, the handNote element is actually\ndeclared within the header module, but is only accessible to a schema\nwhen one or other of the transcr or msdescription modules is included in a\nschema. See further the discussion at 11.3.2.1 Document Hands.  \nThe listTranspose element is discussed in detail in section 11.3.4.5 Transpositions.\n\n\n\n\n\n\n \n\n\n\n\n\n\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD4#HD4\">2.4 The Profile Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD4C#HD4C\">2.4.1 Creation</a>","content":"2.4.1 Creation\nThe creation element contains phrases describing the\norigin of the text, e.g. the date and place of its composition.\n\n<creation> contains information about the creation of a text.\n\nThe date and place of composition are often of particular importance for\nstudies of linguistic variation; since such information cannot be\ninferred with confidence from the bibliographic description of the copy\ntext, the creation element may be used to provide a consistent\nlocation for this information:\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD4#HD4\">2.4 The Profile Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD41#HD41\">2.4.2 Language Usage</a>","content":"2.4.2 Language Usage\nThe langUsage element is used within the\nprofileDesc element to describe the languages, sublanguages,\nregisters, dialects, etc. represented within a text.  It contains one\nor more language elements, each of which provides information\nabout a single language, notably the quantity of that language present\nin the text.  Note that this\nelement should not be used to supply information about\nany non-standard characters or glyphs used by this language; such\ninformation should be recorded in the charDecl element in\nthe encoding description (see further 5 Characters, Glyphs, and Writing Modes).\n\n<langUsage> describes the languages, sublanguages, registers, dialects, etc.\nrepresented within a text.\n<language> characterizes a single language or sublanguage used within a text.\n\nA language element may be supplied for each different\nlanguage used in a document. If used, its ident attribute\nshould specify an appropriate language identifier, as further\ndiscussed in section 6.1 Language Identification. This is particularly\nimportant if extended language identifiers have been used as the\nvalue of xml:lang attributes elsewhere in the\ndocument. \nHere is an example of the use of this element:\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD4#HD4\">2.4 The Profile Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD43#HD43\">2.4.3 The Text Classification</a>","content":"2.4.3 The Text Classification\nThe\ntextClass element is used to classify a text in some way.\n\n<textClass> groups information which describes the nature or topic of a text in terms of a standard\n    classification scheme, thesaurus, etc.\n\n\nText classification may be carried out\naccording to one or more of the following methods:\nby reference to a recognized international classification such as\nthe Dewey Decimal Classification, the Universal Decimal Classification,\nthe Colon Classification, the Library of Congress Classification, or any\nother system widely used in library and documentation workby providing a set of keywords, as provided for example by British\nLibrary or Library of Congress Cataloguing in Publication databy referencing any other taxonomy of text categories recognized in\nthe field concerned, or peculiar to the material in hand; this may\ninclude one based on recurring sets of values for the situational\nparameters defined in section 15.2.1 The Text Description, or the demographic\nelements described in section 15.2.2 The Participant Description\nThe last of these may be particularly important for dealing with\nexisting corpora or collections, both as a means of avoiding the expense\nor inconvenience of reclassification and as a means of documenting\nthe organizing principles of such materials.\nThe following elements are provided for this purpose:\n\n<keywords> contains a list of keywords or phrases identifying the topic or nature of a text.\n<classCode> contains the classification code used for this text in some standard classification system.\n<catRef> specifies one or more defined categories within some taxonomy or text typology.\n\nThe keywords element simply categorizes an individual text\nby supplying a list of keywords which may describe its topic or subject\nmatter, its form, date, etc.  In some schemes, the order of items in the\nlist is significant, for example, from major topic to minor; in others,\nthe list has an organized substructure of its own.  No recommendations\nare made here as to which method is to be preferred.  Wherever possible,\nsuch keywords should be taken from a recognized source, such as the\nBritish Library/Library of Congress Cataloguing in Publication data in\nthe case of printed books, or a published thesaurus appropriate to the\nfield.\nThe scheme attribute is used to indicate the source of\nthe keywords used, in the case where such a source exists.  If the\nkeywords are taken from an externally defined authority which is\navailable online, this attribute should point directly to it, as in\nthe following examples:\n    bibliography\nbibliography\n\nIf the authority file is not available online, but is generally\nrecognized and commonly cited, a bibliographic description for it should\nbe supplied within the taxonomy element described in section\n2.3.7 The Classification Declaration; the scheme attribute may then\nreference that taxonomy element by means of its identifier in\nthe usual way:\nbibliography\n\nIf no authority file exists, perhaps because the keywords used were\nassigned directly by an author, the scheme attribute should\nbe omitted.\nAlternatively, if the keyword vocabulary itself is locally defined,\nthe scheme attribute will point to the local definition, which will\ntypically be held in a taxonomy element within the\nclassDecl part of the encoding description (see section 2.3.7 The Classification Declaration).\n\n\t\n\t\n\t\nThe classCode element also categorizes an individual text,\nby supplying a numerical or other code rather than descriptive\nterms. Such codes constitute a recognized classification scheme, such\nas the Dewey Decimal Classification. On this element, the\nscheme attribute is required; it indicates the source of the\nclassification scheme in the same way as for keywords: this may be a\npointer of any kind, either to a TEI element, possibly in the current\ndocument, as in the keywords examples above, or to some\ncanonical source for the scheme, as in the following example: bibliography\n\nThe catRef element categorizes an individual text by\npointing to one or more category elements using the\ntarget attribute, which it inherits from the att.pointing class.  The\ncategory element (which is fully described in section 2.3.7 The Classification Declaration) holds information about a particular classification or\ncategory within a given taxonomy.  Each such category must have a unique\nidentifier, which may be supplied as the value of the target\nattribute for catRef elements which are regarded as falling\nwithin the category indicated.\nA text may, of course, fall into more than one category, in which\ncase more than one identifier may be supplied as the value for\nthe target attribute on the catRef element, as\nin the following example:\n  The scheme attribute\nmay be supplied to specify the taxonomy to which the categories\nidentified by the target attribute belong, if this is not adequately\nconveyed by the  resource pointed to. For example,\n    \nHere the same text has been classified as of categories b.a4 and\nb.d2 within the Brown classification scheme (presumed to be\navailable from http://www.example.com/browncorpus), and as of category\nA45 within the SUC classification scheme documented at the URL given.\nIn general, it is a matter of style whether to use a single catRef with multiple\nidentifiers in the value of target or multiple catRef elements, each with\na single identifier in the value of target. However, note that maintenance of a TEI\ndocument with a large number of values within a single target can be cumbersome.\nThe distinction between the catRef and classCode\nelements is that the values used as identifying codes are exhaustively\nenumerated for the former, typically within the TEI header. In the\nlatter case, however, the values use any\nexternally-defined scheme, and therefore may be taken from\n a more open-ended descriptive\nclassification system.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD4#HD4\">2.4 The Profile Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD4ABS#HD4ABS\">2.4.4 Abstracts</a>","content":"2.4.4 Abstracts\nThe main purpose of the abstract element is to supply a brief resume or abstract for an article which was originally published without such a component. An abstract or summary forming part of the document at its creation should usually appear in the front matter (front) of the document.\n bibliography\n\n  Abstracts may be provided in multiple languages, distinguished by the xml:lang attribute:\n bibliography\n\n  \n\nThe same element may be used to provide other summary information supplied by the encoder, perhaps grouped together into a list of discrete items:\n bibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD4#HD4\">2.4 The Profile Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD44#HD44\">2.4.5 Calendar Description</a>","content":"2.4.5 Calendar Description\n  The calendarDesc element is used within the\n  profileDesc element to document objects referenced by means of\neither the calendar attribute on date or the\ndatingMethod attribute on any member of the att.datable class.\n    \n      <calendarDesc> contains a description of the calendar system used in any\n  dating expression found in the text.\n    \n  This element may contain one or more calendar elements:\n    \n      <calendar> describes a calendar or dating system used in a dating formula in the text.\n    \n  Each such element contains one or more paragraphs of description\n  for the calendar system concerned, and also supplies an identifying\n  code for it as the value of its xml:id attribute.\n    bibliography\n  \nThis identifying code may then be referenced from any element\nsupplying  a date\nexpressed using that calendar system:\n    bibliography\n\n  See 13.4.4 Using Non-Gregorian Calendars for details of the usage of dating attributes in conjunction\n  with calendar elements in the teiHeader.\n\n  \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD4#HD4\">2.4 The Profile Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD44CD#HD44CD\">2.4.6 Correspondence Description</a>","content":"2.4.6 Correspondence Description\n      The correspDesc element is used within the profileDesc element to\n        provide detailed correspondence-specific metadata, concerning in particular the\n        communicative aspects (sending, receiving, forwarding etc.) associated with an act\n        of correspondence. \n      This information is complementary to the detailed\n      descriptions of physical objects (such as letters) associated\n      with correspondence acts, which are typically provided by\n      the sourceDesc element. \n          <correspDesc> contains a description\n    of the actions related to one act of correspondence.\n        \n      \n      The correspDesc element contains the elements correspAction and\n        correspContext, describing the actions identified and the context in\n        which the correspondence occurs respectively. \n          <correspAction> contains a structured\n  description of the place, the name of a person/organization and the\n  date related to the sending/receiving of a message or any other\n  action related to the correspondence.\n          <correspContext> provides references to\n        preceding or following correspondence related to this piece of\n        correspondence.\n        \n      \n      Acts of correspondence typically do not occur in isolation from each other. The\n        correspContext element is used to group references relevant to the item\n        of correspondence being described, typically to other items such as the item to which\n        it is a reply, or the item which replies to it: bibliography\n      \n\n\n\n      Many types of correspondence actions may be distinguished. The type\n        attribute should be used to indicate the type of action being documented, using values\n        such as those suggested above. \n      The following simple example uses correspAction to describe the sending of a\n        letter by Adelbert von Chamisso from Vertus on 29 January 1807 to Louis de La Foye at\n        Caen. The date of reception is unknown: bibliography\nNote the use of the when attribute described in 3.6.4 Dates and Times to provide a normalized\n      form of the date. The content of the date element may\n      be omitted, since no underlying source is being transcribed.\n\n      Several senders, recipients, etc. can be specified for a single\n        correspAction if the action is considered to apply to them all acting as\n        a single group. In the following example, two people are considered to have received\n        the piece of correspondence. bibliography\n      \n      The subtype attribute may be used to further distinguish types of action.\n        In the following example, an e-mail is sent to two people directly and to a third by\n        carbon copy (cc). bibliography\n      \n      The same person may be associated with several actions. For example, it will often\n        be the case that the author and sender of a message are identical, and that many\n        individual letters will need to be associated with the same person. The\n        sameAs attribute defined in section 16.6 Identical Elements and Virtual Copies may be used\n        to indicate that the same name applies to many actions. Its value will usually be the\n        identifier of an element defining the person or name concerned, which is supplied\n        elsewhere in the document. \n        \n      \n      It is assumed that each correspondence action applies to a single act of\n        communication. However, it may be the case that the same physical object is involved\n        in several such acts, if for example person A sends a letter to person B,\n        who then annotates it and sends it on to person C, or if persons A and B both use\n        the same document to convey quite different messages. In such situations, multiple\n        correspDesc elements should be supplied, one for each communication. In\n        the following example, the same document contains distinct messages, sent by two\n        different people to the same destination: correspDesc is used for each\n        separately: bibliography\n      \n\n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD9#HD9\">2.5 Non-TEI Metadata</a>","content":"2.5 Non-TEI Metadata\nProjects often maintain metadata about their TEI documents in more\nthan one form or system. For example, a project may have a database of\nbibliographic information on the set of documents they intend to\nencode. From this database, both a MARC record and a\nteiHeader are generated. The document is then encoded, during\nwhich process additional information is added to the\nteiHeader manually. Then, when the document is published on\nthe web, a Dublin Core record is generated for discoverability of the\nresource. It is sometimes advantageous to store some or all of the\nnon-TEI metadata in the TEI file.\nSuch non-TEI data may be placed anywhere within a TEI file\n(other than as the root element), as it does not affect TEI\nconformance. However, it is easier for humans to manage these kinds of data\nif they are grouped together in a single location. In addition, such\ngrouping makes it easy to avoid accidentally flagging non-TEI data as errors\nduring validation of the file against a TEI schema. The\nxenoData element, which may appear in the TEI header after\nthe fileDesc but before the optional revisionDesc,\nis provided for this purpose.\n\n  <xenoData> provides a container\n  element into which metadata in non-TEI formats may be\n  placed.\n\nThe xenoData element may contain anything except TEI\nelements. It may contain one or more elements from outside the\nTEI5 or data in some non-XML text\nformat.6\n\n  In the following example, the prefix\n    rdf is bound to the namespace http://www.w3.org/1999/02/22-rdf-syntax-ns#, the prefix\n    dc is bound to the namespace http://purl.org/dc/elements/1.1/, and the prefix\n    cc is bound to the namespace http://web.resource.org/cc/.\n    bibliography\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD6#HD6\">2.6 The Revision Description</a>","content":"2.6 The Revision Description\nThe final sub-element of the TEI header, the revisionDesc\nelement, provides a detailed change log in which each change made to a\ntext may be recorded.  Its use is optional but highly recommended.\nIt provides essential information for the administration of large\nnumbers of files which are being updated, corrected, or otherwise\nmodified as well as extremely useful documentation for files being\npassed from researcher to researcher or system to system. Without\nchange logs, it is easy to confuse different versions of a file, or to\nremain unaware of small but important changes made in the file by some\nearlier link in the chain of distribution.  No significant change should be made in\nany TEI-conformant file without corresponding entries being made in the\nchange log.\n<revisionDesc> summarizes the revision history for a file.\n<listChange> groups a number of change descriptions associated \nwith either the creation of a source text or the revision of an encoded text.\n<change> documents a change or set of changes made during the production\n    of a source document, or during the revision of an electronic file.\n\n\nThe main purpose of the revision description is to record changes\nin the text to which a header is prefixed. However, it is recommended\nTEI practice to include entries also for significant changes in the\nheader itself (other than the revision description itself, of\ncourse). At the very least, an entry should be supplied indicating the\ndate of creation of the header.\nThe log consists of a list of entries, one for each change. Changes\nmay be grouped and organised using  either the listChange element described in\nsection 11.7 Identifying Changes and Revisions or the simple list element\ndescribed in section 3.8 Lists. Alternatively, a simple sequence of\nchange elements may be given. The attributes\nwhen and who may be supplied for each\nchange element to indicate its date\nand the person responsible for it respectively. The\ndescription of the change itself can range from a simple phrase to a\nseries of paragraphs. If a number is to be associated with one or more\nchanges (for example, a revision number), the global n\nattribute may be used to indicate it.\nIt is recommended to give changes in reverse chronological order,\nmost recent first.\nFor example:\nbibliography\n\nIn the above example, the who attributes point to\nrespStmt elements which have been included earlier in the\ntitleStmt of the same header:\nbibliography\nThere is however no requirement that the respStmt be used for\nthis person, or that the elements indicated be contained within the\nsame document. A project might for example maintain a separate\ndocument listing all of its personnel in which they were represented\nusing the\nperson element described in 15.2.2 The Participant Description.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD7#HD7\">2.7 Minimal and Recommended Headers</a>","content":"2.7 Minimal and Recommended Headers\nThe TEI header allows for the provision of a very large amount of\ninformation concerning the text itself, its source, its encodings, and\nrevisions of it, as well as a wealth of descriptive information such\nas the languages it uses and the situation(s) in which it was\nproduced, together with the setting and identity of participants\nwithin it.  This diversity and richness reflects the diversity of uses\nto which it is envisaged that electronic texts conforming to these\nGuidelines will be put. It is emphatically not intended\nthat all of the elements described above should be present in every\nTEI header.\nThe amount of encoding in a header will depend both on the nature\nand the intended use of the text. At one extreme, an encoder may\nexpect that the header will be needed only to provide a bibliographic\nidentification of the text adequate to local needs. At the other,\nwishing to ensure that their texts can be used for the widest range\nof applications, encoders will want to document as explicitly as\npossible both bibliographic and descriptive information, in such a\nway that no prior or ancillary knowledge about the text is needed in\norder to process it. The header in such a case will be very full,\napproximating to  the kind of\ndocumentation often supplied in the form of a manual. Most texts will\nlie somewhere between these extremes; textual corpora in particular\nwill tend more to the latter extreme.\nIn the remainder of this section we demonstrate first the minimal,\nand next a commonly\nrecommended, level of encoding for the bibliographic information held by\nthe TEI header.\nSupplying only the minimal level of encoding required, the\nTEI header of a single text might look like the following\nexample:\nbibliographyThe only mandatory component of the TEI header is the\nfileDesc element.  Within this, titleStmt,\npublicationStmt, and sourceDesc are all required\nconstituents.  Within the title statement, a title is required, and an\nauthor should be specified, even if it is unknown, as\nshould some additional statement of responsibility, here given by the\nrespStmt element. Within the publicationStmt, a\npublisher, distributor, or other agency responsible for the file must be\nspecified.  Finally, the source description should contain at the least\na loosely structured bibliographic citation identifying the source of\nthe electronic text if (as is usually the case) there is one.\n \nWe now present the same example header, expanded to include\nadditionally recommended information, adequate to most bibliographic\npurposes, in particular to allow for the creation of an AACR2-conformant\nbibliographic record.  We have also added information about the\nencoding principles used in this (imaginary) encoding, about the\ntext itself (in the form of Library of Congress subject headings),\nand about the revision of the file.\n\n\t\n\t\n\t\nbibliography\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n \nMany other examples of recommended usage for the elements discussed\nin this chapter are provided here, in the reference index and in the\nassociated tutorials.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD8#HD8\">2.8 Note for Library Cataloguers</a>","content":"2.8 Note for Library CataloguersA strong motivation in preparing the material in this chapter was to\nprovide in the TEI header a viable chief source of information\nfor cataloguing computer files.  The TEI header is not\na library catalogue record, and so will not make all of the distinctions\nessential in standard library work.  It also includes much information\ngenerally excluded from standard bibliographic descriptions.  It is the\nintention of the developers, however, to ensure that the information\nrequired for a catalogue record be retrievable from the TEI file\nheader, and moreover that the mapping from the one to the other be as\nsimple and straightforward as possible.  Where the correspondence is not\nobvious, it may prove useful to consult one of the works which were\ninfluential in developing the content of the TEI header.  These\ninclude:ISBDISBD: International Standard Bibliographic Description\nis an international standard setting out what information\nshould be recorded in a description of a bibliographical item.  Until a consolidated edition published in 2011, there\nwas a general standard called ISBD(G) and separate ISBDs covering different types of material, e.g.\nISBD(M) for monographs, ISBD(ER) for electronic resources.  These separate\nISBDs follow the same general scheme as the main ISBD(G), but provide\nappropriate interpretations for the specific materials under\nconsideration.AACR2The Anglo-American Cataloguing Rules (second edition) were published\nin 1978, with revisions appearing periodically through 2005. AACR2 provides\nguidelines for the construction of catalogues in general libraries in the\nEnglish-speaking world. AACR2 is explicitly based on the general framework\nof the ISBD(G) and the subsidiary ISBDs: it gives a description of how to\ndescribe bibliographic items and how to create access points such as subject\nor name headings and uniform titles. Other national cataloguing codes exist\nas well, including the Z44 series of standards from issued by the Association\nfrançaise de normalisation (AFNOR), Regeln für die alphabetische Katalogisierung\nin wissenschaftlichen Bibliotheken (RAK-WB), Regole italiane di\ncatalogazione per autore (RICA), and Система стандартов по\nинформации, библиотечному и издательскому делу. Библиографическая запись. Библиографическое\nописание. Общие требования и правила составления (ГОСТ 7.1).ANSI Z39.29The American National Standard for Bibliographic References\nwas an American national standard governing bibliographic references for use in\nbibliographies, end-of-work lists, references in abstracting and indexing publications,\nand outputs from computerized bibliographic data bases.  A revised version is maintained by the\nNational Information Standards Organization (NISO). The related ISO standard is ISO 690.\nOther relevant national standards include BS 5605:1990, BS\n6371:1983. DIN 1505-2, and ГОСТ 7.0.5.\n\nSince the TEI file description elements are based on the ISBD\nareas, it should be possible to use the content of file description as\nthe basis for a catalog record for a TEI document. However,\ncataloguers should be aware that the permissive nature of the TEI\nGuidelines may lead to divergences between practice in using the TEI\nfile description and the comparatively strict recommendations of\nAACR2 and other national cataloguing codes. Such divergences as the following may preclude automatic\ngeneration of catalogue records from TEI headers: The TEI Guidelines do not require that text be transcribed from the chief source of information using normalized capitalization and punctuation .The TEI title statement may not categorize constituent titles in\nthe same way as prescribed by a national cataloguing code.The TEI title statement contains authors, editors, and other\nresponsible parties in separate elements, with names which may not\nhave been normalized; it does not necessarily contain a single\nstatement of responsibility .There is no specific place in a TEI header to\n  specify the main entry or added entries\n  (name or title headings under which a catalogue record is\n    filed) for the catalogue record.The TEI header does not require use of a particular vocabulary\nfor subject headings nor require the use of subject headings.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=HD#HD\">2 The TEI Header</a><span class=\"breadcrumb\">2.9 The TEI Header Module</span>","content":"\n  2.9 The TEI Header Module\n  The module described in this chapter makes available the\n  following components:\n  \n    Common Metadata\n    The TEI header\n    \n    \n    \n    \n    \n  \n  \n  The selection and combination of modules to form a TEI schema is\n  described in 1.2 Defining a TEI Schema.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a>","content":"\n3 Elements Available in All TEI Documents\nThis chapter describes elements which may appear in any kind of text\nand the tags used to mark them in all TEI documents. Most of these\nelements are freely floating phrases, which can appear at any point\nwithin the textual structure, although they should generally be contained\nby a higher-level element of some kind (such as a paragraph). A few of\nthe elements described in this chapter (for example, bibliographic\ncitations and lists) have a comparatively well-defined internal\nstructure, but most of them have no consistent inner structure of their\nown. In the general case, they contain only a few words, and are often\nidentifiable in a conventionally printed text by the use of typographic\nconventions such as shifts of font, use of quotation or other\npunctuation marks, or other changes in layout.\nThis chapter begins by describing the p tag used to mark\nparagraphs, the prototypical formal unit for running text\nin many TEI modules. This is followed, in\nsection 3.2 Treatment of Punctuation, by a discussion of some specific problems\nassociated with the interpretation of conventional punctuation, and the\nmethods proposed by these Guidelines for resolving ambiguities\ntherein.\n\nThe next section (section 3.3 Highlighting and Quotation) describes a number\nof phrase-level elements commonly marked by typographic features (and\nthus well-represented in conventional markup languages). These include\nfeatures commonly marked by font shifts (section 3.3.2 Emphasis, Foreign Words, and Unusual Language) and features commonly marked by quotation marks\n(section 3.3.3 Quotation) as well as such features as terms,\ncited words, and glosses (section 3.4 Terms and Glosses, Ruby Annotations, and Equivalents and Descriptions).\n\nSection 3.5 Simple Editorial Changes introduces some phrase-level elements\nwhich may be used to record simple editorial interventions, such as\nemendation or correction of the encoded text. The elements described\nhere constitute a simple subset of the full mechanisms for encoding\nsuch information (described in full in chapter 11 Representation of Primary Sources),\nwhich should be adequate to most commonly encountered situations.\n\nThe next section (section 3.6 Names, Numbers, Dates, Abbreviations, and Addresses) describes several\nphrase-level and inter-level elements which, although often of\ninterest for analysis or processing, are rarely explicitly identified\nin conventional printing. These include names (section 3.6.1 Referring Strings), numbers and measures (section 3.6.3 Numbers and\nMeasures), dates and times (section 3.6.4 Dates and Times), abbreviations (section 3.6.5 Abbreviations and Their Expansions), and addresses (section 3.6.2 Addresses).\n\nIn the same way, the following section (section 3.7 Simple Links and Cross-References) presents only a subset of the facilities available\nfor the encoding of cross-references or text-linkage. The full story\nmay be found in chapter 16 Linking, Segmentation, and Alignment; the tags presented here\nare intended to be usable for a wide variety of simple\napplications.\n\nSections 3.8 Lists, and 3.9 Notes, Annotation, and Indexing, describe\ntwo kinds of quasi-structural elements: lists and notes. These may\nappear either within chunk-level elements such as paragraphs, or\nbetween them. Several kinds of lists are catered for, of an arbitrary\ncomplexity. The section on notes discusses both notes found in the\nsource and simple mechanisms for adding annotations of an interpretive\nnature during the encoding; again, only a subset of the facilities\ndescribed in full elsewhere (specifically, in chapter 17 Simple Analytic Mechanisms) is discussed.\nSection 3.10 Graphics and Other Non-textual Components introduces some simple ways of\nrepresenting graphic or other non-textual content found in a text. A\nfuller discussion of the multimedia facilities supported by these\nGuidelines may be found in chapters 14 Tables, Formulæ, Graphics, and Notated Music and 16 Linking, Segmentation, and Alignment. \nNext, section 3.11 Reference Systems, describes methods of\nencoding within a text the conventional system or systems used when\nmaking references to the text. Some reference systems have attained\ncanonical authority and should be recorded to make the text useable in\nnormal work; in other cases, a convenient reference system should be\ncreated by the creator or analyst of an electronic text.\nLike lists and notes, the bibliographic citations discussed in\nsection 3.12 Bibliographic Citations and References, may be regarded as structural elements in\ntheir own right. A range of possibilities is presented for the encoding\nof bibliographic citations or references, which may be treated as\nsimple phrases within a running text, or as highly-structured\ncomponents suitable for inclusion in a bibliographic database.\nAdditional elements for the encoding of passages of verse or drama\n(whether prose or verse) are discussed in section 3.13 Passages of Verse or Drama.\nThe chapter concludes with a technical overview of the structure and\norganization of the module described here. This should be read in\nconjunction with chapter 1 The TEI Infrastructure, describing the structure of\nthe TEI document type definition. \n\n\n\n\n\n  \n  \n\n\n\n\n\n\t\n\n\n\n\n \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COPA#COPA\">3.1 Paragraphs</a>","content":"3.1 Paragraphs\nThe paragraph is the fundamental organizational unit for all prose\ntexts, being the smallest regular unit into which prose can be\ndivided. Prose can appear in all TEI texts, even those that are\nprimarily of another genre (e.g., verse); thus the paragraph is\ndescribed here, as an element which can appear in any kind of\ntext.\nParagraphs can contain any of the other elements described within\nthis chapter, as well as some other elements which are specific to\nindividual text types. We distinguish phrase-level\nelements, which must be entirely contained within a paragraph or similar structure and\ncannot appear except within one, from chunks, which can\nappear between, but not within, paragraphs, and from\ninter-level elements, which can appear either within a\nsingle paragraph or between paragraphs. The class of phrases includes\nemphasized or quoted phrases, names, dates, etc. The class of\ninter-level elements includes bibliographic citations, notes, lists,\netc. The class of chunks includes the paragraph itself, and other\nelements which have similar structural properties, notably the\nab (anonymous block) element described in 16.3 Blocks, Segments, and Anchors) which may be used as an alternative to the paragraph\nin some kinds of texts.\nBecause paragraphs may appear in different base or additional tag\nsets, their possible contents may differ in different kinds of\ndocuments. In particular, additional elements not listed in this\nchapter may appear in paragraphs in certain kinds of text. However, the\nelements described in this chapter are always by default available in\nall kinds of text.\nThe paragraph is marked using the p element:\n <p> marks paragraphs in prose.\nIf a consistent internal subdivision of paragraphs is desired, the\ns or seg (segment) elements may\nbe used, as discussed in chapters 16 Linking, Segmentation, and Alignment and 17 Simple Analytic Mechanisms\nrespectively. More usually, however, paragraphs have no firm internal\nstructure, but contain prose encoded as a mix of characters, entity\nreferences, phrases marked as described in the rest of this chapter, and\nembedded elements like lists, figures, or tables.\nSince paragraphs are usually explicitly marked in Western texts,\ntypically by indentation, the application of the p tag\nusually presents few problems.\nIn some cases, the body of a text may comprise but a single\nparagraph:\nbibliography\n \nThis news story shows typically short journalistic paragraphs:\nbibliography\n \nThe following extract from a Russian fairy tale demonstrates\nhow other phrase level elements (in this case q elements\nrepresenting direct speech; see section 3.3.3 Quotation)\nmay be nested within, but not across, paragraphs:\nbibliography\n \n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COPU#COPU\">3.2 Treatment of Punctuation</a>","content":"3.2 Treatment of Punctuation\n\nPunctuation marks cause two distinct classes of problem for text\nmarkup: the marks  may not\nbe available in the character set used,  and they\nmay be significantly ambiguous. To some extent, the availability of\nthe Unicode character set addresses the first of these problems, since\nit provides specific code points for most punctuation marks, and also\nthe second to the extent that it distinguishes glyphs (such as stop,\ncomma, and hyphen) which are used with different functions. \n Where punctuation\nitself is the subject of study, the element pc (punctuation\ncharacter) may be used to mark it explicitly, as further discussed in\n17.1.2 Below the Word Level. Where the character used for a punctuation mark\nis not available in Unicode, the g element and other facilities described in\nchapter 5 Characters, Glyphs, and Writing Modes may also be used to mark its presence.\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COPU#COPU\">3.2 Treatment of Punctuation</a><a class=\"breadcrumb\" href=\"p5.xml?id=COPU-1#COPU-1\">3.2.1 Functions of Punctuation</a>","content":"3.2.1 Functions of Punctuation\n\nPunctuation is itself a form of markup, historically introduced to\nprovide the reader with an indication about how the text should be\nread. As such, it is unsurprising that encoders will often wish to\nencode directly the purpose for which punctuation was provided, as\nwell as, or even instead of, the punctuation itself. We discuss some\ntypical cases below.\nThe Full stop (period)\nmay mark (orthographic) sentence boundaries, abbreviations, decimal\npoints, or serve as a visual aid in printing numbers. These usages can\nbe distinguished by tagging S-units, abbreviations, and numbers, as\ndescribed in sections 16.3 Blocks, Segments, and Anchors, 3.6.5 Abbreviations and Their Expansions,\nand 3.6.3 Numbers and\nMeasures respectively. However, there are independent reasons\nfor tagging these, whether or not they are marked by full\nstops, and the polysemy of the full stop itself is perhaps no different from\nthat of any other character in the writing system. \nThe Question mark\nand exclamation mark\nusually mark the end of orthographic sentences, but may also be used\nas a mid-sentence comment by the author (! to express\nsurprise or some other strong feeling, ? to query a word\nor expression or mark a sentence as dubious in linguistic discussion).\nSuch usages may be distinguished by marking S-units, in which case the\nmid-sentence uses of these punctuation marks may be left unmarked, or\ntagged using the pc element discussed in 17.1 Linguistic Segment Categories.\n \n Dashes are used for a variety of\n purposes: as a mark of omission, insertion, or interruption;\n to show where a new speaker takes over (in dialogue); or to introduce\n a list item. In the latter two cases particularly, it is clearly\ndesirable to mark the function as well as its rendition using the\n elements q or item, on which see section 3.3.3 Quotation, and section 3.8 Lists,\n respectively.\n\nQuotation marks may be removed from\ntext contained by q or quote elements on editorial\ngrounds, or they may be marked in a variety of ways; see\nthe discussion of quotation and related features in section 3.3.3 Quotation.\n\nApostrophes should be distinguished from\nsingle quote marks. As with hyphens, this disambiguation is best\nperformed by selecting the appropriate Unicode character, though  it may\nalso be represented by using appropriate XML markup for quotations as\nsuggested above. However, apostrophes have a variety of uses. In\nEnglish they mark contractions, genitive forms, and (occasionally)\nplural forms. Full disambiguation of these uses belongs to the level of\nlinguistic analysis and interpretation.\nParentheses\nand other marks of suspension such as dashes or ellipses are often\nused to signal information about the syntactic structure of a text\nfragment. Full disambiguation of their uses also belongs to the level\nof linguistic analysis and interpretation, and will therefore need to\nuse the mechanisms discussed in chapter 17 Simple Analytic Mechanisms.\n\nWhere punctuation marks are disambiguated by tagging their assumed\nfunction in the text (for example, quotation), it may be debated\nwhether they should be excluded or left as part of the text. In the\ncase of quotation marks, it may be more convenient to distinguish\nopening from closing marks simply by using the appropriate Unicode\ncharacter than to use the q element, with or without an\nindication of rendition. \n\nWhere segmentation of a text is performed automatically, the\naccuracy of the result may be considerably enhanced by a first pass in\nwhich the function of different punctuation characters is explicitly\nmarked.  This need not be done for all cases, but only where the\nstructural function of the punctuation markup (for example as a word\nor phrase delimiter) is ambiguous. Thus, dots indicating abbreviation\nmight be distinguished from dots indicating sentence end, and\nexclamation or question marks internal to a sentence distinguished\nfrom those which terminate one. Furthermore, when encoding historical\nmaterials, it may be considered essential to retain the original\npunctuation, whether by using an appropriate character code, if this\nis available (or using the g element where it is not) or by\nan explicit encoding using pc. The particular method adopted\nwill vary depending upon the feature concerned and upon the purpose of\nthe project.\n \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COPU#COPU\">3.2 Treatment of Punctuation</a><a class=\"breadcrumb\" href=\"p5.xml?id=COPU-2#COPU-2\">3.2.2 Hyphenation</a>","content":"3.2.2 Hyphenation\n\nHyphenation as a phenomenon is generally of most concern when\nproducing formatted text for display in print or on screen: different\nlanguages and systems have developed quite sophisticated sets of rules\nabout where hyphens may be introduced and for what reason. These\ngenerally do not concern the text encoder, since they belong to the\ndomain of formatting and will generally be handled by the rendition\nsoftware in use. In this section, we discuss issues arising from the\nappearance of hyphens in pre-existing formatted texts which are being\nre-encoded for analysis or other processing. Unicode distinguishes\nfour  characters  visually similar to the hyphen, including the\nundifferentiated hyphen-minus (U+002D) which is retained for compatibility\nreasons. The hard hyphen (U+2010) is distinguished from the minus sign\n(U+2212) which is for use in mathematical expressions, and\nalso from the soft hyphen (U+00AD) which may appear in born\ndigital documents to indicate places where it is acceptable\nto insert a hyphen when the document is formatted. \n\n Historically, the hard hyphen has been used in printed or\nmanuscript documents for two distinct purposes. In many languages, it\nis used between words to show that they function as a single syntactic\nor lexical unit. For example, in French, est-ce\nque; in English body-snatcher,\ntea-party etc. It may also have an important\nrole in disambiguation (for example, by distinguishing say a\nman-eating fish from a man eating\nfish). Such usages, although possibly problematic when a\nlinguistic analysis is undertaken, are not generally of concern to\ntext encoders: the hyphen character is usually retained in the text,\nbecause it may be regarded as part of the way a compound or other\nlexical item is spelled. Deciding whether a compound is to be\ndecomposed into its constituent parts, and if so how, is a different\nquestion, involving consideration of many other phenomena in addition\nto the simple presence of a hyphen. \n\n When it appears at the end of a printed or written line however,\nthe hard hyphen generally indicates that—contrary to what might be\nexpected—a word is not yet complete, but continues on the next line\n(or over the next page or column or other boundary). The hyphen\ncharacter is not, in this case, part of the word, but just a signal\nthat the word continues over the break. Unfortunately, few languages\ndistinguish these two cases visually, which necessarily poses a\nproblem for text encoders. Suppose, for example, that we wish to\ninvestigate a diachronic English corpus for occurrences of\ntea-pot and teapot, to\nfind evidence for the point at which this compound becomes\nlexicalized. Any case where the word is hyphenated across a linebreak,\nlike this:  is\nambiguous: there is no simple way of deciding which of the two\nspellings was intended.\n\nAs elsewhere, therefore, encoders have a range of choices:\nThey\nmay decide simply to remove any end-of-line hyphenation from the\nencoded text, on the grounds that its presence is purely a secondary\nmatter of formatting. This will obviously apply also if line endings\nare themselves regarded as unimportant.Alternatively, they may decide to record the presence of the\nhyphen, perhaps on the grounds that it provides useful morphological\ninformation; perhaps in order to retain information about the visual\nappearance of the original source. In either case, they need to decide\nwhether to record it explicitly, by including an appropriate\npunctuation character in the text data, or implicitly by supplying an\nappropriate symbolic value for one or more of the attributes on the\nlb or other milestone element used to record the fact of the line\n division. If the hyphen is included in the character data of the TEI document, it might be marked up using the pc\n  (punctuation character) tag, which allows the encoder to express\n  information about its function as a separator, through the force attribute. \n  For example, the example above could be encoded with a force value of \"inter\" \n  to indicate that the punctuation mark may or may not be a word separator (See also 17.1.2 Below the Word Level). \n    \n\nA similar range of possibilities applies equally to the representation of\nother common punctuation marks, notably quotation marks, as discussed\nin 3.3.3 Quotation.\n\n The text data of which XML documents are\ncomposed is decomposable into smaller units, here called\northographic tokens, even if those units are not\nexplicitly indicated by the XML markup. The ambiguity of the\nend-of-line hyphen also causes problems in the way a processor\nidentifies such tokens in the absence of explicit markup. If token\nboundaries are not explicitly marked (for example using the\nseg or w elements), for most languages a processor\nwill rely on character class information to determine where they are\nto be found: some punctuation characters are considered to be\nword-breaking, while others are not. In XML, the newline character in\ntext data is a kind of whitespace, and is therefore word\nbreaking.  However, it is generally unsafe to assume that whitespace\nadjacent to markup tags will always be preserved, and it is decidedly\nunsafe to assume that markup tags themselves are equivalent to\nwhitespace. \n\n The lb, pb, and cb elements are notable\nexceptions to this general rule, since their function is precisely to\nrepresent (or replace) line, page, or column breaks, which, as noted\nabove, are generally considered to be equivalent to whitespace. These\nelements provide a more reliable way of preserving the lineation,\npagination, etc of a source document, since the encoder should not\nassume that (untagged) line breaks etc. in an XML source file will\nnecessarily be preserved. \n\nTo control the intended tokenization, the encoder may use the\nbreak attribute on such elements to indicate whether or not\nthe element is to be regarded as equivalent to whitespace. This\nattribute can take the values yes or no to\nindicate whether or not the element corresponds with a token\nboundary. The value maybe is also available, for cases\nwhere the encoder does not wish (or is unable) to determine whether\nthe orthographic token concerned is broken by the line ending.\n\n\nAs a final complication, it should be noted that in some languages,\nparticularly German and Dutch, the spelling of a word may be altered\nin the presence of end of line hyphenation. For example, in Dutch, the\nword opaatje (granddad),\noccurring at the end of a line may be hyphenated as\nopa-tje, with a single letter a. An encoder\nwishing to preserve the original form of this orthographic token in a\nprinted text while at the same time facilitating its recognition as\nthe word opaatje will therefore need to rely on\na more sophisticated process than simply removing the hyphen. This is\nhowever essentially the same as any other form of normalization\naccompanying the recognition of variations in spelling or morphology:\nas such it may be encoded using the choice element discussed\nin 3.5 Simple Editorial Changes, or the more sophisticated mechanisms for\nlinguistic analysis discussed in chapter 17 Simple Analytic Mechanisms.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHQ#COHQ\">3.3 Highlighting and Quotation</a>","content":"3.3 Highlighting and Quotation\nThis section deals with a variety of textual features, all of\nwhich have in common that they are frequently realized in conventional\nprinting practice by the use of such features as underlining, italic\nfonts, or quotation marks, collectively referred to here as\nhighlighting. After an initial discussion of this\nphenomenon and alternate approaches to encoding it, this section\ndescribes ways of encoding the following textual features, all\nof which are conventionally rendered using some kind of highlighting:\nemphasis, foreign words and other linguistically distinct uses\nof highlightingrepresentation of speech and thought, quotation, etc.technical terms, glosses, etc.\n \n\n\n \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHQ#COHQ\">3.3 Highlighting and Quotation</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHQW#COHQW\">3.3.1 What Is Highlighting?</a>","content":"3.3.1 What Is Highlighting?\nBy highlighting we mean the use of any\ncombination ofhighlighting typographic\nfeatures (font, size, hue, etc.) in a printed or written text in order\nto distinguish some passage of a text from its surroundings.1 The purpose of highlighting is\ngenerally to draw the reader's attention to some feature or\ncharacteristic of the passage highlighted; this section describes the\nelements recommended by these Guidelines for the encoding of such\ntextual features.\n \nIn conventionally printed modern texts, highlighting is often\nemployed to identify words or phrases which are regarded as being one or\nmore of the following:\ndistinct in some way—as foreign, dialectal,\narchaic, technical, etc.emphatic, and which would for example be stressed when spokennot part of the body of the text, for example cross-references,\ntitles, headings, labels, etc.identified with a distinct narrative stream, for example an\ninternal monologue or commentary.attributed by the narrator to some other agency, either within the\ntext or outside it:  for example, direct speech or quotation.set apart from the text in some other way:  for example,\nproverbial phrases, words mentioned but not used, names of persons and\nplaces in older texts, editorial corrections or additions, etc.\n \nThe textual functions indicated by highlighting may not be rendered\nconsistently in different parts of a text or in different texts. (For\nexample, a foreign word may appear in italics if the surrounding text is\nin roman, but in roman if the surrounding text is in italics.)  For this\nreason, these Guidelines distinguish between the encoding of rendering\nitself and the encoding of the underlying feature expressed by it.\n \nHighlighting as such may be encoded by using one of the global\nattributes rend, rendition, or style\n(see further 1.3.1.1 Global Attributes).  This allows the encoder both to\nspecify the function of a highlighted phrase or word, by selecting the\nappropriate element described here or elsewhere in these Guidelines, and\nto further describe the way in which it is highlighted, by means of an\nattribute. If the encoder wishes to offer no interpretation of the\nfeature underlying the use of highlighting in the source text, then\nthe hi element may be used, which indicates only that the\ntext so tagged was highlighted in some way.\n\n<hi> marks a word or phrase as graphically distinct from the\n        surrounding text, for reasons concerning which no claim is\n        made.\n\nThe hi element is provided by the model.hiLike class. \n\nThe possible values carried by the rend attribute are\nnot formally defined in this version of the Guidelines. It may be used\nto document any peculiarity of the way a given segment of text was\nrendered in the original source text, and may thus express a very\nlarge range of typographic or other features, by no means restricted\nto typeface, type size, etc. The style attribute, by\ncontrast, defines the way the source text was rendered using a\nformally defined style language, such as the W3C standard Cascading\nStylesheet Language (1 ). The complementary\nrendition attribute is used to point to one or more\nfragments expressed using such a language which have been predefined\nin the TEI header using the rendition element discussed in\nsection 2.3.4 The Tagging Declaration.\n \n\nWhere it is both appropriate and feasible, these Guidelines recommend\nthat the textual feature marked by the highlighting should be encoded,\nrather than just the simple fact of the highlighting. This is for the\nfollowing reasons:\nthe same kind of highlighting may be used for different purposes\nin different contextsthe same textual function may be highlighted in different ways in\ndifferent contextsfor analytic purposes, it is in general more useful to know the\nintended function of a highlighted phrase than simply that it is\ndistinct.\n \nIn many, if not most, cases the underlying function of a\nhighlighted phrase will be obvious and non-controversial, since the\ndistinctions indicated by a change of highlighting correspond with\ndistinctions discussed elsewhere in these Guidelines. The elements\navailable to record such distinctions are, for the most part, members\nof the model.emphLike class. This and the\nmodel.hiLike class mentioned above\nconstitute the model.highlighted class,\nwhich is a phrase level class. Members of this class may appear\nanywhere within paragraph level elements.\nThe distinction between the two classes is simple, and typified by\nthe two elements hi and emph: the former marks\nsimply that a passage is typographically distinct in some way, while\nthe latter asserts that a passage is linguistically emphasized for\nsome purpose. These two properties, though often combined, are not\nidentical. It should however be recognized, however, that cases do\nexist in which it is not economically feasible to mark the underlying\nfunction (e.g. in the preparation of large text corpora), as well as\ncases in which it is not intellectually appropriate (as in the\ntranscription of some older materials, or in the preparation of\nmaterial for the study of typographic practice). In such cases, the\nhi element or some other element from the model.hiLike class should be used.\n \nElements which are sometimes realized by typographic distinction but\nwhich are not discussed in this section include title\n(discussed in section 3.12 Bibliographic Citations and References) and name (discussed\nin section 3.6.1 Referring Strings).\n "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHQ#COHQ\">3.3 Highlighting and Quotation</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHQH#COHQH\">3.3.2 Emphasis, Foreign Words, and Unusual Language</a>","content":"3.3.2 Emphasis, Foreign Words, and Unusual Language\nThis subsection discusses the following elements:\n<foreign> identifies a word or phrase as belonging to some language other than that of the\n                surrounding text.<emph> marks words or phrases which are stressed or emphasized for\n        linguistic or rhetorical effect.<distinct> identifies any word or phrase which is regarded as linguistically distinct, for example as\n        archaic, technical, dialectal, non-preferred, etc., or as forming part of a sublanguage.\nThese elements are all members of the model.emphLike class. \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHQ#COHQ\">3.3 Highlighting and Quotation</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHQH#COHQH\">3.3.2 Emphasis, Foreign Words, and Unusual Language</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHQHF#COHQHF\">3.3.2.1 Foreign Words or Expressions</a>","content":"3.3.2.1 Foreign Words or Expressions\nWords or phrases which are not in the main language of the text\nshould be tagged as such, at least where the fact is indicated in the\ntext. Where the word or phrase concerned is already distinguished from\nthe rest of the text by virtue of its function (for example, because\nit is a name, a technical term, a quotation, a mentioned word, etc.)\nthen the global xml:lang attribute should be used to\nspecify additionally that its language distinguishes it from the\nsurrounding text. Any element in the TEI scheme may take an\nxml:lang attribute, which specifies both the writing system\nand the language used by its content (see sections 1.3.1.1.2 Language Indicators and 6.1 Language Identification for discussion of this\nattribute and its values respectively). Where there is no other\napplicable element, the element foreign may be used to\nprovide a peg onto which the xml:lang may be attached.\nbibliography\n\n\nThe foreign element should not be used to represent foreign words\nwhich are mentioned or glossed within the text: for these use the\nappropriate element from section 3.4.1 Terms and Glosses below. Compare the\nfollowing example sentences:\n\n\nbibliography\n \nElements which do not explicitly state the language of their\ncontent by means of an xml:lang attribute are understood to\ninherit a value for it from their parent element. In the general case,\ntherefore, it is recommended practice to supply a default value for\nxml:lang on the root TEI or text element,\nas further discussed in section 1.3.1.1.2 Language Indicators\n\n\n "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHQ#COHQ\">3.3 Highlighting and Quotation</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHQH#COHQH\">3.3.2 Emphasis, Foreign Words, and Unusual Language</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHQHE#COHQHE\">3.3.2.2 Emphatic Words and Phrases</a>","content":"3.3.2.2 Emphatic Words and Phrases\nThe emph element is provided to mark words or phrases\nwhich are linguistically emphatic or stressed. Text which\nis only typographically emphasized falls into the\nclass of highlighted text, and may be tagged with the hi\nelement. In printed works, emphasis is generally indicated by devices\nsuch as the use of an italic font, a large typeface, or extra wide\nletter spacing; in manuscripts and typescripts, it is usually\nindicated by the use of underlining.  As the following examples\ndemonstrate, an encoder may choose whether or not to make explicit the\nparticular type of rendition associated with the emphasis. If a source\ntext consistently renders a particular feature (e.g. emphasis or words\nin foreign languages) in a particular way, the rendering associated\nwith that feature may be described in the TEI header using the\nrendition element.  The rend,\nrendition, or style attributes may then be used\nto describe examples which deviate from the norm. For example,\nassuming that the TEI header has defined a default rendering for the\nemph element, the following encoding would use it: bibliography If on the other hand no such\ndefault has been defined for the element, the encoder may specify it\ninformally using the rend attribute: bibliography If the encoder wishes to express\ninformation about the rendition used in the source using a formal\nlanguage such as CSS, then the style attribute can be used\nin a similar way: bibliography\n\nIn cases where the rendition of a source needs to be indicated \nseveral times in a document, it may be more convenient to provide a\ndefault value using the rendition element  in the header. If\na small number of distinct values are required, it may also be\nconvenient to define them all by means of a series of rendition elements\nwhich can then be referenced from the elements in question by means of\nthe global rendition attribute:\nbibliography\nFurther information on the use of the rendition element is\nprovided at 2.3.4 The Tagging Declaration. \n\n\nThe hi element is used to mark words or phrases which are\nhighlighted in some way, but for which identification of the intended\ndistinction is difficult, controversial, or impossible. It enables an\nencoder simply to record the fact of highlighting, possibly describing\nit by the use of a rend, style, or\nrendition attribute, as discussed above, without however\ntaking a position as to the function of the highlighting. This may\nalso be useful if the text is to be processed in two stages:\nrepresenting simply typographic distinctions during a first pass, and\nthen replacing the hi elements with more specific elements in\na second pass.\n \nSome simple examples:\nbibliography\n\nIn this example, the first highlighted phrase uses black letter or\ngothic print to mimic the appearance of a legal document, and italic\nto mark Walter Shandy as a name. In a second\npass, the elements head or label might be\nappropriate for the first use, and the element name for the\nsecond.  bibliography In this example, the phrase came\ndown uses inverted commas to indicate a play on\nwords.2\nIn a second pass, the element soCalled might be preferred as\na means of indicating that the narrator is distancing himself from\nthis usage.\n \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHQ#COHQ\">3.3 Highlighting and Quotation</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHQH#COHQH\">3.3.2 Emphasis, Foreign Words, and Unusual Language</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHQHD#COHQHD\">3.3.2.3 Other Linguistically Distinct Material</a>","content":"3.3.2.3 Other Linguistically Distinct Material\nFor some kinds of analysis, it may be desirable to encode the\nlinguistic distinctiveness of words and phrases with more delicacy than\nis allowed by the foreign element. The distinct\nelement is provided for this purpose. Its attributes allow for\nadditional information characterizing the nature of the linguistic\ndistinction to be made in two distinct ways:  the type\nattribute simply assigns a user-defined code of some kind to the word or\nphrase which assigns it to some register, sub-language, etc. No\nrecommendations as to the set of values for this attribute are provided\nat this time, as little consensus exists in the field.\n \nAlternatively, the remaining three attributes may be used in\ncombination to place a word or phrase on a three-dimensional scale\nsometimes used in descriptive linguistics, as for example in\nMattheier et al, 1988. \nThe time attribute places a word or phrase\ndiachronically,diachronic information\nfor example as archaic, old-fashioned, contemporary, futuristic, etc.;\nthe space attribute places a word or phrase\ndiatopically,diatopic information\nthat is, with respect to a geographical classification, for example as\nnational, regional, international, etc.; the social attribute\nplaces a word or phrase diastratically,diastratic information\nthat is, with respect to a social classification, for example as\ntechnical, polite, impolite, restricted, etc. Again, no recommendations\nare made for the values of these attributes at this time; the encoder\nshould provide a description of the scheme used in the appropriate\nsection of the header (see section 2.3 The Encoding Description).\n \nExamples:\nbibliography\n\nbibliography\nWhere more complex (or more rigorous) interpretive analyses of the\nassociations of a word are required, the more detailed and general\nmechanisms described in chapter 18 Feature Structures should be preferred to\nthese simple characterizations. It may also be preferable to record the\nkinds of analysis suggested here by means of the simple annotation\nelement note described in section 3.9 Notes, Annotation, and Indexing, or the\nspan element described in section 17.3 Spans and Interpretations.\n \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHQ#COHQ\">3.3 Highlighting and Quotation</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHQQ#COHQQ\">3.3.3 Quotation</a>","content":"3.3.3 Quotation\n\n One form of presentational variation found particularly frequently in\n written and printed texts is the use of quotation marks. As with the\n typographic variations discussed in the preceding section, it is\n generally helpful to separate the encoding of the underlying textual\n feature (for example, a quotation or a piece of direct speech) from the\n encoding of its rendering (for example, the use of a particular style of\n quotation marks).\n\n This section discusses the following elements, all of which are often\n rendered by the use of quotation marks:\n \n   <q> contains material which is distinguished from the\n    surrounding text using quotation marks or a similar method, for any one of a variety of reasons including, but not limited to: direct\n    speech or thought, technical terms or jargon, authorial distance, quotations from elsewhere, and\n    passages that are mentioned but not used.\n   <said> indicates passages thought or spoken aloud, whether explicitly indicated in the source or\n    not, whether directly or indirectly reported, whether by real people or fictional characters.\n   <quote> contains a phrase or passage attributed by the narrator or author to some agency external\n        to the text.\n   <att.global.source> provides attributes used by elements to point to an\n    external source.\n   <cit> contains a quotation from some other document, together with a bibliographic reference to\n    its source. In a dictionary it may contain an example text with at least one occurrence of the\n    word form, used in the sense being described, or a translation of the headword, or an example.\n   <mentioned> marks words or phrases mentioned, not used.\n   <soCalled> contains a word or phrase for which the author or narrator indicates a disclaiming of\n    responsibility, for example by the use of scare quotes or italics.\n \nThe elements mentioned and soCalled are members of\nthe class model.emphLike while q \nstems from model.hiLike; the element\nsaid is a member of the class model.attributable in its own right, while\ncit and quote are members of model.quoteLike, a subclass of model.attributable. This class is a subclass of model.inter; hence all of these elements are\npermitted both within and between paragraph-level elements.\n\n The most common and important use of quotation marks is, of\n course, to mark quotation, by which we mean simply any\n part of the text which the author or narrator wishes to attribute to\n some agency other than the narrative voice. The q element\n may be used if no further distinction beyond this is judged\n necessary. If it is felt necessary to distinguish such passages\n further, for example to indicate whether they are regarded as speech,\n writing, or thought, either the type attribute or one of\n the more specialized elements discussed in this section may be\n used. For example, the element quote may be used for written\n passages cited from other works, or the element said for\n words or phrases represented as being spoken or thought by people or\n characters within the current work.  The soCalled element is\n used for cases where the author or narrator distances him or herself\n from the words in question without however attributing them to any\n other voice in particular. The mentioned element is\n appropriate for a case where a word or phrase is being discussed in\n the body of a text rather than forming part of the text directly.\n \n As noted above, if the distinction among these various reasons why\n a passage is offset from surrounding text cannot be made reliably, or\n is not of interest, then any representation of speech, thought, or\n writing may simply be marked using the q element. \n Quotation may be indicated in a printed source by changes in type\n face, by special punctuation marks (single or double or angled\n quotes, dashes, etc.) and by layout (indented paragraphs, etc.), or\n it may not be explicitly represented at all. If these characteristics\n are of interest, one or other of the global rend or\n rendition attributes discussed in section 1.3.1.1 Global Attributes may be used to record them. \n \nQuotation marks themselves may, like other punctuation marks, be\n felt for some purposes to be worth retaining within a text, quite\n independently of their description by the rend attribute.\n This should generally be done using the appropriate Unicode\n character, or, if this is not possible, a numeric character reference\n (see 5.7.1 Character References). If the encoder decides both to retain\n the quotation marks and to represent their function by means of an\n explicit tag such as quote, the quotation marks should be\n included within the element, rather than outside it, as in the first\n example below:\n\n bibliography\n\nAlternatively, since this use of the leading mdash is very common\ntypographic practice, it may be considered unnecessary to retain it in\nthe encoding. Its presence in the source might instead be signalled\nusing one of the attributes rend, style, or\nrendition. This kind of rendering might be\npredefined using a rendition element, which can then be\nreferenced using the rendition attribute as follows:\n\n bibliography\n \n\nWhatever policy is  adopted, the encoder should document the\ndecision in some way, for example by using the quotation\nelement provided in the TEI header (see 2.3.3 The Editorial Practices Declaration) to\nindicate that quotation marks have not been retained in the encoding;\ntheir presence in the source is implied by the rendition\nattribute values supplied.\n\n\n Whether or not the quotation marks are suppressed, their presence\n and nature may be described using some appropriate set of conventions\n in the rend attribute. These conventions may be entirely\n idiosyncratic, and hence not necessarily useful for interchange, as\n in the following example:\n\n bibliography\n\n\nSuch passages might more effectively be encoded without loss of\nrendering information by using the rendition attribute and\nits associated rendition element as described in section 2.3.4.1 Rendition. If the rendition of passages tagged as\nsaid is generally uniform throughout a text, then the\nrendition element may used to specify a default rendering, in\nwhich case the same section might simply be tagged:\n\nbibliography\n\n\n\n\nAs  members of the att.ascribed.directed class,\n elements said and q share the following attributes:\n<att.ascribed> provides attributes for elements representing speech or action that can be ascribed to a\n    specific individual.<att.ascribed.directed> provides attributes for elements representing speech or action that can be directed at a\n        group or individual.\nThese may be used to make explicit who is speaking and who is being spoken to:\n bibliography\n\n The who attribute may be supplied whether\n or not an indication of the speaker is given explicitly in the\n text. Likewise, the toWhom attribute may be supplied to indicate the encoder's interpretation\n of the intended recipient of the speech. They may take the form (as above) of  an abbreviated or\n normalized form of the speaker's name, but the role of these attributes is to act as a\n pointer to a location elsewhere in the text, or another document, where data about each\n party may be supplied. While these attributes could point to any source of information about the parties involved, the most appropriate place for such\n information is within the participant description\n component of the TEI header, as further discussed in 15.2.2 The Participant Description but for simple cases like the above, a simple list\n of speakers located in the front or back matter of the text may\n suffice.\n It may also be useful to distinguish\n representations of speech from representations of thought, in modern\n printed texts often indicated by a change of typeface. The\n aloud attribute is provided for this purpose, as in this\n example:\n bibliography\n \n Quoted matter may be embedded within quoted matter, as when one\n speaker reports the speech of another:\n bibliography\n \n Direct speech nested in this way is treated in the same way as\n elsewhere: a change of rendition may occur, but the same\n element should be used. An encoder may however choose to distinguish\n between direct speech which contains quotations from extra-textual\n matter and direct speech itself, as in the following example:\n bibliography \n \n Quotations from other works are often accompanied by a reference to\n their source. The cit element may be used to group together\n the quotation and its associated bibliographic reference, which should\n be encoded using the elements for bibliographic references discussed in\n section 3.12 Bibliographic Citations and References, as in the following example.\n bibliography\n Like other bibliographic references, the citation associated with a\n quotation may be represented simply by a cross-reference, as in this example:\n bibliography\n \n It is also common for quotations to be separated from their bibliographic reference\n by intervening text, which makes the use of cit impractical. In such circumstances, \n the quotation can be linked to a bibliographical reference using source:\n \n   bibliography\n   \n   source could also be used to point to a complete external bibliographic reference\n   in a listBibl elsewhere in the document, or external to it.\n\n   \n   \n Unlike most of the other elements discussed in this chapter, direct\n speech and quotations may frequently contain other high-level elements\n such as paragraphs or verse lines, as well as being themselves contained\n by such elements. Three possible solutions exist for this well-known\n structural problem:\n the quotation is broken into segments, each of which is\n   entirely contained within a paragraphthe quotation is marked up using stand-off markupthe quotation boundaries are represented by empty\n   segment boundary delimiter elements\n For further discussion and several examples, see chapter 20 Non-hierarchical Structures.\n Finally, in this section, the element soCalled is provided\n for all cases in which quotation marks are used to distance the quoted\n text from the narrator or speaker. Common examples include the\n scare quotes often found in newspaper headlines and\n advertising copy, where the effect is to cast doubts on the veracity of\n an assertion:\n bibliography\n\n The same element should be used to mark a variety of special ironic\n usages. Some further examples follow:\n \n \n \n bibliography\n \n \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHTGEDR#COHTGEDR\">3.4 Terms and Glosses, Ruby Annotations, and Equivalents and Descriptions</a>","content":"3.4 Terms and Glosses, Ruby Annotations, and Equivalents and Descriptions\n    This section describes a set of textual elements which are\n      used to provide a gloss, alternate identification, or description of\n      something.\n    \n    \n    \n    \n    \n    \n    \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHTGEDR#COHTGEDR\">3.4 Terms and Glosses, Ruby Annotations, and Equivalents and Descriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHTG#COHTG\">3.4.1 Terms and Glosses</a>","content":"3.4.1 Terms and Glosses\n    \n    Technical terms are often italicized or emboldened upon first mention\n      in printed texts; an explanation or gloss is sometimes given in\n      quotation marks.  Linguistic analyses conventionally cite words in\n      languages under discussion in italics, providing a gloss immediately\n      following marked with single quotation marks.  Other texts in which\n      individual words or phrases are mentioned (formentionvs. useusevs. mention\n      example, as examples) rather than used may\n      mark them either with italics or with quotation marks, and will gloss\n      them less regularly.\n        <term> contains a single-word, multi-word, or symbolic\n    designation which is regarded as a technical term.\n        <gloss> identifies a phrase or word used to provide a gloss or definition for some other word or\n    phrase.\n      \n      These elements are also members of\n      the class model.emphLike.\n    \n    A term may appear with or without a gloss, as may a\n      mentioned element.  Where the gloss is present, it may\n      be linked to the term it is glossing by means of its target\n      attribute. To establish such a link, the encoder should give an\n      xml:id value to the term or mentioned element\n      and provide that value, prefixed by a sharp sign, as the value of  the target attribute on\n      the gloss element.  For example: \n      \n      bibliography  \n      \n      bibliography\n    \n    In the absence of a gloss in the source text, \n      a term can also be associated with a gloss or definition by means of its ref attribute, as in this imaginary example:\n      \n      Here, the value #TDPV2 references some other XML element in the same document. This might be, for example, an entry in a list of technical\n      vocabulary given in the document header, or in an appendix. This attribute could also reference an entry in some centrally maintained\n      terminological database, perhaps using one of the pointing mechanisms discussed in section 16.2 Pointing Mechanisms. \n    Note that the element term is intended for use with words\n      or phrases identified as terminological in nature; where words or\n      phrases are simply being cited, discussed, or glossed in a text, it\n      will often be more appropriate to use the mentioned element,\n      as in the following example:\n      \n      bibliography\n    \n    \n    For technical terminology in particular, and generally in\n      terminological studies, it may be useful to associate an instance of a\n      term within a text with a canonical definition for it, which is stored\n      either elsewhere in the same text (for example in a glossary of terms)\n      or externally, for example in a database, authority file, or published\n      standard. The attributes key and ref discussed\n      in section 3.6.1 Referring Strings below are available on the\n      term element for this purpose.\n    \n    \n    \n      \n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHTGEDR#COHTGEDR\">3.4 Terms and Glosses, Ruby Annotations, and Equivalents and Descriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHTG#COHTG\">3.4.1 Terms and Glosses</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHTGEG#COHTGEG\">3.4.1.1 Some Further Examples</a>","content":"3.4.1.1 Some Further Examples\n        As a simple example of the elements discussed here and in \n          3.3 Highlighting and Quotation, consider the\n          following sentence:\n          On the one hand the Nibelungenlied \n            is associated with the new rise of romance of twelfth-century\n            France, the romans d'antiquité,\n            the romances of Chrétien de Troyes, and the German\n            adaptations of these works by Heinrich van Veldeke,\n            Hartmann von Aue, and Wolfram von Eschenbach.\n          A first approximation to the encoding of this sentence might be simply\n          to record the fact that the phrases printed above in italics are\n          highlighted, as follows:\n          bibliography\n          This encoding would, however, lose the important distinction between\n          an italicized title and an italicized foreign phrase.  Many other\n          phrases might also be italicized in the text, and a retrieval\n          program seeking to identify foreign terms (for example) would not\n          be able to produce reliable results by simply looking for italicized\n          words.  Where economic and intellectual constraints permit, therefore,\n          it would be preferable to encode both the function of the\n          highlighted phrases and their appearance, as follows:\n          bibliography\n        In this example, the decision as to which textual features\n          are distinguished by the highlighting is relatively\n          uncontroversial.  As a less straightforward example, consider the\n          use of italic font in the following passage:\n          A pretty common case, I believe; in all\n            vehement debatings.  She says I am\n            too witty; Anglicé,\n            too pert; I, that she is\n            too wise; that is to say, being\n            likewise put into English, not so young as\n              she has been:  in short, she is grown so much into\n            a mother, that she had forgotten\n            she ever was a daughter. ...\n        \n        Clearly, the word vehement is not italicized for the\n          same reason as the phrase not so young as she has been;\n          the former is emphasized, while the latter is proverbial.  It also\n          provides an ironic gloss for the words too wise, in the\n          same way as too pert glosses too witty.\n          The glossed phrases are not, however, technical terms or cited words, but\n          quoted phrases, as if the writer were putting words into her own and her\n          mother's mouths.  Finally, the words mother and\n          daughter are apparently italicized simply to oppose them\n          in the sentence; certainly they do not fit into any of the categories so\n          far proposed as reasons for italicizing.  Note also that the word\n          Anglicé is not italicized although it is not\n          generally considered an English word.\n        \n        The following sample encoding for the above passage attempts to take\n          into account all the above points:\n          bibliography\n          \n          \n          \n          \n          \n          \n          \n        "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHTGEDR#COHTGEDR\">3.4 Terms and Glosses, Ruby Annotations, and Equivalents and Descriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHTGRB#COHTGRB\">3.4.2 Ruby Annotations</a>","content":"\n        3.4.2 Ruby Annotations\n        \n        The word ruby (or rubi) refers\n          to a particular method of glossing runs of text which is common in East Asian scripts.\n          In horizontally-oriented text, ruby annotations typically appear above the text being \n          glossed, while in vertical runs of text they may appear to the left or right, or both, \n          also oriented vertically.  An English example of a ruby annotation might look like this:\n          \n        \n        \n        \n      In Japanese, furigana (振り仮名) ruby annotations are often used to provide pronunciation \n          guidance for readers; characters from the largely phonetic hiragana or katakana syllabaries\n          accompany Chinese characters, like this:\n        \n        \n        \n        \n        Pinyin ruby annotations are also used in Chinese to provide pronunciation guidance,\n          and Zhuyin (注音) phonetic symbols (commonly known as bopomofo) are \n          used in Taiwan for the same purpose.\n        \n        The TEI schema provides many different ways of encoding glosses and annotations, from the\n          simple and flexible note element to a native implementation of the  Web Annotation\n          Data Model (16.11 Annotations). However, ruby is a particular, distinct, and widely-used \n          form of annotation that appears in script, print, calligraphy, and web pages, and the TEI therefore \n          provides specific  elements for it:\n          \n            <ruby> contains a\n  passage of base text along with its associated ruby gloss(es).\n            <rb> contains the\n    base text annotated by a ruby gloss.\n            <rt> contains a ruby\n    text, an annotation closely associated with a passage of the\n    main text.\n          \n          The rt element is a member of att.placement, and thus the\n          place attribute may be used to indicate where the\n          ruby gloss is with respect to the base text:\n          \n            <att.placement> provides attributes for describing where on the source page or\n  object a textual element appears.\n          \n\t  The most relevant suggested values of place for\n\t  ruby text are above, below,\n\t  left, and right.\n        \n        In its simplest representation, a glossed form consists of an rb (ruby base) element containing the\n          base form, an rt (ruby text) element containing the gloss, and a ruby element which\n          wraps them together:\n          bibliography          \n          In the example above, the word 大学\n          (daigaku = university) is provided\n          with a phonation gloss in hiragana. The full gloss is\n          applied to the complete word. However, it might instead be\n          broken down by character:\n          bibliography\n          Here is a similar example from Taiwan using bopomofo (pinyin\n          píngzi = bottle)3:          \n          bibliography\n         \n          \n          Where place is not provided, the default assumption is that the \n          ruby gloss is above where the text is horizontal, and to the\n          right of the text where it is vertical. See 5.6 \n Writing Modes for \n          a detailed guide to writing modes and text directionality.\n          \n        \n        \n        The same ruby base may be accompanied by more than one gloss. \n          Here, the Japanese word 打球場 (dakyūba, or billiard hall)\n          is glossed with  two different pronunciations: biriādo (its English equivalent)\n          and dakyū, a phonation guide for the first two characters.\n          \n          \n          \n          This example is intriguing in that the right-side ruby \n          glosses apply to the first and second characters respectively, but\n          the left-side gloss applies to the whole word as a unit. We use this \n          instance to exemplify multiple approaches to encoding the same\n          phenomena, which may be appropriate for different projects or \n          editorial preferences. First, using the same segmentation approach \n          as demonstrated for 大学 above, but \n          with nesting:\n          \n          bibliography\n          \n          We could also use a standoff approach with anchor elements and \n          pointers:\n          \n          bibliography\n          \n          Alternatively, if the encoding itself already includes segmentation below\n          the word level, we can use the existing elements instead of adding anchors:\n          \n          bibliography\n          \n          Multiple ruby annotations can appear in the same alignment relative to the main text. For example, there might be two annotations on the right. We use this \n          instance to exemplify two ways of encoding this phenomenon, dependent on the interpretation of the text.  \n          We could use a parallel approach where a sequence of two rt elements, both with the same value for the place attribute, are \n          assumed to appear in their document sequence. The first of the two rt elements would appear to the right of the ruby base (rb), while the second would appear to the right of the first rt element \n          4:\n          \n          bibliography\n          \n          Alternatively, a nested approach can be used. With nested ruby elements, the structure suggests that the second rt element is glossing both the rb and the rt element:\n          \n          bibliography\n          \n        \n      \n      \n      \n      The rt element is a member of att.written:\n        \n          <att.written> provides attributes to indicate the hand in which\n    the content of an element was written in the source being transcribed.\n        \n        \n        so the hand attribute can be used where the ruby \n        text constitutes an annotation in a \n      different hand from the ruby base: \n      \n        \n      \n        bibliography\n      \n      \n        \n        The current support for ruby is rudimentary, and in future releases of the\n          Guidelines we expect to see more development of these features and \n          recommendations. While ruby is included for use with East Asian languages, \n          encoders may find other contexts in which these elements are useful.\n        \n      \n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHTGEDR#COHTGEDR\">3.4 Terms and Glosses, Ruby Annotations, and Equivalents and Descriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=COHTGED#COHTGED\">3.4.3 Equivalents and Descriptions</a>","content":"\n      3.4.3 Equivalents and Descriptions\n      Another group of elements is used to supply different kinds of names\n        for objects described by the TEI. Examples of this are documentation\n        of elements, attributes, classes (and also attribute values where\n        appropriate), and description of glyphs.\n        \n          <altIdent> supplies the recommended XML name for an element, class,\n  attribute, etc. in some language.\n          <desc> contains a short description of the purpose, function, or\n    use of its parent element,\n    or when the parent is a documentation element, describes or defines the object being documented. \n   \n  \n          <equiv> specifies a component which is considered equivalent to the parent element, either by\n    co-reference, or by external link.\n        \n        Along with the gloss element mentioned above, these elements\n        constitute the model.glossLike class. They\n        are described in more detail in 22.4.1 Description of Components.\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COED#COED\">3.5 Simple Editorial Changes</a>","content":"3.5 Simple Editorial Changes\nAs in editing a printed text, so in encoding a text in electronic\nform, it may be necessary to accommodate editorial comment on the text\nand to render account of any changes made to the text in preparing it.\nThe tags described in this section may be used to record such editorial\ninterventions, whether made by the encoder, by the editor of a printed\nedition used as a copy text, by earlier editors, or by the copyists of\nmanuscripts.\n\nThe tags described here handle most common types of editorial\nintervention and stereotyped comment; where less structured commentary\nof other types is to be included, it may be marked using the\nnote element described in section 3.9 Notes, Annotation, and Indexing.\nSystematic interpretive annotation is also possible using the various\nmethods described in chapter 16 Linking, Segmentation, and Alignment. The examples given\nhere illustrate only simple cases of editorial intervention; in\nparticular, they permit economical encoding of a simple set of\nalternative readings of a short span of text. To encode multiple views\nof large or heterogeneous spans of text, the mechanisms described in\nchapter 16 Linking, Segmentation, and Alignment should be used. To encode multiple\nwitnesses of a particular text, a similar mechanism designed\nspecifically for critical editions is described in chapter 12 Critical Apparatus.\n\n  For most of the elements discussed here, some encoders \n    may wish to indicate both a responsibility, that is, a \n    code indicating the person or agency responsible for \n    making the editorial intervention in question, and also \n    an indication of the degree of certainty which the encoder \n    wishes to associate with the intervention. These \n    requirements are served by the \n    att.global.responsibility\n    class, along with att.global.source and \n    att.dimensions. Any of \n    the elements discussed here thus may potentially carry \n    any of the following optional attributes:\n\n<att.global.responsibility> provides attributes indicating the agent\n    responsible for some aspect of the text, the markup or \n    something asserted by the markup, and the degree of certainty \n    associated with it.\n<att.global.source> provides attributes used by elements to point to an\n    external source.\n<att.editLike> provides attributes describing the nature of an encoded scholarly intervention or\n    interpretation of any kind.\n<att.dimensions> provides attributes for describing the size of physical objects.\n\n\nMany of the elements discussed here can be used in two ways. Their\nprimary purpose is to indicate that the text encoded as the element's\ncontent represents an editorial intervention (or non-intervention) of\na specific kind, indicated by the element itself. However, pairs or\nother meaningful groupings of such elements can also be supplied,\nwrapped within a special purpose choice element:\n  \n  <choice> groups a number of alternative encodings for the same point in\n        a text.\n\nThis element enables the encoder to represent for example a text in\nits original uncorrected and unaltered form,\nalongside the same text in one or more edited\nforms. This usage permits software to switch automatically between one\nview of a text and another, so that (for example)\na stylesheet may be set to display either the text in its original\nform or after the application of editorial interventions of particular\nkinds.\nElements which can be combined in this way constitute the\nmodel.choicePart class. The default\nmembers of this class are  sic,\n  corr, reg, orig, unclear, supplied,\n abbr, expan, ex, am and seg; \nsome of their functions and usage are described further below.\nThree categories of editorial intervention are discussed in this\nsection:\nindication or correction of apparent errors indication or regularization of variant, irregular,\nnon-standard, or eccentric formseditorial additions, suppressions, and\nomissions\nA more extended treatment of the use of these tags in\ntranscriptional and editorial work is given in chapter 11 Representation of Primary Sources.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COED#COED\">3.5 Simple Editorial Changes</a><a class=\"breadcrumb\" href=\"p5.xml?id=COEDCOR#COEDCOR\">3.5.1 Apparent Errors</a>","content":"3.5.1 Apparent Errors\nWhen the copy text is manifestly faulty, an encoder or transcriber\nmay elect simply to correct it without comment, although for scholarly\npurposes it will often be more generally useful to record both the\ncorrection and the original state of the text. The elements described\nhere enable all three approaches, and allows the last to be done in\nsuch a way as make it easy for software to present\neither the original or the correction. \n\n  <sic> contains text reproduced although apparently incorrect or inaccurate.\n  <corr> contains the correct form of a passage apparently erroneous in the copy text.\n\n The following examples show alternative treatment of the same\nmaterial. The copy text reads:\nAnother property of computer-assisted historical\nresearch is that data modelling must permit any one textual feature or\npart of a textual feature to be a part of more than one information\nmodel and to allow the researcher to draw on several such models\nsimultaneously, for example, to select from a machine-readable text\nthose marginal comments which indicate that the date's mentioned in the\nmain body of the text are incorrect.\nAn encoder may choose to correct the typographic error, either\nsilently or with an indication that a correction has been made, as\nfollows:\nAlternatively, the encoder may simply record the typographic\nerror without correcting it, either without comment or with a\nsic element to indicate the error is not a transcription error\nin the encoding:\nIf the encoder elects both to record the original source text\nand to provide a correction for the sake of word-search\nand other programs, both sic and corr are used,\nwrapped in a choice:\nThe sic and corr elements can\n  appear in either order.\nIf  it is desired to indicate the person or edition responsible for\nthe emendation, this might be done as follows:\nHere the resp attribute\n  has been used to indicate responsibility for the \n  correction. Its value (#msm) is an \n  example of the pointer values discussed\n  in section 3.7 Simple Links and Cross-References; in this case, \n  it points to a respStmt element within the TEI \n  header, but any element might be indicated in this way, \n  including for example a name element, or (if the \n  module described in 13 Names, Dates, People, and Places has been included) a \n  person element. \n  The resp attribute is\n  available for all elements which are members of the \n  att.global.responsibility class. The same\n  class makes available a cert attribute, which may be used\n  to indicate the degree of editorial\nconfidence in a particular correction, as in the following example:\nbibliography\nSee further the discussion in section 11.3.1.3 Correction and Conjecture.\nWhere, as here,  the correction takes the form of adding text not otherwise\npresent in the text being encoded, the encoder\nshould use the corr element. Where the correction is present\nin the text being encoded, and consists of some combination of visible\nadditions and deletions, the elements add or del\nshould be used: see further section 3.5.3 Additions, Deletions, and Omissions\nbelow. Where the correction takes the form of addition of material not\npresent in the original because of physical damage or illegibility,\nthe supplied element may be used. Where the\ncorrection is simply a matter of \nexpanding an abbreviation the ex element may be used. These\nand other elements to support the detailed encoding of  authorial or scribal\ninterventions of this kind are all provided by the module described in\nchapter 11 Representation of Primary Sources. \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COED#COED\">3.5 Simple Editorial Changes</a><a class=\"breadcrumb\" href=\"p5.xml?id=COEDREG#COEDREG\">3.5.2 Regularization and\nNormalization</a>","content":"3.5.2 Regularization and\nNormalization When the source text makes extensive use of\nvariant forms or non-standard spellings, it may be desirable for a\nnumber of reasons to regularize it: that is, to provide\nstandard or regularized\nforms equivalent to the non-standard forms.5As with other such changes to the copy\ntext, the changes may be made silently (in which case the TEI header\nshould specify the types of silent changes made) or may be explicitly\nmarked using the following elements:\n\n  <reg> contains a reading which has been regularized or normalized in some sense.\n  <orig> contains a reading which is marked as following the original, rather than being normalized\n        or corrected.\n  <choice> groups a number of alternative encodings for the same point in\n        a text.\nTypical applications for these elements include the production of\neditions intended for student or lay readers, linguistic research in\nwhich spelling or usage variation is not the main question at issue,\nproduction of spelling dictionaries, etc.Consider this 16th-century text:\nhow godly a dede it is to overthrowe so wicked a race\nthe world may judge: for my part I thinke there canot\nbe a greater sacryfice to God.An encoder may choose to preserve the original spelling of this\ntext, but simply flag it as nonstandard by using the orig\nelement with no attributes specified, as follows:\nbibliographyAlternatively, the encoder may simply indicate that certain words\nhave been modernized by using the reg element with no\nattributes specified, as follows:bibliographyAlternatively, the encoder may elect to record both old and new\nspellings, so that (for example) the same electronic text may serve as\nthe basis of an old- or new-spelling edition:\nbibliography\n As elsewhere, the resp attribute may be used to specify the agency\nresponsible for the regularization. \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COED#COED\">3.5 Simple Editorial Changes</a><a class=\"breadcrumb\" href=\"p5.xml?id=COEDADD#COEDADD\">3.5.3 Additions, Deletions, and Omissions</a>","content":"3.5.3 Additions, Deletions, and Omissions\nThe following elements are used to indicate when words or phrases\nhave been omitted from, added to, or marked for deletion from, a text.\nLike the other editorial elements, they allow for a wide range of\neditorial practices: \n\n  <gap> indicates a point where material has been omitted in a transcription, whether for editorial\n    reasons described in the TEI header, as part of sampling practice, or because the material is\n    illegible, invisible, or inaudible.\n  <ellipsis> indicates a purposeful\n  marking in the source document signalling that content has been\n  omitted, and may also supply or describe the omitted content.\n  <unclear> contains a word, phrase, or passage which cannot be transcribed with certainty because it\n        is illegible or inaudible in the source.\n  <add> contains letters, words, or phrases inserted in the source\n  text by an author, scribe, or a previous annotator or corrector.\n  <del> contains a letter, word, or passage deleted, marked as deleted, or otherwise indicated as\n    superfluous or spurious in the copy text by an author, scribe, or a previous annotator or corrector.\n\nEncoders may choose to omit parts of the copy text for reasons\nranging from illegibility of the source or impossibility of\ntranscribing it, to editorial policy, e.g. a systematic exclusion of\npoetry or prose from an encoding. The full details of the policy\ndecisions concerned should be documented in the TEI header (see\nsection 2.3 The Encoding Description). In these situations — where copy text\nis not transcribed due to editorial policy or because it is impossible\nto do so — the gap element may be used to indicate the\nomission. Attributes on the gap element optionally provide\nfurther information about the reason for the omission, its extent, and\nthe person or agency responsible for it, as in the following examples:\n\n\nNote that the extent of the gap may be marked precisely using\nattributes unit and quantity, or more\ndescriptively using the extent attribute. Other, more\ndetailed, options are also available for representing dimensions of\nany kind; see further 10.3.4 Dimensions. \nThe desc element may be used to supply a description of\nthe material omitted, where that is considered useful:\n  \nbibliography\n\t\n\t\n\t\n\t\n\n\n  The ellipsis element provides a means to encode the\n  deliberate, marked omission of content in a source document. Within\n  ellipsis, a required metamark is used to represent\n  the characters or markings in the source that indicate the presence\n  of omitted material. Encoders may optionally provide a desc\n  element to describe the omission, as well as a supplied\n  element to record the content omitted from the source at this point.\n  The ellipsis element could be applied to ditto marks\n  when they indicate repetition of the same content, as in this\n  example:\n\n  \n   \n\n  The ellipsis element may also apply to literary passages\n  that omit the full names of places or people, leaving their\n  identities to the imagination of the reader, as in the next example.\n  bibliography\n  \nA manuscript of song lyrics provides a more complex example of ellipsis to encode a marked omission that begins in the middle of a verse line.\n    \n    Our encoding of the passage shows the use of ellipsis with supplied to contain the omitted content.\n    bibliography\n  \nThe add and del elements may be used to record\nwhere words or phrases have been added or deleted in the copy text.\nThey are not appropriate where longer passages have been added or\ndeleted, which span several elements; for these, the elements\naddSpan and delSpan described in\nchapter 11.3.1.4 Additions and Deletions should be used.\nAdditions to a text may be recorded for a number of reasons.\nSometimes they are marked in a distinctive way in the source text, for\nexample by brackets or insertion above the line (supralinear insertion),additionssupralinearinsertionssupralinearsupralinear insertions as in\nthe following example, taken from a 19th century manuscript:\nbibliography\nThe add element should not be used to mark editorial\nchanges, such as supplying a word omitted by mistake from the source\ntext or a passage present in another version. In these cases, either\nthe corr or supplied tags should be used, as\ndiscussed above in section 3.5.1 Apparent Errors, and in section\n11.3.1.3 Correction and Conjecture, respectively.The unclear element is used to mark passages in the\noriginal which cannot be read with confidence, or about which the\ntranscriber is uncertain for other reasons, as for example when\ntranscribing a partially inaudible or illegible source. Its\nreason and resp attributes are used, as with the\ngap element, to indicate the cause of uncertainty and the\nperson responsible for the conjectured reading.For example:\nbibliography\nor from a spoken text:\n  \n\nWhere the material affected is entirely illegible or inaudible, the\ngap element discussed above should be used in preference.\nThe del element is used to mark material which is deleted in\nthe source but which can still be read with some degree of confidence,\nas opposed to material which has been omitted by the encoder or\ntranscriber either because it is entirely illegible or for some other\nreason.  This is of particular importance in transcribing manuscript\nmaterial, though deletion is also found in printed texts, sometimes for\nhumorous purposes:\nbibliography \nThe rend attribute may be used to distinguish different\nmethods of deletion in manuscript or typescript material, as in this\nline from the typescript of Eliot's Waste Land:\nbibliography\nDeletion in manuscript or typescript is often associated with\naddition:\nbibliography \nThe subst element discussed in 11.3.1.5 Substitutions provides\na way of grouping additions and deletions of this kind. \nThe del element should not be used where the deletion is\nsuch that material cannot be read with confidence, or read at all, or\nwhere the material has been omitted by the transcriber or editor for\nsome other reason. Where the material deleted cannot be read with\nconfidence, the unclear tag should be used with the\nreason attribute indicating that the difficulty of\ntranscription is due to deletion. Where material has been omitted by\nthe transcriber or editor, this may be indicated by use of the\ngap element. A deletion in which some parts may be read but\nnot others may thus be represented by one or more gap\nelements intermingled with text, all contained by a del\nelement. Text supplied or marked as unneccessary by an editor should\nbe marked with the supplied and surplus elements \n(discussed in 11.3.1.7 Text Omitted from or Supplied in the Transcription) rather than add and \ndel. These two sets of elements allow the encoder to\ndistinguish editorial changes from those visible in the source text.\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONA#CONA\">3.6 Names, Numbers, Dates, Abbreviations, and Addresses</a>","content":"3.6 Names, Numbers, Dates, Abbreviations, and Addresses\n\nThis section describes a number of textual features which it is\noften convenient to distinguish from their surrounding text.  Names,\ndates, and numbers are likely to be of particular importance to the\nscholar treating a text as source for a database; distinguishing such\nitems from the surrounding text is however equally important to the\nscholar primarily interested in lexis.\n\nThe treatment of these textual features proposed here is not\nintended to be exhaustive: fuller treatments for names, numbers,\nmeasures, and dates are provided in the\nnames and dates module (see chapter 13 Names, Dates, People, and Places); more detailed\ntreatment of abbreviations is provided by the transcription module\n(see section 11.3.1.2 Abbreviation and Expansion). \n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONA#CONA\">3.6 Names, Numbers, Dates, Abbreviations, and Addresses</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONARS#CONARS\">3.6.1 Referring Strings</a>","content":"3.6.1 Referring Strings\nA referring string is a phrase which refers to some\nperson, place, object, etc. Two elements are provided to mark such\nstrings:\n\n<rs> contains a general purpose name or referring string.\n<name> contains a proper noun or noun phrase.\n\nBoth the name and rs elements are members of the\natt.typed class, from which they inherit\nthe following attributes: <att.typed> provides attributes that can be used to classify or subclassify elements in any way. which may be used to further\ncategorize the kind of object referred to.\n\nExamples include:\n\nbibliography\nbibliography\nbibliography\nAs the following example shows, the rs element may be used\nfor any reference to a person, place, etc., not only to references in\nthe form of a proper noun or noun phrase.\nbibliography\nThe name element by contrast is provided for the special\ncase of referencing strings which consist only of proper nouns; it may\nbe used synonymously with the rs element, or nested within it\nif a referring string contains a mixture of common and proper nouns.\nThe following example shows an alternative way of encoding the short\nsentence from Pride and Prejudice quoted above:\nbibliography\nAs the following example shows,  a proper name may be nested within a\nreferring string:\nbibliography\n \nSimply tagging something as a name is generally not enough to\nenable automatic processing of personal names into the canonical forms\nusually required for reference purposes. The name as it appears in the\ntext may be inconsistently spelled, partial, or vague.  Moreover, name\nprefixes such as van or de\nla may or may not be included as part of the reference\nform of a name, depending on the language and country of origin of the\nbearer. \n\nTwo issues arise in this context: firstly, there may be a need to\nencode a regularized form of a name, distinct from the actual form in\nthe source to hand; secondly, there may be a need to identify the\nparticular person, place, etc. referred to by the name, irrespective\nof whether the name itself is normalized or not. The element\nreg, introduced in 3.5.2 Regularization and\nNormalization is provided for\nthe former purpose; the attributes key or ref\nfor the latter.\n\nThe key and ref attributes are common to all\nmembers of the att.canonical class and are\ndefined as follows: <att.canonical> provides attributes that can be used to associate a representation such as a name or title\n    with canonical information about the object being named or referenced.\n \n\nA very useful application for them is as a means of gathering\ntogether all references to the same individual or location scattered\nthroughout a document: \n\n  bibliography\n\nbibliography\n\n\nThe value of the key attribute may be an unexpanded\ncode, as in the examples above, with no particular significance. More\nusually however, it will be an externally defined code of some kind,\nas provided by a standard reference source.\n\n\n\n \nThe standard reference source should be documented, for example using a taxonomy element in the TEI header.\n\nThe ref attribute can be used to point directly\nto  some other resource providing more information about the\nentity named by the element, such as an authority record in a\ndatabase, an encylopaedia entry, another element in the same\nor a different document etc. \n\n\n\nThis use should be distinguished from the use of a nested\nreg (regularization) element to provide the standard form\nof a referring string, as in this example: bibliography\n\n \nNo particular syntax is proposed for the values of the key \nattribute, since its form will depend entirely on practice within a \ngiven project. For the same reason, this attribute is not recommended in \ndata interchange, since there is no way of ensuring that the values used \nby one project are distinct from those used by another. In such a \nsituation, a preferable approach for magic tokens which follows standard practice on the Web is to use a ref attribute whose value is a tag URI as defined in RFC 4151. For example:\nbibliography\nThe inclusion of the domain name of the party responsible for tagging (theworksoflaclos.org), as specified in RFC 4151, helps ensure uniqueness of magic token values across TEI encoding projects, allowing for improved interchange of TEI documents.\n\nThe choice element discussed in 3.5 Simple Editorial Changes may be\nused if it is desired to record both a normalized form of a name and\nthe name used in the source being encoded: \nbibliography\nThe index element discussed in 3.9.2 Index Entries may be\nmore appropriate if the function of the regularization is to provide a\nconsistent index:\nbibliography\nAlthough adequate for many simple applications, these methods have two\ninconveniences: if the name occurs many times, then its regularized\nform would be repeated many times; and the burden of additional XML\nmarkup in the body of the text may be inconvenient to maintain and\ncomplex to process. For applications such as onomastics, relating to\npersons or places named rather than the name itself, or wherever a\ndetailed analysis of the component parts of a name is needed, the\nspecialized elements described in chapter 13 Names, Dates, People, and Places or the\nanalytical tools described in chapter 18 Feature Structures should be\nused.\n \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONA#CONA\">3.6 Names, Numbers, Dates, Abbreviations, and Addresses</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONAAD#CONAAD\">3.6.2 Addresses</a>","content":"3.6.2 Addresses\n\nThese Guidelines propose the following elements to distinguish\npostal and electronic addresses: \n\n<address> contains a postal address, for example of a publisher, an organization, or an\n    individual.\n<email> contains an email address identifying a location to which\n        email messages can be delivered.\n\nThese two elements constitute the class of\nmodel.addressLike elements; for other kinds of address\nthis class may be extended by adding new elements if necessary. \nThese Guidelines provide no particular means for encoding the\nsubstructure of an email address (for example, distinguishing the\nlocal part from the domain part), nor of distinguishing personal email\naddresses from generic or fictitious ones. \n\n  \n\n\nThe simplest way of encoding a postal address is to regard it as a series\nof distinct lines, just as they might be written on an envelope. The\nfollowing element supports this view:\n<addrLine> contains one line of a postal address.\nHere is an example of a postal address encoded using this approach:\n  \n \nAlternatively, an address may be encoded as a structure of\nmore semantically rich elements. The class model.addrPart element class identifies a number\nof such possible components: <street> contains a full street address including any name or number identifying a\n        building as well as the name of the street or route on which it is\n        located.<name> contains a proper noun or noun phrase.<postCode> contains a numerical or alphanumeric code used as part of a postal address to simplify\n        sorting or delivery of mail.<postBox> contains a number or other identifier for some postal delivery point other than a street\n    address.\n<model.nameLike> \n<model.persNamePart> \n<model.placeNamePart> \n Any number of\nelements from the model.addrPart class may\nappear within an address and in any order. None of them is\nrequired. \n\nWhere code letters are commonly used in addresses (for\nexample, to identify regions or countries) a useful practice is to\nsupply the full name of the region or country as the content of the\nelement, but to supply the abbreviatory code as the value of the\nglobal n attribute, so that (for example) an application\npreparing formatted labels can readily find the required\ninformation. Other components of addresses may be represented using\nthe general-purpose name element or (when the additional\nmodule for names and dates is included) the more specialized  elements\nprovided for that purpose.\n\n\nUsing just the elements defined by the core module, the above\naddress could thus be represented as follows:\n\n  \n \n\nThe order of elements within an address is highly culture-specific,\nand is therefore unconstrained:\n  \n \n  \n A telephone number (normally outside of the address\n element) might be tagged with an addrLine and ref\n that points to the phone number using the tel URI\n scheme:\n  \n  \nFor further discussion of ways of regularizing the names of places,\nsee section 3.6 Names, Numbers, Dates, Abbreviations, and Addresses. A full postal address may also include\nthe name of the addressee, tagged as above using the general purpose\nname element.    \n\nWhen a schema includes the names and dates\nmodule discussed in chapter 13 Names, Dates, People, and Places, a large number of more specific elements such as country or settlement will be\navailable from the class model.addrPart. The above\nexample might then be encoded as follows:\n  \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONA#CONA\">3.6 Names, Numbers, Dates, Abbreviations, and Addresses</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONANU#CONANU\">3.6.3 Numbers and\nMeasures</a>","content":"3.6.3 Numbers and\nMeasures\nThis section describes elements provided for the simple encoding\nof numbers and measurements and gives some indication of circumstances in\nwhich this may usefully be done.  The following phrase level elements\nare provided for this purpose:\n<num> contains a number, written in any form.<measure> contains a word or phrase referring to some quantity of an object or commodity, usually\n        comprising a number, a unit, and a commodity name.<measureGrp> contains a group of dimensional specifications which relate to the same object, for example\n    the height and width of a manuscript page.\n \n\nLike names or abbreviations, numbers can occur virtually anywhere\nin a text.  Numbers are special in that they can be written with\neither letters or digits (twenty-one,\nxxi, and 21) and their\npresentation is language-dependent (e.g.  English\n5th becomes Greek 5.;\nEnglish 123,456.78 equals French\n123.456,78).\n \nFor many kinds of application, e.g. natural-language processing or\nmachine translation, numbers are not regarded as\nlexical in the same way as other parts of a text.\nFor these and other applications, the num element provides a\nconvenient method of distinguishing numbers from the surrounding text.\nFor other kinds of application, numbers are only useful if normalized:\nhere the num element is useful precisely because it provides a\nstandardized way of representing a numerical value.\n \nFor example:\n  \n  \n \n\nSometimes it may be desired to mark something as numerical\nwhich cannot be accurately  normalized, for example an expression\nsuch as dozens; less frequently the number may\nbe recognisable linguistically as such but may use a notation with which\nthe encoder is unfamiliar. To help in these situations, the\nnum element may also bear either or both of the following\nattributes from the att.ranging class:\n\n<att.ranging> provides attributes for describing numerical ranges.\n\n\n\nIn its fullest form, a measure consists of a number, a phrase\nexpressing units of measure and a phrase expressing the commodity\nbeing measured, though not all of these components need be present in\nevery case. It may be helpful to distinguish measures from surrounding\ntext for two reasons. Firstly, a measure may be expressed using a\nparticular notation or system of abbreviations which the encoder does\nnot wish to regard as lexical. Secondly, a quantitative application\nmay wish to distinguish and normalize the internal components of a\nmeasure, in order to perform calculations on them.\n\nConsider, as an example of the first case, the following list of\nCelia's charms, in which the encoder has chosen to make  explicit the measurements:\n\nbibliography\n\nIn the same way, it may be convenient to mark \nrepresentations of currency which might otherwise be misinterpreted as\nlexical:\n\n  \n\nIn general, normalization of a measure will require specification\nof one or more of its three parts: the quantity, the units, and\npossibly also the commodity being measured. This is accomplished by\nsupplying values for the three attributes quantity,\nunit, and commodity, which are supplied by the\natt.measurement class:\n\n<att.measurement> provides attributes to represent a regularized or normalized measurement.\n\nWith these attributes, the measurement of Celia's neck may be\nspecified in a normalized form:\n  \nSuch techniques are particularly useful when representing historical\ndata such as inventories:\nbibliography\n  \nThe measureGrp element is provided as a means of grouping\nseveral related measurements together, either because the measurement\ninvolves several dimensions (for example height and width) or to\navoid the need to repeat all the normalizing attributes:\n  \n\n\nThe unit element may be applied when units of measurement require more detailed encoding about the system they belong to or the what kind of phenomenon they designate. \nThe unit element may carry the unit attribute to indicate a standard value, as well as other optional attributes for indicating type, language, and other distinguishing characteristics.\n  \n    <unit> contains a symbol, a word or a phrase referring to a unit of measurement in any kind of formal or informal system.\n    <att.measurement> provides attributes to represent a regularized or normalized measurement.\n    <att.typed> provides attributes that can be used to classify or subclassify elements in any way.\n    <att.global> provides attributes common to all elements in the TEI encoding scheme.\n  \nA measure element may contain a combination of num and unit elements:\n  \nThe unit element may also be nested to indicate a complex unit and its component parts, for example, to indicate that rate combines space and time:\n  \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONA#CONA\">3.6 Names, Numbers, Dates, Abbreviations, and Addresses</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONADA#CONADA\">3.6.4 Dates and Times</a>","content":"3.6.4 Dates and Times\nDates and times, like numbers, can appear in widely varying\nculture- and language-dependent forms, and can pose similar problems\nin automatic language processing. Such elements constitute the model.dateLike class, of which the default\nmembers are:\n \n   <date> contains a date in any format.\n   <time> contains a phrase defining a time of day in any format.\n \nThese elements have some additional attributes by virtue of being\nmembers of the att.datable and att.duration classes which, in turn, are members\nof the att.datable.w3c and att.duration.w3c classes. In particular, the\nwhen and calendar attributes will be discussed here:\n \n  <att.datable.w3c> provides attributes for normalization of elements that contain\n  datable events  conforming to the W3C\n  XML Schema Part 2: Datatypes Second Edition.\n  <att.datable> provides attributes for normalization of elements\n    that contain dates, times, or datable events.\n\n\nDates can occur virtually anywhere in a text, but in some contexts\n(e.g. bibliographic citations) their encoding is recommended or\nrequired rather than optional.  Times can also appear anywhere but\nencoding these is more generally optional.\n \nPartial dates or times (e.g. 1990,\nSeptember 1990,\ntwelvish) can be expressed in the\nwhen attribute by simply omitting a part of the value\nsupplied.  Imprecise dates or times (for example early\nAugust, some time after ten and before\ntwelve) may be expressed as date or time ranges.\n \nThese mechanisms are useful primarily for fully specified dates or\ntimes known with certainty.  If component parts of dates or times are to\nbe marked up, or if a more complex analysis of the meaning of a temporal\nexpression is required, the techniques described in chapter 13 Names, Dates, People, and Places should be used in preference to the simple method\n outlined here.\n \nWhere the certainty (i.e. reliability) of the date or time  is\nin question,  the encoder should record this\nfact using the mechanisms discussed in chapter 21 Certainty, Precision, and Responsibility. The same chapter also discusses various methods of\nrecording the precision of numerical or temporal assertions.\n \nThe when attribute is a useful way of normalizing or\n disambiguating  dates and times which can appear in many formats, as\n the following examples show: \n  \n  \n\nThe when attribute always supplies a normalized\nrepresentation of the date given as content of the date\nelement. The format used should be a valid W3C schema datatype.6\nSome typical examples follow:\n  Note in the last example the use of a normalized representation for\nthe date string which includes a time: this example could thus equally\nwell be tagged using the time element. \n\nThe following examples demonstrate the use of the\ndate element to mark a period of time:bibliography\nbibliography\n\nThe calendar attribute may be used to specify a date in\nany calendar system; if the when attribute is also supplied,\nit should specify the equivalent date in the Gregorian calendar. \n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONA#CONA\">3.6 Names, Numbers, Dates, Abbreviations, and Addresses</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONAAB#CONAAB\">3.6.5 Abbreviations and Their Expansions</a>","content":"3.6.5 Abbreviations and Their Expansions\nIt is sometimes desirable to mark abbreviations in the copy text,\nwhether to trigger special processing for them, to provide the full form\nof the word or phrase abbreviated, or to allow for different possible\nexpansions of the abbreviation. Abbreviations may be transcribed as\nthey stand, or expanded; they may be left unmarked, or marked using\nthese tags: \n\n<abbr> contains an abbreviation of any sort.\n<expan> contains the expansion of an abbreviation.\n\nThe abbr element is useful as a means of distinguishing\nsemi-lexical items such as acronyms or jargon:\nbibliography\nbibliography \nThe type attribute may be used to distinguish types\n  of abbreviation by their function:\n \nAbbreviations such as Dr. M. above may be\n  treated as two abbreviations, as above, or as one: \n \nThe expan element may be used simply to record that an\nabbreviation has been silently expanded by the encoder, perhaps for\nreasons of house style or editorial policy. It should\nalways include the whole of an abbreviated phrase or word.  More\nusually however this will be combined with the abbr element\ninside a choice element to record both the abbreviation and\nits expansion: \n  \nNested abbreviations may also be handled in this way:\n  \n\nAbbreviation is a particularly important feature of manuscript\nand other source materials, the transcription of which needs more detailed treatment than\nis possible using these simple elements. A more detailed set of\nrecommendations is discussed in 11.3.1 Altered, Corrected, and Erroneous Texts, which includes\nadditional elements made available for the purpose by the transcr module. \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COXR#COXR\">3.7 Simple Links and Cross-References</a>","content":"3.7 Simple Links and Cross-References\n\nCross-references or links between one location in a document and one or more\nother locations, either in the same or different XML documents, may be encoded\nusing the elements ptr and ref, as discussed in this\nsection. These elements both point from one\nlocation in a document, the place that the element itself appears, to\nanother (or to several), specified by means of a target\nattribute, supplied by the att.pointing class:\n\n<att.pointing> provides a set of attributes used by all elements which point\n  to other elements by means of one or more URI references.\n\nLinkages of several other kinds are also provided for in these\nguidelines; see further chapter 16 Linking, Segmentation, and Alignment.\n \nThe value of the target attribute, wherever it appears,\nprovides a way of pointing to some other element using a method\nstandardized by  the W3C consortium, and known as the XPointer\nmechanism. This permits a range of complexity, from the very simple\n(a reference to the value of  the target element's xml:id\nattribute) to the more complex usage of a full URI with\nembedded XPointers. For example, the source of the following paragraph\nlooks something like this: \n  \nAlternatively, if no explicit link is to\nbe encoded, but it is simply required to mark the phrase as a\ncross-reference, the ref element may be used without a\ntarget attribute.\nFor an introduction to the use of links in general, see 16 Linking, Segmentation, and Alignment. The complete XPointer specification is managed by the W3C7; for a discussion of\nTEI schemes for XPointer, see 16.2.4 TEI XPointer Schemes.\n\n<ptr> defines a pointer to another location.<ref> defines a reference to another location, possibly modified by additional text or comment.\n \nThe elements ptr and ref are the default members\nof the phrase-level model class model.ptrLike. As\nmembers of the classes att.pointing,\natt.typed, att.cReferencing,  and att.internetMedia they\nalso carry the following\nattributes:\n<att.pointing> provides a set of attributes used by all elements which point\n  to other elements by means of one or more URI references.\n<att.cReferencing> provides attributes that may be used to supply a\n  canonical reference as a means of identifying the\n  target of a pointer.\n<att.typed> provides attributes that can be used to classify or subclassify elements in any way.\n  <att.internetMedia> provides attributes for specifying the type of a computer\n  resource using a standard taxonomy.\n \nThe two elements may be used in the same\nway; the difference between them is simply that while the ptr\nelement is empty, the ref element may contain phrases\nspecifying, or describing more exactly, the target of a cross-reference,\nwhich form the content of the element. Since its content thus serves as\na human-readable pointer, in the simplest case a ref element\nneed not identify its target in any other way. For example:\n  \n \nMore usually, it will be desirable to identify the target of the\ncross-reference using either the target or the\ncRef  attribute, so that\nprocessing software can access it directly, for example to implement a\nlinkage, to generate an appropriate reference, or to give an error\nmessage if it cannot be found. Assuming that section\n12 in the previous example has been tagged \n   \nthen the same cross-reference might more exactly be encoded as \n  \n\nIf the cross-reference itself is to be generated according to a\nfixed pattern, or if no text is to appear in the body of the \ncross-reference, the ptr element would be used as follows:\n  \n \nThe cRef attribute may be used to express the target of\na cross reference using some canonical referencing scheme, such as\nthose typically used for ancient texts.  In this case, the referencing\nscheme must be defined using the cRefPattern or citeStructure elements\ndiscussed below (3.11.4 Declaring Reference Systems); the definition these provide may be used\nto translate the value of the cRef attribute into a\nconventional pointer value, such as one that might be supplied by the\ntarget attribute. It is an error to supply both\ncRef and target values. \nWhen the target attribute is used, a cross reference may point to any number of locations simultaneously,\nsimply by giving more than one identifier as the value of its\ntarget attribute.  This may be particularly useful where\nan analytic index is to be encoded, as in the following example:\nbibliography\nHere the targets of the cross-references are simply page numbers; it\nis assumed that corresponding elements with identifiers\np299, p143, etc. have been provided in\nthe body of the text, for example as page breaks\n  \n\nA similar method may be used to link annotations on a text with the\nsigla used to encode their points of attachment in a text. For\nexample:\n  \n\nThe type attribute may be used,\nas elsewhere, to categorize the cross-reference according to any\nsystem of importance to the encoder. If bibliographic references\nrequire special processing (e.g. in order to provide a consistent\nshort-form reference), they might be tagged thus: bibliography \nThe value bibliog for the type attribute on the\nsecond ptr element here might be used to indicate that the\nobject being referenced here is a bibliographic entry rather than a\nsimple cross-reference to an illustration, as is the first\nptr. In either case, the value of the target\nattribute is a pointer to some other element.\n The ptr and ref elements have many applications in\naddition to the simple cross-referencing facilities illustrated in this\nsection. In conjunction with the analytic tools discussed\nin chapters 16 Linking, Segmentation, and Alignment, 17 Simple Analytic Mechanisms, and 18 Feature Structures, they may be\nused to link analyses of a text to their object, to combine\ncorresponding segments of a text, or to align segments of a text with a\ntemporal or other axis or with each other. \n  Where the target attribute of ptr or ref\npoints to an external resource available on the network, the mimeType attribute \n may be used to specify the mime type of that resource; this may be important \n for to enable appropriate processing. For example:\n    \n  \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COLI#COLI\">3.8 Lists</a>","content":"3.8 Lists\nThe following elements are provided for the encoding of lists,\ntheir constituent items, and the labels or headings associated\nwith them:\n<list> contains any sequence of items organized as a list.<item> contains one component of a list.<label> contains any label or heading used to identify part of a text,\n  typically but not exclusively in a list or glossary.<head> contains any type of heading, for example the title of a section, or the heading of a list,\n    glossary, manuscript description, etc.<headLabel> contains the heading for the label or term column in a glossary list or similar structured\n        list.<headItem> contains the heading for the item or gloss column in a glossary list or similar structured\n        list.\n \nThe list element may be used to mark any kind of\nlist:\nnumbered, lettered, bulleted, or unmarked. Lists formatted as such in\nthe copy text should in general be encoded using this element, with an\nappropriate value for the rend attribute. Suggested values \n  for rend include:\n  bulleted (items preceded by bullets or similar markings)inline (items rendered within continuous prose, with no linebreaks)numbered (items preceded by numbers or letters)simple (items rendered as blocks, but with no bullet or number)\n  \n  Some of these values may of course be combined; a list may be inline, but also be rendered with \n  numbers. An example appears below. For more sophisticated and detailed description of list rendering, consider using the style\n  attribute with Cascading Stylesheet properties and values, as described in the W3C's\n  CSS Lists and Counters Module Level 3.\n\nEach distinct item in the list should be encoded as a distinct\nitem element.  If the numbering or other identification for the\nitems in a list is unremarkable and may be reconstructed by any\nprocessing program, no enumerator need be specified.  If however an\nenumerator is retained in the encoded text, it may be supplied either by\nusing the n attribute on the item element, or by\nusing a label element.  The following examples are thus\nequivalent:\nbibliography\nbibliography\nThe two styles may not be mixed in the same list:  if one item is\npreceded by a label, all must be.\n \nA list need not necessarily be displayed in list format.  For\nexample, the following is a reasonable encoding of a list which (in\nthe original) is simply printed as a single paragraph:\nbibliography\n \nA list may be given a heading or title, for which the head\nelement should be used, as in the next example, which also demonstrates\nsimple use of the label element to mark a tabular or glossary\nlist in which each item is associated with a word or phrase rather than\na numeric or alphabetic enumerator:\nbibliography\n \nIn such a list, the individual items have internal structure.  In\ncomplex cases, where list items contain many components, the list is\nbetter treated as a table,\ntablesand\nlists on which see chapter 14 Tables, Formulæ, Graphics, and Notated Music.  A particularly important instance of the simple two-column\ntable is the glossary list, which should be marked\nby the tag list type=\"gloss\".  In such lists, each\nlabel element contains a term and each item its gloss;\nit is a semantic error for a list tagged with type=\"gloss\" not to have labels.  For example:\nbibliography\nAdditionally, the term and gloss elements discussed\nin section 3.4.1 Terms and Glosses might be used to make explicit the role\nthat each column in the glossary list has, as follows:\nbibliography\nNote in the above examples the use of the global xml:lang\nattribute to specify on the label (or term) element\nwhat language the term is from.  For further discussion of the\nxml:lang attribute see section 1.3.1.1 Global Attributes, and\nsection 6.1 Language Identification.  A more elaborate markup for this\nglossary would distinguish the headword forms from the grammatical\ninformation (principal parts and gender), perhaps using elements taken\nfrom 9 Dictionaries.\n \nIn addition to the head element used to supply\na title or heading for the whole list, headings for the two\ncolumns of a glossary-style list may be specified using\nthe two special elements headLabel and headItem:\nbibliography\n \nThe elements label, head, headLabel, and\nheadItem may contain only phrase-level elements.  The\nitem element however may contain paragraphs or other\nchunks, including other lists.  In this example, a\nglossary list contains two items, each of which is itself a simple list:\nbibliography\n \nLists of different types may be nested to arbitrary depths in this\nway.\n \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONO#CONO\">3.9 Notes, Annotation, and Indexing</a>","content":"3.9 Notes, Annotation, and Indexing\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONO#CONO\">3.9 Notes, Annotation, and Indexing</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONONO#CONONO\">3.9.1 Notes and Simple Annotation</a>","content":"3.9.1 Notes and Simple Annotation\nThe following element is provided for the encoding of\ndiscursive notes, whether already present in the copy text or\nsupplied by the encoder:\n<note> contains a note or annotation.\t\n \nA note is any additional comment found in a text, marked in some way as being\nout of the main textual stream.  All notes should be marked using the\nsame tag, note, whether they appear as block notes in the main\ntext area, at the foot of the page, at the end of the chapter or volume,\nin the margin, or in some other place.\n \nNotes may be in a different hand or typeface, may be authorial or\neditorial, and may have been added later.  Attributes may be used to\nspecify these and other characteristics of notes, as detailed below.\n \nA note is usually attached to a specific point or span within a text, which we\nterm here its point of attachment. In conventional\nprinted text, the point of attachment is represented by some siglum\nsuch as a star or cross, or a superscript digit. \nWhen encoding such a text, it is conventional to replace this\nsiglum by the content of the annotation, duly marked up with a\nnote element. This may not always be\npossible for example with marginal notes, which may not be anchored to\nan exact location. For ease of processing, it may be adequate to\nposition marginal notes before the relevant paragraph or other\nelement. In printed texts, it is sometimes conventional to group notes\ntogether at the foot of the page on which their points of attachment\nappear. This practice is not generally recommended for TEI-encoded\ntexts, since the pagination of a particular printed text is unlikely\nto be of structural significance.  In some cases, however, it may be\ndesirable to transcribe notes not at their point of attachment to the\ntext but at their point of appearance, typically at the end of the\nvolume, or the end of the chapter.  In such cases, the\ntarget attribute of the note may be used to\nindicate the point of attachment.  It is also possible to encode the\npoint of attachment itself, using the ptr or ref\nelement, pointing from that to the body of the note placed\nelsewhere. \nIn cases where the note is\napplied not to a point but to a span of text,  not itself represented\nas a TEI element, the\ntarget attribute may use an appropriate pointer\nexpression, for example using the range() function\nto specify the span of attachment.\nFor further discussion of pointing\nto points and spans in the text, see section 3.7 Simple Links and Cross-References.\nIn the following example, the type attribute is used to\ncategorise the note as a gloss:\nbibliography\nAs the note appears within an l element, we may\ninfer that its point of attachment is in the margin adjacent to the\nline in question. In the following version of the same text, however, it may be\ninferred that the note applies to the whole of the stanza:\nbibliography\n\nThis type of annotation, very common in the early printed texts\nwhich Coleridge may be presumed to be imitating in this case, may also\nbe regarded as providing a heading or descriptive label for the\npassage concerned. The encoder may therefore prefer to use the\nlabel element to represent it, as in the following case:\nbibliography\n\nIn the following example, a note which appears at the foot of the\npage in the printed source is given at its point of attachment within\nthe text. The global n attribute is used to indicate the\nnote number: bibliography\n \nIn addition to transcribing notes already present in the copy text,\nresearchers may wish to add their own notes or comments to it. The\nnote element may be used for either purpose, but it will\nusually be advisable to distinguish the two categories. One way might\nbe to use the type attribute shown above, categorizing notes as authorial,\neditorial, etc. Where notes\nderive from many sources, or where a more precise attribution is\nrequired, the resp attribute may be used to point to a\ndefinition of the person or other agency responsible for the content\nof the note.\nAs a simple example, an edition of the Ancient\nMariner might include both Coleridge's original glosses and\nthose of a modern commentator:\nbibliography\nFor this to be valid, the codes #JLL and\n#STC must point to some more information identifying the\nagency concerned. The syntax used is identical to that used for other\ncross-references, as discussed in 3.7 Simple Links and Cross-References; thus in this\ncase,  the TEI header for this text might contain a \ntitle statement like the following:\n  \n\nWhen annotating the electronic text by means of analytic notes in\nsome structured vocabulary, e.g. to specify the topics or themes of a\ntext, the span and interp elements may be more\neffective than the free form note element; these elements are\navailable when the module for simple analysis is selected (see section\n17.3 Spans and Interpretations).\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONO#CONO\">3.9 Notes, Annotation, and Indexing</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONONO#CONONO\">3.9.1 Notes and Simple Annotation</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONONOGR#CONONOGR\">3.9.1.1 Encoding Grouped Notes</a>","content":"3.9.1.1 Encoding Grouped Notes\nThe following element is provided for the grouping of notes:\n    <noteGrp> contains a group of notes\t\n\n\nA text may have multiple alternative versions of the same note, such as\nthe same annotation expressed in multiple languages, or\nboth an extensive note and a short form for different audiences. In\nsuch cases multiple note elements may be grouped within a\nnoteGrp element.\n\n\nTypically, the note elements within a noteGrp would\nbe differentiated by use of attributes such as xml:lang or\ntype, while sharing the same point of attachment. This differentiation \ncan be made either implicitly in case of inline notes, or explicitly via a\ntarget attribute, which may be specified on the\nnoteGrp itself.\n\n\nThe simple example below demonstrates the grouping of a short and a full version of\n    the same note, where the short version might be intended for use in contexts \n    with space constraints.\n    bibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONO#CONO\">3.9 Notes, Annotation, and Indexing</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONOIX#CONOIX\">3.9.2 Index Entries</a>","content":"3.9.2 Index Entries\nThe indexing of scholarly texts is a skilled activity, involving\nsubstantial amounts of human judgment and analysis. It should not therefore be\nassumed that simple searching and information retrieval software will\nbe able to meet all the needs addressed by a well-crafted manual\nindex, although it may complement them for example by providing free\ntext search. The role of an index is to provide access via\nkeywords and phrases which are not necessarily present in the text\nitself, but must be added by the skill of the indexer. \n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONO#CONO\">3.9 Notes, Annotation, and Indexing</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONOIX#CONOIX\">3.9.2 Index Entries</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONOIXpre#CONOIXpre\">3.9.2.1 Pre-existing Indexes</a>","content":"3.9.2.1 Pre-existing Indexes\nWhen encoding a pre-existing text, therefore, if such an index\nis present it may be advisable to retain it along with the text,\nrather than attempt to regenerate it automatically. Elements discussed\nelsewhere in these Guidelines may be used for this purpose. For\nexample, the div1 element or div element may be used\nto mark the section of the text containing the index and the\nlist element might be used to mark the index itself, each\nentry being represented by an item element, possibly\ncontaining within it a series of ptr or ref\nelements, as follows:\nbibliography\n\nNote that this simple representation does not capture the nested\nstructure of the first of these index entries. A more accurate representation might\nentail the use of nested lists like the following:\nbibliography\n\nThe page references, encoded simply as ref elements above,\nmight also include direct links to the appropriate location in the\nencoded text, using (for example) a target attribute to supply the\nidentifier of an associated page break element:\n  \n\nFor further discussion of this and alternative ways of encoding such\nlinks see the discussion in section 16 Linking, Segmentation, and Alignment. Note that\nsimilar methods may also be used to encode a table of contents, as\nfurther exemplified in section 4.5 Front Matter.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONO#CONO\">3.9 Notes, Annotation, and Indexing</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONOIX#CONOIX\">3.9.2 Index Entries</a><a class=\"breadcrumb\" href=\"p5.xml?id=CONOIXgen#CONOIXgen\">3.9.2.2 Auto-generated Indexes</a>","content":"3.9.2.2 Auto-generated Indexes\nIt can also be useful, however, to generate a new index from a\nmachine-readable text, whether the text is being written for the first time\nwith the tags here defined, or as an addition to a text transcribed from\nsome other source. Depending on the complexity of the text and its subject\nmatter, such an automatically-generated index may not in itself satisfy all\nthe needs of scholarly users. However it can assist a professional indexer\nto construct a fully adequate index, which might then be post-edited into\nthe digital text, marked-up along the lines already suggested for preserving\npre-existing index material.\nIndexes generally contain both  references to specific pages or\nsections and references to page ranges or sequences. The same element\nis used in either case:\n\n<index> marks a location to be indexed for whatever purpose.\n\n\nLike the interp element described in 17.3 Spans and Interpretations\nthis element may be used simply to provide descriptive or interpretive\nlabel of some kind for any location within a text, to be processed in\nany way by analytic software, but its main purpose is to facilitate\nthe generation of an index for a printed version of the text. An\nindex element may be placed anywhere within a text, between\nor within other elements. The\nheadwords to be used when making up this index are given by the\nterm elements within the index\nelement. The location of the generated index\nmight be specified by means of a processing instruction within the\ntext, such as the following (the exact form of the PI is of course\ndependent on the application software in use):\n\nAlternatively, the special purpose  divGen element might be used.\nIn the simplest case, a single headword is supplied  by\na term element contained by an\nindex element:\n  \n \nThe effect of this is to document an index entry for the term\nLemmatization, Arabic,\nwhich when processed could reference the location of the original index element. \nIf the subject of Arabic lemmatization is treated at length\nin a text, then the index entry generated may need to reference a\nsequence of locations (e.g. page numbers). In such a case it will be necessary to identify the end of the relevant\nspan of text as well as its starting point. This is most conveniently\ndone by supplying an  empty anchor element (as discussed in chapter\n16 Linking, Segmentation, and Alignment) at the appropriate point and pointing to it from\nthe index element by means of its spanTo\nattribute, as\nin this example:\n  \n \nThis would generate the same index entries as the previous example,\nbut the reference would be to the whole span of text between the\nlocation of the index element and the location of the element\nidentified by the code ALAMEND, rather than\na single point, and thus might (for\nexample) include a sequence of page numbers.\nAlthough the position of the index element in the text\nprovides the target location that will be specified in the generated index\nentry, no part of the text itself is used to construct that entry. Index\nterms appearing in the entry come solely from the content of term\nelements, which consequently may have to repeat words or phrases from the\ntext proper. This need not be done verbatim, thus giving scope for\nnormalization of spelling (as in the example above) or other modifications which may assist\ngeneration of an index in a desired form or sequence.\nSometimes, for example when\nindex terms are taken from a different language or consist of\nmathematical formulae or other expressions, even a\nnormalized form of an index term may be insufficient for an application to\norder it exactly as desired. The sortKey attribute may be\nused to address this problem, as in the following example:\nbibliography Here, an entry for the symbol @ will appear\nin the index, but will be sorted alphabetically as if it were the\nstring 0000. This technique is also useful when an index\nentry is to contain some non-Unicode character or glyph represented by\nthe g element discussed in chapter 5 Characters, Glyphs, and Writing Modes. In\nthe following example, we assume that somewhere a definition for this\nglyph has been provided using the elements described in chapter 5 Characters, Glyphs, and Writing Modes, and given the code PrinceGlyph:\n  \nNote that if no value is supplied for the sortKey attribute, a sorting\napplication should always use the content of the term element\nas a sort key.\n\nIt is common practice to compile more than one index for a given text.\nA biography of a poet, for example, may offer an index of references to\npoems by the subject of the study, another index of works by other writers,\nan index of places or historical personages etc. The indexName\nattribute is used to assigning index terms and locations to one or\nmore specific indexes:\n  \n\nMulti-level indexing is particularly common in scholarly\ndocuments. For example, as well as entries\nsuch as TEI, or markup, an index  may contain structured entries like TEI,\nmarkup practices, index terms, where a top level entry TEI\nis followed by a number of second-level subcategories, any or all of\nwhich may have a third-level list attached to them and so on. In order to\nreflect such a hierarchical index listing,  index  elements may be\nnested to the required depth. For example,\nsuppose that we wish to make a structured index entry for\nlemmatisation with subentries for Arabic,\nSanskrit, etc. The example at the start of this section  might\nthen be encoded with  nested\nindex elements:\n  \nThe  index entry from Burton's Anatomy of\nMelancholy quoted above might be generated in a similar way. \nTo generate such an entry, the body of the text might include, at page\n193, an index element such as\n    bibliography. Similarly,  page 601 of the body text would include\nan index element like the following:\n  \nwhile the index element at page 624 would have a structure\nlike the following:\n         \n\nWhen processing such index elements, the duplication\nrequired to make the structure explicit will normally be removed, so\nas to produce entries like those quoted above. However, this is not\nrequired by the encoding recommended here. \n\nAs noted above, either a processing instruction or a divGen\nelement may be used to mark the place at which an index\ngenerated from  index elements should be inserted into the\noutput of a processing program; typically but not necessarily this will be at some point\nwithin the back matter of the document. If the divGen element\nis used, then the  type attribute\nshould be used to specify which kind of index is to be generated, and\nits value should correspond with that of the\nindexName attribute on the relevant index\nelements. \n  \n \nAs this example shows, the global\nn attribute may also be used to specify a name or\nidentifier for the\ngenerated index itself in the usual way. Any additional headings\netc. required for the generated index must be specified as content of\nthe divGen element.\n  \n\nIf a processing instruction is used, then these parameters for the\ngenerated index may be supplied in some other way.\nOne final feature frequently found in manually-created indexes to\nprinted works cannot readily be encoded by the means provided here,\nnamely cross-references internal to the index term listing. For\nexample, if all references to the TEI in a text have been indexed\nusing the index term Text Encoding Initiative, it may\nalso be helpful to include an entry under the term TEI\ncontaining some text such as see Text Encoding Initiative. Such\ninternal cross-references must be added as part of the post-editing\nphase for an auto-generated index.\n\t\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COGR#COGR\">3.10 Graphics and Other Non-textual Components</a>","content":"3.10 Graphics and Other Non-textual Components\nGraphics, such as illustrations or diagrams, appear in many\ndifferent kinds of text, and often with different purposes. Audio or video\nclips may also appear. In some\ncases, such media form an integral part of a text (indeed, some texts—comic \nbooks for example—may be almost entirely graphic); in others\nthe graphic or video may be a kind of optional extra. In some cases, the text\nmay be incomprehensible unless the media is included; in others, the\npresence of the media adds  little to the sense of the\nwork. It will therefore be a matter of encoding policy as to whether\nor how media found in a source text are transferred to a new encoded \nversion of the same.  In documents which are born\ndigital, media such as graphics\nand other non-textual components may be particularly salient,\nbut their inclusion in an archival form of the document concerned\nremains an editorial decision.\nConsidered as structural components, media may be anchored to a particular point in\nthe text, or they may float either completely freely, or\nwithin some defined scope, such as a chapter or section. Time-based\nmedia such as audio or video may need to be synchronized  with particular\nparts of a written text.  Media of all kinds often contain associated\ntext such as a heading or label.  These Guidelines provide the following\ndifferent elements to indicate their appearance within a text:\n\n<figure> groups elements representing or containing graphic information\n  such as an illustration, formula,  or    figure.\n<media> indicates the location of any form of external media such as\n  an audio or video clip etc.\n<graphic> indicates the location of a graphic or illustration, either forming\n    part of a text, or providing an image of it.\n<binaryObject> provides encoded binary data representing an inline graphic,\n  audio, video or other object.\n\n \nMedia files may be encoded in a number of different ways:\nin some non-XML or binary format such as PNG, JPEG, MP3, MP4 etc.in an XML format such as SVGin a TEI XML format such as the notation for graphs and trees\ndescribed in 19 Graphs, Networks, and Trees In the last two cases, the  presence of the graphic\nwill be indicated by an appropriate XML element, drawn from the SVG\nnamespace in the second case, and its content will fully define the\ngraphic to be produced. In the first case, however, one of the elements\ngraphic or media is used to mark the presence of the graphic only and the\nvisual content itself is stored outside the XML document at a location \nreferenced by means of a url attribute. This attribute is\nprovided by membership of these elements in the att.resourced class. Alternatively, if\nit is small, the media information may be embedded directly within the document\nusing some suitable binary format such as Base64; in this case the\nbinaryObject element may be used to contain it.\n\n\nThe elements graphic, media, and binaryObject are made\navailable as members of the class model.graphicLike when this module is included in\na schema. These elements are also members of the class att.media, from which they inherit the\nfollowing attributes: \n\n  <att.internetMedia> provides attributes for specifying the type of a computer\n  resource using a standard taxonomy.\n  <att.media> provides attributes for specifying display and related properties of\n  external media.\n\n\nFor example, the following passage indicates that a copy of the  image\nfound in the source text may be recovered from the URL\nzigzag2.png and that this image is in PNG format:\nbibliography\t\n\n\t\nThe media elements  are phrase\nlevel  elements which may be used\nanywhere  that textual content is permitted, within but not between\nparagraphs or headings. In the following example, the encoder has\ndecided to treat a specific printer's ornament as a heading:\n  . \nThe figure element discussed in 14.4 Specific Elements for Graphic Images\nprovides additional capabilities, for example the ability to combine a\nnumber of images into a hierarchically organized structure or a block\nof images. The figure element carries a type\nattribute, which can be used to distinguish different kinds of graphic\ncomponent within a single work, for example, maps as opposed to\nillustrations. It also provides the ability to associate an image with\nadditional information such as a heading or a description.\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CORS#CORS\">3.11 Reference Systems</a>","content":"3.11 Reference Systems\nBy reference system we mean the system by which names\nor references are associated with particular passages of a text (e.g.\nPs. 23:3 for the third verse of Psalm 23 or Amores\n2.10.7 for Ovid's Amores, book 2, poem 10, line\n7).  Such names make it possible to mark a place within a text and\nenable other readers to find it again.  A reference system may be based\non structural units (chapters, paragraphs, sentences; stanza and verse),\ntypographic units (page and line numbers), or divisions created\nspecifically for reference purposes (chapter and verse in Biblical\ntexts).  Where one exists, the traditional reference system for a text\nshould be preserved in an electronic transcript of it, if only to make\nit easier to compare electronic and non-electronic versions of the text.\n \nReference systems may be recorded in TEI-encoded texts in any of the\nfollowing ways:\nwhere a reference system exists, and is based on the same\nlogical structure as that of the text's markup, the reference for\na passage may be recorded as the value of the global xml:id or\nn attribute on an appropriate tag, or may be constructed by\ncombining attribute values from several levels of tags, as described\nbelow in section 3.11.1 Using the xml:id and n Attributes.\n where there is no pre-existing reference system, the global\nxml:id or n attributes may be used to construct one\n(e.g. collections and corpora created in electronic form), as described\nbelow in section 3.11.2 Creating New Reference Systems.\n where a reference system exists which is not based on the same\nlogical structure as that of the text's markup (for example, one\nbased on the page and line numbers of particular editions of the text\nrather than on the structural divisions of it), any of a\nvariety of methods for encoding the logical structure representing\nthe reference system may be employed, as described in chapter\n20 Non-hierarchical Structures.\n where a reference system exists which does not correspond to any\nparticular logical structure, or where the logical structure concerned\nis of no interest to the encoder except as a means of supporting the\nreferencing system, then references may be encoded by means of\nmilestone elements, which simply mark points in the text at\nwhich values in the reference system change, as described below in\nsection 3.11.3 Milestone\nElements.\n \nThe specific method used to record traditional or new reference systems\nfor a text should be declared in the TEI header, as further described in\nsection 3.11.4 Declaring Reference Systems and in section 16.2.5 Canonical References.\n \nWhen a text has no pre-existing associated reference system of any\nkind, these Guidelines recommend as a minimum that at least the page\nboundaries of the source text be marked using one of the methods\noutlined in this section.  Retaining page breaks in the markup is also\nrecommended for texts which have a detailed reference system of their\nown. Line breaks in prose texts may be, but need not be, tagged.8\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CORS#CORS\">3.11 Reference Systems</a><a class=\"breadcrumb\" href=\"p5.xml?id=CORS1#CORS1\">3.11.1 Using the xml:id and n Attributes</a>","content":"3.11.1 Using the xml:id and n Attributes\nWhen traditional reference schemes represent a hierarchical\nstructuring of the text which mirrors that of the marked-up document, the\nn attribute defined for all elements may be used to indicate\nthe traditional identifier of the relevant structural units. The\nn attribute may also be used to record the numbering of\nsections or list items in the copy text if the copy-text numbering is\nimportant for some reason, for example because the numbers are out of\nsequence.\nFor example, a traditional reference to Ovid's\nAmores might be Amores\n2.10.7—book 2, poem 10, line 7. Book, poem, and\nline are structural units of the work and will therefore be tagged in\nany case. (See chapter 6 Verse for a\ndiscussion of structural units in verse collections.) In such cases,\nit is convenient to record traditional reference numbers of the\nstructural units using the n attribute. The relevant tags\nfor our example would be:\n  \n \nOne may also place the entire standard reference for each portion of\nthe text into the appropriate value for the n attribute,\nthough for obvious reasons this takes more space in the file:\n  \n \nIf the names used by the traditional reference system can be\nformulated as identifiers, then the references can be given as values\nfor the xml:id attribute; this requires that the reference\nbe given without internal spaces, begin with a letter or underscore,\nand contain no characters other than letters, digits, hyphens,\nunderscores, full stops, and the various combining and extender\ncharacters, as defined by the XML specification.  Unlike values for\nthe n attribute, values for the xml:id attribute\nmust be unique throughout the document. Our example then looks like\nthis: \n\nTo document the usage and to allow automatic processing of these\nstandard references, it is recommended that the TEI header be used to\ndeclare whether standard references are recorded in the n or\nxml:id attributes and which elements may carry standard\nreferences or portions of them. For examples of declarations for the\nreference systems just shown, see section 3.11.4 Declaring Reference Systems.\n \nUsing the n attribute one can specify only a single\nstandard referencing system, a limitation not without problems, since\nsome editions may define structural units differently and thus create\nalternative reference systems.  For example, another edition of the\nAmores considers poem 10 a continuation of poem 9, and\ntherefore would specify the same line as Amores 2.9.31.\nIn order to record both of these reference systems  one\ncould employ any of a variety of methods discussed in chapter 20 Non-hierarchical Structures.\n "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CORS#CORS\">3.11 Reference Systems</a><a class=\"breadcrumb\" href=\"p5.xml?id=CORS2#CORS2\">3.11.2 Creating New Reference Systems</a>","content":"3.11.2 Creating New Reference Systems\nIf a text has no canonical reference system of its own, a new custom reference\nsystem may be used.\n  \nThe global attributes n and xml:id may be used to\n  assign reference identifiers to segments of the text.  Identifiers\n  specified by either attribute apply to the entire element for which they\n  are given. xml:id attributes must be unique within a single\n  document, and xml:id values must begin with a letter.  No such restrictions\n  are made on the values of n attributes.\n\n\nDetermining a referencing system for a TEI encoding depends on many factors \n  that may either be derived from textual structure, or influenced by extra-textual \n  contingencies such as project and file management concerns. It is important,\n  therefore, that the attribute used, the elements which can bear standard\n  reference identifiers, and the method for constructing standard reference \n  identifiers, should all be declared in the header as described in section\n  2.3.6 The Reference System Declaration.\n\n\nThe Guidelines do not recommend one specific method for creating new referencing\n   systems; however, the rest of this section lists some possibly useful strategies.\n\n  \n\n  \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CORS#CORS\">3.11 Reference Systems</a><a class=\"breadcrumb\" href=\"p5.xml?id=CORS2#CORS2\">3.11.2 Creating New Reference Systems</a><a class=\"breadcrumb\" href=\"p5.xml?id=CORS2-1#CORS2-1\">3.11.2.1 Referencing system derived from markup</a>","content":"\n    3.11.2.1 Referencing system derived from markup\n    \n      A new referencing system may be derived from the structure of the electronic\n      text, specifically from the markup of the text. As with any\n      reference system intended for long-term use, it is important to see the\n      reference as an established, unchanging point in the text. Should the\n      text be revised or rearranged, the reference-system identifiers\n      associated with any section of text must stay with that section of text, even if\n      it means the reference numbers fall out of sequence.  (A new reference\n      system may always be created beside the old one if out-of-sequence\n      numbers must be avoided.)\n    \n    A convenient method of mechanically generating unique values for\n      xml:id or n attributes based on the structure of\n      the document is to construct, for each element, a domain-style\n        address comprising a series of components separated by full\n      stops, with one component for each level of the document hierarchy.\n      Two methods may be used.  In the typed path form of\n      identifier, each component in the identifier takes the form of an\n      element identifier, a hyphen, and a number, for example\n      p-2. The element name specifies what type of\n      element is to be sought, and the number specifies which occurrence of that\n      element type is to be selected.  (The hyphen and number may be omitted\n      if there is only one element of the given type.)  In the untyped\n        path form of identifier, each component consists of a number,\n      indicating which element in the sequence of nodes at each level is to be\n      selected.  To make the resulting identifier a valid XML identifier, it\n      may need to be prefixed with an unchanging alphabetic letter.\n    Identifiers generated with these methods should use the text\n      element as their starting point, rather than the TEI or\n      body elements. The TEI element may be taken\n      as a starting point only if identifiers need to be generated for the\n      teiHeader, which is not usually the case;  using the\n      body element as a root would prevent assignment of identifiers\n      for the front and back matter.  The component corresponding to the root\n      element can be omitted from identifiers, if no confusion will result.\n      In collections and corpora, the component corresponding to the root may\n      be replaced by the unique identifier assigned to the text or sample.\n    \n    In the following example, each element within the text\n      element has been given a typed-path identifier as its xml:id\n      value, and an untyped-path identifier as its n value; the\n      latter are prefixed with the string AB, which may be\n      imagined to be the general identifier for this text.\n      \n      The typed and untyped path methods are convenient, but are in no way\n      required for anyone creating a reference system.\n    \n    If the xml:id attribute is used to record the reference\n      identifiers generated, each value should record the entire path.  If the\n      n attribute is used, each value may record either the entire\n      path or only the subpath from the parent element.  The attribute\n      used, the elements which can bear standard reference identifiers, and\n      the method for constructing standard reference identifiers, should all\n      be declared in the header as described in section 2.3.6 The Reference System Declaration.\n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CORS#CORS\">3.11 Reference Systems</a><a class=\"breadcrumb\" href=\"p5.xml?id=CORS2#CORS2\">3.11.2 Creating New Reference Systems</a><a class=\"breadcrumb\" href=\"p5.xml?id=CORS2-2#CORS2-2\">3.11.2.2 Referencing systems based on project conventions</a>","content":"\n    3.11.2.2 Referencing systems based on project conventions\n    A reference system may be based on an agreed project-specific convention for xml:id attributes.\n      Every convention will have strengths and weaknesses and it is left to  \n      encoders to make a decision that enables them to locate information in their TEI document.\n    \n    Here are some examples of referencing systems that have been used in TEI project:\n      Title-based identifiers: identifiers constructed with a \n          number of characters from the main document title, followed by an incremental \n          number. E.g. HOL001, HOL002, etc. using a fixed number of digits; or without \n          fixed digits: HOL1, HOL2, etc.Based on markup, with prefix: identifiers constructed on \n          the markup itself, as described in the previous section. To facilitate uniqueness \n          in a corpus, each identifier may be prefixed with the identifier of the root TEI element.\n          E.g. RootID-Body-p-1.Opaque identifiers: computed identifiers using either a \n          randomized algorithm or a universally unique identifier (UUID) algorithm.\n          Note that XSLT's function generate-id() only guarantees identifier unique \n          to the document being processed.\n    \n    \n    XML well-formedness requires only that xml:id attributes be unique within a single document. \n      However, it is also worth keeping in mind that for operating with\n      referencing systems across a corpus of TEI files it is helpful (or even necessary in some \n      circumstances) to have unique identifiers across the whole corpus.\n    Values of xml:id may be either populated computationally or manually. In the latter\n    case, it is advisable to put measures in place to avoid human error. Custom data types and Schematron rules may be \n    defined in a customization ODD, and a check digit may be added to prevent unwanted changes.\n    9\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CORS#CORS\">3.11 Reference Systems</a><a class=\"breadcrumb\" href=\"p5.xml?id=CORS5#CORS5\">3.11.3 Milestone\nElements</a>","content":"3.11.3 Milestone\nElementsWhere the desired reference system does not\ncorrespond to any particular structural hierarchy, or the document\ncombines multiple structural hierarchies (as further discussed in 20 Non-hierarchical Structures), simpler though less expressive methods may be\nnecessary. In such cases the simplest solution may be just to mark up\nchanges in the reference system where they occur, by using one or more\nof the following milestone elements: <milestone> marks a boundary point separating any kind of section of a text, typically but not\n    necessarily indicating a point at which some part of a standard reference system changes, where\n    the change is not represented by a structural element.<gb> marks the beginning of a new gathering or quire in a transcribed codex.<pb> marks the beginning of a new page in a paginated document.<lb> marks the beginning of a new (typographic) line in some edition or version of a text.<cb> marks the beginning of a new column of a text on a\n  multi-column page.\n \nThese elements simply mark the points in a text at which some\ncategory in a reference system changes.  They have no content but\nsubdivide the text into regions, rather in the same way as milestones\nmark points along a road, thus implicitly dividing it into segments.\nThe elements gb, pb, cb, and lb are specialized\ntypes of milestone, marking gathering, page, column, and line\nboundaries respectively.  The\nglobal n attribute is used in each case to provide a value\nfor the particular unit associated with this milestone (for example,\nthe page or line number).  Since it is not structural, validation of a\nreference system based on milestones cannot readily be checked by an\nXML parser, so it will be the responsibility of the encoder or the\napplication software to ensure that they are given in the correct\norder.\nMilestone elements are often used as a simple means of capturing\nthe original appearance of an early printed text, which will rarely\ncoincide exactly with structural units, but they are generally useful\nwherever a text has two or more competing\nstructures. For example, many English novels were first published as\nserial works, individual parts of which do not always contain a whole\nnumber of chapters. An encoder might decide to represent the\nchapter-based structure using div1 elements, with\nmilestone elements to mark the points at which individual\nparts end; or the reverse. Thus, an encoding in which chapters are\nregarded as more important than parts might encode some work in which\nchapter three begins in part one and is concluded in part two as\nfollows: \nAn encoding of the same work in which parts are regarded as more\nimportant than chapters might begin as follows:\n  \n \n Similarly, when tagging dramatic verse one may wish to privilege stanzas\nand lines over speeches and speakers, particularly where speeches cross line\nand line group boundaries. One might also wish to mark changes in\nnarrative voice in a prose text. In either case, a milestone tag may be used to\nindicate change of speaker:\nbibliography\n Milestone tags also make it possible to record the reference systems\nused in a number of different editions of the same work. The reference\nsystem of any one edition can be recreated from a text in which all are\nmarked by simply ignoring all elements that do not specify that edition\non their ed attribute.\n \nAs a simple example, assuming that edition E1 of some collection of\npoems regards the first two poems as constituting the first book, while\nedition E2 regards the first poem as prefatory, a markup scheme like\nthe following might be adopted:\n  \n \nIn this case no n value is specified, since the numbers\nrise predictably and the application can keep a count from the start of\nthe document, if desired.\n \nThe value of the n attribute may but need not include the\nidentifiers used for any larger sections.  That is, either of the\nfollowing styles is legitimate:\n  \nor\n  \n \nWhen using milestone tags, line numbers may be supplied for\nevery line or only periodically (every fifth, every tenth line).  The\nlatter may be simpler; the former is more reliable.\n \nThe style of numbering used in the values of n is\nunrestricted: for the example above, I.i, I.ii,\nand I.iii could have been used equally well if preferred.\nThe special value unnumbered should be reserved for marking\nsections of text which fall outside the normal numbering system\n(e.g. chapter heads, poem numbers, titles, or speaker attributions in\na verse drama).\n \nBy default,  there are no constraints on the values supplied for\nthe ed attribute. If it is felt\nappropriate to enforce such a restriction, the techniques described in\n23.3 Customization may be used, for example to specify that the\nattribute must specify one of a predefined set of values. \n \nSee below, section 3.11.4 Declaring Reference Systems, for examples of\ndeclarations for the reference systems just shown.\n \nMilestone elements may be used to mark any kind of shift in the\nproperties associated with a piece of text, whether or not would\nnormally be considered a reference system. For example, they may be\nused to mark changes in narrative voice in a prose text, or \nchanges of speaker in a dramatic text, where these are not marked\nusing structural elements such as sp, perhaps in order to\navoid a clash of hierarchies.\n\nAs noted in 3.2.2 Hyphenation above, milestone elements such\nas lb or pb represent whitespace and are therefore\nby default assumed to occur between orthographic tokens in the text, where\nthese are not otherwise indicated.  By default it is reasonable to assume that\nwords are not broken across page or line boundaries, and that\ntherefore a sequence such as \n  \nshould be tokenized as four words (sed,\nimp, erator, and\ndixit). The break attribute is\nprovided to change the default assumption. To make explicit that\nimperator in the above example should be\ntreated as a single word, a tagging such as the following is recommended:\n  \nWhere hyphenation appears before a line or page break, the encoder may\nor may not choose to record the fact, either explicitly using an\nappropriate Unicode character, or descriptively for example by means\nof the rend attribute; see further 3.2.2 Hyphenation.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CORS#CORS\">3.11 Reference Systems</a><a class=\"breadcrumb\" href=\"p5.xml?id=CORS6#CORS6\">3.11.4 Declaring Reference Systems</a>","content":"3.11.4 Declaring Reference Systems\nWhatever kind of reference system is used in an electronic text, it\nis recommended that the TEI header contain a description of its\nconstruction in the refsDecl element described in section\n2.3.6 The Reference System Declaration. As described there, the declaration\nmay consist either of a formal declaration using the\ncRefPattern or citeStructure elements, or an informal description in prose.  One of the\nformer is recommended because unlike prose they can be processed by\nsoftware.\n\nThe three examples given in section 3.11.1 Using the xml:id and n Attributes would be declared as follows. The first example encodes\nthe standard references for Ovid's Amores one level at\na time, using the n attribute on the div1,\ndiv2, div3, and l tags. The header section for such\n  an encoding should look something like this: \n \nThe second example encodes the same reference system, again using\nthe n attribute on the div1, div2,\ndiv3, and l tags, but giving the reference string in\nfull on each tag. If canonical references are made only to lines, the\nreference system could be declared as follows: \nSince the entire regular expression is enclosed as a parenthetical\nsubgroup, the entire canonical reference string is sought as the value\nof the n attribute on an l element.\nIn order to handle references to poems as well as to individual\nlines, the declaration for the reference system must be more\ncomplicated:\n  \nThis declaration indicates that the entire reference string must be\nsought as the value of the n attribute on a div1,\ndiv2, div3, or l element.\n \nThe third example encodes the same reference system, this time\ngiving the entire reference string as the value of the\nxml:id attribute on the relevant tags. The reference system\ndeclaration for such an encoding could be:\n \nalthough in general there seems to be little advantage in this case:\nit is no more difficult to use a standard relative URI reference as\nthe value of target.\nIn cases where a more complete formal declaration of text structure is desirable,\nfor example in systems that will present the contents of a large TEI file in smaller chunks, the\nciteStructure element may be used. This method permits canonical references\nto be resolved and also allows them to be extracted, so that, for example, a list of resolvable\ncitations may be generated from the document. The example from the Amores\nabove could be implemented using citeStructure thus:\nbibliography\nciteStructure also provides a method for attaching informational properties to \n  units of structure, by means of the citeData element. The work, book, and poem \n  divisions above might all have head elements which provide a title for the section.\n  If we wish that information to be extractable, we can use citeData to specify where it is to\n  be found:\n  bibliography\n  The example above maps the head element to the Dublin Core \n  property title. For convenience, property URIs may be abbreviated using\n  prefixDef.\n\nReference systems recorded by means of milestone tags can also be\ndeclared; the following prose description could be used to declare\nthe example given in section 3.11.3 Milestone\nElements.\n  \nOr in this way, using a formal declaration for this reference scheme\nderived from edition E1.\n  \n \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBI#COBI\">3.12 Bibliographic Citations and References</a>","content":"3.12 Bibliographic Citations and References\nBibliographic references (that is, full descriptions of bibliographic\nitems such as books, articles, films, broadcasts, songs, etc.) or\npointers to them may appear at various places in a TEI text.  They are\nrequired at several points within the TEI header's source description,\nas discussed in section 2.2.7 The Source Description; they may also appear within\nthe body of a text, either singly (for example within a footnote), or\ncollected together in a list as a distinct part of a text; detailed\nbibliographic descriptions of manuscript or other source materials may\nalso be required. These Guidelines propose a number of specialized\nelements to encode such descriptions, which together constitute the model.biblLike class.  \n\n<model.biblLike> \n\nLists of such elements may also be encoded using the following element:\n\n<listBibl> contains a list of bibliographic citations of any kind.\n\n\nIn printed texts, the individual constituents of a bibliographic\nreference are conventionally marked off from each other and from the\nflow of text by such features as bracketing, italics, special\npunctuation conventions, underlining, etc.  In electronic texts, such\ndistinctions are also important, whether in order to produce\nacceptably formatted output or to facilitate intelligent retrieval\nprocessing,10 quite apart from the need to distinguish\nthe reference itself as a textual object with particular linguistic\nproperties.\n \n\nIt should be emphasized that for references as for other textual\nfeatures, the primary or sole consideration is not how the text should\nbe formatted when it is printed or displayed.  The distinctions permitted by the\nscheme outlined here may not necessarily be all that particular\nformatters or bibliographic styles require, although they should prove\nadequate to the needs of many such commonly used software\nsystems.11 The features distinguished and\ndescribed below (in section 3.12.2 Components of Bibliographic References) constitute a set\nwhich has been useful for a wide range of bibliographic purposes and\nin many applications, and which moreover corresponds to a great extent\nwith existing bibliographic and library cataloguing practice.  For a\nfuller account of that practice as applied to electronic texts see\nsection 2.2.7 The Source Description; for a brief mention of related library\nstandards see section 2.8 Note for Library Cataloguers.\n \n\nThe most commonly used elements in the model.biblLike class are biblStruct and\nbibl. biblStruct will usually be easier to process\nmechanically than bibl because its structure is more\nconstrained and predictable. It is suited to situations in which the\nobjective is to represent bibliographic information for machine\nprocessing directly by other systems or after conversion to some other\nbibliographic markup formats such as BibTeXML or MODS. Punctuation\ndelimiting the components of a print citation is not permitted\ndirectly within a biblStruct element; instead, the presence\nand order of child elements must be used to reconstruct the\npunctuation required by a particular style.\n\n\nBy contrast, bibl allows for considerable flexibility in\nthat it can include both delimiting punctuation and unmarked-up text;\nand its constituents can also be ordered in any\nway. This makes it suitable for marking up bibliographies in existing\ndocuments, where it is considered important to preserve the form of references\nin the original document, while also  distinguishing \nimportant pieces of information such as authors, dates, publishers, and so\non. bibl may also be useful when encoding born digital\ndocuments which require use of a specific style\nguide when rendering the content;\nits flexibility makes it easier to provide all the information for a reference in the\nexact sequence required by the target rendering, including any\nnecessary punctuation and linking words, rather than using an XSLT\nstylesheet or similar to reorder and punctuate the data.\n\n\nThe third element in the model.biblLike\nclass, biblFull, has a content model based on the\nfileDesc element of the\nTEI header. Both are based on the International Standard for Bibliographic\nDescription (ISBD), which forms the basis of several national standards for bibliographic\ncitations. The order of child elements in both\nbiblFull and fileDesc  corresponds to the order\nof bibliographic description areas in ISBD with two\nminor exceptions. First, the extent element, corresponding to the physical\ndescription area in ISBD, appears just after the publication,\nproduction, distribution, etc. area in ISBD, not before it as in\nTEI. Second, biblFull and fileDesc use the child\nelement publicationStmt to cover not only the publication,\nproduction, distribution, etc. area but also the resource identifier\nand terms of availability area associated with that publication.\nDespite these inconsistencies, users\nencoding citations and attempting to format them according to a\nstandard that closely adheres to ISBD may find that biblFull,\nused with its child elements and without delimiting punctuation,\nprovides an appropriate granularity of encoding with elements that can\neasily be rendered for the reader. However, it is important to note that some\nISBD-derived citation formats (such as ANSI/NISO Z39.29 and \nГОСТ 7.1) are not entirely conformant to ISBD either, since they may begin with a statement of authorship that does not map to\nthe ISBD statement of responsibility.  \n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBI#COBI\">3.12 Bibliographic Citations and References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBITY#COBITY\">3.12.1 Methods of Encoding Bibliographic References and Lists of References</a>","content":"3.12.1 Methods of Encoding Bibliographic References and Lists of References\n\nThe members of the model.biblLike class\nall share a number of possible component sub-elements.  For the\nbibl and biblStruct elements, exactly the same\nsub-elements are concerned, and they are described together in section\n3.12.2 Components of Bibliographic References; for the biblFull element, the\nsub-elements concerned are fully described in section 2.2 The File Description.\n \nDifferent levels of specific tagging may be appropriate in different\nsituations.  In some cases, it may be felt necessary to mark just the\nextent of the reference itself, with perhaps a few distinctions being\nmade within it (for example, between the part of the reference which\nidentifies a title or author and the rest).  Such references, containing\na mixture of text with specialized bibliographic elements, are regarded\nas bibl elements, and tagged accordingly.  For example:\n  \nIndeed, some encoders may find it unnecessary to mark the bibliographic\nreference at all:\n  \n \nSome bibliographic references are extremely elliptical, often only a\nstring of the form Baxter, 1983.  If no further details of\nBaxter's book are given in the source text and none is supplied by the\nencoder, then the reference thus given should be tagged as a\nbibl:\n  \nIn general, however, normal modern bibliographic practice, and these\nGuidelines, distinguish between a bibliographic reference,referencesbibliographicbibliographic references\nwhich is a self-sufficient description of a bibliographic item, and a\nbibliographic pointer,bibliographic pointerspointersbibliographic\nwhich is a short-form citation (e.g. Baxter,\n1983) which serves usually as a place-holder or pointer to\na full long-form reference found elsewhere in the text.  The usual\nencoding of short-form references such as Baxter,\n1983 is not as bibl elements but as\ncross-references to such elements; see section 3.12.3 Bibliographic Pointers \nbelow.   \nIn cases where the encoder wishes to impose more structure on the\nbibliographic information, for example to make sure it conforms to a\nparticular stylesheet or retrieval processor, the biblStruct\nelement should be used.  Note that several of the features in this and\nlater examples are explained later in the current section.\nbibliography\n \nA more complex and detailed bibliographic structure is provided by the\nbiblFull element defined in the TEI header module. This\nelement is provided as a means of embedding the file description of\none existing digital text within that of another (see further section\n2.2 The File Description); however, its use is not confined to digital\ntexts, and it may be used in the same way as any other bibliographic\nelement, as in this example:\nbibliography\n \nA list of bibliographic items, of whatever kind, may be treated in\nthe same way as any other list (see section 3.8 Lists).\nAlternatively, the specialized listBibl element may be used.\nThe difference between the two is that a list contains\nitem elements, within which bibliographic elements (bibl,\nbiblStruct, or biblFull) may appear, as well as other\nphrase- and paragraph-level elements, whereas the listBibl may\ncontain only bibliographic elements, optionally preceded by a heading and a\nseries of introductory paragraphs.  For most purposes, good practice would usually\nrequire that a listBibl contain only one kind of bibliographic\nelement, though the following example combines both fully structured\nbiblStruct and informal bibl elements:\n\n\n  \n  This example also demonstrates the way that bibliographical markup of \n  authors, titles, dates etc. can be handled differently in \n  biblStructs and bibls. In the two bibl \n  items, the key information is marked up, but it is presented in an \n  order which makes it suitable for direct rendering, with the punctuation\n  included.\n\nThe listBibl element is most appropriate \nfor a more formal bibliography. The same bibl or\nbiblStruct elements may however be embedded within an\nordinary list, thus allowing them to be mixed with running prose or\npresented informally, as in the following version of the same example:\n\n\n  \n \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBI#COBI\">3.12 Bibliographic Citations and References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBICO#COBICO\">3.12.2 Components of Bibliographic References</a>","content":"3.12.2 Components of Bibliographic References\n\nThis section discusses commonly occurring components of\nbibliographic references and elements used for encoding them.  They fall\ninto four groups:\nelements for grouping components of the analytic,\nmonographic, and series levels in a\nstructured bibliographic referencetitles of various kinds, and statements of intellectual\nresponsibility (authorship, etc.)information relating to the publication, pagination, etc. of an\nitem (most of these\nconstitute the default members of the model.biblPart class) annotation, commentary, and further detail The\nfollowing sections describe the elements which may be used to\nrepresent such information within a bibl or\nbiblStruct element.  Within the former, elements from the\nmodel.biblPart class, other phrase-level\nelements, and plain text may be combined without other constraint;\nwithin the latter, such of these elements as exist for a given\nreference must be distinguished, and must also be presented in a\nspecific order, discussed further below (section 3.12.2.9 Order of Components within References).\n \n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBI#COBI\">3.12 Bibliographic Citations and References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBICO#COBICO\">3.12.2 Components of Bibliographic References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBICOL#COBICOL\">3.12.2.1 Analytic, Monographic, and Series Levels</a>","content":"3.12.2.1 Analytic, Monographic, and Series Levels\nIn common library practice a clear distinction is made between an\nindividual item within a larger collection and a free-standing book,\njournal, or collection.  Similarly a book in a series is distinguished\nsharply from the series within which it appears.  An article forming\npart of a collection which itself appears in a series thus has a\nbibliographic description with three quite distinct levels of\ninformation:\n\nthe analytic level, giving the title, author, etc., of the article;\n \nthe monographic\nlevel, giving the title, editor, etc., of the collection;\n \nthe series\nlevel, giving the title of the series, possibly the names of its\neditors, etc., and the number of the volume within that series.\n \nIn the same way, an article in a journal requires at least two levels of\ninformation:  the analytic level describing the article itself, and the\nmonographic level describing the journal.\n\nA different identifying number may be supplied for any of these\nthree items, that is, for the analytic item, the monographic item, or\nthe series. \n  Within bibl, these three levels may be distinguished simply by the use\n    of the level attribute on title. They may also be distinguished through\n    the practice of employing nested bibl elements. In this example, for\n    instance, the monograph-level component of the reference is encapsulated in\n    its own bibl within the main bibl for the article:\n    \n  \n\n  Within biblStruct, the levels are distinguished by the use of the\n    following distinct elements:\n\n<analytic> contains bibliographic elements describing an item (e.g. an article or poem) published\n    within a monograph or journal and not as an independent publication.<monogr> contains bibliographic elements describing an item (e.g. a book or journal) published as an\n    independent item (i.e. as a separate physical object).<series> contains information about the series in which a book or other bibliographic item has\n    appeared.\n \n\nFor purposes of TEI encoding, journals and anthologies are both\ntreated as monographs; a journal title should thus be tagged as a\ntitle level=\"j\" element within\na monogr element.  Individual articles in the journal or\ncollected texts should be treated at the analytic\nlevel.  When an article has been printed in more than one journal or\ncollection, the bibliographic reference may have more than one\nmonogr element, each possibly followed by one or more\nseries elements.  A series element always relates to\nthe most recently preceding monogr element.  (Whether\nreprints of an article are treated in the same bibliographic reference\nor a separate one varies among different styles.  Library lists\ntypically use a different entry for each publication, while academic\nfootnoting practice typically treats all publications of the same\narticle in a single entry.)\n \nThe biblScope element is used to supply further\ninformation about the location of some part of a bibliographic\nreference. It specifies where to find the component in which it appears\nwithin the immediately preceding component of a different level.  \nIn the following example, Schacter's article\nIolaos appeared on pages 64 to 70 of a volume entitled\nHerakles to Poseidon, which was itself the second of a\nfour volumes published together under the title Cults of\nBoitia;  this last title constituted the 38th volume in the\nseries of Bulletin of the Institute of Classical Studies\nSupplements:\n  \n\n\nIn the following example, the article cited  has been published\ntwice, once in a journal (where it appeared in volume 40, on pages 3\n-46 of the issue of October 1986)  and once as a free-standing item,\nwhich appeared as number 11 of  a\nGerman language series. \n  \n \n\n\nThe practice of analytic vs. monographic citation, as described here,\nshould be distinguished from the practice of including within one\ncitation a reference to another work, which the encoder considers\nto be related to in some way: see further 3.12.2.7 Related Items below.\nIf an identifier is available for the analytic item, it should be\nrepresented by means of an idno element placed within the\nanalytic element, as in the following example where a DOI\n(Digital Object identifier) is supplied for the article in question.\n\n  \nPunctuation must not appear between the elements within a\nstructured bibliographic entry encoded with biblStruct or biblFull,\nunless it is contained within the elements it delimits.  When (as in\nmost of the examples in this chapter) entries are encoded without any\ninter-element punctuation, they can be usually be processed more\neasily by rendering systems able to output bibliographic\nreferences in any of several styles.\n \nWithin a bibl however, it is possible and often convenient\nto include punctuation.\n  \nThis example shows the components sequenced and punctuated\naccording to the Chicago style, with all the relevant data items marked up appropriately. This\nmarkup approach can provide easy rendering, if only one styleguide is\ntargeted, or an original source document uses a specific styleguide,\nwhile still allowing for automated recovery of key data items such as\nnames of authors, titles etc. \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBI#COBI\">3.12 Bibliographic Citations and References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBICO#COBICO\">3.12.2 Components of Bibliographic References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBICOR#COBICOR\">3.12.2.2 Titles, Authors, and Editors</a>","content":"3.12.2.2 Titles, Authors, and Editors\nBibliographic references typically include the\ntitle of the work being cited and the names of those intellectually\nresponsible for it.  For articles in journals or collections, such\nstatements should appear both for the analytic and for the monographic\nlevel.  The following elements are provided for tagging such elements:\n\n<title> contains a title for any kind of work.<author> in a bibliographic reference, contains the name(s) of an\n  author, personal or corporate, of a work; for example in the same\n  form as that provided by a recognized bibliographic name authority.\n<editor> contains a secondary statement of responsibility for a bibliographic item, for example the name of an\n    individual, institution or organization, (or of several such) acting as editor, compiler,\n    translator, etc.\n<respStmt> supplies a statement of responsibility for the intellectual content of a text, edition,\n    recording, or series, where the specialized elements for authors, editors, etc. do not suffice\n    or do not apply. May also be used to encode information about individuals or organizations \n    which have played a role in the production or distribution of a bibliographic work.\n<resp> contains a phrase describing the nature of a person's intellectual responsibility, or an organization's role \n    in the production or distribution of a work.\n<name> contains a proper noun or noun phrase.\n<meeting> contains the formalized descriptive title for a meeting or conference, for use in a\n    bibliographic description for an item derived from such a meeting, or as a heading or preamble\n    to publications emanating from it.\n<sponsor> specifies the name of a sponsoring organization or institution.\n<funder> specifies the name of an individual, institution, or organization responsible for the\n    funding of a project or text.\n<distributor> supplies the name of a person or other agency responsible for the\ndistribution of a text.\n<principal> supplies the name of the principal researcher responsible for the\ncreation of an electronic text.\n\nThe elements author, editor, respStmt, meeting, sponsor, funder, and principal\nare the default members of the model.respLike class, a subclass of the model.biblPart class to which the constituents of\nthe bibl element belong.\n\nIn bibliographic references, all titles should be tagged as such,\nwhether analytic, monographic, or series titles.  The single element\ntitle is used for all these cases.  When it appears directly\nwithin an analytic, monogr, or series\nelement, title is interpreted as belonging to the appropriate\nlevel.  However, it is recommended that the level attribute be used to signal this explicitly.\nIt is a semantic error to\ngive a value for the level attribute which is inconsistent\nwith the context. The level\nvalue a implies the analytic level; the values\nm, j, and u imply the monographic level; the value s implies the series level.  Note, however, that the\nsemantic error occurs only if the nested title is directly enclosed by\nthe analytic, monogr, or series element; if\nit is enclosed only indirectly (i.e., nested more deeply), no semantic error need be present.  For\nexample, the analytic title may contain a monographic title, as in the\nfollowing example:\n  \nIn this case, the analytic title Notes on Manuscripts of the\nProphécies de Merlin needs no level\nattribute because it is directly contained by an analytic\n  element; the monographic title contained within it, Prophécies de Merlin, is not semantically erroneous because it is not directly contained by the analytic element.\nIn some bibliographic applications, it may prove useful to\ndistinguish main titles from subordinate titles, parallel titles, etc.\nThe type attribute is provided to allow this distinction to\nbe recorded.\n \nThe following reference, from a national standard for bibliographic\nreferences,\nillustrates this type of analysis with its distinction between main\nand subordinate titles. Note that this uses the more flexible\nbibl, rather than the structured biblStruct\nelement: consequently, there is no requirement to tag all the\ncomponents of the reference (notably the authors).\nbibliography\n\n \nSlightly more complex is the distinction made below among main,\nsubordinate, and parallel titles, in an example from the same source (p.\n63).  The punctuation and the bibliographic analysis are those given in\nANSI Z39.29-1977; the punctuation is in the style prescribed by the\nInternational Standard Bibliographic Description (ISBD).12 Again,\nit is only because this example uses bibl rather than biblStruct,\nthat specific punctuation may be included between the component\nelements of the reference.\nbibliography\n\n \n\nThe elements author and editor have fairly\nobvious significance for printed\nbooks and articles; for other kinds of\nbibliographic items their proper usage may be less obvious.  The\nauthor element should be used for the person or agency with\nprimary responsibility for a work's intellectual content, and the\nelement editor for other people or agencies with some responsibility for\nthat content, whether or not they are called\neditor.  An organization such as a radio or\ntelevision station is usually accounted author of\na broadcast, for example, while the author of a government report will\nusually be the agency which produced it. A translator, illustrator, or\ncompiler, may however be marked by means of the editor element,\noptionally using the role attribute to specify the nature\nof their responsibility more exactly.\n \nMany bibliographic and Linked Data applications require disambiguation \nof author names using unique identifiers. Both the author and \neditor elements may contain one or more idno elements, \nto supply such identifiers. Alternatively, if only a single identifier \nis to be recorded, the key or \nref attribute may be used, as further discussed in 3.6.1 Referring Strings.\n  \nFor anyone else with responsibility for the work, the\nrespStmt element should be used. The nature of the\nresponsibility is indicated by means of a resp element, and\nthe person, organization, etc. responsible by a name,\npersName, or orgName element. Strings such as\nunknown may be encoded using the rs element. A\nrespStmt should comprise either at least one of the four\nnaming elements (name, persName, orgName,\nor rs) followed by one or more resp elements, or at\nleast one resp element followed by one or more of the four\nnaming elements.\nExamples of\nsecondary responsibility of this kind include the roles of\nillustrator, translator, encoder, and annotator. The respStmt\nelement may also be used for editors, if it is desired to record the\nspecific terms in which their role is described.\nExamples of author and editor may be found in\nsections 3.12.1 Methods of Encoding Bibliographic References and Lists of References, and 3.12.2.1 Analytic, Monographic, and Series Levels; wherever\nauthor and editor may occur, the respStmt\nelement may also occur. When one of these elements precedes or\nimmediately follows a title, it applies to that title; when it follows\nan edition element or occurs within an edition statement, it\napplies to the edition in question.\n \nIn this example, the respStmt elements apply to the work as\na whole, not merely to the first edition:\n\nbibliography\n\n\n \nThis example retains the original punctuation and editorial conventions of\nthe source (ISO 690: 1987) and is therefore encoded using\nthe bibl element.\nIn the following example, by contrast, the respStmt element applies\nto the edition, and not to the collection per se (Moser and Tervooren\nwere not responsible for the first thirty-five printings). As is\npermissible within a biblStruct element, the component elements\nhave been reordered from their appearance on the title\npage of the volume in order to ensure the correct relationship of the\ncollection title, the edition statement, and the statement of\nresponsibility. \n  \n\t\n\t\n\t\n\nThe party with a particular responsibility for the intellectual\ncontent may vary over time. Likewise, a given individal's\nresponsibility or role may change over time. These situations may be\nrecorded with the respStmt element. For example, the\nfollowing could be used when one proofreader took over for another.\n  \nThe following example records the fact that one individual had two \ndistinctly different intellectual responsibilities at different times.\n  \n\nAnother form of responsibility arises when a\nwork is published as the outcome of a conference, workshop\nor similar meeting. The meeting element may be used to supply\nthis information, as in the following example:\n  \n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBI#COBI\">3.12 Bibliographic Citations and References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBICO#COBICO\">3.12.2 Components of Bibliographic References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBICOD#COBICOD\">3.12.2.3 Document Identifiers</a>","content":"3.12.2.3 Document Identifiers\nMany bibliographic references include identifiers for a work to help with precise identification of an appropriate document. For example, a book in the Short Title Catalogue could be referenced with its STC number:\n  \n\nHowever, some bibliographic references actually require identifiers of various types because they do not include a statement of the title and the names of those intellectually responsible for it. The following elements may be used for such purposes:\n\n  <orgName> contains an organizational name.\n  <idno> supplies any form of identifier used to identify some\n    object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized\n    way.\n  <classCode> contains the classification code used for this text in some standard classification system.\n  <date> contains a date in any format.\n\n\nFor example, a citation to a patent typically includes a country or organization code (a two-character code identifying a patent authority) and a serial number for the patent (whose structure varies by patent authority). The citation might also contain a kind code (which characterizes a particular publication for the patent and which corresponds to a specific stage in the patent procedure) and the date when the patent was filed with or published by the issuing authority. For bibliographic references to patents, the above elements may be used as follows:\norgName, within authority, may be used to contain the code of the patent authority. The type attribute may be used to specify the type of patent authority (such as a national patent office or a supra-national patent organization).idno may be used to contain the serial number assigned by the corresponding patent authority.classCode may be used to contain the kind code of the patent document.date may be used to contain the date of the patent document. The type attribute may be used to specify whether this corresponds to the filing date of a patent application or the publication date of a patent publication.\n\nThe following reference illustrates an encoding for a patent\npublication which might be cited in print as United States patent\nUS 6,885,550 B1, issued April 26, 2005:\n  \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBI#COBI\">3.12 Bibliographic Citations and References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBICO#COBICO\">3.12.2 Components of Bibliographic References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBICOI#COBICOI\">3.12.2.4 Imprint, Size of a Document, and Reprint Information</a>","content":"3.12.2.4 Imprint, Size of a Document, and Reprint Information\nBy imprint is meant all the information\nrelating to the publication of a work: the person or organization by\nwhose authority and in whose name a bibliographic entity such as a\nbook is made public or distributed (whether a commercial publisher or\nsome other organization), the place and the date of publication.  It\nmay also include a full address for the publisher or organization.\nA full bibliographic references will usually also specify the number of\npages in a print publication (or equivalent information for non-print\nmaterials), and possibly also the specific location of the material being cited\nwithin its containing publication.  The following elements are\nprovided to hold this information: \n  \n    <imprint> groups information relating to the publication or distribution\n        of a bibliographic item.\n    <address> contains a postal address, for example of a publisher, an organization, or an\n    individual.\n    <pubPlace> contains the name of the place where a bibliographic item was published.\n    <publisher> provides the name of the organization responsible for the publication or distribution of a\n        bibliographic item.\n    <date> contains a date in any format.\n    <extent> describes the approximate size of a text stored on some carrier medium or of some other object, digital  or non-digital,  specified in any convenient units.\n    <idno> supplies any form of identifier used to identify some\n    object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized\n    way.\n   \nMembers of the model classes\nmodel.imprintPart\nand model.dateLike\nmay appear inside an imprint element in a specific\nlocation within a biblStruct, or alternatively, they may\nappear alongside any other bibliographic component inside a\nbibl.\n\n    <model.imprintPart> \n    <model.dateLike> \n\n \nFor bibliographic purposes, usually only the place (or places) of\npublication are required, possibly including the name of the country,\nrather than a full address; the element pubPlace is provided\nfor this purpose. Where however the full postal address is likely to\nbe of importance in identifying or locating the bibliographic item\nconcerned, it may be supplied and tagged using the address\nelement described in section 3.6.2 Addresses. Alternatively,\nif desired, the rs or name elements described in\nsection 3.6.1 Referring Strings may be used; this involves no claim\nthat the information given is either a full address or the name of a\ncity.\n \nThe name of the publisher of an item should be marked using the\npublisher element even if the item is made public\n(published) by an organization other than a\nconventional publisher, as is frequently the case with technical\nreports:\n  \nand with dissertations:\nbibliography\n\nIn this second example, the idno element is used to\nprovide the identifier allocated to the thesis by the Argonne\nNational Laboratory. Since it applies to the monographic element,\nthe idno should be provided as a direct child of the monogr\nelement, rather than elsewhere in the biblStruct element. \n The specialist elements publisher and distributor \n  are provided to cover the most common roles related to the production\n  and distribution of a bibliographical item, but other roles such as \n  printer and bookseller may also need to be encoded, and respStmt\n is available inside imprint for this purpose.\n \nWhen an item has been reprinted, especially reprinted without change\nfrom a specific earlier edition, the reprint may appear in a\nmonogr element with only the imprint and other details\nof the reprint.  In the following example, a microform reprint has been\nissued without any change in the title or authorship.  The series\nstatement here applies only to the second monogr element.\nbibliography\n\n \nThis encoding can be extended to the case of patent documents, where the same patent application is published, with or without changes, at different stages of the patenting procedure. In this case, the kind code and, optionally, the publication date characterize different publications of the same patent application during the procedure. For example:\n  \n\nThe above bibliographic reference discloses different publications of the patent EP1558513 during the patenting procedure. The first publication from 3 August 2005 has the kind code \"A1\" indicating that it is a published patent application comprising the European search report issued after carrying out the search at the European Patent Office, whereas the second publication from 9 September 2009 has the kind code \"B1\" indicating that it was published after the patent application has been granted.\nAn alternative way of handling the above situations would be to use the\nrelatedItem element described in section 3.12.2.7 Related Items below.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBI#COBI\">3.12 Bibliographic Citations and References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBICO#COBICO\">3.12.2 Components of Bibliographic References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBICOB#COBICOB\">3.12.2.5 Scopes and Ranges in Bibliographic Citations</a>","content":"\n3.12.2.5 Scopes and Ranges in Bibliographic Citations\nMany bibliographic citations contain data limiting the citation to one \nor more volumes, issues, or pages, or to a name or number of a subdivison \nof the host work. These come in two varieties:\nthe scope of a bibliographic reference (encoded using biblScope)the range of a work cited (encoded using citedRange)\nWhere it is desired to distinguish different classes of such information \n(volume number, page number, chapter number, etc.), the unit \nattribute may be used with any convenient typology (see the element \ndefinitions for biblScope and citedRange for some \nsuggested values). \n\nA scope of a bibliographic reference defines that the entire work \ncited may be found in particular volumes, issues, pages, etc. For example: \n  \n \nThe unit attribute on biblScope is optional:\nboth the following are legal examples:\n  \nbibliography\n\n\t\n\t\n \nOn the other hand, a cited range encodes that the author cited \nonly the portion defined by this range. For example, a footnote \nfollowing a quotation from page 378 of Historical \nEditions in the States that includes a full bibliographic \nreference would be encoded using biblStruct as follows:\n  \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBI#COBI\">3.12 Bibliographic Citations and References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBICO#COBICO\">3.12.2 Components of Bibliographic References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBICOS#COBICOS\">3.12.2.6 Series Information</a>","content":"3.12.2.6 Series Information\nSeries information may (in bibl elements) or must (in\nbiblStruct elements) be enclosed in a series element\nor (in a biblFull element) a seriesStmt element.  The\ntitle of the series may be tagged title level=\"s\", the\nvolume number biblScope unit=\"volume\", and responsibility\nstatements for the series (e.g. the name and affiliation of the editor,\nas in the example in section 3.12.2.1 Analytic, Monographic, and Series Levels) may be tagged\neditor or respStmt. Any identifier associated with\nthe series itself should be marked using the idno element.\n "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBI#COBI\">3.12 Bibliographic Citations and References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBICO#COBICO\">3.12.2 Components of Bibliographic References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBIRI#COBIRI\">3.12.2.7 Related Items</a>","content":"3.12.2.7 Related Items\nIn bibliographic parlance, a related item is any\nbibliographic item which, though related to that being defined, is\ndistinct from it. The distinction between analytic and monographic\nitems made above may be thought of as a special case of this kind of\nrelated item. More usually however, the term is applied to such\nitems as translations, continuations, different versions, parts,\netc. \nThe element relatedItem is provided as a means of documenting such\nassociated items:\n\n<relatedItem> contains or references some other bibliographic item which is related to the present one in\n    some specified manner, for example as a constituent or alternative version of it.\n\n\nIn the following example, the first biblStruct describes a\nfacsimile edition, and the second describes the work of which it is a\nfacsimile. The relation between the facsimile and its source is\nrepresented by means of a relatedItem within the first\ndescription, which points to the description of the source.\n\n  \n\n\n\nThe ref element in the above example could be\nreplaced by the referenced biblStruct itself since a\nrelatedItem may contain any form of bibliographic\nreference. For example, one of the examples quoted above might also be\nencoded as follows:\n\n  \n\nThe type attribute should be used to indicate the\nrelationship between the bibliographic item and any\nrelatedItem it contains or points to. The relationships may\nbe transitive (for example translatedAs or\nreprintedFrom) or non-transitive (for example\notherEdition).  The subtype attribute may be\nused to provide a more detailed classification, where this is\nappropriate. Some further examples follow:\n  \nIn this example, a full bibliographic description\nof the edition used as source for the translation is provided within\nthe content of the relatedItem. Alternatively this might be\nprovided by means of a link, in which case the relatedItem\nwould be empty:\n  \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBI#COBI\">3.12 Bibliographic Citations and References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBICO#COBICO\">3.12.2 Components of Bibliographic References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBICON#COBICON\">3.12.2.8 Notes and Statement of Language</a>","content":"3.12.2.8 Notes and Statement of Language\nExplanatory notes about the publication of unusual items, the form of\nan item (e.g.  [Score] or [Microform]), or\nits provenance (e.g.  translation of ...) may be tagged\nusing the note element.  The same element may be used for any\ndescriptive annotation of a bibliographic entry in a database.\n<note> contains a note or annotation.\n \nFor example:\n  \n \n\nThe textLang element may be used to record information about the languages used within a bibliographic item.\n<textLang> describes the languages and writing systems identified within the bibliographic work  \n  being described, rather than its description.\nThis element can take the form of a simple note such as:\n  \nHowever, it is generally recommended where feasible to use the mainLang attribute to record the chief \nlanguage of the bibliographic item, and optionally the otherLangs to identify other languages used in the work. For example:\n  \n\nThe mainLang and otherLangs attributes should both provide language identifiers \nin the same form as used for xml:lang as described at 6.1 Language Identification. Where additional \ndetail is needed correctly  to describe a language, or to discuss its \ndeployment in a given text, this should be done using the\nlangUsage element in the TEI header, within which\nindividual language elements document the languages\nused: see 2.4.2 Language Usage.  \n A description, in French, of a work predominantly in German, but also with some Latin might \nhave a textLang like the following:\n   For more information about the use of textLang in manuscript descriptions\nsee: 10.6.6 Languages and Writing Systems.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBI#COBI\">3.12 Bibliographic Citations and References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBICO#COBICO\">3.12.2 Components of Bibliographic References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBICOO#COBICOO\">3.12.2.9 Order of Components within References</a>","content":"3.12.2.9 Order of Components within References\nThe order of elements in bibl elements is not constrained.\n \nIn biblStruct elements, the analytic element, if\nit occurs, must come first, followed by one or more monogr and\nseries elements, which may appear intermingled (as long as a\nmonogr element comes first), and then zero or more of the \nfollowing in any order: note, witDetail, idno, \nptr, ref, relatedItem, and citedRange.  \nWithin analytic, the\ntitle(s), author(s), editor(s), and other statements of responsibility\nmay appear in any order; it is recommended that all forms of the title\nbe given together.  Within monogr, the author, editor, and\nstatements of responsibility may either come first or else follow the\nmonographic title(s).  Following these, the elements listed below, if \npresent, must appear in the following order:\nnotes on the publication (and meeting elements\ndescribing the conference, in the case of a proceedings volume)edition elements, each followed by any related\neditor or respStmt elementsimprintbiblScope\nWithin imprint, the elements allowed may appear in any\norder.\nFinally, within the series information in a\nbiblStruct, the sequence of elements is not constrained.\n \nIf more detailed structuring of a bibliographic description is\nrequired, the biblFull element should be used.  This is not\nfurther described here, as its contents are essentially equivalent to\nthose of the fileDesc element in the teiHeader, which\nis fully described in section 2.2 The File Description.\n "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBI#COBI\">3.12 Bibliographic Citations and References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBIXR#COBIXR\">3.12.3 Bibliographic Pointers </a>","content":"3.12.3 Bibliographic Pointers \nReferences which are pointers to bibliographic items, of whatever\nkind, should be treated in the same way as other cross-references (see\nsection 3.7 Simple Links and Cross-References).  As discussed in that section, \ncross-referencing within TEI texts is in general represented by means of\nptr or ref elements. A target attribute on\nthese elements is used to supply an identifying value for the target of\nthe cross-reference, which should be, in the case of bibliographic\nelements, a bibliographic reference of some kind.  Where the form of the\nreference itself is unimportant, or may be reconstructed mechanically,\nor is not to be encoded, the ptr element is used, as in the\nfollowing example:\n  \n \nWhere the form of the reference is important, or contains additional qualifying information\n  which is to be kept but distinguished from the surrounding text, the ref element\n  should be used, as in the following example:  It may\n  be important to distinguish between the short form of a bibliographic reference and some\n  qualifying or additional information. The latter should not appear within the scope of the\n    ref element when this is the case, as for example in an application concerned to\n  normalize bibliographic references:  \n  If it is desired to capture additional information like this in a short-form\n  reference, then bibl may be used with the corresp attribute pointing to\n  the full bibliographic reference: \n\nThe ref element may also be used to provide a reference to a copy of the bibliographic item itself, particularly if this is available online, as in the following example: \n  \n  \n  The ptr element may be used as a child element of biblStruct to refer to the online catalog record of this bibliographic item:\n    \n  \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBI#COBI\">3.12 Bibliographic Citations and References</a><a class=\"breadcrumb\" href=\"p5.xml?id=COBIOT#COBIOT\">3.12.4 Relationship to Other Bibliographic Schemes</a>","content":"3.12.4 Relationship to Other Bibliographic Schemes\n\nThe bibliographic tagging defined here can capture the distinctions\nrequired by most bibliographic encoding systems; for the benefit of\nusers of some commonly used systems, the following lists of equivalences\nare offered, showing the relationship of the markup defined here to the\nfields defined for bibliographic records in the Scribe, BibTeX, and\nProCite systems.\n \nListed below are the equivalences between the various bibliographic fields\ndefined for use in the Scribe and BibTeX systems of bibliographic\ndatabases and the elements defined in this module.13 Elements and structures available in the module defined here which\nhave no analogues in Scribe and BibTeX are not noted.\naddresstag as placeName or addressannotetag as noteauthortag as authorbooktitletag as title level=\"m\" or title within\n    monogrchaptertag as biblScope unit=\"chap\"dateused only to record date entry was made in the bibliographic database;\n    not supportededitiontag as editioneditortag as editor or respStmteditorstag as multiple editor or respStmt elementsfullauthoruse the reg element, possibly inside a choice element, inside either an author or namefullorganizationuse the reg element, possibly inside a choice element, inside a name type=\"org\"howpublishedtag as note, possibly using the form note\n    place=\"inline\"institutionused only for issuer of technical reports; tag as publisherjournaltag as title level=\"j\" or title within\n    monogrkeyused to specify an alternate sort key for the bibliographic item, for\n    use instead of author's or editor's name; not supportedmeetingtag as meeting or as notemonthuse date; if the date is not in a trivially parseable form, use\n    the when attribute to provide a normalized equivalent in one of\n    the format from XML Schema Part 2: Datatypes Second Editionnotetag as notenumbertag as biblScope unit=\"issue\" or biblScope\n    unit=\"number\"; for technical report numbers, use idno\n      type=\"docno\"organizationused only for sponsor of conference; use name type=\"org\"\n    within respStmt within meeting elementpagestag as biblScope unit=\"pp\"publishertag as publisherschoolused only for institutions at which thesis work is done; tag as\n      publisherseriestag as title level=\"s\" or title within\n    seriestitletag as title in appropriate context or with appropriate\n      level valuevolumetag as biblScope unit=\"volume\"yeartag as date; if the date is not in a trivially parseable form,\n    use the when attribute to provide an ISO-format\n    equivalent\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CODV#CODV\">3.13 Passages of Verse or Drama</a>","content":"3.13 Passages of Verse or Drama\nThe following elements are included in the core module for the\nconvenience of those encoding texts which include mixtures of prose,\nverse and drama.\n<l> contains a single, possibly incomplete, line of verse.<lg> contains one or more verse lines functioning as a formal unit, e.g. a stanza, refrain,\n        verse paragraph, etc.<sp> contains an individual speech in a performance text, or a passage presented as such in a prose or\n    verse text.<speaker> contains a specialized form of heading or label, giving the name of one or more speakers in a\n        dramatic text or fragment.<stage> contains any kind of stage direction within a dramatic text or fragment.\n \nFull details of other, more specialized, elements for the encoding of\ntexts which are predominantly verse or drama are described in the\nappropriate chapter of part three (for verse, see the verse base\ndescribed in chapter 6 Verse; for performance texts, see the\ndrama base described in chapter 7 Performance Texts).  In this section, we\ndescribe only the elements listed above, all of which can appear in any\ntext, whichever of the three modes prose, verse, or drama may predominate\nin it.\n \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CODV#CODV\">3.13 Passages of Verse or Drama</a><a class=\"breadcrumb\" href=\"p5.xml?id=COVE#COVE\">3.13.1 Core Tags for Verse</a>","content":"3.13.1 Core Tags for Verse\nLike other written texts, verse texts or poems may be\nhierarchically subdivided, for example into books or cantos. These\nstructural subdivisions should be encoded using the general purpose\ndiv or div1 (etc.) elements described below in\nchapters 4 Default Text Structure and 6 Verse. The fundamental\nunit of a verse text is the verse line rather than the paragraph,\nhowever.\n\nThe l element is used to mark up verse lines, that is\nmetrical rather than typographic lines.  In some modern or free verse,\nit may be hard to decide whether the typographic line is to be\nregarded as a verse line or not, but the distinction is quite clear\nfor verse following regular metrical patterns. Where a metrical line is\ninterrupted by a typographic line break, the encoder may choose to\nignore the fact entirely or to use the empty lb (line break)\nelement discussed in 3.11 Reference Systems.  By convention, the start\nof a metrical line implies the start of a typographic line; hence\nthere is no need to introduce an lb tag at the start of every\nl element, but only at places where a new typographic line\nstarts  within a metrical line, as in the following example:\n\nbibliography\n\nIn the original copy text, the presence of an ornamental capital at\nthe start of the poem means that the measure is not wide enough to\nprint the first four lines on four lines; instead each metrical line occupies\ntwo typographic lines, with a break at the point indicated. Note that\nthis encoding makes no attempt to preserve information about the\nwhitespace or indentation associated with either kind of line; if regarded\nas essential, this information would be recorded using the\nrend or rendition attributes discussed in 1.3.1.1 Global Attributes. \n  The l element should not be used to represent typographic\nlines in non-verse materials: if the line-breaking points in a prose\ntext are considered important for analysis, they should be marked with\nthe lb element. Alternatively, a neutral segmentation element\nsuch as seg or ab may be used; see further\ndiscussion of these elements in chapter 16 Linking, Segmentation, and Alignment. The\nl element is a member of the model.lLike class, which is a subclass of the\nmodel.divPart class, along with elements\nfrom the model.pLike (paragraph-like)\nclass.\n\nIn some verse forms, regular groupings of lines are regarded as units\nof some kind, often identified by a regular verse scheme.  In stichic\nverse and couplets, groups of lines analogous to paragraphs are often\nindicated by indentation.  In other verse forms, lines are grouped into\nirregular sequences indicated simply by whitespace.  The \nlg or line group element may be used to mark any such grouping\nof elements from the model.lLike class. As a member of the att.typed\nclass, the lg element bears the following attributes:\n<att.typed> provides attributes that can be used to classify or subclassify elements in any way.\nwhich may be used to further categorize the\nline group where this is felt desirable, as in the following example.\nThis example also demonstrates the rend attribute to indicate\nwhether or not a line is indented.\n\nbibliography\n \nFor some kinds of analysis, it may be useful to identify different\nkinds of line group within the same piece of verse. Such line groups\nmay self-nest, in much the same way as the un-numbered div\nelement described in chapter 4 Default Text Structure. For example:\nbibliography\n \nIt is often the case that verse line boundaries conflict with the\nboundaries of other structural elements. In the following example, the\nsingle verse line A Workeman in't... welcome is interrupted by\na stage direction:\nbibliography \nIn this encoding, the part attribute is used, as with\ndiv,  to indicate that the last two l elements\nshould be regarded as the initial and final parts of a single line,\nrather than as two lines.\n\nThe same technique may be used where verse lines are collected\ntogether into units such as verse paragraphs:\n\nbibliography\n\n\nThe part attribute may also be attached to an lg\nelement to indicate that it is incomplete, for example because it forms\npart of a group that is divided between two speakers, as in the\nfollowing example:\nbibliography\n\n \nFor alternative methods of aligning groups of lines which do not form\nsimple hierarchic groups, or which are discontinuous, see the more\ndetailed discussion in chapter 16 Linking, Segmentation, and Alignment.  For discussion of\nother elements and attributes specific to the encoding of verse, see\nchapter 6 Verse.\n \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=CODV#CODV\">3.13 Passages of Verse or Drama</a><a class=\"breadcrumb\" href=\"p5.xml?id=CODR#CODR\">3.13.2 Core Tags for Drama</a>","content":"3.13.2 Core Tags for DramaLike other written texts, dramatic and other performance\ntexts such as cinema or TV scripts are often hierarchically\norganized, for example into acts and scenes.  These structural\nsubdivisions should be encoded using the general purpose div\nor div1 (etc.) elements described below in chapters 4 Default Text Structure and 7 Performance Texts.  Within these divisions, the\nbody of a performance text typically consists of speeches, often prefixed by a phrase indicating\nwho is speaking, and occasionally interspersed with stage directions\nof various kinds.  In the following simple example, each speech consists of a single\nparagraph:\nbibliography\n\n \nIn the following example, each speech consists of a sequence of verse\nlines, some of them being marked as metrically incomplete:\nbibliography\n\n \nIn some cases, as here in the First Quarto of Hamlet,\nthe printed speaker attributions need to be supplemented by use of the\nwho attribute; again, the lines are marked as complete or\nincomplete:\nbibliography\n\n \nBy contrast with the preceding examples, the following encodes an\nearly printed edition without making any assumption about which parts\nare prose or verse:\nbibliography\n\n \nThe sp and stage elements should also be used to\nmark parts of a text otherwise in prose which are presented as if they\nwere dialogue in a play.  The following example is taken  from a 19th century\n   novel in which passages of narrative and passages of dialogue are\n   mixed within the same chapter:\nbibliography\n\nbibliography\n\n \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CO#CO\">3 Elements Available in All TEI Documents</a><a class=\"breadcrumb\" href=\"p5.xml?id=COOV#COOV\">3.14 Overview of the Core Module </a>","content":"\n   3.14 Overview of the Core Module \n   All the elements described in this chapter are provided by the\n   core module.\n   \n     Common Core\n     Elements common to all TEI documents\n     \n     \n     \n     \n     \n   \n   The selection and combination of modules to form a TEI schema is\n   described in 1.2 Defining a TEI Schema.\n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DS#DS\">4 Default Text Structure</a>","content":"\n  4 Default Text Structure\n  \n  This chapter describes the default high-level structure for TEI\n  documents. A full TEI document combines metadata describing it,\n  represented by a teiHeader element, with the document\n  itself, represented by one or more text elements or other\n  elements taken from the model.resource class. That\n  is, the TEI element is used to group together metadata\n  about an encoded resource (in teiHeader, specified by the header module, which is fully described in\n  chapter 2 The TEI Header) with an encoded\n  resource. Possible encoded resources are\n  a logical transcription of a source document in a\n    text element; the text element is specified\n    along with its high-level constituents in the textstructure module and described in the\n    remainder of the current chaptera diplomatic transcription of a source document in a\n    sourceDoc element, which is specified in the transcr module and described in\n    chapter 11 Representation of Primary Sourcesan encoded representation of a text-bearing object as images\n    in a facsimile element, which is also specified in the\n    transcr module and described in\n    chapter 11 Representation of Primary Sourcesa collection of contextual information or annotations that\n    provides more detail about another encoded resource (whether in\n    the same or a different TEI document) in a standOff\n    element, which is specified in the linking module and described in section 16.10 The standOff Containera feature system declaration which can be used\n    to declare the use of fs elements in the rest of the\n    document, which is specified in the iso-fs module and described in section 18.11 Feature System Declaration\n  In a case in which more than one resource related to the same\n  source document share the same metadata, they may be grouped\n  together in a TEI element following a single\n  teiHeader.\nBecause the TEI can be a child of itself, a set or collection of\ndocuments may be represented by an outermost TEI element that\ncontains a teiHeader with metadata that is applicable to the\nentire set or collection of transcriptions, and then a complete\nTEI element for each document in the collection or set; each\nof these TEI elements contains a teiHeader with\nmetadata that is applicable to the individual document, and one or\nmore text or other elements taken from the\nmodel.resource class.\n\nA variant on this basic form, the teiCorpus, is also\ndefined for the representation of language corpora, or other\ncollections of encoded texts. A teiCorpus consists of its own\nmetadata in a teiHeader, followed by one or more complete\nTEI elements, each combining a teiHeader with one or\nmore elements from the model.resource class. This\npermits the encoder to distinguish metadata applicable to the whole\ncollection of encoded texts, which is represented by the outermost\nteiHeader, from that applicable to each of the individual\nTEI elements within the corpus. Further information about the\norganization and encoding of language corpora is given in chapter 15 Language Corpora.\n\nAlternatively, the corpus may be represented with a TEI\nelement (perhaps with a type of corpus) in the\nsame manner as a teiCorpus.\n\nIn summary, when the default structure module is included in a\nschema, the following elements are available for the\nrepresentation of the outermost structure of a TEI document:\n\n<TEI> contains a single TEI-conformant document, combining\n    a single TEI header with one or more members of the model.resource class. Multiple TEI\n    elements may be combined within a TEI (or teiCorpus) element.\n<teiCorpus> contains the whole of a TEI encoded corpus, comprising a single corpus header and one or\n    more TEI elements, each containing a single text header and a text.\n<teiHeader> supplies descriptive and\n    declarative metadata associated with a digital resource or set of\n    resources.\n<text> contains a single text of any kind, whether unitary or composite, for example a poem or\n    drama, a collection of essays, a novel, a dictionary, or a corpus sample.\n\n\nAs noted above, the teiHeader element is formally declared in\nthe header module (see chapter 2 The TEI Header). A TEI document may also contain elements from the\nmodel.resource class (such as a\ncollection of facsimile images, or a feature system declaration) if\nthe appropriate module is included in a schema (see further 11.1 Digital Facsimiles and 18.11 Feature System Declaration respectively). By default,\nhowever, this class is not populated and hence only the elements\nTEI, text, and teiCorpus are available \nas major parts of a TEI document. These three elements are\nprovided by the textstructure module\ndescribed by the present chapter.\n\n\n\n\nTEI texts may be regarded either as unitary, that is,\nforming an organic whole, or as composite, that is,\nconsisting of several components which are in some important sense\nindependent of each other. The distinction is not always entirely\nobvious: for example a collection of essays might be regarded as a\nsingle item in some circumstances, or as a number of distinct items in\nothers. In such borderline cases, the encoder must choose whether to\ntreat the text as unitary or composite; each may have advantages and\ndisadvantages in a given situation.\n\nWhether unitary or composite, the text is marked with the\ntext tag and may contain front matter, a text body, and back\nmatter.  In unitary texts, the text body is tagged body; in\ncomposite texts, where the text body consists of a series of subordinate\ntexts or groups, it is tagged group.  The overall structure of\nany text, unitary or composite, is thus defined by the following\nelements:\n<front> contains any prefatory matter\n  (headers, abstracts, title page, prefaces, dedications, etc.) found at the\n  start of a document, before the main body.<body> contains the whole body of a single unitary text, excluding any front or back matter.<group> contains the body of a composite text, grouping together a sequence of distinct texts (or\n    groups of such texts) which are regarded as a unit for some purpose, for example the collected\n    works of an author, a sequence of prose essays, etc.<back> contains any appendixes, etc. following the main part\n  of a text.\n \nThe overall structure of a unitary text is:\n\nThe overall structure of a composite text made up of two unitary\ntexts is:\n\n \nFinally, a floatingText element is provided for the case\nwhere one text is embedded within another, but does not contribute to\nits hierarchical organization, for example because it interrupts it,\nor simply quoted within it. This is useful in such common literary contexts as\nthe play within a play or the narrative interrupted by other (often\ndeeply nested) multiple narratives. \n\nEach of these elements is further described in the remainder of\nthis chapter.  Elements front and back are further\ndiscussed in sections 4.5 Front Matter and 4.7 Back Matter. The group and floatingText\nelements, used for more complex or composite text structures, are\nfurther discussed in section 4.3 Grouped and Floating Texts. Other textual\nelements, such as paragraphs, lists or phrases, which nest within\nthese major structural elements, are discussed in chapter 3 Elements Available in All TEI Documents, in the case of elements which can appear in any kind\nof document, or elsewhere in the case of elements specific to\nparticular kinds of document.\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DS#DS\">4 Default Text Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSDIV#DSDIV\">4.1 Divisions of the Body</a>","content":"4.1 Divisions of the Body\n\nIn some texts, the body consists simply of a sequence of low-level\nstructural items, referred to here as components or\ncomponent-level elements (see section 1.3 The TEI Class System).  Examples in prose texts include paragraphs or\nlists; in dramatic texts, speeches and stage directions; in\ndictionaries, dictionary entries.  In other cases sequences of such\nelements will be grouped together hierarchically into textual\ndivisions and subdivisions, such as chapters or sections.  The names\nused for these structural subdivisions of texts vary with the genre\nand period of the text, or even at the whim of the author, editor, or\npublisher. For example, a major subdivision of an epic or of the Bible\nis generally called a book, that of a report is\nusually called a part or\nsection, that of a novel a\nchapter—unless it is an epistolary novel, in\nwhich case it may be called a letter.  Even texts\nwhich are not organized as linear prose narratives, or not as\nnarratives at all, will frequently be subdivided in a similar way: a\ndrama into acts and scenes;\na reference book into sections; a diary or day\nbook into entries; a newspaper into\nissues and sections, and so\nforth.\n \n\nBecause of this variety, these Guidelines propose that all such\ntextual divisions be regarded as occurrences of the same neutrally named\nelements, with an attribute type used to categorize elements\nindependently of their hierarchic level.  Two alternative styles are\nprovided for the marking of these neutral divisions:\nnumbered and un-numbered.  Numbered divisions\nare named  div1, div2, etc., where the\nnumber indicates the depth of this particular division within the\nhierarchy, the largest such division being div1, any subdivision\nwithin it being div2, any further sub-sub-division being\ndiv3 and so on.  Un-numbered divisions are simply named\ndiv, and allowed to nest recursively to indicate their\nhierarchic depth.  The two styles must not be combined\nwithin a single front, body, or back element.\n \n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DS#DS\">4 Default Text Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSDIV#DSDIV\">4.1 Divisions of the Body</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSDIV1#DSDIV1\">4.1.1 Un-numbered Divisions</a>","content":"4.1.1 Un-numbered Divisions\nThe following element is used to identify textual subdivisions in\nthe un-numbered style: <div> contains a subdivision of the front, body, or back of a text. As a\nmember of the class att.typed, this\nelement has the following additional attributes: <att.typed> provides attributes that can be used to classify or subclassify elements in any way.\n \nUsing this style, the body of a text containing two parts, each\ncomposed of two chapters, might be represented as follows:\n\n \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DS#DS\">4 Default Text Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSDIV#DSDIV\">4.1 Divisions of the Body</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSDIV2#DSDIV2\">4.1.2 Numbered Divisions</a>","content":"4.1.2 Numbered Divisions\nThe following elements are used to identify textual subdivisions\nin the numbered style:\n\n<div1> contains a first-level subdivision of the front, body, or back of a text.\n<div2> contains a second-level subdivision of the front, body, or back of a\n  text.\n<div3> contains a third-level subdivision of the front, body, or back of a text.\n<div4> contains a fourth-level subdivision of the front, body, or back of a text.\n<div5> contains a fifth-level subdivision of the front, body, or back of a text.\n<div6> contains a sixth-level subdivision of the front, body, or back of a text.\n<div7> contains the smallest possible subdivision of the front, body or back of a text, larger than\n    a paragraph.\n\nAs members of the class att.typed these\nelements all bear the following additional attributes:\n<att.typed> provides attributes that can be used to classify or subclassify elements in any way.\n \nThe largest possible subdivision of the body is div1\nelement and the smallest possible div7.  If numbered\ndivisions are in use, a division at any one level (say,\ndiv3), may contain only numbered divisions at the next lowest\nlevel (in this case, div4).\nUsing this style, the body of a text containing two parts, each\ncomposed of two chapters, might be represented as follows:\n\n\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DS#DS\">4 Default Text Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSDIV#DSDIV\">4.1 Divisions of the Body</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSDIV3#DSDIV3\">4.1.3 Numbered or Un-numbered?</a>","content":"4.1.3 Numbered or Un-numbered?\nWithin the same front, body, or back\nelement, all hierarchic subdivisions must be marked using either\nnested div elements, or div1, div2 etc.\nelements nested as appropriate; the two styles must not\nbe mixed.\n\nThe choice between numbered and un-numbered divisions will depend\nto some extent on the complexity of the material: un-numbered\ndivisions allow for an arbitrary depth of nesting, while numbered\ndivisions limit the depth of the tree which can be constructed.  Where\ndivisions at different levels should be processed differently (for\nexample to ensure that chapters, but not sections, begin on a new\npage), numbered divisions slightly simplify the task of defining the\ndesired processing for each level, though this distinction could also\nbe made by supplying this information on the type attribute\nof an un-numbered div.  Some software may find numbered\ndivisions easier to process, as there is no need to maintain knowledge\nof the whole document structure in order to know the level at which a\ndivision occurs; such software may, however, find it difficult to cope\nwith some other aspects of the TEI scheme.  On the other hand, in a\ncollection of many works it may prove difficult or impossible to\nensure that the same numbered division always corresponds with the\nsame type of textual feature: a chapter may be at\nlevel 1 in one work and level 3 in another. \n \nWhichever style is used, the global n and xml:id\nattributes (section 1.3.1.1 Global Attributes) may be used to provide\nreference strings or labels for each division of a text, where\nappropriate. Such labels should be provided for each section\nwhich is regarded as significant for referencing purposes (on\nreference systems, see further section 3.11 Reference Systems).  \n\n\nAs indicated above, the type and subtype\nattributes provided by the att.typed class\nmay be used to provide a name or description for the division.\nTypical values might be book,\nchapter, section,\npart, or (for verse texts)\nbook, canto,\nstanza, or (for dramatic texts)\nact, scene. The following\nextended example uses numbered divisions to indicate the structure of\na novel, and illustrates the use of the attributes discussed above.\nIt also uses some elements discussed in section 4.2 Elements Common to All Divisions\nand the p element discussed in section 3.1 Paragraphs.\n\nbibliography\n\n \n\nAs an alternative (or complement) to this use of the\ntype attribute to characterize neutrally named division\nelements, the modification mechanisms discussed in section 23.3 Customization may be used to define new elements such as\nchapter, part, etc. To make this simpler, a single\nmember model class is defined for each of the neutrally named division\nelements: model.divLike (containing\ndiv), model.div1Like (containing\ndiv1), model.div2Like (containing\ndiv2), etc. For example, suppose that the body of a text\nconsists of a series of diary entries, each of which is potentially\ndivided into entries for the morning and the afternoon. This might be\nrepresented in any of the following ways. First, using the un-numbered\nstyle: bibliography\nEquivalently, using the numbered style:\nbibliography \n\nNow, assuming a customization in which a new element\ndiaryEntry has been added to the model.divLike class: bibliography\n\nAnd finally, assuming a customization in which three new elements have\nbeen added: diaryEntry to the model.div1Like class, and amEntry and\npmEntry both to the model.div2Like class: bibliography\n\nMore information about the customization techniques exemplified\nhere is provided in 23.3 Customization.\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DS#DS\">4 Default Text Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSDIV#DSDIV\">4.1 Divisions of the Body</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSDIV3X#DSDIV3X\">4.1.4 Partial and Composite Divisions</a>","content":"4.1.4 Partial and Composite Divisions\nIn most situations, the textual subdivisions marked by div\nor div1 (etc.) elements will be both complete and identically\norganized with reference to the original source.  For some purposes\nhowever, in particular where dealing with unusually large or unusually\nsmall texts, encoders may find it convenient to present as textual\ndivisions sequences of text which are incomplete with reference to the\noriginal text, or which are in fact an ad hoc agglomeration of tiny\ntexts.  Moreover, in some kinds of texts it is difficult or impossible\nto determine the order in which individual subdivisions should be\ncombined to form the next higher level of subdivision, as noted below.\n \nTo overcome these problems, the following additional attributes are\ndefined for all elements in the att.divLike class:\n<att.divLike> provides attributes common to all elements which behave in the same way as divisions.\n<att.fragmentable> provides attributes for representing\n    fragmentation of a structural element, typically as \n  a consequence of some overlapping hierarchy.\n\n \nFor example, an encoder might choose to transcribe only the first two\nthousand words of each chapter from a novel.  In such a case, each\nchapter might conveniently be regarded as a partial division, and tagged\nwith a div element in the following form:\nbibliography\nwhere xx represents a number for the chapter, and the\npart attribute takes the value Y to indicate\nthat this division is incomplete in some respect. Other possible\nvalues for this attribute indicate whether material has been omitted\ninitially (I), finally \n(F), or in the middle (M) of the division, while the gap\nelement (3.5.3 Additions, Deletions, and Omissions) may be used to indicate exactly\nwhere material has been omitted: \nbibliography\nThe\nsamplingDecl element in the TEI header should also be used to\nrecord the principles underlying the selection of incomplete samples, as\nfurther described in section 2.3.2 The Sampling Declaration.\n \nThe following example demonstrates how a newspaper column composed of\nvery short unrelated snippets may be encoded using these attributes:\nbibliography \n\n\nThe org attribute on the div1 element is used\nhere to indicate that individual stories in this group, marked here as\ndiv2, are really quite independent of each other, although they\nare all marked as subdivisions of the whole group.  They can be read in\nany order without affecting the sense of the piece; indeed, in some\ncases, divisions of this nature are printed in such a way as to make it\nimpossible to determine the order in which they are intended to be read.\nIndividual stories can be added or removed without affecting the\nexisting components.\n \nThis method of encoding composite texts as composite divisions has\nsome limitations compared with the more general and powerful mechanisms\ndiscussed in section 4.3.1 Grouped Texts. However, it may be preferable\nin some circumstances, notably where the individual texts are very\nsmall.\n "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DS#DS\">4 Default Text Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSDTB#DSDTB\">4.2 Elements Common to All Divisions</a>","content":"4.2 Elements Common to All Divisions\nThe divisions of any kind of text may sometimes begin with a brief\nheading or descriptive title, with or without a byline, an epigraph or\nbrief quotation, or a salutation such as one finds at the start of a\nletter. They may also conclude with a brief trailer, byline,\npostscript, or signature. Many of these (e.g. a byline) may appear\neither at the start or at the end of a text division proper.\nTo support this heterogeneity, the TEI architecture defines five\nclasses, all of which are populated by this module:\n\n<model.divTop> \n<model.divBottom> \n<model.divTopPart> \n<model.divBottomPart> \n<model.divWrapper> \n\n\n\n\n\n \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DS#DS\">4 Default Text Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSDTB#DSDTB\">4.2 Elements Common to All Divisions</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSHD#DSHD\">4.2.1 Headings and Trailers</a>","content":"4.2.1 Headings and Trailers\n\nThe head element is used to identify a heading prefixed to\nthe start of any textual division, at any level. A given division may\ncontain more than one such element, as in the following example:\nbibliography\n\n \nUnlike some other markup schemes, the TEI scheme does\nnot require that headings attached to textual\nsubdivisions at different hierarchic levels have different\nidentifiers. All kinds of heading are marked identically using the\nhead tag; the type or level of heading intended is implied by\nthe immediate parent of the head element, which may for\nexample be a div1, div2, etc., an un-numbered\ndiv, or any member of the model.listLike class.  However, as with\ndiv elements, the encoder may choose to extend the model.headLike class of which head is\nthe sole member to include other such elements if required. \nIn certain kinds of text (notably newspapers), there may be a need\nto categorize individual headings within the sequence at the start of\na division, for example as main headings, or\ndetail headings: this may readily be done using the\ntype or subtype attribute. Specific elements are provided\nfor certain kinds of heading-like features, (notably byline,\ndateline, and salute; see further section 4.2.2 Openers and Closers), but the type or subtype\nattributes must be used to discriminate among other forms of\nheading. These attributes are provided, as elsewhere, by the att.typed attribute class of which the\nhead element is a member.\n \nIn the following example, taken from a British newspaper, the lead\nstory and its associated headlines have been encoded  as a div\nelement, with appropriate model.divTop elements attached:\nbibliography\n\n \nIn older writings, the headings or incipits may be\nlonger than in modern works.\nWhen heading-like material appears in the middle of a text, the encoder\nmust decide whether or not to treat it as the start of a new division.\nIf the phrase in question appears to be more closely connected with what\nfollows than with what precedes it, then it may be regarded as a\nheading and tagged as the head of a new div element.\nIf it appears to be simply inserted or superimposed—as for example\nthe kind of pull quotes often found in newspapers\nor magazines, then the quote, q, or cit\nelement may be more appropriate.\n \nThe trailer element, which can appear at the end of a\ndivision only, is used to mark any heading-like feature appearing in\nthis position, as in this example:\nbibliography\n \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DS#DS\">4 Default Text Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSDTB#DSDTB\">4.2 Elements Common to All Divisions</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSOC#DSOC\">4.2.2 Openers and Closers</a>","content":"4.2.2 Openers and Closers\nIn addition to headings of various kinds, divisions sometimes include\nmore or less formulaic opening or closing passages, typically conveying\nsuch information as the name and address of the person to whom the\ndivision is addressed, the place or time of its production, a salutation\nor exhortation to the reader, and so on.  Divisions in epistolary form\nare particularly liable to include such features.  \nAdditional elements for the detailed encoding of personal names, dates,\nand places are provided in chapter 13 Names, Dates, People, and Places.\nFor simple cases, the following elements should be adequate:\n\n<byline> contains the primary statement of responsibility given for a work\non its title page or at the head or end of the work.\n<dateline> contains a brief description of the place, date, time, etc. of production of a letter,\n    newspaper story, or other work, prefixed or suffixed to it as a kind of heading or trailer.\n<salute> contains a salutation or greeting prefixed to a foreword, dedicatory epistle, or other\n    division of a text, or the salutation in the closing of a letter, preface, etc.\n<signed> contains the closing salutation, etc., appended to a foreword,\ndedicatory epistle, or other division of a text.\n\n \nThe byline and dateline elements are used to encode\nheadings which identify the authorship and provenance of a division.\nAlthough the terminology derives from newspaper usage, there is no\nimplication that dateline or byline elements apply\nonly to newspaper texts.  The following example illustrates use of the\ndateline and signed elements at the end of the\npreface to a novel:\nbibliography\n\n \nWhere a sequence of such elements appear together, either at the\nbeginning or end of an element, it may be convenient to group them\ntogether using one of the following elements:\n<opener> groups together dateline, byline, salutation, and similar phrases appearing as a preliminary\n    group at the start of a division, especially of a letter.\n<closer> groups together salutations, datelines, and similar phrases appearing as a final group at\n    the end of a division, especially of a letter.\n\nThe following examples demonstrate the use of the opener and\ncloser grouping elements:\nbibliography\n\nbibliography\n\n \nFor further discussion of the encoding of dates and of names of persons and places, see section 3.6.4 Dates and Times and chapter 13 Names, Dates, People, and Places.\n "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DS#DS\">4 Default Text Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSDTB#DSDTB\">4.2 Elements Common to All Divisions</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSAE#DSAE\">4.2.3 Arguments, Epigraphs, and Postscripts</a>","content":"4.2.3 Arguments, Epigraphs, and Postscripts\nThe argument element may be used to encode the prefatory\nlist of topics sometimes found at the start of a chapter or\nother division.  It is most conveniently encoded as a list, since this\nallows each item to be distinguished, but may also simply be presented\nas a paragraph.  The following are thus both equally valid ways of\nencoding the same argument:\nbibliography\n\nbibliography\n\n \nAn epigraph is a quotation from some other work, a\nsaying, or a motto,  appearing on a title page, or at the start of a\ndivision.  It may be encoded using the special-purpose\nepigraph element, as in the following example:\nbibliography\nWhen an epigraph contains a quotation, this may often be associated\nwith a bibliographic reference. In such cases, it is recommended\nadditionally to group the quotation and its source together using the\ncit element, as in the following example: bibliography\n\n \nFor discussion of quotations appearing other than as epigraphs refer\nto section 3.3.3 Quotation.\n A postscript is a passage added after the signature of\na letter or, less frequently, the main portion of the body of a book,\narticle, or essay. In English a postscript is often abbreviated as\nP.S. or PS, and\npostscripts are often introduced by labels with one of these\nabbreviations, as in the following example.\nbibliography\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DS#DS\">4 Default Text Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSDTB#DSDTB\">4.2 Elements Common to All Divisions</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSCO#DSCO\">4.2.4 Content of Textual Divisions</a>","content":"4.2.4 Content of Textual Divisions\nOther than elements from the model.divWrapper, model.divTop, or model.divBottom classes, every textual division\n(numbered or un-numbered) consists of a sequence of ungrouped model.common elements (see 1.3 The TEI Class System). The actual elements available will depend on the\nmodules in use; in all cases, at least the component-level structural\nelements defined in the core will be available (paragraphs, lists,\ndramatic speeches, verse lines and line groups etc.). If the drama\nmodule has been selected, then other component- or phrase- level items\nspecialized for performance texts (for example, cast lists or camera\nangles) will be available, as defined in\nchapter 7 Performance Texts) will be available. If the dictionary\nmodule is in use, then dictionary entries, related entries, etc. (as\ndefined in chapter 9 Dictionaries) will also be available; if the\nmodule for transcribed speech is in use, then utterances, pauses,\nvocals, kinesics, etc., as defined in chapter 8.3 Elements Unique to Spoken Texts\nwill be available; and so on.\nWhere a text contains low-level elements from more than one\nmodule these may appear at any point; there is no requirement that\nelements from the same module be kept together.\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DS#DS\">4 Default Text Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSGRPF#DSGRPF\">4.3 Grouped and Floating Texts</a>","content":"4.3 Grouped and Floating Texts\nThe group element discussed in 4.3.1 Grouped Texts\nshould be used to represent a collection of independent texts which is\nto be regarded as a single unit for processing or other purposes.  The\nfloatingText element discussed in 4.3.2 Floating Texts\nshould be used to represent an independent text which interrupts the\ntext containing it at any point but after which the surrounding text\nresumes.  <group> contains the body of a composite text, grouping together a sequence of distinct texts (or\n    groups of such texts) which are regarded as a unit for some purpose, for example the collected\n    works of an author, a sequence of prose essays, etc.<floatingText> contains a single text of any kind, whether unitary or composite, which interrupts the text\n    containing it at any point and after which the surrounding text resumes.\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DS#DS\">4 Default Text Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSGRPF#DSGRPF\">4.3 Grouped and Floating Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSGRP#DSGRP\">4.3.1 Grouped Texts</a>","content":"4.3.1 Grouped Texts\n\nExamples of composite texts which should be represented using the\ngroup element include\nanthologies and other collections. The presence of common front matter\nreferring to the whole collection, possibly in addition to front matter\nrelating to each individual text, is a good indication that a given text\nmight usefully be encoded in this way; this structure may be found\nuseful in other circumstances too.\n \nFor example, the overall structure of a collection of\nshort stories might be encoded as follows:\nbibliography\n\n\nA text which is a member of a group may itself contain groups. This\nis quite common in collections of verse, but may happen in any kind of\ntext. As an example, consider the overall structure of a typical\ncollection, such as the Muses Library edition of\nCrashaw's poetry. Following a critical\nintroduction and table of contents, this work contains the following\nmajor sections:\nSteps to the Temple (a collection of\nverse as published in 1648)Carmen deo Nostro (a second collection,\npublished in 1652)The Delights of the Muses (a third\ncollection, published in 1648)Posthumous Poems, I (a collection of\nfragments all taken from a single manuscript)Posthumous Poems, II (a further collection\nof fragments, taken from a different manuscript)\n \nThe first three of these collections each has a\nreasonable claim to be considered as a text in its own right, and may\ntherefore be encoded as such. It is rather more arbitrary as to\nwhether the two posthumous collections should be treated as two\ngroups, following the practice of the Muses Library\nedition. An encoder might elect to combine the two into a single\ngroup or simply to treat each fragment as an ungrouped unitary text.\n \nThe Muses Library edition reprints the whole of each\nof the three original collections, including their original front\nmatter (title pages, dedications etc.). These should be encoded using\nthe front element and its constituents (on which see further\nsection 4.5 Front Matter), while the body of each collection\nshould be encoded as a single group element. Each individual\npoem within the collections should be encoded as a distinct\ntext element. The beginning of the whole collection would\nthus appear as follows (for further discussion of the use of the\nelements div and lg for textual subdivision of\nverse, see section 3.13.1 Core Tags for Verse and chapter 6 Verse): bibliography\n \nThe group element may be used in this way to encode any kind\nof collection of which the constituents are regarded by the encoder as\ntexts in their own right.  Examples include anthologies or collections\nof verse or\nprose by multiple authors, florilegia, or commonplace books,\njournals, day books, etc.  As a fairly typical example, we consider\nThe Norton Book of Travel, an anthology edited by Paul\nFussell and published in 1987 by W. W. Norton.  This work comprises\nthe following major sections:\n\nFront matter (title page, acknowledgments, introductory essay)\nThe Beginnings\nThe Eighteenth Century and the Grand Tour\nThe Heyday\nTouristic Tendencies\nPost Tourism\nBack matter (permissions list, index)\nEach titled section listed above comprises a group of extracts or\ncomplete texts from writers of a given historical period, preceded by an\nintroductory essay.  For example, the second group listed above\ncontains, inter alia, the following:\n\nPrefatory essay\nFive letters by Lady Mary Wortley Montagu\nAn extract from Swift's Gulliver's Travels\nTwo poems by Alexander Pope\nTwo extracts from Boswell's Journal\nA poem by William Blake\nEach group of writings by a single author is preceded by a brief\nbiographical notice.  Some of the extracts are quite lengthy, containing\nseveral chapters or other divisions; others are quite short.  As the\nabove list indicates, the texts included range across all kinds of\nmaterial:  verse, prose, journals and letters.\n \nThe easiest way of encoding such an anthology is to treat each\nindividual extract as a text in its own right.  A sequence of texts by a\nsingle author, together with the biographical note preceding it, can\nthen be treated as a single group element within the larger\ngroup formed by the section.  The sequence of single or\ncomposite texts making up a single section of the work is likewise\ntreated, together with its prefatory essay, as a single group\nwithin the work.  Schematically:\nbibliography\n \nNote that the editor's introductory essays on each author may be\ntreated as texts in their own right (as the essays on Lady Mary\nWortley Montagu and Alexander Pope have been treated above), or as\nfront matter to the embedded text, as the essay on Swift has been.\nThe treatment in the example is intentionally inconsistent, to allow\ncomparison of the two approaches. Consistency can be imposed either\nby treating the Swift section as a group containing one text\nby Swift and one by the editor, or by treating the Montagu and Pope\nsections as text elements containing the editor's essays as\nfront matter. Marked in the second way, the Pope section of the book\nwould look like this:\n\n \nThe essays on The Eighteenth Century and the Grand Tour and\nother larger sections could also be tagged as front\nmatter in the same way, by treating the larger sections as text\nelements rather than group elements.\n \nWhere, as in this case, an anthology contains different kinds of\ntext (for example, mixtures of prose and drama, or transcribed speech\nand dictionary entries, or letters and verse), the elements to be\nencoded will of course  be drawn from more than one  module.\nThe elements provided by the core module\ndescribed in chapter 3 Elements Available in All TEI Documents should however prove adequate\nfor most simple purposes, where prose, drama, and verse are combined\nin a single collection.\n \nFor anthologies of short extracts such as commonplace books, it may\noften be preferable to regard each extract not as a text in its own\nright but simply as a quotation or cit element. The following\ncomponent-level elements may be used to encode quotations of this kind:\n<cit> contains a quotation from some other document, together with a bibliographic reference to\n    its source. In a dictionary it may contain an example text with at least one occurrence of the\n    word form, used in the sense being described, or a translation of the headword, or an example.<quote> contains a phrase or passage attributed by the narrator or author to some agency external\n        to the text.\nFor example, the chapter of extracts which appears\nin the front matter of Melville's Moby Dick might be\nencoded as follows:\nbibliography\nFor more information on the use of the quote and bibl\nelements, see sections 3.3.3 Quotation and 3.12 Bibliographic Citations and References\nrespectively.\n \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DS#DS\">4 Default Text Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSGRPF#DSGRPF\">4.3 Grouped and Floating Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSFLT#DSFLT\">4.3.2 Floating Texts</a>","content":"4.3.2 Floating Texts\nAn important characteristic of the unitary or composite text\nstructures discussed so far is that they can be regarded as forming what is\nmathematically known as a tesselation covering the whole\nof the available text (or text division) at each hierarchic\nlevel. Just as an XML document has a single root element containing\na single tree, each node of which forms a properly nested sub-tree, so\nit seems natural to think of the internal structure of a text as\ndecomposable hierarchically into subparts, each of which is a\nproperly nested subtree. While this is undoubtedly true of a large\nnumber of documents, it is not true of all. In particular, it is not\ntrue of texts which are only partly  tesselated at a given level. For\nexample, if a text A is contained by text B in such a way that part of\nB precedes A and part follows it, we cannot tesselate the whole of B.\nIn such a case, we say that text A is a floating text. \n\nThe floatingText element is a member of the \nmodel.divPart class, and can thus appear within\nany division level element in the same way as a paragraph. For\nexample, texts such as the Decameron or the\nArabian Nights might be regarded as containing many\nfloating texts embedded within another single text, the framing\nnarrative, rather than as groups of discrete texts in which the\nfragments of framing narrative are regarded as front or back matter.\n\n\nAs an example, we consider an 18th century text The Lining to\nthe Patch-Work Screen, by Jane Barker (1726). This \nlengthy narrative contains nearly a hundred distinct tales\nembedded (as the title suggests) in a single patchwork. The work\nbegins by introducing the central character, Galecia, but within a few pages \nlaunches into a distinct narrative, the story of Captain Manly:\n\nbibliography\n\nFollowing the conclusion of Captain Manly's tale, we are\nreturned to Galecia, and almost immediately after that into two further\nstories. \nHowever, the Galecia narrative returns between each of the texts,\nwhich is why we choose to represent them as floatingTexts:\n\nbibliography\n\nIn other multi-narrative texts, the individual nested tales may\nhave greater significance than the framing narratives, and it may\ntherefore be preferable to treat the fragments of framing narrative as\nfront or back matter associated with each nested tale. This is\ncommonly done, for example, in texts such as Chaucer's Canterbury\nTales, where each tale is typically presented with front matter in\nwhich the teller of the tale is introduced, and back matter in which\nthe pilgrims comment on it.\n\nIt is important to distinguish between the uses of floatingText and quote. Whereas the semantics of quote suggest that its content derives from a source external to the current text, floatingText carries no such implication and is simply used whenever the richer content model that it provides is required to support the markup of a part of a text that is presented as a discrete inclusion. In some cases, such inclusions could be considered external (e.g., enclosures, attachments, etc.); often however, as in the examples above, the included text bears no signs of emanating from outside.\n\nfloatingText and quote may be used in combination. For a text with rich internal structure that is quoted at length, floatingText might be used within quote. Also, like a unitary text, floatingText may include one or more quoted sections, each marked with a quote element.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DS#DS\">4 Default Text Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSVIRT#DSVIRT\">4.4 Virtual Divisions</a>","content":"4.4 Virtual Divisions\nWhere the whole of a division can be automatically generated, for\nexample because it is derived from\nanother part of this or another  document, an encoder may prefer not to represent it\nexplicitly but instead simply mark its location by means of a\nprocessing instruction, or by using the special purpose\ndivGen element:\n<divGen> indicates the location at which a textual division generated\n        automatically by a text-processing application is to appear.\n\nThis element is made available by the model.divGenLike class of which it is the sole\nelement. The divGen element is a member of the\natt.typed class, from which it  inherits the\ntype and subtype attributes. It may appear\nwherever a div or div1 (div2, etc.)  element may appear.\n\n\n\nFor example, if the table of contents (toc) for a given work is simply\nderived by copying  the first head element from each\ndiv element in a text, it might be more easily encoded as\nfollows:\n\nSimilarly, in a digital edition combining a transcribed version\nof some text with a translated version of it, it may be desired to\nrepresent  the transcript, the translation, and an aligned version of\nthe two as three distinct divisions. This could be achieved by an\nencoding like the following:\n The processing to be carried out when a\ndivGen element is rendered will be determined by the\napplication program or stylesheet in use: the function of the TEI\nmarkup is simply to identify the location at which the virtual\ndivision is to be generated, and also to provide some information\nabout the kind of division to be generated. As such it may be regarded\nas a special kind of processing instruction, and could equally well be\nrepresented by one.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DS#DS\">4 Default Text Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSFRONT#DSFRONT\">4.5 Front Matter</a>","content":"4.5 Front Matter\nBy front matter we mean distinct sections of a text\n(usually, but not necessarily, a printed one), prefixed to it by way of\nintroduction or identification as a part of its production. Features\nsuch as title pages or prefaces are clear examples; a less definite\ncase might be the prologue attached to a play.  The front matter of an\nencoded text should not be confused with the TEI header described in\nchapter 2 The TEI Header, which serves as a kind of front matter for\nthe computer file itself, not the text it encodes.\n \nAn encoder may choose simply to ignore the front matter in a text,\nif the original presentation of the work is of no interest, or for\nother reasons; alternatively some or all components of the front matter\nmay be thought worth including with the text as components of the\nfront element.1 With the exception of\nthe title page, (on which see section 4.6 Title Pages), front\nmatter should be encoded using the same elements as the rest of a text.\nAs with the divisions of the text body, no other specific tags are\nproposed here for the various kinds of subdivision which may appear\nwithin front matter:  instead either numbered or un-numbered\ndiv elements may be used.  The following suggested\nvalues2\nfor the type attribute may be used to distinguish various\nkinds of division characteristic of front matter:\nprefaceA foreword or preface addressed to\n    the reader in which the author or publisher explains the\n    content, purpose, or origin of the text.ackA formal declaration of\n    acknowledgment by the author in which persons and institutions\n    are thanked for their part in the creation of a text.dedicationA formal offering or dedication of\n    a text to one or more persons or institutions by the author.abstractA summary of the content of a text as\n    continuous prose.contentsA table of contents, specifying the\n    structure of a work and listing its constituents.\n    The list\n    element should be used to mark its structure.frontispieceA pictorial frontispiece,\n    possibly including some text.\n \nThe following extended example demonstrates how various parts of the\nfront matter of a text may be encoded.  The front part begins with a\ntitle page, which is presented in section 4.6 Title Pages below.\nThis is followed by a dedication and a preface, each of which is encoded\nas a distinct div:\nbibliography\n \nThe front matter concludes with another div element, shown\nin the next example, this time containing a table of contents, which\ncontains a list element (as described in section \n3.8 Lists).  Note the use of the ptr element to provide\npage-references:  the implication here is that the target identifiers\nsupplied (fish1, fish2, etc.) will correspond with identifiers used  for\nthe div elements containing chapters of the text itself. (For the\nptr element, see 3.7 Simple Links and Cross-References.)  \nbibliography\nAlternatively, the pointers in the index might link to the page breaks\nat which a chapter begins, assuming that these have been included in\nthe markup:\nbibliography\n \nThe following example uses numbered divisions to mark up the front\nmatter of a medieval text. \nNote that in this case no title page in the modern\nsense occurs; the title is simply given as a heading at the start of the\nfront matter. Note also the use of the type attribute on the\ndiv elements to indicate document elements comparatively\nunusual in modern books such as the initial prayer:\nbibliography\n\n \nIf, however, the table of contents can be automatically generated\nfrom the remainder of the text, it may be preferable simply to mark\nits presence, either by means of an empty  divGen element or\nby using an appropriate processing instruction.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DS#DS\">4 Default Text Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSTITL#DSTITL\">4.6 Title Pages</a>","content":"4.6 Title Pages\nDetailed analysis of the title page and other\npreliminaries of older printed books and manuscripts is of\nmajor importance in descriptive bibliography and the cataloguing of\nprinted books; such analysis may require a rather more detailed module\nthan that proposed here. The following elements are\nsuggested as a means of encoding the major features of most title pages:\n\n<titlePage> contains the title page of a text, appearing within the front or back matter.\n<docTitle> contains the title of a document, including all its\nconstituents, as given on a title page.\n<titlePart> contains a subsection or division of the title of a work, as\nindicated on a title page.\n<argument> contains a formal list or prose description of the topics addressed by\n\ta subdivision of a text.\n<byline> contains the primary statement of responsibility given for a work\non its title page or at the head or end of the work.\n<docAuthor> contains the name of the author of the document, as given on the\ntitle page (often but not always contained in a byline).\n<epigraph> contains a quotation, anonymous or attributed, appearing at\n  the start or end of a section or on a title page.\n<imprimatur> contains a formal statement authorizing the publication of a work, sometimes required to\n    appear on a title page or its verso.\n<docEdition> contains an edition statement as presented on a title page of a\ndocument.\n<docImprint> contains the imprint statement (place and date of publication,\npublisher name), as given\n(usually) at the foot of a title page.\n<docDate> contains the date of a document, as given\non a title page or in a dateline.\n<graphic> indicates the location of a graphic or illustration, either forming\n    part of a text, or providing an image of it.\n\n \nTogether with the figure element described in chapter 14 Tables, Formulæ, Graphics, and Notated Music, these elements constitute the model.titlepagePart class. Any number of elements\nfrom this class can appear grouped together within a\ntitlePage element. The figure element is included so\nas to enable encoders to record the presence of complex non-textual\nmaterial on a title page. For simple cases such as printers'\nornaments or illustrations the graphic element discussed\nin section 3.10 Graphics and Other Non-textual Components should be adequate.  \nThe elements listed above, together with the head element,\nalso constitute the class model.pLike.front. The elements in this class can\nappear within a minimal front element without any need to\ngroup them together and encode a complete title page.\nEncoders wishing to add new elements to either class may do so\nusing the methods described in section 23.3 Customization. Two\nexamples of the use of these elements follow. First, the title page of\nthe work discussed earlier in this section: bibliography\nSecond, a characteristically verbose 17th century example. Note the\nuse of the lb tag to mark the line breaks of the original\nwhere necessary:\nbibliography\nWhere, as here, it is considered important to encode salient\nfeatures of the way a title page was originally rendered,\nthe techniques exemplified in 2.3.4 The Tagging Declaration may also be\nuseful. \n\n\n\nWhere title pages are encoded, their physical rendition is\noften of considerable importance.  One approach to this requirement\nwould be to use the seg tag, described in chapter 16 Linking, Segmentation, and Alignment, to segment the typographic content of each part of the\ntitle page, and then use the global rend attribute to specify\nits rendition.  Another would be to use a module specialized for the\ndescription of typographic entities such as pages, lines, rules, etc.,\nbearing special-purpose attributes to describe line-height, leading,\ndegree of kerning, font, etc. Further discussion of these problems is\nprovided in chapter 11 Representation of Primary Sources.\n \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DS#DS\">4 Default Text Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSBACK#DSBACK\">4.7 Back Matter</a>","content":"4.7 Back Matter\nConventions vary as to which elements are grouped as back matter and\nwhich as front.  For example, some books place the table of contents at\nthe front, and others at the back.  Even title pages may appear at the\nback of a book as well as at the front.  The content model for\nback and front elements are therefore identical.\n \nThe following suggested values may be used for the type\nattribute on all division elements, in order to distinguish various\nkinds of division characteristic of back matter:\nappendixAn ancillary self-contained section of\na work, often providing additional but in some sense extra-canonical\ntext.glossaryA list of terms associated with definition texts\n(glosses): this should be encoded as a list type=\"gloss\"\n(see section 3.8 Lists).notesA section in which textual or\nother kinds of notes are gathered together.bibliogrA list of bibliographic citations: this should be encoded\nas a listBibl (see section 3.12 Bibliographic Citations and References).indexAny form of index to the work.colophonA statement appearing at the end of a book describing the\nconditions of its physical production.\n \nNo additional elements are proposed for the encoding of back matter\nat present.  Some characteristic examples follow; first, an index (for\nthe case in which a printed index is of sufficient interest to merit\ntranscription):\nbibliography\n\nNote that if the page breaks in the original source have also been\nexplicitly encoded, and given identifiers, the references to them in the\nabove index can more usefully be recorded as links. For example,\nassuming that the encoding of page 461 of the original source starts\nlike this:\n\nthen the last item above might be encoded more usefully in either\nof the following forms:\n  bibliography\nNext, a back-matter division in epistolary form:\nbibliography\n\nAnd finally, a list of corrigenda and addenda with pseudo-epistolary\nfeatures:\nbibliography\n\n\t\n \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DS#DS\">4 Default Text Structure</a><a class=\"breadcrumb\" href=\"p5.xml?id=DSSTRUC#DSSTRUC\">4.8 Module for Default Text Structure</a>","content":"\n  4.8 Module for Default Text Structure\n  The module described by the present chapter has the following\n  components:\n  \n    Default Text Structure\n    Default text structure\n    \n    \n    \n    \n    \n  \n  \n  \n  \n  \n  \n  \n  The selection and combination of modules to form a TEI schema is\n  described in 1.2 Defining a TEI Schema.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=WD#WD\">5 Characters, Glyphs, and Writing Modes</a>","content":"\n5 Characters, Glyphs, and Writing Modes\n\n\nChapter 6 Languages and Character Sets introduced the fundamental notions of\nlanguage identification and character representation in an encoded TEI\ndocument. In this chapter we discuss some additional issues relating\nto the way that written language is represented in a TEI document. In\nsections 5.1 Is Your Journey Really Necessary? and 5.2 Markup Constructs for Representation of Characters and Glyphs we\nintroduce markup which may be used to represent and document\nnon-standard characters, that is, written symbols for which no\ncodepoint exists in Unicode. The same markup may be used to annotate\nexisting characters according to their visual or other properties, and\nthus process them as distinct glyphs (see section 5.3 Annotating Characters), or to define new characters or glyphs (section\n5.4 Adding New Characters).  We also provide recommendations concerning\nthe Unicode Private Use Area (5.5 How to Use Code Points from the Private Use Area. Finally, in\nsection 5.6 \n Writing Modes we\ndiscuss ways of documenting the writing mode used in a source text,\nthat is, the directionality of the script, the orientation of\nindividual characters, and related questions. \n\n\n\n\n   \n   \n\n   \n   \n\n\n\n\n\n\n   \n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=WD#WD\">5 Characters, Glyphs, and Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WDNE#WDNE\">5.1 Is Your Journey Really Necessary?</a>","content":"5.1 Is Your Journey Really Necessary?\nDespite the availability of Unicode, text encoders still\nsometimes find that the published repertoire of available\ncharacters is inadequate to their needs. This is particularly the\ncase when dealing with ancient languages, for which encoding\nstandards do not yet exist, or where an encoder wishes to\nrepresent variant forms of a character or glyphs.\nThe module defined by this chapter provides a mechanism to satisfy\nthat need, while retaining compatibility with standards.\n\nWhen encoders encounter some graphical unit in a document which is\nto be represented electronically, the first issue to be resolved\nshould be Is this really a different character? To determine\nwhether a particular graphical unit is a character or\nnot, see 6.2.2 Terminology and Key\n   Concepts. \nIf the unit is indeed determined to be a character, the next\nquestion should be Has this character been encoded already?\nIn order to determine whether a character has been encoded,\nencoders should follow the following steps:\n\n  Check the Unicode\n  web site at https://www.unicode.org, in particular the page \"Where is my\n  Character?\", and the associated character code charts.\n  Alternatively, users can check the latest published version of\n  The Unicode Standard (Unicode Consortium (2006)), though the web site is\n  often more up to date than the printed version, and should be\n  checked for preference.\nThe pictures (glyphs) in the Unicode code\ncharts are only meant to be representative, not definitive. If a\nspecific form of an already encoded character is required for a\nproject, refer to the guidelines contained below under Annotating Characters. Remember that your\nencoded document may be rendered on a system which has different fonts\nfrom yours: if the specific form of a character is important to you,\nthen you should document it. \n  Check the Proposed New Characters web page (http://unicode.org/alloc/Pipeline.html) to see whether\n  the character is in line for approval.\n\nAsk on the Unicode email list (https://www.unicode.org/consortium/distlist.html) to\nsee whether  a proposal is pending, or to determine whether this\ncharacter is considered eligible for addition\nto the Unicode Standard.  \n\n \nSince there are now over 130,000 characters in Unicode,\nchances are good that what you need is already there, but it might\nnot be easy to find, since it might have a different name in\nUnicode. Editors working with East Asian writing systems should consult\nthe Unihan Database.\nLook again, this time at other sites, preferably ones which also provide searches based on scripts and languages. For example https://www.chise.org (for CJK characters) or http://www.eki.ee/letter/ (for non-CJK characters) .\nTake care, however, that all the\nproperties of what seems to be a relevant character are consistent\nwith those of the character you are looking for. For example, if\nyour character is definitely a digit, but the properties of the\nbest match you can find for it say that it is a letter, you may\nhave a character not yet defined in Unicode.\nIn general, it is advisable to avoid Unicode characters generally\ndescribed as presentation forms.1 However, if the character you are looking for is being used in a notation (rather than as part of the orthography of a language) then it is quite acceptable to select characters from the Mathematical Operators block, provided that they have the appropriate properties (i.e. So: Symbol, Other; or Sm:\nSymbol, Math).\nAn encoded character may be precomposed or it may be formed\nfrom base characters and combining diacritical marks. Either will\nsuffice for a character to be \"found\" as an encoded character. If there are several possible Unicode characters to choose amongst,\nit is good practice to consult other colleagues and practitioners to\nsee whether a consensus has emerged in favour of one or other of\nthem.\nIf, however, no suitable form of your character seems to exist, the\nnext question will be: Does the graphical unit in question\nrepresent a variant form of a known character, or does it represent a\ncompletely unencoded character? If the character is determined to\nbe missing from the Unicode Standard, it would be helpful to submit\nthe new character for inclusion (see http://unicode.org/pending/proposals.html). For assistance\non writing or submitting a proposal, potential proposers can contact\nthe UC Berkeley Script Encoding Initiative (http://linguistics.berkeley.edu/sei/).\nThese guidelines will help you proceed once you have\n identified a given graphical unit as either a variant or an\n unencoded character. Determining this will require knowledge of\n the contents of the document that you have. The first case will\n be called annotation of a character, while the\n second case will be called adding of a new\n character. How to handle graphical units that represent variants\n will be discussed below (5.3 Annotating Characters)\n while the problem of representing new characters will be dealt\n with in section 5.4 Adding New Characters.\nWhile there is some overlap between these requirements,\ndistinct specialized markup constructs have been created for each\nof these cases. These constructs are presented in section 5.2 Markup Constructs for Representation of Characters and Glyphs\nbelow.  \n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=WD#WD\">5 Characters, Glyphs, and Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=D25-20#D25-20\">5.2 Markup Constructs for Representation of Characters and Glyphs</a>","content":"\n\n5.2 Markup Constructs for Representation of Characters and Glyphs\nAn XML document can, in principle, contain any defined Unicode\ncharacter. The standard allows these characters to be represented\neither directly, using an appropriate encoding (UTF-8 by default), or\nindirectly by means of a numeric character reference (NCR), such as\n&#196; (A-umlaut). The encoder can also restrict the\nrange of characters which are represented directly in a document (or\npart of it) by adding a suitable encoding declaration. For example, if\na document begins with the declaration <?xml\nencoding=\"iso-8859-1\"?> any Unicode characters which are not\nin the ISO-8859-1 character set must be represented by NCRs. \n The gaiji module defined by this\n chapter adds a further way of representing specific characters\n and glyphs in a document. (Gaiji is from Japanese 外字, meaning external\n characters.) This allows the encoder to distinguish\n characters and glyphs which Unicode regards as identical, to add\n new nonstandard characters or glyphs, and to represent Unicode\n characters not available in the document encoding by an\n alternative means.\nThe mechanism provided here consists functionally of two parts:\n \n  an element g, which serves as a proxy for new\n   characters or glyphs\n  elements char and glyph, providing information about such characters or glyphs; these elements are stored in the\n   charDecl element in the header.\n \n\nWhen the gaiji module is included in a schema, the\ncharDecl element is added to the model.encodingDescPart\nclass, and the g element is added to the phrase class. These\nelements and their components are documented in the rest of this\nsection. \nThe Unicode standard defines properties for all the characters it\ndefines in the Unicode Character Database , knowledge of which is usually built into text processing systems. If the\ncharacter represented by the g element does not exist in Unicode at\nall, its properties are not available. If the character represented is\nan existing Unicode character, but is not available in the document\ncharacter set recognized by a given text processing system, it may\nalso be convenient to have access to its properties in the same way.\nThe char element makes it possible to store properties\nfor use by such applications in a standard way.\n The list of attributes (properties) for characters is modelled on\nthose in the Unicode Character Database, which distinguishes\nnormative and informative character\nproperties. The Unicode Consortium also maintains a separate set of character properties specific to East Asian characters in the Unihan database which TEI fully supports. Lastly, non-Unicode properties may also be supplied.\nSince the list of properties will vary with different versions of the\nUnicode Standard, there may not be an exact correspondence between\nthem and the list of properties defined in these Guidelines.\n\nUsage examples for these elements are given below at 5.3 Annotating Characters and 5.4 Adding New Characters.  The gaiji module\nitself is formally defined in section 5.10 Formal Definition\nbelow. It declares the following additional elements:\n\n<charDecl> provides information about nonstandard characters and glyphs.\n<g> represents a glyph, or a non-standard character.\n\nThe charDecl element is a member of the class model.encodingDescPart, and thus becomes\navailable within encodingDesc when this module is included in\na schema.  The g element is the only member of the class\nmodel.gLike: this class is referenced as\nan alternative to plain text in almost every element which contains\nplain text, thus permitting the g element also to appear at\nsuch places when this module is included in a schema.\n\nThe following elements may appear within a charDecl\n element:\n\n<desc> contains a short description of the purpose, function, or\n    use of its parent element,\n    or when the parent is a documentation element, describes or defines the object being documented. \n   \n  \n<char> provides descriptive information about a character.\n<glyph> provides descriptive information about a character\n  glyph.\n \n\nThe char and glyph elements have similar contents\nand are used in similar ways, but their functions are different. The\nchar element is provided to define a character which is not\navailable in the current document character set, for whatever reason,\nas stated above. The glyph element is used to annotate a\ncharacter that has already been defined somewhere (either in the\ndocument character set, or through a char element) by\nproviding a specific glyph that shows how a character appeared in the\noriginal document. This is necessary since Unicode code points refer\nnot to a single, specific glyph shape of a character, but rather to a\nset of glyphs, any of which may be used to render the code point in\nquestion; in some cases they can differ considerably.\nThe glyph element is provided for cases where the encoder\nwants to specify a specific glyph (or family of glyphs) out of all\npossible glyphs. Unfortunately, due to the way Unicode has been\ndefined, there are cases where several glyphs that logically belong\ntogether have been given separate code points, especially in the blocks\ndefining East Asian characters. In such cases, glyph elements\ncan also be used to express the view that these apparently distinct\ncharacters are to be regarded as instances of the same character (see\nfurther 5.3 Annotating Characters).\nThe Unicode Standard recommends naming conventions which should be\nfollowed strictly where the intention is to annotate an existing\nUnicode character, and which may also be used as a model when\ncreating new names for characters or glyphs2:\nWithin both char and glyph, the following elements are available:\n\n<gloss> identifies a phrase or word used to provide a gloss or definition for some other word or\n    phrase.\n<unicodeProp> provides a Unicode property for a character (or\n        glyph).\n<unihanProp> holds the name and value of a normative or\n        informative Unihan character (or glyph) property as part of its attributes.\n<localProp> provides a locally defined character (or glyph) property.\n<desc> contains a short description of the purpose, function, or\n    use of its parent element,\n    or when the parent is a documentation element, describes or defines the object being documented. \n   \n  \n<mapping> contains one or more\n\t characters which are related to the parent character or glyph\n\t in some respect, as specified by the type\n\t attribute.\n\n<figure> groups elements representing or containing graphic information\n  such as an illustration, formula,  or    figure.\n<note> contains a note or annotation.\n\n\n\nFour of these elements (gloss, desc,\nfigure, and note) are defined by other TEI\nmodules, and their usage here is no different from their usage\nelsewhere. The figure element, however, is used here only to\nlink to an image of the character or glyph under discussion, or to\ncontain a representation of it in SVG. The figure element may\ncontain more than one graphic\nelement, for example to provide images with different\nresolution, or in different formats, or may itself be repeated. As\nelsewhere, the mimeType attribute\nof graphic should be used to specify\nthe format of the image.\nThe mapping element is similar to the standard TEI\nequiv element. While the latter is used to express\ncorrespondence relationships between TEI concepts or elements and\nthose in other systems or ontologies, the former is used to express\nany kind of relationship between the character or glyph under\ndiscussion and characters or glyphs defined elsewhere. It may contain\nany Unicode character, or a g element linked to some other\nchar or glyph element, if, for example, the\nintention is to express an association between two non-standard\ncharacters. The type of association is indicated by the\ntype attribute, which may take such values as\nexact for exact equivalences, uppercase for\nuppercase equivalences, lowercase for lowercase\nequivalences, standard for standardized forms, and\nsimplified for simplified characters, etc., as in the\nfollowing example: \n\nThe mapping element may also be used to represent a mapping of the\ncharacter or (more likely) glyph under discussion onto a character\nfrom the private use area as in this example:\n\n\nA more precise documentation of the properties of any character or\nglyph may be supplied using one of the three property elements: localProp, unicodeProp, or unihanProp; these are described in the next section.\n\n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=WD#WD\">5 Characters, Glyphs, and Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=D25-20#D25-20\">5.2 Markup Constructs for Representation of Characters and Glyphs</a><a class=\"breadcrumb\" href=\"p5.xml?id=ucsprops#ucsprops\">5.2.1 Character Properties</a>","content":"5.2.1 Character Properties\nThe Unicode Standard documents ideal\ncharacters, defined by reference to a number of\nproperties (or attribute-value pairs) which they are said\nto possess. For example, a lowercase letter is said to have the value\nLl for the property General_Category. The\nStandard distinguishes between normative properties\n(i.e. properties which form part of the definition of a given\ncharacter), and informative or additional\nproperties which are not normative. It also allows for the addition of\nnew properties, and (in some circumstances) alteration of the values\ncurrently assigned to certain properties. When making such\nmodifications, great care should be taken not to override standard\ninformative properties for characters which already exist in the Unicode\nStandard, as documented in Freytag (2006).\n\nThe unicodeProp, unihanProp, and\nlocalProp elements allow a TEI encoder to record information\nabout a character or glyph:\n\n  <unicodeProp> provides a Unicode property for a character (or\n        glyph).\n  <unihanProp> holds the name and value of a normative or\n        informative Unihan character (or glyph) property as part of its attributes.\n  <localProp> provides a locally defined character (or glyph) property.\n\n\nWhere the information concerned relates to a property which has\nalready been identified in the Unicode Standard, use of the\nappropriate Unicode property name with unicodeProp is\nstrongly encouraged. The use of available Unihan property names with\nunihanProp is similarly encouraged. Validation rules for\nproperty names  according to Unicode conventions\nare incorporated into the TEI schemas. Where neither of these\nstandards suffices use localProp.\n\nThe three elements for recording Unicode or locally defined properties belong to the att.gaijiProp class. This class defines two required attributes for record key-value pairs for character properties:\n\n\n<att.gaijiProp> provides attributes for defining the properties of\n        non-standard characters or glyphs. \n\nFor each property, the encoder must supply both a\nname and a value. In cases of boolean properties TEI requires an explict true or false value attribute:\n\n\nFor convenience, we list here some of the normative character\nproperties and their values. For full information, refer to chapter 4 of The Unicode Standard, or the online documentation of the Unicode Character Database.\nGeneral_CategoryThe general\n\t  category (described in the Unicode Standard chapter 4 section 5) is an assignment to some\n\t  major classes and subclasses of characters.  Suggested\n\t  values for this property are listed here:\n\nLuLetter, uppercase\nLlLetter, lowercase\nLtLetter, titlecase\nLm Letter, modifier\nLoLetter, other\nMnMark, nonspacing\nMcMark, spacing combining\nMeMark, enclosing\nNdNumber, decimal digit\nNlNumber, letter\nNoNumber, other\nPcPunctuation, connector\nPdPunctuation, dash\nPsPunctuation, open\nPePunctuation, close\nPiPunctuation, initial quote\nPfPunctuation, final quote\nPoPunctuation, other\nSmSymbol, math\nScSymbol, currency\nSkSymbol, modifier\nSoSymbol, other\nZsSeparator, space\nZlSeparator, line\nZpSeparator, paragraph\nCcOther, control\nCfOther, format\nCsOther, surrogate\nCoOther, private use\nCnOther, not assigned\n\n\t Bidi_ClassThis property applies to all Unicode characters. It governs the\napplication of the algorithm for bi-directional behaviour, as further\nspecified in Unicode Annex 9, The Bidirectional\nAlgorithm. The following 21 different values are currently\ndefined for this property:\n\nLLeft-to-Right\nRRight-to-Left\nALRight-to-Left Arabic\nENEuropean Number\nESEuropean Number Separator\nETEuropean Number Terminator\nANArabic Number\nCSCommon Number Separator\nNSMNonspacing Mark\nBNBoundary Neutral\nBParagraph Separator\nSSegment Separator\nWSWhitespace\nONOther Neutrals\nLRELeft-to-Right Embedding\nLROLeft-to-Right Override\nRLERight-to-Left Embedding\nRLORight-to-Left Override\nPDFPop Directional Format\nLRILeft-to-Right Isolate\nRLIRight-to-Left Isolate\nFSIFirst Strong Isolate\nPDIPop Directional Isolate\nCanonical_Combining_ClassThis\n\t  property exists for characters that are not used\n\t  independently, but in combination with other characters, for\n\t  example the strokes making up CJK (Chinese, Japanese, and Korean) characters.  It\n\t  records a class for these characters, which is used to\n\t  determine how they interact typographically. The following\n\t  values are defined in  the Unicode Standard: (see Unicode\nCharacter Database: Canonical Combining Class Values); these were taken from version 12.1:\n\n0Spacing, split, enclosing, reordrant, and Tibetan subjoined \n1Overlays and interior \n7Nuktas \n8Hiragana/Katakana voicing marks \n9Viramas \n10Start of fixed position classes \n199End of fixed position classes \n200Below left attached \n202Below attached \n204Below right attached \n208Left attached (reordrant around single base character) \n210Right attached \n212Above left attached \n214Above attached \n216Above right attached \n218Below left \n220Below \n222Below right \n224Left (reordrant around single base character) \n226Right \n228Above left \n230Above \n232Above right \n233Double below \n234Double above \n240Below (iota subscript) \nDecomposition_MappingThis property is defined for characters,\n\t  which may be decomposed, for example to a canonical form\n\t  plus a typographic variation of some kind. For such characters the Unicode standard  specifies both\n\t  a decomposition type and a decomposition mapping\n\t  (i.e. another Unicode character to which this one may be\n\t  mapped in the way specified by the decomposition type). The\n\t  following types of mapping are defined in the Unicode Standard:\n\nfontA font variant (e.g. a blackletter form)\nnoBreakA no-break version of a space or hyphen\ninitialAn initial presentation form (Arabic)\nmedialA medial presentation form (Arabic)\nfinalA final presentation form (Arabic)\nisolatedAn isolated presentation form (Arabic)\ncircleAn encircled form\nsuperA superscript form\nsubA subscript form\nverticalA vertical layout presentation form\nwideA wide (or zenkaku) compatibility character\nnarrowA narrow (or hankaku) compatibility character\nsmallA small variant form (CNS compatibility)\nsquareA CJK squared font variant\nfractionA vulgar fraction form\ncompatOtherwise-unspecified compatibility character\n\nNumeric_ValueThis property applies for\n\t any character which expresses any kind of numeric value. Its\n\t value is the intended value in decimal notation.mirroredThe mirrored\n\t character property is used to properly render characters such\n\t   as U+0028, OPENING PARENTHESIS independent of\n\t the text direction: it has the value Y\n(character is mirrored) or N (code is not mirrored).\nThe Unicode Standard also defines a set of informative (but non-normative) properties for Unicode characters. If encoders wish to provide such properties, they should be included using the Unicode name. If a Unicode name exists for a given character this should always be used, however encoders may also supply locally defined names. To tag a Unicode name, use unicodeProp name=\"Name\" (or unihanProp name=\"Name\"). For names specified elsewhere or specified locally use localProp.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=WD#WD\">5 Characters, Glyphs, and Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=D25-30#D25-30\">5.3 Annotating Characters</a>","content":"\n5.3 Annotating Characters\nAnnotation of a character becomes necessary when it is desired\nto distinguish it on the basis of certain aspects (typically, its\ngraphical appearance) only.  In a manuscript, for example, where\ndistinctly different forms of the letter r can be recognized, it\nmight be useful to distinguish them for analytic purposes, quite\ndistinct from the need to provide an accurate representation of the\npage. A digital facsimile, particularly one linked to a\ntranscribed and encoded version of the text, will always provide a\nsuperior visual representation (for information on how to link a\ndigital facsimile to a transcribed text see 11.1 Digital Facsimiles), but cannot be used to support arguments based\non the distribution of such different forms. Character annotation\nas described here provides a solution to this problem.3 \n\nAssuming that we wish to distinguish the variant glyphs from the\nstandard representation for the character concerned, we will need to\ndefine distinct glyph elements, one for each of the forms of\nthe letter we wish to distinguish: \n With these definitions in place, occurrences of these two special\n rs in the text can be represented using the element g:\n \n\n As can be seen in this example, the glyph element pointed\n to from the g element will be interpreted as an\n annotation on the content of the element g.  This mechanism\n can be used to represent common manuscript abbreviations or ligatures, as in the\n following examples:\n\n\n(In fact the Unicode Standard does provide a character to represent the\n  Fi ligature; the encoder may however prefer not to\n  use it in order to simplify other text processing  operations,\n  such as indexing).\nWith this\n markup in place, it will be possible to write programs to analyze\n the distribution of the different letters r as well as produce\n more faithful renderings of the original. It\n will also be possible to produce normalized versions by simply ignoring\n the annotation pointed to by the element g.  \n\nFor brevity of encoding, it may be preferred to predefine\ninternal entities such as the following:\n \nwhich would enable the same material to be encoded as follows:\n \n\nThe same technique may be used to represent particular\nabbreviation marks as well as to represent other characters or\nglyphs. For example, if we believe that the r-with-one-funny-stroke is\nbeing used as an abbreviation for receipt, this might be\nrepresented as follows:\nNote however that this technique employs markup objects to\nprovide a link between a character in the document and some\nannotation on that character. Therefore, it cannot be used in\nplaces where such markup constructs are not allowed, notably in\nattribute values.\n\n\nSince the need to use these constructs to annotate or define\ncharacters occurs frequently in Chinese, Korean, and Japanese\ndocuments, here are some issues that are specific to these\ndocuments. There are two slightly different versions of the\nproblem. In the first case, due to the way Unicode is defined,\nthere are occasions when more than one glyph is defined for a\ncharacter. In such an occasion, one might want to retain the\ncharacter as used, but add information in a way so that a\nnormalizer (for search or indexing operations) could take\nadvantage of this information. To achieve this, we simply define\nwithin a charDecl element a glyph that has two\nmapping elements, as shown here:\n\nThe first of these mappings, of type Unicode,\nsimply maps our glyph to the code point where Unicode defined it.\nThe other one, of type standard, encodes the fact that\nin our view, this glyph is a variation of the standard character\ngiven in the content of the element. We could then use this\nglyph element's unique identifier u8aaa to\nrefer to it from within a text as follows.\n  \n\nA slightly different, but related problem occurs when we have\nmultiple variants, none of which has been defined in Unicode. In\nthis case, we need to define one as a new character using\nchar, and the others as glyphs using glyph.\n\nThe char defines a new character, while the\nglyph element then defines a variant glyph of this newly\ndefined character. Additional properties should be specified in\norder to make these both identifiable.\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=WD#WD\">5 Characters, Glyphs, and Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=D25-40#D25-40\">5.4 Adding New Characters</a>","content":"\n5.4 Adding New Characters\nThe creation of additional characters for use in text encoding\nis quite similar to the annotation of existing characters. The\nsame element g is used to provide a link from the\ncharacter instance in the text to a character definition provided\nwithin the charDecl element. This character definition\ntakes the form of a char element.  The element g\nitself will usually be empty, but could contain a code point from\nthe Private Use Area (PUA) of the Unicode Standard, which is an\narea set aside for the very purpose of privately adding new\ncharacters to a document.  Recommendations on how to use such PUA\ncharacters are given in the following section.\nIn some circumstances, it may be desirable to provide a single\nprecomposed form of a character that is encoded in Unicode only as a\nsequence of code points. For example, in Medieval\nNordic material, a character looking like a lowercase letter Y with a\ndot and an acute-accent above it may be encountered so frequently that\nthe encoder wishes to treat it as a single precomposed character with\none single coded value. In the\ntranscription concerned, the encoder enters this letter as\n&ydotacute;, which  when the\ntranscription is processed can then be expanded in one of three ways,\ndepending on the mapping in force. The entity reference  might be\ntranslated into the sequence of corresponding Unicode code points\nor into some locally-defined PUA character\n(say &#xE0A4;) for local\nprocessing only. Both these options have disadvantages; the former\nloses the fact that the sequence of composed characters is regarded as\na single object; the second is not reliably portable.\nTherefore, the recommended\nrepresentation is to use the g element defined by\nthe module defined in this chapter: . This makes it possible for the encoder to\nprovide useful documentation for the particular character or glyph so referenced:\n This\n definition specifies the mapping between this composed character\n and the individual Unicode-defined code points which make it\n up. It also supplies a single locally-defined property\n (entity) for the character concerned, the\n purpose of which is to supply a recommended character entity name\n for the character.\n\nThe composition rules for ideographic characters typically require more complex rules than the &ydotacute; above. For these cases Unicode provides dedicated symbols to capture the composition in Ideographic Description Sequences (IDS). Encoders are strongly encouraged to provide IDS for each variant ideograph in the header component of the gaiji module to faciliated greater human and machine readability of rare or unencoded characters, as in the following example:\n\nThe composition rules and further examples appear in Chapter 18.2: Ideographic Description Characters of the Unicode Standard. Editors should be aware that different sequences can accurately describe the same character. In the example, the character \"人\" (U+4EBA) could have been substituted with \"亻\" (U+4EBB). Local preferences about how sequences are constructed should be documented in the encodingDesc of the corresponding TEI header (see 2.3 The Encoding Description). Additionally, a number of online services, such as CHISE, offer querying and retrieving characters via IDS, which facilitates a greater degree of stability across different applications.\nUnder certain circumstances, Chinese Han characters can be written\nwithin a circle. Rather than considering this as simply an aspect of the rendering, an encoder may wish to treat such circled characters as entirely distinct derived characters. For a given character\n(say that represented by the numeric-character reference &#x4EBA;)\nthe circled variant might conveniently be represented as\n, which references a\ndefinition such as the following:\n\nIn this example, the circled ideograph\ncharacter has been defined with two mappings, and with two\nproperties. The two properties are the Unicode-defined\ncharacter-decomposition which specifies that this is a circled\ncharacter, using the appropriate terminology (see 5.2.1 Character Properties above) and a locally defined property known as\ndaikanwa. The two mappings indicate firstly that the standard form of this character is the character &#x4EBA;, and secondly that the character used to represent this character locally is the PUA character  &#xE000;. For convenience of local processing this PUA character may in fact appear as content of the g element. In general, however, the g element\nwill be empty.\n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=WD#WD\">5 Characters, Glyphs, and Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=D25-50#D25-50\">5.5 How to Use Code Points from the Private Use Area</a>","content":"\n5.5 How to Use Code Points from the Private Use Area\nThe developers of the Unicode Standard have set aside an\narea of the codespace for the private use of software vendors,\nuser groups, or individuals.  As of this writing (Unicode 12.1),\nthere are around 137,000 code points available in this area, which\nshould be enough for most needs. No code point assignments will be made\nto this area by standard bodies and only some very basic default\nproperties have been assigned (which may be overridden where\nnecessary by the mechanism outlined in this chapter). Therefore,\nunlike all other code points defined by the Unicode Standard, PUA code points should\nnot be used directly in documents intended for blind interchange.\n\nIn the two previous examples, we mentioned that the variant\ncharacters concerned might well be assigned specific code points from\nthe PUA. This might, for example, facilitate the use of a particular\nfont which displays the desired character at this code point in the\nlocal processing environment.  Since however this assignment would be\nvalid only on the local site, documents containing such code points are\nunsuitable for blind interchange.  During the process of preparing\nsuch documents for interchange, any PUA code points should be replaced by an appropriate use of the g element,  such as g ref=\"#xxxx\", thus associating the character required\nwith the documentation of it provided by the referenced  char element.  The PUA character\nused during the preparation of the document might be recorded in the\nchar element, as shown in the example in 5.4 Adding New Characters, or retained as content of the g element. However, since there is no requirement that the same PUA\ncharacter be used to represent it at the receiving site, and since it\nmay well be the case that this other site has already made an\nassignment of some other character to the original PUA code point, it is best practice to remove the locally-defined PUA character. It is to be expected that a further translation into the\nlocal processing environment at the receiving site will be necessary\nto handle such characters, during which variant letters can be\nconverted to hitherto unused code points on the basis of the\ninformation provided in the char element.\nThis mechanism is rather weak in cases where DOM trees or\nparsed XML fragments are exchanged, which may increasingly be the\ncase.  The best an application can do here is to treat any\noccurrence of a PUA character only in the context of the local\ndocument and use the properties provided through the char\nelement as a handle to the character in other contexts.  \nIn the fullness of time, a character may become standardized, and\nthus assigned a specific code point outside the PUA. Documents which\nhave been encoded using the mechanism must at the least ensure that\nthis changed code point is recorded within the relevant char\nelement; it will however normally be simpler to remove the\nchar element and replace all occurrences of g\nelements which reference it by occurrences of the newly coded\ncharacter. \n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=WD#WD\">5 Characters, Glyphs, and Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WDWM#WDWM\">5.6 \n Writing Modes</a>","content":"\n   5.6 \n Writing Modes\n\nThe scripts used for writing human languages vary not only in the\nglyphs they use, but also in the way (or ways) that those glyphs are\narranged on the writing surface. For the majority of modern languages,\nwriting is arranged as a series of lines which are to be read from top\nto bottom. Within each line, individual characters are frequently\npresented from left to right (English, Russian, Greek), but there are\nalso several widely-used scripts which run right-to-left (Arabic,\nHebrew). Writing in which the lines of glyphs are presented vertically\nand read from right to left is also often encountered, notably in\nEast Asian scripts (Sinitic characters, Japanese Kana, Korean\nHangul, Vietnamese chữ nôm). In many cases, a language normally uses\nthe same writing mode (we use this term to\nrefer to the orientation of individual glyphs within a line and the\norder in which glyphs and lines should be read), but there are exceptions in which\nthe same language may appear in different modes, for example either\nvertically or horizontally. Many East Asian scripts were traditionally\nwritten from top to bottom within the line, with their lines sequenced\nfrom right to left. Although modern Japanese, Chinese, and Korean are\noften written horizontally, the traditional vertical writing mode is\nstill widely used. There are also comparatively rare cases of ancient\nscripts written with lines running left to right, each line being read\ntop to bottom (Ancient Uighur, classical Mongolian and Manchu), or\nscripts such as Ogham where the writing direction may start from the\nbottom left and run around the edge of an inscribed object.\n\nWhen different languages are combined, it is possible that\ndifferent writing modes will be needed: for example, in Hebrew text,\nrunning right to left, sequences of Latin digits still run left to\nright. When different writing modes are available for the same\nlanguage, it may be that different glyphs will be preferred when the\nscript is used in different modes. For example, when Japanese is\nwritten horizontally, the Unicode character U+3001, the\nideographic comma, is used in preference to\nUnicode character U+FE11, the vertical mode comma. This ensures that\nthe comma appears in the correct position relative to the surrounding\nglyphs. Even for scripts which are usually written in exactly the same\nway, different writing modes may be encountered in particular\ncontexts; for example when a language using Roman script is embedded\nwithin vertically-organized Chinese text, it may sometimes be\ndisplayed vertically and sometimes horizontally. The writing mode may\nalso vary in response to layout constraints such as those imposed by a\ncomplex table, where column or row labels may be written vertically or\ndiagonally to make the most effective use of available space, just as\nit may vary in response to the size and shape of the carrier in the\ncase of a monumental inscription. \n\nFor many, perhaps most, TEI documents there may be no need to\nencode the writing mode explicitly, even in so-called \"mixed mode\"\ntexts containing passages written in languages which use different\nwriting modes. Modern printed texts in most European languages, for\ninstance, may be expected to use left-to-right/top-to-bottom\ndirectionality; while Arabic or Hebrew texts are expected to run\nright-to-left/top-to-bottom. In a TEI document, language and script\nare explicitly stated in the markup using the attribute\nxml:lang; this indication will usually imply a particular\ndefault writing mode. Even where this attribute is not used, passages\nin different scripts will use different Unicode characters, and will\nthus imply a particular default writing mode. \n\nConsider the case of an English text containing a few Arabic words:\n\nA correct TEI encoding might read as follows:\n\nWe might assume that it is the presence of the xml:lang\nattribute with value ar that causes processing software to\ndisplay the Arabic from right to left, but in fact, this is not the\ncase. The order in which the Arabic characters appear when rendered\nwould be the same, even if the markup were not present:\n\nThis is because Arabic glyphs are always displayed right to left,\neven when they appear within a left-to-right English sentence. Like\nmost other codepoints in the Unicode standard, they have a specific\ndirectionality setting which helps any rendering software determine\nhow they should be ordered. The Latin glyph \"a\" has a strong\nleft-to-right bidirectionality setting, as do the digits 0 to 9; the\nHebrew א (alef) is strongly right-to-left. Of course, some glyphs\n(common punctuation marks such as the period or comma for example)\nhave weak or neutral settings because they may appear in several\ncontexts.\n\nThe Unicode Bidirectional Algorithm (Unicode\nConsortium, 2017)\n defines a number of\nrules enabling software to render sequences of characters which have\ndiffering directionality properties in a predictable and reliable way,\nusing only those properties. 4. It\nshould be remembered however that individual sequences of characters\nare always stored in a file in the order in which they should be read,\nirrespective of the order in which the characters making up a sequence\nshould be displayed or rendered. For example, in a RTL language such\nas Hebrew, the first character in a file will be that which is\ndisplayed at the rightmost end of the first line of text.\n\nAn encoder wishing to document or to control the order in which\nsequences of characters in a TEI document are displayed will usually\ndo so by segmenting the text into sequences presented in the desired\norder and specifying an appropriate language code for each. In\nsituations where this approach may result in ambiguity or lack of\nprecision, or if the encoder wishes to record directional information\nexplicitly in their encoding, we recommend using the global @style\nattribute to supply detail about the writing mode applicable to the\ncontent of any element. The style attribute (discussed in\n1.3.1.1.3 Rendition Indicators) permits use of any formatting language; for\nthese purposes however, we recommend use of CSS, which  includes a\nWriting Modes module 5 which permits direct specification of a number of useful properties\nassociated with writing modes, notably direction (ltr\nor rtl);  writing-mode\n(horizontal-tb, vertical-rl, or vertical-lr);\nand text-orientation (mixed, upright,\nsideways ...)  \n\nas well as properties affecting the behaviour of the unicode-bidi (bidirectional) algorithm.\nWe discuss and exemplify how these properties may be used below.\n\nThe global TEI style attribute applies to the element on\nwhich it is specified (and in most cases, its descendants). Rather\nthan specify it on every element, it will often be more efficient to\nexpress sets of commonly-used styling rules as rendition\nelements in the teiHeader and then point to them using the\nglobal rendition attribute, as further discussed in 2.3.4.1 Rendition. Although the CSS specifications are mainly used to\nprovide instructions for software when rendering a digital text, they\nalso provide a useful means of describing the visual properties of a\npre-existing document in a formal and standardized way. \n\nThe next section presents some examples of how CSS can be used to\ndescribe a variety of writing modes. A full description of the appearance\nof a document will probably include many other properties of course. \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=WD#WD\">5 Characters, Glyphs, and Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WDWMEG#WDWMEG\">5.7 Examples of Different Writing Modes</a>","content":"\n   5.7 Examples of Different Writing Modes\nThe CSS recommendations provides several properties which can be used to encode aspects of the \"writing mode\". The most useful of these is the property \"writing-mode\" which may be used to specify a reading-order for both characters within a single line and lines within a single block of text. The property \"text-orientation\" may also used to indicate the orientation of individual characters with respect to the line, and the property \"direction\" to determine the reading order of characters within a line only. We give some examples of each below. \n   \n   \n   \n   \n   \n   \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=WD#WD\">5 Characters, Glyphs, and Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WDWMEG#WDWMEG\">5.7 Examples of Different Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WDWMEG1#WDWMEG1\">5.7.1  Vertical Writing Modes</a>","content":"\n  5.7.1  Vertical Writing Modes\n   The writing-mode property is particularly useful for languages\n   which can be written in different writing modes, such as Chinese\n   and Japanese. Its possible values include horizontal-tb,\n   vertical-rl and vertical-lr. Each value has\n   two components: horizontal or vertical specifies the inline\n   writing direction, while the second component specifies the\n   direction in which lines in a block, and blocks in a sequence are\n   arranged: from top to bottom (as in most European languages, in\n   which lines and paragraphs are arranged from top to bottom on a\n   page), from right to left (as in the case of Japanese written vertically), or\n   left-to-right (as in the case of Mongolian). \n   The following example shows three versions of the same poem: first in\n Japanese, written top to bottom; next in romaji (Japanese in\n Latin script); and finally in an English translation. \n   \n \n  \n   \n   We might encode this as follows: \n bibliography\n   For the sake of simplicity, we have not attempted to capture in\n   this encoding such aspects as the indenting of lines in the first\n   Japanese version, or the central alignment of the other two\n   versions, nor any other renditional features such as font weight or\n   size etc. The Japanese transcription has writing-mode:\n   vertical-rl, which is required because Japanese may be\n   written either in this mode or horizontally. The transcription in\n   romaji uses the attribute xml:lang to supply a value of\n   ja-Latn, indicating Japanese written in Latin\n   script. Its style attribute specifies a horizontal\n   writing mode; this may seem superfluous, but vertically-written\n   romaji is not unknown.\n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=WD#WD\">5 Characters, Glyphs, and Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WDWMEG#WDWMEG\">5.7 Examples of Different Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WDWMEG2#WDWMEG2\">5.7.2 Vertical Text with Embedded Horizontal Text</a>","content":"\n  5.7.2 Vertical Text with Embedded Horizontal Text\n\n   When Japanese is written vertically, the glyph orientation\n   remains the same as when it is written horizontally. In other\n   words, glyphs are not rotated (although as noted above some\n   different glyphs may be used for some characters, in particular for\n   punctuation which needs to be positioned differently in vertical\n   and in horizontal text). However, it is very common for languages\n   written vertically to have embedded runs of text from languages\n   which are normally written horizontally. This raises the issue of\n   the orientation of the glyphs from the horizontal language. Are\n   they written upright, as they would normally appear in horizontal\n   text runs, or are they rotated? Consider this fragment from a\n   Japanese article about the Indonesian language, which takes the\n   form of a glossary list: \n   \n \n  \n\n   The text-orientation property allows us to indicate whether or\n not glyphs are rotated. In the following example, we have indicated\n that the list uses a vertical-rl writing mode, but that the orientation\n of individual glyphs may vary: \n\nbibliography\n   The rule text-orientation: mixed specifies that\n   characters from horizontal-only scripts are set sideways,\n   i.e. 90° clockwise from their standard orientation in horizontal\n   text. Characters from vertical scripts are set with their intrinsic\n   orientation (fantasai\n   2014). Since the default value for\n   text-orientation is mixed, this rule is\n   not strictly required. However, if the Indonesian glyphs (which are\n   roman characters) had been set vertically, like this:\n   \n \n   \n   then an encoding like the following could be used to make this explicit: \n   \n   The rule text-orientation: upright specifies that\n   characters from horizontal-only scripts are rendered\n   upright, i.e. in their standard horizontal orientation. Characters\n   from vertical scripts are set with their intrinsic orientation and\n   shaped normally (fantasai\n   2014).\n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=WD#WD\">5 Characters, Glyphs, and Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WDWMEG#WDWMEG\">5.7 Examples of Different Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WDWMEG3#WDWMEG3\">5.7.3 Vertical Orientation in Horizontal Scripts</a>","content":"\n 5.7.3 Vertical Orientation in Horizontal Scripts\n It is not unusual to see text from horizontal languages\n written vertically even where no vertically-written script is\n involved. This example is a fragment from a table of information\n about agricultural development on Vancouver Island, written in\n 1855: \n \n   \n \n Four of the subheading cells in this fragment contain English text written vertically,\n bottom-to-top, to conserve space on the page. To describe this sort of phenomenon,\n we can use the text-orientation property again: \n\n   text-orientation: mixed | upright | sideways-right | sideways-left | sideways | use-glyph-orientation\n\n   For full details on this property, we refer the reader to the CSS Writing Modes specification.\n For the present example, we will make use only of the sideways-left value,\n which causes text to be set as if in a horizontal layout, but rotated 90° counter-clockwise.\n We might encode the third of the four cells containing vertical text like this: \n \n   The writing-mode property captures the fact that the script is written vertically, and\n its lines are to be read from left to right (so the line containing of\n is to the right of that containing Cash value), while the text-orientation\n value encodes the orientation (rotated 90° counter-clockwise). We might also add\n text-align: center to the style, to express the fact that the text is centrally-aligned.\n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=WD#WD\">5 Characters, Glyphs, and Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WDWMEG#WDWMEG\">5.7 Examples of Different Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WDWMEG4#WDWMEG4\">5.7.4 Bottom-to-top Writing</a>","content":"\n  5.7.4 Bottom-to-top Writing\n   Of the rather small number of scripts which appear to be written\n   bottom-to-top, perhaps the best-known is Ogham, an alphabet used\n   mainly to write Archaic Irish. Ogham is typically found inscribed\n   along the edge of a standing stone, starting at its base. The CSS Writing\n   Modes specification does not explicitly distinguish between\n   vertical scripts which are written  top-to-bottom and those which\n   are written bottom-to-top. Instead, such bottom-to-top scripts are best treated\n   as left-to-right horizontal scripts, oriented vertically because of\n   the constraints of the medium on which they are inscribed. Such\n   scripts are analogous to the vertical English text-runs in the\n   table cells in the example above, and can be handled in exactly the\n   same manner (writing-mode: vertical-lr; text-orientation:\n   sideways-left). In cases where writing follows a curved path\n   (such as Ogham running around the edge of a stone), a meticulous\n   encoder might resort to the use of SVG to describe the path, rather\n   than treating the phenomenon as a writing mode.\n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=WD#WD\">5 Characters, Glyphs, and Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WDWMEG#WDWMEG\">5.7 Examples of Different Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WDWMEG5#WDWMEG5\">5.7.5 Mixed Horizontal Directionality</a>","content":"\n  5.7.5 Mixed Horizontal Directionality\n  \n   Returning to our previous simple example \n  \n   we could use the direction property to make directionality explicit:\n   direction: ltr | rtl\n   \n   The use of the direction property to record the observed directionality\n of the text is unambiguous, even though it is (as we noted above) superfluous.\n The use of the unicode-bidi property here may require some explanation.\n By default this property has the value normal, the effect of which in this\n context would be to ignore any value supplied for the direction property. The CSS Writing\n Modes specification stipulates that the direction property has no effect on bidi\n   reordering when specified on inline boxes whose unicode-bidi property’s\n   value is normal, because the element does not open an additional\n   level of embedding with respect to the bidirectional algorithm.\n  \n\n   Mixed horizontal directionality is very common in languages such as Arabic\n   and Hebrew, particularly when numbers (which are always given LTR)\n   or phrases from LTR languages are embedded. It is not\n   impossible, though quite unusual, for ambiguities\nto arise in such situations, which may give rise to the\nparts of a document being displayed in unexpected ways that do\nnot correspond to the natural reading order. A more detailed\n   discussion of this issue from an HTML perspective is provided by a\n   W3C Internationalization Working Group report Inline\n   markup and bidirectional text in HTML. \n\n\n  \n\n\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=WD#WD\">5 Characters, Glyphs, and Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WDWMEG#WDWMEG\">5.7 Examples of Different Writing Modes</a><span class=\"breadcrumb\">5.7.6 \n Summary</span>","content":"\n  5.7.6 \n Summary\n   For most texts,  information about text directionality need not be explicitly\n encoded in a TEI text, either because it follows unambiguously from\n xml:lang values, or because it can be expected to be handled\n unequivocally by the Unicode Bidi Algorithm. Where it is considered important\n to encode such information, properties and values taken from the CSS Writing\n Modes module may be used by means of the global TEI style attribute\n (or using the TEI rendition element, linked with the rendition\n attribute). Most  phenomena can be well described in this way; of those which\n cannot, other approaches based on the CSS Transforms module are presented\n in the next section.\n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=WD#WD\">5 Characters, Glyphs, and Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WDWMTT#WDWMTT\">5.8 \n  Text Rotation</a>","content":"\n   5.8 \n  Text Rotation\n   In what follows, we examine a range of textual phenomena which\n   in some ways appear very similar to those examined above, and even\n   overlap with them. We can categorize these as text transformation\n   features, and suggest some strategies for encoding them based on\n   the properties detailed in the CSS Transforms (Fraser et al 2013) specification.\n This CSS module provides a complex array of properties, values and\n functions which can be used to rotate, skew, translate and otherwise\n transform textual and graphical objects. We can borrow this vocabulary\n in order to describe textual phenomena in a precise manner.\n\n   We begin with a simple example of a rotational transform: \n   \n \n\n \n  \n   Here a block of text has been rotated around its z-axis. This is clearly\n not a writing mode; the writing mode for this text\n is horizontal, left to right. Furthermore, even if we wished to treat this\n as a writing mode, we could not do so, because there is no way to use\n writing modes properties to describe an text orientation which is angled\n at 45 degrees; no human languages are consistently written in this\n orientation. It is more appropriate to treat this as a rotational transformation.\n We can do this using two properties: transform and\n transform-origin. (Both of these properties have quite complex\n value sets, and we will not look at all of them here. See the\n specification for full details.)\n\n   The transform property takes as its value one or more of the transform functions,\n one of which is the function rotateZ():\n\n   \n\n   Any rotation must take place clockwise around an axis positioned relative\n to the element being rotated, and the transform-origin property\n can be used to specify the pivot point. By default, the value of transform-origin\n is 50% 50%, the point at the centre of the element, but these\n values can be changed to reflect rotation around a different origin point.\n (The TEI zone element also bears an attribute rotate which can\n specify rotation in degrees around the z-axis, but it is not available for any other\n element.)\n\n   A block of text may also be rotated about either of its other axes. For example,\n this shows rotation around the Y (vertical) axis: \n   \n \n\n \n  \n \n\n   These are obviously trivial examples, but similar features do appear in historical texts.\n George Herbert's The Temple includes two stanzas headed\n Easter Wings which are both normally printed in a rotated form\n so that they represent a pair of wings:\n   \n \n  \n\n   This could be encoded thus: \n   \n   We might also argue that this is in fact a vertical writing\n   mode by supplying writing-mode: vertical-rl;\n   text-orientation: sideways-right as the value for the\n   style attribute in the preceding example.\n\n   Rotation is also useful as a method of handling a true writing\n   mode which is not covered by the CSS Writing Modes:\n   boustrophedon. This is a writing mode common in\n   inscriptions in Latin, Greek and other languages, in which\n   alternate lines run from left to right and from right to left6. Right-to-left\n   lines in boustrophedon have another unexpected feature: their\n   glyphs are reversed, so that these lines appear as mirror\n   writing, as in the following ancient Greek inscription:\n \n  \n   This might be transcribed as follows (ignoring word boundaries for the moment): \n   bibliography\n  The 180-degree rotation around the Y (vertical) axis here\n describes what is happening in the RTL  line in boustrophedon; the order of glyphs\n is reversed, and so is their individual orientation (in fact, we see them\n from the back, as it were). seg elements\n have been used here because these are clearly not lines\n in the sense of poetic lines; the text is continuous prose, and linebreaks\n are incidental.\n\n   There are obviously some unsatisfactory aspects of this manner of encoding\n boustrophedon. In the inscription above, some words run across linebreaks,\n so if we wished to tag both words and the right-to-left phenomena, one\n hierarchy would have to be privileged over the other. By using a transform\n function rather than a writing mode property, we are apparently suggesting\n that boustrophedon is not in fact a writing mode, whereas it clearly is. But\n the CSS Writing Modes specification does not provide support for boustrophedon,\n because it is a rather obscure historical phenomenon; using a rotational transform\n is one practical alternative. \n\n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=WD#WD\">5 Characters, Glyphs, and Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WDCAV#WDCAV\">5.9 Caveat</a>","content":"\n  5.9 Caveat\n\n   As with other parts of the CSS specification, the intended\n   effect of CSS Transforms properties and values is defined with\n   reference to a specific Visual formatting\n   model; the language is designed to describe how an HTML\n   document should be formatted. This is not, of course, the case for\n   the TEI, which lacks any explicit processing or formatting model,\n   and attempts to define objects as far as possible without\n   consideration of their visual appearance. As long as the properties\n   and values from the CSS Transforms module are used as a convenient,\n   well-specified descriptive language to capture features of a text,\n   without any expectation of using them directly and reliably for\n   rendering, this is not particularly problematic. CSS provides a\n   useful and well-defined vocabulary to describe many aspects of the\n   appearance of source texts, benefitting particularly from the\n   clarity of definition provided by the specification. However, if\n   there is any expectation of using this information to render a text\n   in a predictable and accurate way, it will be essential to provide\n   enough styling information throughout the document hierarchy to\n   resolve all ambiguities with regard to size, positioning, block\n   status, etc. before any element undergoes a transform\n   operation.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=WD#WD\">5 Characters, Glyphs, and Writing Modes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WSD-DEF#WSD-DEF\">5.10 Formal Definition</a>","content":"5.10 Formal Definition\nThe gaiji module described in this chapter makes available the following\ncomponents:\n\n  Character and Glyph Documentation\n  Character and glyph documentation\n  \n  \n  \n  \n  \n\n\nThe selection and combination of modules to form a TEI schema is described in\n1.2 Defining a TEI Schema.\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=VE#VE\">6 Verse</a>","content":"\n   6 Verse\n   This module is intended for use when encoding texts which are entirely or predominantly in\n      verse, and for which the elements for encoding verse structure already provided by the core\n      module are inadequate.\n   The tags described in section 3.13.1 Core Tags for Verse include elements for the encoding of verse\n      lines and line groups such as stanzas: these are available for any TEI document, irrespective\n      of the module it uses. Like the modules for prose and for drama, the module for verse\n      additionally makes use of the module defined in chapter 4 Default Text Structure to define the\n      basic formal structure of a text, in terms of front, body and back\n      elements and the text-division elements into which these may be subdivided.\n   The module for verse extends the facilities provided by these modules in the following ways:\n         a special purpose caesura element is provided, to allow for segmentation of\n            the verse line (see section 6.2 Components of the Verse Line)a set of attributes is provided for the encoding of rhyme scheme and metrical\n            information (see sections 6.4 Rhyme and Metrical Analysis and 6.5 Rhyme)a special purpose rhyme element is provided to support simple analysis of\n            rhyming words (see section 6.5 Rhyme)\n\n\n   \n   \n   \n   \n   \n\n   \n\n   \n\n   \n "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=VE#VE\">6 Verse</a><a class=\"breadcrumb\" href=\"p5.xml?id=VEST#VEST\">6.1 Structural Divisions of Verse Texts</a>","content":"\n      6.1 Structural Divisions of Verse Texts\n      Like other kinds of text, texts written in verse may be of widely differing lengths and\n         structures. A complete poem, no matter how short, may be treated as a free-standing text,\n         and encoded in the same way as a distinct prose text. A group of poems functioning as a\n         single unit may be encoded either as a group or as a text, depending on\n         the encoder's view of the text. For further discussion, including an example encoding for a\n         verse anthology, see chapter 4 Default Text Structure. \n      Many poems consist only of ungrouped lines.\n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n          This short poem by Emily\n         Dickinson is a simple case: bibliography\n         \n         \n         \n      \n      Often, however, lines are grouped, formally or informally, into stanzas, verse paragraphs,\n         etc. The lg element defined in the core tag set (in section 3.13.1 Core Tags for Verse)\n         may be used for all such groupings. It may thus serve for informal groupings of lines such\n         as those of the following example from Allen Ginsberg: bibliography\n         \n         \n         \n      \n      It may also be used to mark the verse paragraphs into which longer poems are often divided,\n         as in the following example from Samuel Taylor Coleridge's Frost at\n         Midnight: bibliography\n          Note, in the above example,\n         the use of the part attribute on the l element, where a verse line is\n         broken between two line groups, as discussed in section 3.13.1 Core Tags for Verse. \n      Most typically, however, the lg element is used to mark the highly regular line\n         groups which characterize stanzaic and similar verse forms, as in the following example\n         from Chaucer: bibliography\n         \n      \n      Like other text-division elements, lg elements may be nested hierarchically. For\n         example, one particularly common English stanzaic form consists of a quatrain or sestet\n         followed by a couplet. The lg element may be used to encode both the stanza and\n         its components, as in the following example from Byron: bibliography\n         \n      \n      Note the use of the type attribute to name the type of unit encoded by the\n            lg element; this attribute is common to all members of the att.divLike class (see section 4.1.1 Un-numbered Divisions).1\n         When used on lg, the type attribute is intended solely for conventional\n         names of different classes of text block. For systematic analysis of metrical and rhyme\n         schemes, use the met and rhyme attributes, for which see below,\n         section 6.4 Rhyme and Metrical Analysis. \n      As a further example, consider the Shakespearean sonnet. This may be divided into two\n         parts: a concluding couplet, and a body of twelve lines, itself subdivided into three quatrains:\n         \n         \n         \n         bibliography\n         \n      \n      Particularly lengthy poetic texts are often subdivided into units larger than stanzas or\n         paragraphs, which may themselves be subdivided. Spenser's Faery Queene, for\n         example, consists of twelve books each of which contains a prologue\n         followed by twelve cantos. Each prologue and each canto consists of\n         nine-line stanzas, each of which follows the same regular pattern.\n         Other examples in the same tradition are easy to find.\n\n      Large structures of this kind are most conveniently represented by div or\n            div1 elements, as described in section 4.1 Divisions of the Body. Thus the start\n         of the Faerie Queene might be encoded as follows: bibliography The encoder must choose at which point in the hierarchy of structural\n         units to introduce lg elements rather than a yet smaller div element: it\n         would (for example) also be possible to encode the above example as follows:bibliography\n\n      One reason for using div rather than lg elements is that the former may\n         contain non-metrical elements, such as epigraphs or dedications and other members of the\n            model.divTop class, whereas lg elements may contain\n         only headings or metrical lines. \n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=VE#VE\">6 Verse</a><a class=\"breadcrumb\" href=\"p5.xml?id=VESE#VESE\">6.2 Components of the Verse Line</a>","content":"\n      6.2 Components of the Verse Line\n      It is often convenient for various kinds of analysis to encode subdivisions of verse lines.\n         The general purpose seg element defined in the tag set for segmentation and\n         alignment (section 16.3 Blocks, Segments, and Anchors) is provided for this purpose: \n            <seg> represents any segmentation of text below the chunk level.\n         \n      To use this element together with the module for verse, the module for segmentation and\n         alignment must also be enabled as further described in section 1.2 Defining a TEI Schema. \n      In Old and Middle English alliterative verse, individual verse lines are typically split\n         into half lines. The seg element may be used to mark these explicitly, as in the\n         following example from Langland's Piers Plowman: bibliography\n         \n      The seg element can be nested hierarchically, in the same way as the lg\n         element, down to whatever level of detailed structure is required. In the following\n         example, the line has been divided into feet, each of which has been further\n         subdivided into syllables.2\n         bibliography\n      The seg element may be used to identify any subcomponent of a line which has\n         content; its type attribute may characterize such units in any way appropriate to the needs\n         of the encoder. For the specific case of labeling each foot with its formal type\n            (dactyl, spondee, etc.), and each syllable with its metrical or prosodic\n         status (syllables bearing primary or secondary stress, long syllables, short syllables),\n         however, the specialized attributes met and real are defined, which\n         provide a more systematic framework than the type attribute; see section 6.4 Rhyme and Metrical Analysis below.\n      In classical verse, a hexameter like that above may also be formally divided into two\n            cola or hemistiches. This example provides a typical\n         case, in that the boundary of the first colon falls in the middle of one of the feet\n         (between the syllables no and Tro). If both kinds of segmentation are\n         required, the part attribute might be used to mark the overlapping structure as\n         follows. bibliography\n      \n      Instead of using the part attribute on the seg element, it might be\n         simpler just to mark the point at which the caesura occurs. An additional element is\n         provided for analyses of this kind, in which what is to be marked are points between the\n            words, which have some significance within a verse line: \n            <caesura> marks the point at which a metrical line may be divided.\n          In classical prosody, the caesura, which occurs within a foot, is\n         distinguished from a diaeresis, which occurs on a foot boundary (not to be\n         confused with the division of a diphthong into two syllables, or the diacritic symbol used\n         to indicate such division, each of which is also termed diaeresis). This\n         distinction is rarely made nowadays, the term caesura being used for\n         any division irrespective of foot boundaries. No special-purpose diaeresis element is therefore provided.\n      As an example of the caesura element, we refer again to the example from Langland.\n         An encoder might choose simply to record the location of the caesura within each line,\n         rather than encoding each half-line as a segment in its own right, as follows: bibliography\n         \n      Logically, the opposite of caesura might be considered to be enjambement. When\n         the verse module is included in a schema, an additional class\n         called att.enjamb is defined as follows: \n            <att.enjamb> provides attributes that may be used to indicate\n    enjambement of the parent element.\n          The following lines demonstrate the use of the enjamb attribute to\n         mark places where there is a discrepancy between the boundaries of the l elements\n         and the syntactic structure of the verse (a discrepancy of some significance in some\n         schools of verse): bibliography\n         \n         \n         \n         \n         \n         \n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=VE#VE\">6 Verse</a><a class=\"breadcrumb\" href=\"p5.xml?id=VESA#VESA\">6.3 Encoding Textual Structures Across Verses</a>","content":"\n      6.3 Encoding Textual Structures Across Verses\n      It is possible that certain textual structures may span multiple lines of verse, either by \n         incorporating more than one, or by crossing line hierarchy. This is common,\n         for example, when lines contain reported thought or speech (i.e. said), \n         or other forms of quotation (i.e. q). For these cases, it is recommended practice \n         to fragment and reconstruct the elements representing the textual structures.\n      \n      The following example from Margaret Cavendish's Nature's Pictures shows speech\n         encoded across two lines reconstructed by chaining elements with prev and \n         next attributes: bibliography\n      \n      Alternatively, the elements may be reconstructed with stand-off markup using the element join: \n         bibliography\n      \n      \n         A more general discussion of these and other strategies to deal with fragmentation and reconstruction \n         appears in section 20.3 Fragmentation and Reconstitution of Virtual Elements.\n      \n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=VE#VE\">6 Verse</a><a class=\"breadcrumb\" href=\"p5.xml?id=VEME#VEME\">6.4 Rhyme and Metrical Analysis</a>","content":"\n      6.4 Rhyme and Metrical Analysis\n      When the module for verse is in use, the following additional attributes are available to\n         record information about rhyme and metrical form: \n            <att.metrical> defines a set of attributes that certain elements may use to\nrepresent metrical information.\n         \n      \n      These attributes may be attached to the lg element, or to the higher-level\n         text-division elements div, div1, etc. In general, the attributes should\n         be specified at the highest level possible; they may not however be specifiable at the\n         highest level if some of the subdivisions of a text are in prose and others in verse. All\n         these attributes may also be attached to the l and seg elements, but the\n         default notation for the rhyme attribute has no defined meaning when specified\n         on l or seg. The value for these attributes may take any form desired by\n         the encoder, but the nature of the notation used will determine how well the attribute\n         values can be processed by automatic means. \n      The primary function of the metrical attributes is to encode the conventional metrical or\n         rhyming structure within which the poet is working, rather than the actual prosodic\n         realization of each line; the latter can be recorded using the real attribute,\n         as further discussed below. A simple mechanism is also provided for recording the actual\n         realization of a rhyme pattern; see 6.5 Rhyme. \n      \n      \n      \n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=VE#VE\">6 Verse</a><a class=\"breadcrumb\" href=\"p5.xml?id=VEME#VEME\">6.4 Rhyme and Metrical Analysis</a><a class=\"breadcrumb\" href=\"p5.xml?id=VEMEsamp#VEMEsamp\">6.4.1 Sample Metrical Analyses</a>","content":"\n         6.4.1 Sample Metrical Analyses\n         As a simple example of the use of these attributes, consider the following lines from\n            Pope's Essay on Criticism: bibliography\n            \n         \n         This text is written entirely in heroic couplets; each line is an iambic\n            pentameter (which, using a common notation, can be described with the formula\n               -+|-+|-+|-+|-+/, each - denoting a metrically unstressed\n            syllable, each + a metrically stressed one, each | a foot\n            boundary, and the / a line-end), and the couplets rhyme (which can be\n            represented with the conventional formula aa). \n         Because both rhyme pattern and metrical form are consistent throughout the poem, they\n            may be conveniently specified on the div element; the values given for the\n            attributes will be inherited by any metrical unit contained within the div\n            elements of this poem, and must be interpreted in the appropriate way. \n         Since the notation used in the met, real, and rhyme\n            attributes is user-defined, no binding description can be given of its details or of how\n            its interpretation must proceed. (A default notation is provided for the\n               rhyme attribute, which however the encoder can replace with another; see\n            section 6.5 Rhyme.) It is expected, however, that software should be able to\n            support these attributes in useful ways; the more intelligent the software is, and the\n            more knowledge of metrics is built into it, the better it will be able to support these\n            attributes. In the extract given above, for example, the met and\n               rhyme attribute values specified on the div element are inherited\n            directly by the lg elements nested within it. Since the met value\n            specifies the metrical form of a single verse line, the structure of the lg as\n            a whole is understood to involve as many repetitions of the pattern as there are lines\n            in the verse paragraph. The same attribute value, when inherited in turn by the\n               l element, must be understood not to repeat. With sufficiently\n            sophisticated software, segments within the line might even be understood as inheriting\n            precisely that portion of the formula which applies to the segment in question; this\n            will, however, be easier to accomplish for some languages than for others. \n         The rhyme attribute in this example uses the default notation to specify a\n            rhyme scheme applicable only to pairs of lines. As elsewhere, the default notation for\n            the rhyme attribute has no meaning for metrical units at the line level or\n            below. In verse forms where line-internal rhyme is structurally significant, e.g. in\n            some skaldic poetry, the default notation is incapable of expressing the required\n            information, since the rhyme pattern may need to be specified for units smaller than the\n            line. In such cases, a user-specified rhyme notation must be substituted for the default\n            notation, or else the rhyme pattern must be described using some alternative method\n            (e.g. by using the link mechanism described below). \n         The precise semantics of the met attribute and the inferences which software\n            is expected or able to draw from it, are implementation-dependent; so are the semantics\n            and processing of the rhyme attribute, when user-specified notations are\n            used. \n         A formal definition of the significance of each component of the pattern given as the\n            value of the met attribute may be provided in the metDecl element\n            within the encodingDesc element in the TEI header (see section 6.6 Metrical Notation Declaration). The encoder is free to invent any notation appropriate to his or\n            her analytic needs, provided that it is adequately documented in this element. The\n            notation may define metrical components using invented or traditional names (such as\n               iamb or hexameter) or in terms of basic units such as codes for\n            stressed or unstressed syllables, or a combination of the two. \n         The real (for realization) attribute may optionally be specified to\n            indicate any deviation from the pattern defined by the met attribute which\n            the encoder wishes to record. By default, the real attribute has the same\n            value as the met attribute on the same element; it is only necessary to\n            provide an explicit value when the realization differs in some way from the abstract\n            metrical pattern. The tension between conventional metrical pattern and its realization\n            may thus be recorded explicitly. For example, many readers of the above passage would\n            stress the word But at the beginning of the third line rather than the word\n               of following it, as the metrical pattern would normally require. This\n            variation might be encoded as follows:\n\t \n\t \n         Where the real attribute is used to over-ride the default or conventional\n            metrical pattern, it applies only to the element on which it is specified. The default\n            pattern for any subsequent lines is unaffected.\n         As it happens, this particular kind of variation is very common in the English iambic\n            pentameter—it even has a name: trochaic substitution—an encoder might\n            therefore \n            \n             choose to regard this not as an\n            instance of a variant realization, but as an instance of a variant metrical form:\n\t     Alternatively, a different metrical notation might be defined, in\n            which this kind of variation was permitted throughout the text.\n         In choosing whether to over-ride a metrical specification in this way or by using the\n               real attribute, the encoder is required to determine whether the change is\n            a systematic or conventional one (as in this example) or an occasional variation,\n            perhaps for local effect. In the following example, from Goethe's Auf\n               dem See, the variation is a matter of local realization:\n            \n            bibliography On the other hand, the famous inserted alexandrine in Pope's Essay\n               on Criticism, might be encoded as follows: bibliography\n            \n             Here the\n               met attribute indicates that a different metrical convention (the\n            alexandrine) is in force, while the real attribute indicates that there is a\n            variation from that convention. As with many other aspects of metrical analysis,\n            however, this is of necessity an entirely interpretive judgment. \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=VE#VE\">6 Verse</a><a class=\"breadcrumb\" href=\"p5.xml?id=VEME#VEME\">6.4 Rhyme and Metrical Analysis</a><a class=\"breadcrumb\" href=\"p5.xml?id=VEMElevels#VEMElevels\">6.4.2 Segment-Level versus Line-level Tagging</a>","content":"\n         6.4.2 Segment-Level versus Line-level Tagging\n         The examples given so far have encoded information about the realization of metrical\n            conventions at the level of the whole verse-line. This has obvious advantages of\n            simplicity, but the disadvantage that any deviation from metrical convention is not\n            marked at its precise point of occurrence in the text. Greater precision may be\n            achieved, but only at the cost of marking deviant metrical units explicitly. This may be\n            done with the seg element, giving the variant realization as the value of the\n               real attribute on that element. Using this method, the example given\n            immediately above might be encoded as follows: bibliography The marking of the\n            foot boundaries with the symbol | in the met attribute value of\n            the l element allows the human reader, or a sufficiently intelligent software\n            program, to isolate the correct portion of that attribute value as the default value for\n            the same attribute on the seg elements for feet, namely -+. It is of\n            course up to the encoder to decide whether or not to include the n attribute\n            of seg here, and whether or not also to tag the feet in the line in which there\n            is no deviation from the metrical convention. The ability of software to infer which\n            foot is being marked, if not all are tagged, will depend heavily on the language of the\n            text and the knowledge of prosody built into the software; the fuller and more explicit\n            the markup, the easier it will be for software to handle it. It may prove useful,\n            however, to mark metrical deviations in the manner shown, even if the available software\n            is not sufficiently intelligent to scan lines without aid from the markup. Human readers\n            who are interested in prosody may well be able to exploit the markup in useful ways even\n            with less sophisticated software. \n         There are circumstances where it may also be useful to use the met attribute\n            of seg. If we wish to identify the exact location of the different types of\n            foot in the first line of Virgil's Aeneid, the text could be encoded as\n            follows (for simplicity's sake the caesura has been omitted): bibliography An appropriate value of the met attribute might also be\n            supplied on the enclosing div element, to indicate that each foot may be made\n            up of a dactyl or a spondee, so that the values given here for met at the\n            level of the foot may be considered a series of local variations on this fundamental\n            pattern; in cases like this, of course, the local variations may also be considered\n            aspects of realization rather than of convention, in which case the real\n            attribute may be used instead of met, if desired. \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=VE#VE\">6 Verse</a><a class=\"breadcrumb\" href=\"p5.xml?id=VEME#VEME\">6.4 Rhyme and Metrical Analysis</a><a class=\"breadcrumb\" href=\"p5.xml?id=VEMEana#VEMEana\">6.4.3 Metrical Analysis of Stanzaic Verse</a>","content":"\n         6.4.3 Metrical Analysis of Stanzaic Verse\n         The method described above may be used to encode quite complex verse forms, for instance\n            various kinds of fixed-form stanzas. Let us take one of Dante's canzoni, in which each\n            stanza except the last has the same combination of eleven-syllable and seven-syllable\n            lines, and the same rhyme scheme: bibliography\n            \n         Here the met attribute specifies a metrical pattern for each of the\n            twenty-one lines making up a stanza of the canzone. Each stanza inherits\n            this definition from the parent div element. The rhyme attribute\n            specifies a rhyme scheme for each stanza, in the same way. \n         In the metrical notation used here, the letter E represents a line containing\n            nine syllables which may or may not be metrically prominent, a tenth which is prominent\n            and an optional non-prominent eleventh syllable. The letter S is used to\n            represent a line containing five syllables which may or may not be metrically prominent,\n            a sixth which is prominent and an optional non-prominent seventh syllable. A suitable\n            definition for this notation might be given by a metDecl element like the\n            following:\n\t    \n         \n         As noted above, the metrical pattern specified on the div applies to each\n               lg (stanza) element contained within the div. In fact however,\n            after seven stanzas of this type, there is a final stanza, known as a\n               commiato or envoi, which follows a different metrical and rhyming\n            scheme. The solution to this problem is simply to specify a new met attribute\n            on the eighth stanza itself, which will override the default value inherited from parent\n               div, as follows: bibliography\n         Note that, in the same way as for the real attribute, over-riding of this\n            kind does not affect subsequent elements at the same hierarchic level. Any lg\n            element following the commiato above would be assumed to use the same\n            metrical and rhyming scheme as the one preceding the commiato. Moreover,\n            although it is quite regular (in the sense that the last stanza of each\n               canzone is a commiato), the over-riding must be specified\n            for each case. \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=VE#VE\">6 Verse</a><a class=\"breadcrumb\" href=\"p5.xml?id=VERH#VERH\">6.5 Rhyme</a>","content":"\n      6.5 Rhyme\n\n      The rhyme attribute is used to specify the rhyme pattern of a verse form. It\n         should not be confused with the rhyme element, which is used to mark the actual\n         rhyming word or words: \n            <rhyme> marks the rhyming part of a metrical line.\n         \n\n      Like the met attribute, the rhyme attribute can be used with a\n         user-specified notation documented by the metDecl element in the TEI header.\n         Unlike met, however, the rhyme attribute has a default notation; if\n         this default notation is used, no metDecl element need be given. \n      The default notation for rhyme offers the ability to record patterns of rhyming lines,\n         using the traditional notation in which distinct letters stand for rhyming lines. For a\n         work in rhyming couplets, like the Pope example above, the rhyme attribute\n         simply specifies aa, indicating that pairs of adjacent lines rhyme with each\n         other. For a slightly more complex scheme, applicable to groups of four lines, in which\n         lines 1 and 3 rhyme, as do lines 2 and 4, this attribute would have the value\n            abab. The traditional Spenserian stanza has the pattern ababbcbcc,\n         indicating that within each nine line stanza, lines 1 and 3 rhyme with each other, as do\n         lines 2, 4, 5 and 7, and lines 6, 8 and 9. \n      Non-rhyming lines within such a group may be represented using a hyphen or an x, as in the\n         following example: bibliography\n      The rhyme element may be used to mark the words (or parts of words) which rhyme\n         according to a predefined pattern: bibliography\n      \n      The label attribute is used to specify which parts of a rhyme scheme a given set\n         of rhyming words represent: bibliography\n      Within a given scope, all rhyme elements with the same value for their\n            label attribute are assumed to rhyme with each other: thus, in the above\n         example, the two rhymes labelled a in the first stanza rhyme with each other,\n         but not necessarily with those labelled a in the second stanza. The scope is\n         defined by the nearest ancestor element for which the rhyme attribute has been\n         supplied.\n\n      The rhyme element can appear anywhere within a verse line, and not necessarily\n         around a single word. It can thus be used to mark quite complex internal rhyming schemes,\n         as in the following example: bibliography\n         \n      \n      This mechanism, although reasonably simple for simple cases, may not be appropriate for\n         more complex applications. In general, rhyme may be considered as a special form of\n            correspondence, and hence encoded using the mechanisms defined for\n         that purpose in section 16.5 Correspondence and Alignment. Similar considerations apply to other\n         metrical features such as alliteration or assonance. \n      To use the correspondence mechanisms to represent the complex rhyming pattern of the above\n         example, each rhyme element must be given a unique identifier, as follows: bibliography Now that each rhyming word, or part-word, has been tagged and allocated an\n         arbitrary identifier, the general purpose link element may be used to indicate\n         which of the rhyme elements share the same rhyme, as follows: \n      \n      For further discussion of the link and linkGrp element, see section 16.5 Correspondence and Alignment. \n      The rhyme and caesura phrase level elements are made available by the\n            model.lPart class when the module defined by this chapter is\n         included in a schema.\n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=VE#VE\">6 Verse</a><a class=\"breadcrumb\" href=\"p5.xml?id=HDMN#HDMN\">6.6 Metrical Notation Declaration</a>","content":"\n      6.6 Metrical Notation Declaration\n      When the module defined in this chapter is included in a schema, a specialized element is\n         optionally available in the encodingDesc element of the TEI header to document the\n         metrical notation used in marking up a text. \n            <metDecl> documents the notation employed to represent a metrical pattern when this is specified as\n    the value of a met, real, or rhyme attribute on any structural\n    element of a metrical text (e.g. lg, l, or seg).\n            <metSym> documents the intended significance of a particular character or character sequence within a\n    metrical notation, either explicitly or in terms of other metSym elements in the same metDecl.\n         \n      As with other components of the header, metrical notation may be specified either formally\n         or informally. In a formal specification, every symbol used in the metrical notation must\n         be documented by a corresponding metSym element; in an informal one, only a brief\n         prose description of the way in which the notation is used need be given. In either case,\n         the optional pattern attribute may be used to supply a regular expression which\n         a processor can use to validate expressions in the intended notation. The following\n         constraints apply: if pattern is supplied, any notation used which does not conform to it\n               should be regarded as invalidif any metSym is defined, then any notation using undefined symbols\n               should be regarded as invalidif both pattern and symbol are defined, then every symbol appearing explicitly\n               within pattern must be definedsymbols which are not matched by pattern may be defined within a\n                  metDecl element\n      As a simple example, consider the case of the notation in\n      which metrical prominence, metrical feet, and line boundaries\n      are all to be encoded. Legal specifications in this notation may\n      be written for any sequence of metrically prominent or\n      non-prominent features, optionally separated by foot or metrical\n      line boundaries at arbitrary points. Assuming that the symbol\n      1 is used for metrical prominence,\n      0 for non-prominence,\n      | for foot boundary and\n      / for line boundary, then the following\n      declaration achieves this objective:\n\t \n      \n      The same notation might also be specified less formally, as follows:\n      \n\t  Note that in this case, because the pattern attribute has\n         not been supplied, no processor can validate met attribute values within the\n         text which use this metrical notation.\n      For more complex cases, it will often be more convenient to\n      define a notation incrementally. The terminal\n      attribute should be used to indicate for a given symbol whether\n      or not it may be re-defined in terms of other symbols used\n      within the same notation. For example, here is a notation for\n      encoding classical metres, in which symbols are provided for the\n      most common types of foot. These symbols are themselves\n      documented within the same notation, in terms of more primitive\n      long and short syllables:\n      \n      Note here the use of the global n attribute to supply\n      an additional name for the symbols being documented.\n\n      Where an encoder wishes to use more than one different\n      pattern for metrical notation, multiple metDecl\n      elements may be included in the encodingDesc, each\n      supplied with an xml:id. The decls\n      attribute may be used in the text of the document to specify\n      which metDecl is in force at a particular point in the\n      text. In this example, two metDecls are defined in the\n      header, one with an English verse pattern and one with a French\n      pattern. In the body of the document, there are two div\n      elements, one declaring the English pattern and one the\n      French:\n      \n      \n      \n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=VE#VE\">6 Verse</a><a class=\"breadcrumb\" href=\"p5.xml?id=VEETC#VEETC\">6.7 Encoding Procedures for Other Verse Features</a>","content":"\n      6.7 Encoding Procedures for Other Verse Features\n      A number of procedures that may be of particular concern to encoders of verse texts are\n         dealt with elsewhere in these guidelines. Some aspects of layout and physical appearance,\n         especially important in the case of free verse, are dealt with in chapter 11 Representation of Primary Sources. Some initial recommendations for the encoding of phonetic or prosodic transcripts,\n         which may be helpful in the analysis of sound structures in poetry, are to be found in\n         chapter 8 Transcriptions of Speech; it may also be found convenient to use standard entity names\n         (those proposed for the International Phonetic Alphabet suggest themselves) to mark\n         positions of suprasegmentals such as primary and secondary stress, or other aspects of\n         accentual structure. \n\n      As already indicated, chapter 16 Linking, Segmentation, and Alignment contains much which will be found useful\n         for the aligning of multiple levels of commentary and structure within verse analysis.\n         Encoders of verse (as of other types of literary text) will frequently wish to attach\n         identifying labels to portions of text that are not part of a system of hierarchical\n         divisions, may overlap with one another, and/or may be discontinuous; for instance passages\n         associated with particular characters, themes, images, allusions, topoi, styles, or modes\n         of narration. Much of the computerized analysis of verse seems likely to require dividing\n         texts up into blocks in this way. The span element discussed in 17.3 Spans and Interpretations provides the means for doing this. Finally, the procedures for the\n         tagging of feature structures, described in chapter 18 Feature Structures, provide a powerful\n         means of encoding a wide variety of aspects of verse literature, including not only the\n         metrical structures discussed above, but also such stylistic and rhetorical features as\n         metaphor. \n      For other features it must for the time being be left to encoders to devise their own\n         terminology. Elements such as metaphor tenor=\"...\" vehicle=\"...\" ...\n            /metaphor might well suggest themselves; but given the problems of definition\n         involved, and the great richness of modern metaphor theory, it is clear that any such\n         format, if predefined by these Guidelines, would have seemed objectionable to some and\n         excessively restrictive to many. Leaving the choice of tagging terminology to individual\n         encoders carries with it one vital corollary, however: the encoder must be utterly\n         explicit, in the TEI header, about the methods of tagging used and the criteria and\n         definitions on which they rest. Where no formal elements are currently proposed, such\n         information may readily be given as simple prose description within the\n            encodingDesc element defined in section 2.3 The Encoding Description. \n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=VE#VE\">6 Verse</a><a class=\"breadcrumb\" href=\"p5.xml?id=VESTR#VESTR\">6.8 Module for Verse</a>","content":"\n     6.8 Module for Verse\n     The module described in this chapter makes available the\n     following components:\n     \n       Verse\n       Verse structures\n       \n       \n       \n       \n       \n       \n       \n       The selection and combination of modules to form a TEI schema\n       is described in 1.2 Defining a TEI Schema.\n     \n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DR#DR\">7 Performance Texts</a>","content":"7 Performance Texts\nThis module is intended for use when encoding printed dramatic\ntexts, screen plays or radio scripts, and written transcriptions of any\nother form of performance.\n \nSection 7.1 Front and Back Matter\n  discusses elements such as cast lists,\nwhich can appear only in the front or back matter of printed dramatic\ntexts. Section 7.2 The Body of a Performance Text discusses the structural\ncomponents of performance texts: these include major structural\ndivisions such as acts and scenes (section 7.2.1 Major Structural Divisions);\nindividual speeches (section 7.2.2 Speeches and Speakers); groups of\nspeeches (section 7.2.3 Grouped Speeches); stage directions\n(section 7.2.4 Stage Directions); and the elements making up individual\nspeeches (section 7.2.5 Speech Contents). Section 7.2.6 Embedded Structures\ndiscusses ways of encoding units which cross the simple hierarchic\nstructure so far defined, such as embedded songs or masques.\nFinally, section 7.3 Other Types of Performance Text discusses a small number of\nadditional elements characteristic of screen plays and radio or\ntelevision scripts, as well as some elements for representing\ntechnical stage directions such as lighting or blocking.\n\nThe default structure for dramatic texts is similar to that\ndefined by chapter 4 Default Text Structure, as further discussed in\nsection 7.2.1 Major Structural Divisions.\n\nTwo element classes are used by this module.\nThe model.frontPart.drama class supplies\nspecialized elements which can appear only in the front or back matter\nof performance texts.  The model.stageLike\nclass supplies a set of elements for stage directions and similar\nitems such as camera movements, which can occur between or within\nspeeches. \n\n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DR#DR\">7 Performance Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRFAB#DRFAB\">7.1 Front and Back Matter\n </a>","content":"7.1 Front and Back Matter\n \nIn dramatic texts, as in all TEI-conformant documents, the header\nelement is followed by a text element, which contains optional\nfront and back matter, and either a body or else a\ngroup of nested text elements.  For more information\non these, see chapter 4 Default Text Structure.\n \nThe front and back elements are most likely to be\nof use when encoding preliminary materials in published performance\ntexts.  When the module defined by this chapter is included in a\nschema, the following additional elements not generally\nfound in other forms of text become available as part of the front or\nback matter:\n<performance> contains a section of front or back matter describing how a dramatic piece is to be\n    performed in general or how it was performed on some specific occasion.<prologue> contains the prologue to a drama, typically spoken by an actor out of character, possibly in\n    association with a particular performance or venue.<epilogue> contains the epilogue to a drama, typically spoken by an actor out of character, possibly in\n    association with a particular performance or venue.<set> contains a description of the setting, time, locale, appearance, etc., of the action of a\n    play, typically found in the front matter of a printed performance text (not a stage direction).<castList> contains a single cast list or dramatis personae.\n \n\nElements for encoding each of these specific kinds of front matter\nare discussed in the remainder of this section, in the order given\nabove.  In addition, the front matter of dramatic texts may include\nthe same elements as that of any other kind of text, notably title\npages and various kinds of text division, as discussed in section 4.5 Front Matter.  The encoder may choose to ignore the specialized\nelements discussed in this section and instead use constructions of\nthe type div type=\"performance\" or div1\ntype=\"set\".\n \n\nMost other material in the front matter of a performance text will be\nmarked with the default text structure elements described in chapter\n4 Default Text Structure.  For example, the title\npage, dedication, other commendatory material, preface, etc., in a\nprinted text should be encoded using div or div1\nelements, containing headings, paragraphs, and other core tags.\n \n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DR#DR\">7 Performance Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRFAB#DRFAB\">7.1 Front and Back Matter\n </a><a class=\"breadcrumb\" href=\"p5.xml?id=DRSET#DRSET\">7.1.1 The Set Element</a>","content":"7.1.1 The Set Element\nA special form of note describing the setting of a dramatic text\n(that is, the time and place of its action) is sometimes found in the\nfront matter.\n<set> contains a description of the setting, time, locale, appearance, etc., of the action of a\n    play, typically found in the front matter of a printed performance text (not a stage direction).\nDescriptions of the setting may also appear as initial stage directions\nin the body of the play, but such descriptions should be marked as stage\ndirections, not set.  The set element should be used\nonly where the description forms part of the front matter, as in the\nfollowing examples:\nbibliography\nbibliography\n \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DR#DR\">7 Performance Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRFAB#DRFAB\">7.1 Front and Back Matter\n </a><a class=\"breadcrumb\" href=\"p5.xml?id=DRPRO#DRPRO\">7.1.2 Prologues and Epilogues</a>","content":"7.1.2 Prologues and Epilogues\nMany plays in the Western tradition include in their front matter a\nprologue, spoken by an actor, generally not in character.  Similar\nspeeches often also occur at the end of the play, as epilogues.  The\nelements prologue and epilogue are provided for the\nencoding of such features within the front or back matter, where\nappropriate.\n<prologue> contains the prologue to a drama, typically spoken by an actor out of character, possibly in\n    association with a particular performance or venue.<epilogue> contains the epilogue to a drama, typically spoken by an actor out of character, possibly in\n    association with a particular performance or venue.\nA prologue may be encoded just like a distinct poem, as in the following\nexample:\nbibliography\n\n \nA prologue or epilogue may also be encoded as a speech, using the\nsp element described in section 3.13.2 Core Tags for Drama.  This is\nparticularly appropriate where stage directions, etc., are involved, as\nin the following example:\nbibliography\n\n \nIn cases where the prologue or epilogue is clearly a significant part\nof the dramatic action, it may be preferable to include it in the body\nof a text, rather than in the front or back matter.  In such cases, the\nencoder (and theatrical tradition) will determine whether or not to\nregard it as a new scene or division, or simply the final speech in the\nplay.  In the First Folio version of Shakespeare's\nTempest, for example, Prospero's final speech is clearly\nmarked off as a distinct textual unit by the headings and layout of the\npage, and might therefore be encoded as back matter:\nbibliography\n\n \nIn many modern editions, the editors have chosen to regard\nProspero's speech as a part of the preceding scene:\nbibliography\n\n\t\n \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DR#DR\">7 Performance Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRFAB#DRFAB\">7.1 Front and Back Matter\n </a><a class=\"breadcrumb\" href=\"p5.xml?id=DRPERF#DRPERF\">7.1.3 Records of Performances</a>","content":"7.1.3 Records of Performances\nPerformance texts are not only printed in books to be read, they are\nalso performed.  It is common practice therefore to include within the\nfront matter of a printed dramatic text some brief account of particular\nperformances, using the following element:\n<performance> contains a section of front or back matter describing how a dramatic piece is to be\n    performed in general or how it was performed on some specific occasion.\nThe performance element may be used to group any and all\ninformation relating to the actual performance of a play or screenplay,\nwhether it specifies how the play should be performed in general or how\nit was performed in practice on some occasion.\n \nPerformance information may include complex structures such as cast\nlists, or paragraphs describing the date and location of a performance,\ndetails about the setting portrayed in the performance and so forth.\n(See the discussion of these specialized structures in section 7.1 Front and Back Matter\n  above.)  If\ninformation for more than one performance is being recorded, then more\nthan one performance element should be used, wherever possible.\n \nNames of persons, places, and dates of particular significance within\nthe performance record may be explicitly marked using the general\npurpose name, rs type=\"place\" and date\nelements described in section 3.6.4 Dates and Times.\nNo particular elements for such features as stagehouses,\ndirectors, etc., are proposed at this time.\n \nFor example:\nbibliography\n\n\t\n\t\n\t\n\t\nOr:\nbibliography\n\n \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DR#DR\">7 Performance Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRFAB#DRFAB\">7.1 Front and Back Matter\n </a><a class=\"breadcrumb\" href=\"p5.xml?id=DRCAST#DRCAST\">7.1.4 Cast Lists</a>","content":"7.1.4 Cast Lists\nA cast list is a specialized form of list,\nconventionally found at the start or end of a play, usually listing all\nthe speaking and non-speaking roles in the play, often with additional\ndescription (Cataplasma, a maker of Periwigges and Attires) or\nthe name of an actor or actress (Old Lady Squeamish. Mrs\nRutter).  Cast lists may be encoded with the general purpose\nlist element described in section 3.8 Lists, but for\nmore detailed work the following specialized elements are provided:\n<castList> contains a single cast list or dramatis personae.<castGroup> groups one or more individual castItem\nelements within a cast list.<castItem> contains a single entry within a cast list, describing\neither a single role or a list of non-speaking roles.\nA castItem element may contain any mixture of elements\ntaken from the model.castItemPart class,\nmembers of which (when this module is included) are:\n\n<role> contains the name of a dramatic role, as given in a cast list.<roleDesc> describes a character's role in a drama.<actor> contains the name of an actor appearing within a cast list.\nCast lists often have an internal structure of their own; it is quite\nusual to find, for example, nobility and commoners, or male and female\nroles, presented in different groups or sublists.  Roles are also often\ngrouped together by their function, for example:\nSons of Cato:\nPortiusMarcus\n \nA cast list relating to a specific performance may be accompanied by\nnotes about the time or place of that performance, indicating (for\nexample) the name of the theatre where the play was first presented, the\nname of the producer or director, and so forth.  When the cast list\nrelates to a specific performance, it should be embedded within a\nperformance element (see section 7.1.3 Records of Performances), as in\nthe following example:\nbibliography\n\n \nIn this example, the castItem elements have no substructure.\nIf desired, however, their components may be more finely distinguished\nusing the elements role, roleDesc, and actor.\nFor example, the second cast item above might be encoded as follows:\nbibliography\n \nThe ref attribute on actor may be used to associate the name\nwith information about the real-world person identified, as further discussed in section ND. In the previous example,\nwe might associate the name of Paul Daneman with his entry in a widely used bibliography as follows :\n  bibliography  \nThe global xml:id attribute may be used to specify a unique\nidentifier for the role element, where it is desired to link\nspeeches within the text explicitly to the role, using the\nwho attribute, as further discussed in section 7.2.2 Speeches and Speakers below.\n \nThe occasionally lengthy descriptions of a role sometimes found in\nwritten play scripts may be marked using the roleDesc element,\nas in the following example:\nbibliography\n\nFor non-speaking or un-named roles, a castItem may contain a\nroleDesc without an accompanying role, for example\nbibliography\n \nWhen a list of such minor roles is given together, the\ntype attribute of the castItem should indicate that\nit contains more than one role, by taking a value such as list.  The encoder may or may not elect to\nencode each separate constituent within such a composite\ncastItem.  Thus, either of the following is acceptable:\nbibliography\n \nA group of cast items forming a distinct subdivision of a cast list\nmay be marked as such by using the special purpose castGroup\nelement.  The rend attribute may be used to indicate\nwhether this grouping is indicated in the text by layout alone (i.e. the\nuse of whitespace), by long braces or by some other means.  A\ncastGroup may contain  an optional heading (represented as\nusual by a head element) followed by a series of\ncastItem elements:\nbibliography\n\n \nAlternatively, the encoder may prefer to regard the phrase\nfriends of Mathias as a role description, and encode the above\nexample as follows:\n  bibliography\n\nThis version has the advantage that all role descriptions are treated\nalike, rather than in some cases being treated as headings. On the\nother hand there are also  cases, such as the following, where the\nrole description does function more like a heading:\n\nbibliography\n\n \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DR#DR\">7 Performance Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRBOD#DRBOD\">7.2 The Body of a Performance Text</a>","content":"7.2 The Body of a Performance Text\nThe body of a performance text may be divided into structural\nunits, variously called acts, scenes, stasima, entr'actes, etc.  All\nsuch formal divisions should be encoded using an appropriate\ntext-division element (div, div1, div2,\netc.), as further discussed in section 7.2.1 Major Structural Divisions.\nWhether divided up into such units or not, all performance texts\nconsist of sequences of speeches (see 7.2.2 Speeches and Speakers) and stage\ndirections (see 7.2.4 Stage Directions).  In musical performances, it\nis also common to identify groups of speeches which act as a single\nunit, sometimes called a number; such units typically\nfloat within the structural hierarchy at the same level as speeches\npreceding or following them and cannot therefore be treated as \ntext-divisions. (see 7.2.3 Grouped Speeches). Speeches will generally\nconsist of a sequence of chunk-level items: paragraphs,\nverse lines, stanzas, or (in case of uncertainty as to whether\nsomething is verse or prose) ab elements (see 7.2.5 Speech Contents).\nThe boundaries of formal units such as verse lines or paragraphs do\nnot always coincide with speech boundaries.  Units such as songs may be\ndiscontinuous or shared among several speakers.  As described below in\nsection 7.2.6 Embedded Structures, such fragmentation may be encoded in a\nrelatively simple fashion using the linkage and aggregation mechanisms\ndefined in chapter 16 Linking, Segmentation, and Alignment.\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DR#DR\">7 Performance Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRBOD#DRBOD\">7.2 The Body of a Performance Text</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRDIV#DRDIV\">7.2.1 Major Structural Divisions</a>","content":"7.2.1 Major Structural Divisions\nLarge divisions in drama such as acts, scenes, stasima, or entr'actes\nare indicated by numbered or unnumbered div elements, as\ndescribed in section 4.1 Divisions of the Body.  The type and\nn attributes may be used to define the type of division being\nmarked, and to provide a name or number for it, as in the following\nexample:\nbibliography\n\nWhere the largest divisions of a performance text are themselves\nsubdivided, most obviously in the case of plays traditionally divided\ninto acts and scenes, further nested text-division elements may be used,\nas in this example:\nbibliography\n\nIn the example above, the div2 element has been used to\nrepresent the French scene convention, (where the\nentrance of each new set of characters is marked as a distinct unit in\nthe text) and the div1 element to represent the acts into which\nthe play is divided.  The elements chosen are determined only by the\nhierarchic position of these units in the text as a whole.  If the text\nhad no acts, but only scenes, then the scenes might be represented by\ndiv1 elements.  Equally, if a play is divided only into\nacts, with no smaller subdivisions, then the div1\nelement might be used to represent acts.  The type should be\nused, as above, to make explicit the name associated\nwith a particular category of subdivision.\nAs an alternative to the use of numbered\ndivisions, the encoder may represent all subdivisions with the same\nelement, the unnumbered div.  The second\nact in the above example would then be represented as follows:\nbibliography\nFor further discussion of the use of numbered and unnumbered\ndivisions, see section 4.1 Divisions of the Body."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DR#DR\">7 Performance Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRBOD#DRBOD\">7.2 The Body of a Performance Text</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRSP#DRSP\">7.2.2 Speeches and Speakers</a>","content":"7.2.2 Speeches and Speakers\nThe following elements are used to identify speeches and speakers in\na performance text:\n<sp> contains an individual speech in a performance text, or a passage presented as such in a prose or\n    verse text.<speaker> contains a specialized form of heading or label, giving the name of one or more speakers in a\n        dramatic text or fragment.\nAs noted above, the structure of many performance texts may be\nanalysed as multiply hierarchic:  a scene of a verse play, for example,\nmay be divided into speeches and, at the same time, into verse lines.\nThe end of a line may or may not coincide with the end of a speech, and\nvice versa.  Other structures, such as songs, may be discontinuous or\nsplit up over several speeches.  For some purposes it will be\nappropriate to regard the verse-structure as the fundamental organizing\nprinciple of the text, and for others the speech structure; in some\ncases, the choice between the two may be arbitrary.  The discussion in\nthe remainder of this chapter assumes that it is the speech-based\nhierarchy which most prominently determines the structure of performance\ntexts, but the same mechanisms could be employed to encode a view of a\nperformance text in which individual speeches were entirely subordinate\nto the formal units of prose and verse. For more detailed discussion and\nexamples of various treatments of this fundamental issue, refer to\nchapter 20 Non-hierarchical Structures.\nThe who attribute and the speaker element are\nboth used to indicate the speaker or speakers of a speech, but in\nrather different ways.  The speaker element is used to encode\nthe word or phrase actually used within the source text to indicate\nthe speaker: it may contain any string or prefix, and may be thought\nof as a highly specialized form of stage direction.  The\nwho attribute however contains one or more pointer values,\neach of which indicates one or more other XML elements documenting the\ncharacter to whom the speech is assigned.  Typically, this attribute\nmight point to a person element in the TEI header 15.2.2 The Participant Description, to a role element in the cast list 7.1.4 Cast Lists, or even to some external source such as an online\nhandbook of dramatic roles. The most usual case is that the pointer\nvalue supplied (prefixed by a sharp sign) corresponds with the value\nof an xml:id attribute,\nused elsewhere in the document to identify a particular element, as in the following examples:\n\nbibliography\n\nIf present, a speaker element may only appear as the first\npart of an sp element. The distinction between the\nspeaker element and the who attribute makes it\npossible to encode uniformly characters whose names are not indicated in\na uniform fashion throughout the play, or characters who appear in\ndisguise, as in the following examples:\nbibliography\n\nIf the speaker attributions are completely regular (and may thus be\nreconstructed mechanically from the values given for the who\nattribute), or are of no interest for the encoder of the text (as might\nbe the case with editorially supplied attributions in older texts), then\nthe speaker element need not be used; the former example above\nthen might look like this:\nbibliography\n\nMore than one identifier may be listed as value for the who\nattribute if the speech is spoken by more than one person, as in the\nfollowing example:\nbibliography\n\nIn the event there is a speech that is assigned to a\ncharacter that is not listed in the source cast list, a\ncastList may be encoded inside the standOff\nelement to provide an element to which the who of\nsp may point.\nThe sp and speaker elements are both declared\nwithin the core module (see section 3.13 Passages of Verse or Drama)."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DR#DR\">7 Performance Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRBOD#DRBOD\">7.2 The Body of a Performance Text</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRSPG#DRSPG\">7.2.3 Grouped Speeches</a>","content":"7.2.3 Grouped Speeches\nThis module makes available the following additional element for\nhandling groups of speeches: <spGrp> contains a group of speeches or songs in a performance text presented\n  in a source as constituting a single unit or\n  number.\nThe spGrp element is intended for cases where\nthe characters in a performance launch into something which might be\nregarded almost as a kind of separate structural division, typically\nassociated with its own heading or numbering system, but which\nfloats in the text, at the same hierarchic level\nas speeches preceding or following it. Such units are often numbered,\ntitled, and visually presented as distinct objects within the\ntext. Here is a typical example from a well-known American musical comedy:\nbibliography\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DR#DR\">7 Performance Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRBOD#DRBOD\">7.2 The Body of a Performance Text</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRSTA#DRSTA\">7.2.4 Stage Directions</a>","content":"7.2.4 Stage Directions\nBoth between and within the speeches of a written performance text,\nit is normal practice to include a wide variety of descriptive\ndirections to indicate non-verbal action.  The following elements are\nprovided to represent these:\n\n<stage> contains any kind of stage direction within a dramatic text or fragment.\n<move> marks the actual movement of one or more characters.\n\nA satisfactory typology of stage directions is difficult to define.\nCertain basic types such as entrance, exit,\nsetting, delivery, are easily identified.  But the list is\nnot a closed one, and it is not uncommon to mix types within a single\ndirection.  No closed set of values for the type attribute is\ntherefore proposed at the present time, though some suggested values are\nindicated in the list below, which also indicates the range of\npossibilities.\nbibliography\nThe meaning of the values used for the type attribute on\nstage elements may be defined within the tagUsage\nelement of the TEI header (described in section 2.3.4 The Tagging Declaration).\nFor example:\nbibliography\nThis approach is purely documentary; in a real project it would generally be more effective  to define the range of\npermitted values explicitly within the project's schema specification,\nusing the techniques described in chapter 23.3 Customization. For\nexample, a specification like the following might be used to produce a\nschema in which the type attribute of the\nstage element is permitted to take only the values listed\nabove:\nbibliography\n\nThe stage element may appear both between and within\nsp elements.  It may contain a mixture of phrase level\nelements, possibly combined into paragraphs, as in the following\nexample:\nbibliography\n\nThe stage element may also be used in non-theatrical\ntexts, to mark sound effects or musical effects, etc., as further\ndiscussed in section 7.3 Other Types of Performance Text.\nThe move element is intended to help overcome the fact that\nthe stage directions of a printed text may often not provide full\ninformation about either the intended or the actual movement of actors\non stage.  It may be used to keep track of entrances and exits in\ndetail, so as to know which characters are on stage at which time.  Its\nattributes permit a relatively formal specification for movements of\ncharacters, using user-defined codes to identify the characters involved\n(the who attribute), the direction of the movement\n(type attribute), and optionally which part of the stage is\ninvolved (where attribute).  For stage-historical purposes, a\nperf attribute is also provided; this allows the recording of\ndifferent move elements \nas taken in different performances of the same text.\nThe move element should be located at the position in the\ntext where the move is presumed to take place.  This will often coincide\nwith a stage direction, as in the following simple example:\nbibliography\nThe move element can however appear independently of a stage\ndirection, as in the following example:\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DR#DR\">7 Performance Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRBOD#DRBOD\">7.2 The Body of a Performance Text</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRPAL#DRPAL\">7.2.5 Speech Contents</a>","content":"7.2.5 Speech Contents\nThe actual speeches of a dramatic text may be composed of running\ntext, which must be formally organized into paragraphs, in the case of\nprose (see section 3.1 Paragraphs), verse lines or line groups in\nthat of verse (see section 3.13 Passages of Verse or Drama), or seg\nelements, in case of doubt as to whether the material should be treated\nas verse or prose.  The following elements, all of which are defined in\nthe core, are particularly useful when marking units of prose or verse within\nspeeches:\n<p> marks paragraphs in prose.<lb> marks the beginning of a new (typographic) line in some edition or version of a text.<l> contains a single, possibly incomplete, line of verse.<lg> contains one or more verse lines functioning as a formal unit, e.g. a stanza, refrain,\n        verse paragraph, etc.\nLike other milestone elements, the element lb additionally bears the attributes\ned and edRef, from its membership in the class\natt.edition:\n\n<att.edition> provides attributes identifying the source edition from which\n  some encoded feature derives.\n\n\nAs a member of the classes att.typed\nand att.divLike, the\nlg element\nalso bears the following attributes:\n\n<att.typed> provides attributes that can be used to classify or subclassify elements in any way.\n<att.divLike> provides attributes common to all elements which behave in the same way as divisions.\n<att.fragmentable> provides attributes for representing\n    fragmentation of a structural element, typically as \n  a consequence of some overlapping hierarchy.\n\n\nWhen the verse module is included in a\nschema,  the elements l\nand lg also gain additional attributes through their\nmembership of the class att.metrical:\n\n<att.metrical> defines a set of attributes that certain elements may use to\nrepresent metrical information.\n\n\nIn many texts, prose and verse may be inextricably mingled;\nparticularly in earlier printed texts, prose may be printed as verse or\nverse as prose, or it may be impossible to distinguish the two.  In\ncases of doubt, an encoder may prefer to tag the dubious material\nconsistently as verse, to tag it all as prose, to follow the typography\nof the source text, or to use the neutral ab\nelement to contain the speech itself.  When this question arises, the\ntagUsage element in the encodingDesc element of the\nheader may be used to record explicitly what policy has been adopted.\nEven where they can reliably be distinguished, a single speech may frequently\ncontain a mixture of prose (marked as p) and verse (marked as\nl or—if stanzaic—lg).\n \nThe part attribute which both l and lg\nelements inherit from the att.fragmentable class provides one simple way of indicating where the boundaries of a\nspeech and of a verse line or line group do not coincide.  The encoder\nmay simply indicate that a line or line group is metrically incomplete by\nspecifying the value Y or N, as in the following example:\nbibliography\nAlternatively, where the fragments of the line or line group are\nconsecutive in the text (though possibly interrupted by stage\ndirections), the values I (initial), M (medial), and F (final)\nmay be used to indicate how metrical lines are constituted:\n  bibliography\n\nIn dramatic texts, the lg or line group element is most\noften of use for the encoding of songs and other stanzaic material. Line groups may be fragmented\nacross speakers in the same way as individual lines, and the same set of\nattributes may be used to record this fact. The  element\nspGrp is provided in order to simplify the situation, very\ncommon in performances, where performance of a single entity, such as\na song, is shared amongst several performers, as in the following\nexample:\nbibliography\n\nThis encoding however does not indicate that the three lines of\nSir Joseph's song and the two lines following it together constitute a\nsingle verse stanza. This can be indicated by using the part\nattribute, as follows:\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DR#DR\">7 Performance Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRBOD#DRBOD\">7.2 The Body of a Performance Text</a><a class=\"breadcrumb\" href=\"p5.xml?id=DREMB#DREMB\">7.2.6 Embedded Structures</a>","content":"7.2.6 Embedded Structures\nAlthough primarily composed of speeches, performance texts often\ncontain other structural units such as songs or strophes which are\nshared among different speakers.  More generally, complex nested\nstructures of plays within plays, interpolated masques, or interludes\nare far from uncommon.  In more modern material, comparably complex\nstructural devices such as flashback or nested playback are equally\nfrequent.  In all kinds of performance material, it may be necessary to\nindicate several actions which are happening simultaneously.\nA number of different devices are available within the TEI scheme to\nsupport these complexities in the general case.  Texts may be composite\nor self-nesting (see section 4.3.1 Grouped Texts) and multiple\nhierarchies may be defined (see chapter 20 Non-hierarchical Structures).  The TEI\nencoding scheme provides a variety of linking mechanisms, which may be\nused to indicate temporal alignment and aggregation of fragmented\nstructures.  In this section we provide a few specific examples of the\napplication of these techniques to performance texts:\nthe use of the  floatingText elementthe use of the part attribute on fragmentary\nlg elementsthe use of the next and prev attributes on\nfragments of embedded structures to join them into a larger wholethe use of the join element to define a\nvirtual element composed of the fragments\nindicated\n\nWhen the whole of a song appears within a single speech, it may\nrequire no special treatment if it is considered to form a part\nof the speech: bibliography\nIf however, the song is to be regarded as forming a distinct item,\nperhaps with its own front and back matter, it may be better to regard\nit as a floating text:\nbibliography\nWhen an embedded structure extends across more than one sp\nelement, each of its constituent parts must be regarded as a distinct\nfragment; the problem then facing the encoder is to reconstitute the\ninterrupted whole in some way.\nAs already noted above, the spGrp element may be used to\ngroup together consecutive speeches which are grouped together in some\nway, for example constituting a single song. Alternatively the\npart attribute, typically used to\nindicate that an l element contains a partial, not a complete,\nverse line, may also be used on the lg element,\nto indicate that the line group is partial rather than complete, thus:\nbibliography\nWhen the fragments of a song are separated by other intervening\ndialogue, or even when not, they may be linked together with the\nnext and prev attributes defined in section\n16.7 Aggregation.\nFor example, the line groups making up Ophelia's song\nmight be encoded as follows:\nbibliography\nThe next and prev attributes are discussed in\nsection 16.7 Aggregation: they form part of the module\nfor alignment and linking; this module must therefore be included in a\nschema if they are to be used, as further discussed in section 1.2 Defining a TEI Schema.\nThe fragments of Ophelia's song might also be linked together using\nthe join mechanism described in section 16.7 Aggregation.\nThe join element is specifically intended to encode the fact\nthat several discontiguous elements of the text together form one\nvirtual element.  Using this mechanism, the example\nmight be encoded as follows:\n  bibliography\nThe location of the join element is not significant; here it\nhas been placed shortly after the conclusion of the song, in order to\nhave it close to the fragments it unifies.\nLike the next and prev attributes, the\njoin element requires the additional module for linking, which\nis selected as shown above."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DR#DR\">7 Performance Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRBOD#DRBOD\">7.2 The Body of a Performance Text</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRSIM#DRSIM\">7.2.7 Simultaneous Action</a>","content":"7.2.7 Simultaneous Action\nIn printed or written versions of performance texts, a variety of\ntechniques may be used to indicate the temporal alignment of speeches or\nactions.  Speeches may be printed vertically aligned on the page, or\nbraced together; stage directions (e.g. Speaking at the same\ntime) are also often used.  In operatic or musical works in\nparticular, the need to indicate timing and alignment of individual\nparts of a song may lead to very complex layout.\nOne simple method of indicating the temporal alignment of speeches or\nactions is to use the spGrp element discussed in\nsection 7.2.3 Grouped Speeches, with a type attribute to specify the \nreason for grouping, as in the following example:\nbibliography\n  \n\n\n\nIn the original, the stage direction in consternation is\nprinted opposite a brace grouping all four speeches, indicating that all\nfour characters speak at once, and that the stage direction applies to\nall of them. Rather than attempting to represent the appearance of the\nsource, this example encoding represents its presumed meaning: the\nstage element is placed arbitrarily after the last relevant\nspeech,  and the four speeches with which it is to be associated are \ngrouped by means of the spGrp element. The rend \nattribute is used to specify the fact that the three speeches were \ngrouped by the brace in the copy text. Producing a readable version \nof the text which simulates the original printed effect may however\nrequire more complex markup and processing.\n\nMore powerful and more precise mechanisms for temporal alignment are\ndefined in chapter 8 Transcriptions of Speech.  These would be appropriate for\nencodings the focus of which is on the actual performance of a text\nrather than its structure or formal properties.  The module described\nin that chapter includes a large number of other detailed proposals for\nthe encoding of such features as voice quality, prosody, etc., which\nmight be relevant to such a treatment of performance texts.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DR#DR\">7 Performance Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=DROTH#DROTH\">7.3 Other Types of Performance Text</a>","content":"7.3 Other Types of Performance Text\nMost of the elements and structures identified thus far are derived\nfrom traditional theatrical texts.  Although other performance texts,\nsuch as screenplays or radio scripts, have not been discussed\nspecifically, they can be encoded using the elements and structures\nlisted above.  Encoders may however find it convenient to use, as well,\nthe additional specialized elements discussed in this section.  For\nscripts containing very detailed technical information, the\ntech element discussed in section 7.3.1 Technical Information may also\nbe useful.\n \nLike other texts, screenplays and television or radio scripts may\nbe divided into text divisions marked with div or\ndiv1, etc.  Within units corresponding with the traditional\nact and scene, further subdivisions or sequences may be\nidentified, composed of individual shots, each associated with\na single camera angle and setting.  Shots and sequences should be\nencoded using an appropriate text-division element (i.e., a\ndiv3 element if numbered division elements are in use and the\nnext largest unit is a div2, or a div element if\nun-numbered divisions are in use) specifying sequence or\nshot as the value of the type attribute, as\nappropriate.\n \nIt is normal practice in screenplays and radio scripts to distinguish\ndirections concerning camera angles, sound effects, etc., from other\nforms of stage direction.  Such texts also generally include far more\ndetailed specifications of what the audience actually sees:\ndescriptions of actions and background, etc.  Scripts derived from\ncinema and television productions may also include texts displayed as\ncaptions superimposed on the action.  All of these may be encoded using\nthe general purpose stage element discussed in section 7.2.4 Stage Directions, and distinguished by means of its type\nattribute.  Alternatively, or in addition, the following more specific\nelements may be used, where clear distinctions can be made:\n<view> describes the visual context of some part of a screen play in\nterms of what the spectator sees, generally independent of any\ndialogue.<camera> describes a particular camera angle or viewpoint in a screen play.<caption> contains the text of a caption or other text displayed as part of\na film script or screenplay.<sound> describes a sound effect or musical sequence specified within a screen play or radio script.\n \nSome examples of the use of these elements follow:\nbibliography\n \nWhere particular words or phrases within a direction are emphasized\n(by change of typeface or use of capital letters), an appropriate\nphrase-level element may be used to indicate the fact, as in the\nfollowing examples, where certain words in the original are given in\nsmall capitals:\n  bibliography\n\n  bibliography\n\n \nAll of these elements, like other stage directions, can appear both\nwithin and between speeches.\nbibliography\nbibliography\n\nbibliography\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DR#DR\">7 Performance Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=DROTH#DROTH\">7.3 Other Types of Performance Text</a><a class=\"breadcrumb\" href=\"p5.xml?id=DRTEC#DRTEC\">7.3.1 Technical Information</a>","content":"7.3.1 Technical Information\nTraditional stage scripts may contain additional technical\ninformation about such production-related factors as lighting,\nblocking (that is, detailed notes on actors'\nmovements), or props required at particular points. More technical\ninformation about intended production effects may also appear in\npublished versions of screenplays or movie scripts. Where these are\npresented simply as marginal notes, they may be encoded using the\ngeneral-purpose note element defined in section 3.9 Notes, Annotation, and Indexing.\nAlternatively, they may be formally distinguished from\nother stage directions by using the specialized tech element:\n<tech> describes a special-purpose stage direction that is not\nmeant for the actors.\n \nLike stage directions, tech elements can appear anywhere\nwithin a speech or between speeches.\n \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DR#DR\">7 Performance Texts</a><span class=\"breadcrumb\">7.4 Module for Performance Texts</span>","content":"\n  7.4 Module for Performance Texts\n  The module described in this chapter makes available the\n  following components:\n  \n    Performance Texts\n    Performance texts\n    \n    \n    \n    \n    \n  \n\n  The selection and combination of modules to form a TEI schema is described in\n  1.2 Defining a TEI Schema.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TS#TS\">8 Transcriptions of Speech</a>","content":"\n8 Transcriptions of Speech\n\nThe module described in this chapter is intended for use with a\nwide variety of transcribed spoken material.  It should be stressed,\nhowever, that the present proposals are not intended to support\nunmodified every variety of research undertaken upon spoken material\nnow or in the future; some discourse analysts, some phonologists, and\ndoubtless others may wish to extend the scheme presented here to\nexpress more precisely the set of distinctions they wish to draw in\ntheir transcriptions.  Speech regarded as a purely acoustic phenomenon\nmay well require different methods from those outlined here, as may\nspeech regarded solely as a process of social interaction.\n\nThis chapter begins with a discussion of some of the problems\ncommonly encountered in transcribing spoken language (section 8.1 General Considerations and Overview).  Section 8.2 Documenting the Source of Transcribed Speech documents some\nadditional TEI header elements which may be used to document the\nrecording or other source from which transcribed text is taken.\nSection 8.3 Elements Unique to Spoken Texts describes the basic structural elements\nprovided by this module.  Finally, section 8.4 Elements Defined Elsewhere of this\nchapter reviews further problems specific to the encoding of spoken\nlanguage, demonstrating how mechanisms and elements discussed\nelsewhere in these Guidelines may be applied to them.\n\n\n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TS#TS\">8 Transcriptions of Speech</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSOV#TSOV\">8.1 General Considerations and Overview</a>","content":"8.1 General Considerations and Overview\nThere is great variation in the ways different researchers have\nchosen to represent speech using the written medium.1 This\nreflects the special difficulties which apply to the encoding or transcription of speech.  Speech varies according to\na large number of dimensions, many of which have no counterpart in\nwriting (for example, tempo, loudness, pitch, etc.).  The audibility of\nspeech recorded in natural communication situations is often less than\nperfect, affecting the accuracy of the transcription.  Spoken material\nmay be transcribed in the course of linguistic, acoustic,\nanthropological, psychological, ethnographic, journalistic, or many\nother types of research.  Even in the same field, the interests and\ntheoretical perspectives of different transcribers may lead them to\nprefer different levels of detail in the transcript and different styles\nof visual display.  The production and comprehension of speech are\nintimately bound up with the situation in which speech occurs, far more\nso than is the case for written texts.  A speech transcript must\ntherefore include some contextual features; determining which are\nrelevant is not always simple.  Moreover, the ethical problems in\nrecording and making public what was produced in a private setting and\nintended for a limited audience are more frequently encountered in\ndealing with spoken texts than with written ones.\n \nSpeech also poses difficult structural problems.  Unlike a written\ntext, a speech event takes place in time.  Its beginning and end may be\nhard to determine and its internal composition difficult to define.\nMost researchers agree that the utterances or turns of\nindividual speakers form an important structural component in most kinds\nof speech, but these are rarely as well-behaved (in the structural\nsense) as paragraphs or other analogous units in written texts:\nspeakers frequently interrupt each other, use gestures as well as words,\nleave remarks unfinished and so on.  Speech itself, though it may be\nrepresented as words, frequently contains items such as vocalized pauses\nwhich, although only semi-lexical, have immense importance in the\nanalysis of spoken text.  Even non-vocal elements such as gestures may\nbe regarded as forming a component of spoken text for some analytic\npurposes.\nBelow the level of the individual utterance, speech may be segmented\ninto units defined by phonological, prosodic, or syntactic phenomena;\nno clear agreement exists, however, even as to appropriate names for\nsuch segments.\n \n\nSpoken texts transcribed according to the guidelines presented here\nare organized as follows.  The overall structure of a TEI spoken text\nis identical to that of any other TEI text: the TEI element\nfor a spoken text contains a teiHeader element, followed by a\ntext element.  Even texts primarily composed of transcribed\nspeech may also include conventional front and back matter, and may\neven be organized into divisions like printed texts. \nWe may say, therefore, that these Guidelines regard transcribed\nspeech as being composed of arbitrary high-level units called texts.textsas\norganizing unit for spoken material A spoken\ntext might typically be a conversation between a small number\nof people, a lecture, a broadcast TV item, or a similar event.  Each\nsuch unit has associated with it a teiHeader providing\ndetailed contextual information such as the source of the transcript,\nthe identity of the participants, whether the speech is scripted or\nspontaneous, the physical and social setting in which the discourse\ntakes place and a range of other aspects.  Details of the header\nin general are provided in  chapter 2 The TEI Header; the\nparticular elements it provides for use with spoken texts are\ndescribed below (8.2 Documenting the Source of Transcribed Speech). Details concerning\nadditional elements which may be used for the documentation of participant and\ncontextual information are given in  15.2 Contextual Information.\n \n\nDefining the bounds of a spoken text is frequently a matter of\narbitrary convention or convenience.  In public or semi-public contexts,\na text may be regarded as synonymous with, for example, a lecture, a broadcast item,\na meeting, etc.  In informal or private\ncontexts, a text may be simply a conversation involving a specific group\nof participants.  Alternatively, researchers may elect to define spoken\ntexts solely in terms of their duration in time or length in words.  By\ndefault, these Guidelines assume of a text only that:\nit is internally cohesive,it is describable by a single header, andit represents a single stretch of time with no significant\ndiscontinuities. \n \n\nWithin a text it may be necessary to identify subdivisions\nof various kinds, if only for convenience of handling.  The neutral\ndiv element discussed in section 4.1 Divisions of the Body is\nrecommended for this purpose.  It may be found useful also for\nrepresenting subdivisions relating to discourse structure, speech act\ntheory, transactional analysis, etc., provided only that these divisions\nare hierarchically well-behaved.  Where they are not, as is often the\ncase, the mechanisms discussed in chapters 16 Linking, Segmentation, and Alignment and\n20 Non-hierarchical Structures may be used.\n \n\nA spoken text may contain any of the following components:\nutterancespausesvocalized but non-lexical phenomena such as coughskinesic (non-verbal, non-lexical) phenomena such as gesturesentirely non-linguistic incidents occurring during and possibly\ninfluencing the course of speechwriting, regarded as a special class of incident in that it can\nbe transcribed, for example captions or overheads displayed during\na lectureshifts or changes in vocal quality\n \nElements to represent all of these features of spoken language are\ndiscussed in section 8.3 Elements Unique to Spoken Texts below.\n \nAn utterance (tagged u) may contain lexical items\ninterspersed with pauses and non-lexical vocal sounds; during an\nutterance, non-linguistic incidents may occur and written materials may be\npresented.  The u element can thus contain any of the other\nelements listed, interspersed with a transcription of the lexical items\nof the utterance; the other elements may all appear between utterances\nor next to each other, but except for writing they do not\ncontain any other elements nor any data.\n \n\nA spoken text itself may be without substructure, that is, it may\nconsist simply of units such as utterances or pauses, not grouped\ntogether in any way, or it may be subdivided. If the notion of what\nconstitutes a text in spoken discourse is\ninevitably rather an arbitrary one, the notion of formal subdivisions\nwithin such a text may appear even more debatable.\nNevertheless, such divisions may be useful for such types of discourse\nas debates, broadcasts, etc., where structural subdivisions can easily\nbe identified, or more generally wherever it is desired to aggregate\nutterances or other parts of a transcript into units smaller than a\ncomplete text.  Examples might include\nconversations or discourse fragments, or more narrowly,\nthat part of the conversation where topic x was discussed,\nprovided only that the set of all such divisions is coextensive with\nthe text.\n \nEach such division of a spoken text should be represented by the\nnumbered or unnumbered div elements defined in chapter 4 Default Text Structure.  For some detailed kinds of analysis a hierarchy of\nsuch divisions may be found useful; nested div elements may\nbe used for this purpose, as in the following example showing how a\ncollection made up of transcribed sound bites\ntaken from speeches given by a politician on different occasions\nmight be encoded.  Each extract is regarded as a distinct\ndiv, nested within a single composite div as\nfollows: \n \nAs a member of the class att.declaring, the\ndiv element may also carry a decls attribute, for\nuse where the divisions of a text do not all share the same set of the\ncontextual declarations specified in the TEI header.  (See further\nsection 15.3 Associating Contextual\nInformation with a Text).\n \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TS#TS\">8 Transcriptions of Speech</a><a class=\"breadcrumb\" href=\"p5.xml?id=HD32#HD32\">8.2 Documenting the Source of Transcribed Speech</a>","content":"8.2 Documenting the Source of Transcribed Speech\nWhere a computer file is derived from a spoken text rather than a\nwritten one, it will usually be desirable to record additional\ninformation about the recording or broadcast which constitutes its\nsource. Several additional elements are provided for this purpose\nwithin the source description component of the TEI header:\n\n  <scriptStmt> contains a citation giving details of the script used for\na spoken text.\n  <recordingStmt> describes a set of recordings used as the basis for transcription of a\nspoken text.\n  <recording> provides details of an audio or video recording event\nused as the source of a spoken text, either directly or from\na public broadcast.\n<transcriptionDesc> describes the set of transcription conventions used, particularly for spoken material.\n\nAs a member of the att.duration class,\nthe recording element inherits the  following attribute:\n\n<att.duration.w3c> provides attributes for recording normalized temporal durations.\n\n \nNote that detailed information about the participants or setting of\nan interview or other transcript of spoken language should be recorded\nin the appropriate division of the profile description, discussed in\nchapter 15 Language Corpora, rather than as part of the source\ndescription.  The source description is used to hold information only\nabout the source from which the transcribed speech was taken, for\nexample, any script being read and any technical details of how the\nrecording was  produced.  If the source was a previously-created\ntranscript, it should be treated in the same way as any other source\ntext.\n \nThe scriptStmt element should be used where it is known that\none or more of the participants in a spoken text is speaking from a\npreviously prepared script.  The script itself should be documented in\nthe same way as any other written text, using one of the three citation\ntags mentioned above.  Utterances or groups of utterances may be linked\nto the script concerned by means of the decls attribute,\ndescribed in section 15.3 Associating Contextual\nInformation with a Text.\n\n \nThe recordingStmt is used to group together information\nrelating to the recordings from which the spoken text was transcribed.\nThe element may contain either a prose description or, more helpfully,\none or more recording elements, each corresponding with a\nparticular recording.  The linkage between utterances or groups of\nutterances and the relevant recording statement is made by means of the\ndecls attribute, described in section 15.3 Associating Contextual\nInformation with a Text.\n \nThe recording element should be used to provide a\ndescription of how and by whom a recording was made.  This information\nmay be provided in the form of a prose description, within which such items as statements of\nresponsibility, names, places, and dates may be identified using the\nappropriate phrase-level tags.  Alternatively, a selection of elements\nfrom the model.recordingPart class may be\nprovided. This element class makes available the following elements:\n\n  <date> contains a date in any format.\n  <time> contains a phrase defining a time of day in any format.\n  <respStmt> supplies a statement of responsibility for the intellectual content of a text, edition,\n    recording, or series, where the specialized elements for authors, editors, etc. do not suffice\n    or do not apply. May also be used to encode information about individuals or organizations \n    which have played a role in the production or distribution of a bibliographic work.\n  <equipment> provides technical details of the equipment and media used for\nan audio or video recording used as the source for a spoken text.\n  <broadcast> describes a broadcast used as the source of a spoken text.\n\n \nSpecialized\ncollections may wish to add further sub-elements to these major\ncomponents.  These elements should be used only for\ninformation relating to the recording process itself; information about\nthe setting or participants (for example) is recorded elsewhere:  see\nsections 15.2.3 The Setting Description and 15.2.2 The Participant Description.\n\n\n\nWhen a recording has been made from a public broadcast, details of\nthe broadcast itself should be supplied within the recording\nelement, as a nested broadcast element.  A broadcast is closely\nanalogous to a publication and the broadcast element should\ntherefore contain one or the other of the bibliographic citation\nelements bibl, biblStruct, or biblFull.  The\nbroadcasting agency responsible for a broadcast is regarded as its\nauthor, while other participants (for example interviewers,\ninterviewees, script writers, directors, producers, etc.) should be specified using the\nrespStmt or editor element with an appropriate\nresp (see further section 3.12 Bibliographic Citations and References).\n\nWhen a broadcast contains several distinct recordings (for example a\ncompilation), additional recording elements may be further\nnested within the broadcast element.\n\n\n\t\n \nThe transcriptionDesc element can be used to document the particular transcription conventions (use of space,\npunctuation, special characters etc.) used in making the transcription. A number of sets of such conventions have been defined\nwithin particular research communities, or by users of particular transcription tools. The attributes ident\nand version may be used to refer to such conventions in a machine tractable way, where this is appropriate.\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TS#TS\">8 Transcriptions of Speech</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSBA#TSBA\">8.3 Elements Unique to Spoken Texts</a>","content":"8.3 Elements Unique to Spoken Texts\nThe following elements characterize spoken texts, transcribed\naccording to these Guidelines:\n<u> contains a stretch of speech usually preceded and followed by\nsilence or by a change of speaker.<pause> marks a pause either between or within utterances.<vocal> marks any vocalized but not necessarily lexical phenomenon, for\n  example voiced pauses, non-lexical backchannels, etc.<kinesic> marks any communicative phenomenon, not necessarily vocalized, for\n  example a gesture, frown, etc.<incident> marks any phenomenon or occurrence, not necessarily vocalized or\ncommunicative, for example incidental noises or other events affecting\ncommunication.<writing> contains a passage of written text revealed to participants in the\n  course of a spoken text.<shift> marks the point at which some paralinguistic feature of a series of\nutterances by any one speaker changes.\n \nThe u element may appear directly within a spoken text,\nand may contain any of the others; the others may also appear directly\n(for example, a vocal may appear between two utterances) but cannot\ncontain a u element. In terms of the basic TEI model,\ntherefore, we regard the u element as analogous to a\nparagraph, and the others as analogous to phrase\nelements, but with the important difference that they can exist either\nas siblings or as children of utterances. The class model.divPart.spoken provides the u\nelement; the class model.global.spoken\nprovides the six other elements listed above.\n\nAs  members of the att.ascribed class,\nall of these elements  share the following attributes:\n<att.ascribed> provides attributes for elements representing speech or action that can be ascribed to a\n    specific individual.<att.ascribed.directed> provides attributes for elements representing speech or action that can be directed at a\n        group or individual.\nAs  members of the att.typed, att.timed and att.duration classes,\nall of these elements except shift share the following attribute:\n\n<att.typed> provides attributes that can be used to classify or subclassify elements in any way.\n<att.timed> provides attributes common to those elements which\n  have a duration in time, expressed either absolutely or by reference\n  to an alignment map.\n<att.duration.w3c> provides attributes for recording normalized temporal durations.\n\n\nEach of these elements is further discussed and specified in\nsections 8.3.1 Utterances  to 8.3.4 Writing.\n \nWe can show the relationship between four of these constituents of\nspeech using the features eventive, communicative, anthropophonic (for sounds produced by the human\nvocal apparatus), and lexical:\n\n eventivecommunicativeanthropophoniclexical\nincident+---\nkinesic++--\nvocal+++-\nutterance++++\n\nThe differences are not always clear-cut.  Among incidents might be included actions like slamming\nthe door, which can certainly be communicative.  Vocals include coughing and sneezing, which\narevocal eventsin\ntranscription of speech usually\ninvoluntary noises.  Equally, the distinction between utterances and\nvocals is not always clear, although for many analytic purposes it\nwill be convenient to regard them as distinct.  Individual scholars\nmay differ in the way borderlines are drawn and should declare their\ndefinitions in the editorialDecl element of the header (see\n2.3.3 The Editorial Practices Declaration).\n \nThe following short extract exemplifies several of these elements. It\nis recoded from a text originally transcribed in the CHILDES\nformat.2\nEach utterance is encoded using a u element (see section 8.3.1 Utterances). The speakers are defined using the\nlistPerson element discussed in 13.3.2 The Person Element and each is\ngiven a unique identifier also used to identify their speech. Pauses marked by the transcriber are indicated\nusing the pause element (see section 8.3.2 Pausing).\nNon-verbal vocal effects such as the child's meowing are indicated\neither with orthographic transcriptions or with the vocal\nelement, and entirely non-linguistic but significant incidents such as\nthe sound of the toy cat are represented by the incident\nelements (see section 8.3.3 Vocal, Kinesic, Incident).\nbibliography\n\nThis example also uses some elements common to all TEI texts,\nnotably the reg tag for editorial regularization. Unusually\nstressed syllables have been encoded with the emph\nelement. The seg element has also been used to segment the\nlast utterance. Further discussion of all of such options is provided\nin section 8.4 Elements Defined Elsewhere.\n \nContextual information is of particular importance in spoken texts,\nand should be provided by the TEI header of a text. In general, all of\nthe information in a header is understood to be relevant to the whole\nof the associated text. The element u as a member of the\natt.declaring class, may however specify a\ndifferent context by means of the decls attribute (see\nfurther section 15.3 Associating Contextual\nInformation with a Text).\n \n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TS#TS\">8 Transcriptions of Speech</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSBA#TSBA\">8.3 Elements Unique to Spoken Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSBAUT#TSBAUT\">8.3.1 Utterances</a>","content":"8.3.1 Utterances\nEach distinct utterance in a spoken text is represented\nby a u element, described as follows:\n<u> contains a stretch of speech usually preceded and followed by\nsilence or by a change of speaker.\n\n \nUse of the who attribute to associate the utterance with a\nparticular speaker is recommended but not required. Its use implies as\na further requirement that all speakers be identified by a\nperson or personGrp element, typically in the TEI\nheader (see section 15.2.2 The Participant Description), but it may also point to another \nexternal source of information about the speaker. Where utterances or\nother parts of the transcription cannot be\nattributed with confidence to any particular participant or group of\nparticipants, the encoder may choose to create personGrp elements\nwith xml:id attributes such as various or unknown,\nand perhaps give the root listPerson element an xml:id value of\nall, then point to those as appropriate using who.\n\nThe trans attribute is provided as a means of\ncharacterizing the transition from one utterance to the next at a\nsimpler level of detail than that provided by the temporal alignment\nmechanism discussed in section 16.4 Synchronization.  The value specified\napplies to the transition from the preceding utterance into the\nutterance bearing the attribute.  For example:3\n\nIn this example, utterance ts_b1 latches on to utterance\nts_a1, while there is a marked pause between\nts_b1 and ts_a2. ts_b2 and\nts_a2 overlap, but by an unspecified amount. For ways of\nproviding a more precise indication of the degree of overlap, see\nsection 8.4.2 Synchronization and Overlap.\n \nAn utterance may contain either running text, or text within which\nother basic structural elements are nested.  Where such nesting occurs,\nthe who attribute is considered to be inherited for the\nelements pause, vocal, shift and\nkinesic; that is, a pause or shift (etc.) within an utterance\nis regarded as being produced by that speaker only, while a pause\nbetween utterances applies to all speakers.\n \nOccasionally, an utterance may seem to contain other utterances,\nfor example where one speaker interrupts himself,  or \nwhen another speaker produces a back-channel\nwhile they are still speaking.  The present version of these\nGuidelines does not support nesting of one u element within\nanother. The transcriber must therefore decide whether such\ninterruptions constitute a change of utterance, or whether other\nelements may be used. In the case of self-interruption, the\nshift element may be used to show that the speaker has\nchanged the quality of their speech:\n \nAlternatively the incident element described in section 8.3.3 Vocal, Kinesic, Incident might be used, without transcribing the read material:  \n\nOften, back-channelling is only semi-lexicalized and may therefore be\nrepresented using the vocal element:\n\nWhere this is not possible, it is simplest to regard the back-channel\nas a distinct utterance.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TS#TS\">8 Transcriptions of Speech</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSBA#TSBA\">8.3 Elements Unique to Spoken Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSBAPA#TSBAPA\">8.3.2 Pausing</a>","content":"8.3.2 Pausing\nSpeakers differ very much in their rhythm and in particular in the\namount of time they leave between words. The following element is\nprovided to mark occasions where the transcriber judges that\nspeech has been paused, irrespective of the actual amount of silence:\n<pause> marks a pause either between or within utterances.\nA pause contained by an utterance applies to the speaker of that\nutterance.  A pause between utterances applies to all speakers.  The\ntype attribute may be used to categorize the pause, for\nexample as short, medium, or long; alternatively the attribute\ndur may be used to indicate its length more exactly, as in\nthe following example:\nbibliography\n\nIf detailed synchronization of pausing with other vocal phenomena is\nrequired, the alignment mechanism defined at section 16.4 Synchronization\nand discussed informally below should be used.  Note that the\ntrans attribute mentioned in the previous section may also be\nused to characterize the degree of pausing between (but not within)\nutterances.\n "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TS#TS\">8 Transcriptions of Speech</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSBA#TSBA\">8.3 Elements Unique to Spoken Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSBAVO#TSBAVO\">8.3.3 Vocal, Kinesic, Incident</a>","content":"8.3.3 Vocal, Kinesic, Incident\nThe presence of\nnon-transcribed semi-lexical or non-lexical phenomena either between or\nwithin utterances may be indicated with the following three elements.\n<vocal> marks any vocalized but not necessarily lexical phenomenon, for\n  example voiced pauses, non-lexical backchannels, etc.<kinesic> marks any communicative phenomenon, not necessarily vocalized, for\n  example a gesture, frown, etc.<incident> marks any phenomenon or occurrence, not necessarily vocalized or\ncommunicative, for example incidental noises or other events affecting\ncommunication.\n \nThe who attribute should be used to specify the person or\ngroup responsible for a vocal, kinesic, or incident which is contained\nwithin an utterance, if this differs from that of the enclosing\nutterance.  The attribute must be supplied for a vocal, kinesic, or incident\nwhich is not contained within an utterance.\n \nThe iterated attribute may be used to indicate that the\nvocal, kinesic, or incident is repeated, for example laughter as opposed to laugh.\nThese should both be distinguished from laughing,\nwhere what is being encoded is a shift in voice quality.  For this last\ncase, the shift element discussed in section 8.3.6 Shifts should be used.\n \nA child desc element may be used to supply a conventional\nrepresentation for the phenomenon, for example:\nnon-lexical burp, click, cough, exhale, giggle, gulp,\n    inhale, laugh, sneeze, sniff, snort, sob, swallow, throat, yawn\n    semi-lexical ah, aha, aw, eh, ehm, er, erm, hmm, huh,\n    mm, mmhm, oh, ooh, oops, phew, tsk, uh, uh-huh, uh-uh, um, urgh,\n    yup\nResearchers may prefer to regard some semi-lexical phenomena as\nwords within the bounds of the u element.\nSee further the discussion at section 8.4.3 Regularization of Word Forms below.  As\nfor all basic categories, the definition should be made clear in the\nencodingDesc element of the TEI header.\n \nSome typical examples follow:\nbibliography\nNote that Ann's snorting could equally well be encoded as follows:\nbibliography\n \nThe extent to which encoding of incidents or kinesics is included in a\ntranscription will depend entirely on the purpose for which the\ntranscription was made.  As elsewhere, this will depend on the\nparticular research agenda and the extent to which their presence is\nfelt to be significant for the interpretation of spoken interactions.\n "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TS#TS\">8 Transcriptions of Speech</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSBA#TSBA\">8.3 Elements Unique to Spoken Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSBAWR#TSBAWR\">8.3.4 Writing</a>","content":"8.3.4 Writing\nWritten text may also be encountered when speech is transcribed, for\nexample in a television broadcast or cinema performance, or where one\nparticipant shows written text to another.  The writing element\nmay be used to distinguish such written elements from the spoken text in\nwhich they are embedded.\n<writing> contains a passage of written text revealed to participants in the\n  course of a spoken text.<att.global.source> provides attributes used by elements to point to an\n    external source.\n\nFor example, if speaker A in the breakfast table conversation in section 8.3.1 Utterances\n above had simply shown the newspaper passage to her\ninterlocutor instead of reading it, the interaction might have been\nencoded as follows:\n\n \nIf the source of the writing being displayed is known,\nbibliographic information\nabout it may be stored in a listBibl within the\nsourceDesc element of the TEI header, and then pointed to\nusing the source attribute. For example, in the following\nimaginary example, a lecturer displays two different versions of the same\npassage of text:\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TS#TS\">8 Transcriptions of Speech</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSBA#TSBA\">8.3 Elements Unique to Spoken Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSBATI#TSBATI\">8.3.5 Temporal Information</a>","content":"8.3.5 Temporal Information\nAs noted above, utterances, vocals, pauses, kinesics, incidents,\nand writing elements all inherit attributes providing information\nabout their position in time from the classes att.timed and att.duration. These attributes can be used to\nlink parts of the transcription very exactly with points on a\ntimeline, or simply to indicate their duration.  Note that if\nstart and end point to when elements\nwhose temporal distance from each other is specified in a timeline,\nthen dur is ignored.\n \nThe anchor element (see 16.5 Correspondence and Alignment) may be used as\nan alternative means of aligning the start and end of timed elements,\nand is required when the temporal alignment involves points within an\nelement.\n \nFor further discussion of temporal alignment and synchronization\nsee  8.4.2 Synchronization and Overlap below.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TS#TS\">8 Transcriptions of Speech</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSBA#TSBA\">8.3 Elements Unique to Spoken Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSSASH#TSSASH\">8.3.6 Shifts</a>","content":"8.3.6 Shifts\nA common requirement in transcribing spoken language is to mark\npositions at which a variety of prosodic features change.  Many\nparalinguistic features (pitch, prominence, loudness, etc.) characterize\nstretches of speech which are not co-extensive with utterances or any of\nthe other units discussed so far.  One simple method of encoding such\nunits is simply to mark their boundaries.  An empty element called\nshift is provided for this purpose.\n<shift> marks the point at which some paralinguistic feature of a series of\nutterances by any one speaker changes.\nA shift element may appear within an utterance or a segment to\nmark a significant change in the particular feature defined by its\nattributes, which is then understood to apply to all subsequent\nutterances for the same speaker, unless changed by a new shift for the\nsame feature in the same speaker.  Intervening utterances by other\nspeakers do not normally carry the same feature.\nFor example:\n\nIn this example, the word Elizabeth is spoken loudly, the\nwords Yes and Come and try this with\nnormal volume, and the words come on very loudly.\n \nThe values proposed here for the feature attribute are\nbased on those used by the Survey of English Usage (see further\nBoase 1990); this list may be revised or supplemented using\nthe methods outlined in section 23.3 Customization. \nThe new attribute specifies the new state of the feature\nfollowing the shift.  If this attribute has the special value normal, the\nimplication is that the feature concerned ceases to be remarkable at this point. \nA list of suggested values for each of the features proposed follows:\ntempo\na    allegro (fast)aa  very fastacc  accelerando (getting faster)l    lento (slow)ll   very slowrall rallentando (getting slower)loud (for loudness):\nf     forte (loud)ff    very loudcresc crescendo (getting louder)p     piano (soft)pp    very softdimin diminuendo (getting softer)pitch (for pitch range):\nhigh  high pitch-rangelow   low pitch-rangewide  wide pitch-rangenarrownarrow pitch-rangeasc   ascendingdesc  descendingmonot monotonousscand scandent, each succeeding syllable higher than\n                   the last, generally ending in a falling tonetension:\nsl  slurredlax lax, a little slurredten tensepr  very precisest  staccato, every stressed syllable being doubly\n                 stressedleg legato, every syllable receiving more or less equal\n                 stressrhythm:\nrh   beatable rhythmarrh arrhythmic, particularly haltingspr  spiky rising, with markedly higher unstressed\n                  syllablesspf  spiky falling, with markedly lower unstressed\n                  syllablesglr  glissando rising, like spiky rising but the\n                  unstressed syllables, usually several, also rise\n                  in pitch relative to each otherglf  glissando falling, like spiky falling but with the\n                  unstressed syllables also falling in pitch relative\n                  to each othervoice (for voice quality):\nwhisp   whisperbreath  breathyhusk    huskycreak   creakyfals    falsettoreson   resonantgiggle unvoiced laugh or gigglelaugh  voiced laughtrem   tremuloussob    sobbingyawn   yawningsigh    sighing\n \nA full definition of the sense of the values provided for each\nfeature may be provided either in the encoding description section of the\ntext header (see section 2.3 The Encoding Description) or as part of a TEI customization, \n  as described in section 23.3 Customization.  \n\n \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TS#TS\">8 Transcriptions of Speech</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSSA#TSSA\">8.4 Elements Defined Elsewhere</a>","content":"8.4 Elements Defined Elsewhere\nThis section describes the following features characteristic of\nspoken texts for which elements are defined elsewhere in these\nGuidelines:\nsegmentation below the utterance levelsynchronization and overlapregularization of orthography The elements\ndiscussed here are not provided by the module for spoken texts.  Some\nof them are included in the core module and others are contained in\nthe modules for linking and for analysis respectively.  The selection\nof modules and their combination to define a TEI schema is discussed\nin section 1.2 Defining a TEI Schema.\n\n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TS#TS\">8 Transcriptions of Speech</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSSA#TSSA\">8.4 Elements Defined Elsewhere</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSSASE#TSSASE\">8.4.1 Segmentation</a>","content":"8.4.1 Segmentation\nFor some analytic purposes it may be desirable to subdivide the\ndivisions of a spoken text into units smaller than the individual\nutterance or turn.  Segmentation may be performed for a number of\ndifferent purposes and in terms of a variety of speech phenomena.\nCommon examples include units defined both prosodically (by intonation,\npausing, etc.) and syntactically (clauses, phrases, etc.)  The term\nmacrosyntagm has been used by a number of researchers to\ndefine units peculiar to speech transcripts.4\nThese Guidelines propose that such analyses be performed in terms of\nneutrally-named segments, represented by the seg\nelement, which is discussed more fully in section 16.3 Blocks, Segments, and Anchors.\nThis element may take a type attribute to specify the kind of\nsegmentation applicable to a particular segment, if more than one is\npossible in a text.  A full definition of the segmentation scheme or\nschemes used should be provided in the segmentation element of\nthe editorialDecl element in the TEI header (see 2.3.3 The Editorial Practices Declaration).\nIn the first example below, an utterance has been segmented according\nto a notion of syntactic completeness not necessarily marked by the\nspeech, although in this case a pause has been recorded between the two\nsentence-like units.  In the second, the segments are defined\nprosodically (an acute accent \nhas been used to mark the position immediately following the syllable\nbearing the primary accent or stress), and may be thought of as\ntone units.\nbibliography\n\nIn either case, the segmentation element in the header of the\ntext should specify the principles adopted to define the segments marked\nin this way.\nWhen utterances are segmented end-to-end in the same way as the\ns-units in written texts, the s element discussed in chapter 17 Simple Analytic Mechanisms\n may be used, either as an alternative or in addition to\nthe more general purpose seg element.  The s element\nis available without formality in all texts, but does not allow segments\nto nest within each other.\n\nWhere segments of different kinds are to be distinguished within the\nsame stretch of speech, the type attribute may be used, as in\nthe following example:\n\n\nIn this example, recoded from a corpus of language-impaired speech\nprepared by Fletcher and Garman, the speaker's utterance has been fully\nsegmented into clausal (type=\"C\") \nor minor (type=\"M\") units. \n\nFor some features, it may be \nmore appropriate or convenient to introduce a new element in a custom namespace:\nbibliography\n\nHere, ext:paraphasia has been used to define a particular\ncharacteristic of this corpus for which no element exists in the TEI scheme.\nSee further chapter 23.3 Customization for a discussion of the way in\nwhich this kind of user-defined extension of the TEI scheme may be\nperformed and chapter 1 The TEI Infrastructure for the mechanisms on which it\ndepends.\nThis example also uses the core elements gap and\ndel to mark editorial decisions concerning matter completely\nomitted from the transcript (because of inaudibility), and words which\nhave been transcribed but which the transcriber wishes to exclude from\nthe segment because they are repeated, respectively.  See\nsection 3.5 Simple Editorial Changes for a discussion of these and related\nelements.\nIt is often the case that the desired segmentation does not respect\nutterance boundaries; for example, syntactic units may cross utterance\nboundaries.  For a detailed discussion of this problem, and the various\nmethods proposed by these Guidelines for handling it, see chapter\n20 Non-hierarchical Structures. Methods discussed there include these:\nmilestone tags may be used;\nthe special-purpose shift tag discussed\nin section 8.3.6 Shifts is an extension of this methodwhere several discontinuous segments are to be grouped\ntogether to form a syntactic unit (e.g. a phrasal verb with interposed\ncomplement), the join element may be used"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TS#TS\">8 Transcriptions of Speech</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSSA#TSSA\">8.4 Elements Defined Elsewhere</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSSAPA#TSSAPA\">8.4.2 Synchronization and Overlap</a>","content":"8.4.2 Synchronization and Overlap\nA major difference between spoken and written texts is the importance\nof the temporal dimension to the former.  As a very simple example,\nconsider the following, first as it might be represented in a\nplayscript:\nbibliography\nTo encode this, we first define the participants:\n\nLet us assume that Stig and Lou respond to Jane's question before she\nhas finished asking it—a fairly normal situation in spontaneous\nspeech.  The simplest way of representing this overlap\nwould be to use the trans attribute previously discussed:\nbibliography\nHowever, this does not allow us to indicate either the extent to which\nStig's utterance is overlapped, nor does it show that there are in\nfact three things which are synchronous:  the end of Jane's utterance,\nStig's whole utterance, and Lou's kinesic.  To overcome these problems,\nmore sophisticated techniques, employing the mechanisms for pointing and\nalignment discussed in detail in section 16.4 Synchronization, are needed.\nIf the module for linking has been enabled (as described in\nsection 8.4.1 Segmentation above), one way to represent the simple\nexample above would be as follows:\nbibliography\nFor a full discussion of this and related mechanisms, section 16.4.2 Placing Synchronous Events in Time should be consulted. The rest of the present\nsection, which should be read in conjunction with that more detailed\ndiscussion, presents a number of ways in which these mechanisms may be\napplied to the specific problem of representing temporal alignment,\nsynchrony, or overlap in transcribing spoken texts.\nIn the simple example above, the first utterance (that with\nidentifier utt1) contains an anchor element, the function of\nwhich is simply to mark a point within it. The synch\nattribute associated with this anchor point specifies the identifiers of\nthe other two elements which are to be synchronized with it:\nspecifically, the second utterance (utt2) and the kinesic (k1). Note that\none of these elements has content and the other is empty.\nThis example demonstrates only a way of indicating a point within one\nutterance at which it can be synchronized with another utterance and a\nkinesic. For more complex kinds of alignment, involving possibly\nmultiple synchronization points, an additional element is provided,\nknown as a timeline. This consists of a series of\nwhen elements, each representing a point in time, and bearing\nattributes which indicate its exact temporal position relative to other\nelements in the same timeline, in addition to the sequencing implied by\nits position within it.\nFor example:\n\nThis timeline represents four points in time, named TS-P1, TS-P2, TS-P6, and TS-P3\n(as with all attributes named xml:id in the TEI scheme, the\nnames must be unique within the document but have no other\nsignificance).  TS-P1 is located absolutely, at 12:20:01:01 BST.  TS-P2 is 4.5\nseconds later than TS-P2 (i.e. at 12:20:46).  TS-P6 is\nat some unspecified time later than TS-P2 and previous to TS-P3 (this is\nimplied by its position within the timeline, as no attribute values have\nbeen specified for it).  The fourth point, TS-P3, is 1.5 seconds \nlater than TS-P6.\nOne or more such timelines may be specified within a spoken text, to\nsuit the encoder's convenience.  If more than one is supplied, the\norigin attribute may be used on each to specify which other\ntimeline element it follows.  The unit attribute\nindicates the units used for timings given on when elements\ncontained by the alignment map.  Alternatively, to avoid the need to\nspecify times explicitly, the interval attribute may be used\nto indicate that all the when elements in a time line are a\nfixed distance apart.\nThree methods are available for aligning points or elements within a\nspoken text with the points in time defined by the timeline:\nThe elements to be synchronized may specify the identifier\nof a when element as the value of one of the start,\nend, or synch attributesThe when\nelement may specify the identifiers of all the elements to be\nsynchronized with it using the synch attributeA\nfree-standing link element may be used to associate the\nwhen element and the elements synchronized with it by\nspecifying their identifiers as values for its target\nattribute.\nFor example, using the timeline given above: bibliography The start of utterance\nTS-U1 is aligned with TS-P2 and its end with\nTS-P3.  The transition between the words\nmy and turn occurs at\npoint TS-P6A, which is synchronous with point\nTS-P6 on the timeline.\nThe synchronization represented by the preceding examples could\nequally well be represented as follows:\nbibliography\nHere, the whole of the object with identifier ts-u1 (the\nutterance) has been aligned with two different points,\nts-p2 and ts-p3.  This is interpreted to mean\nthat the utterance spans at least those two points.\nFinally, a linkGrp may be used as an alternative to the\nsynch attribute:\nbibliography\nAs a further example of the three possibilities, consider the\nfollowing dialogue, represented first as it might appear in a\nconventional playscript:\nbibliography\n\nA commonly used convention might be to transcribe such a passage as\nfollows:\nbibliography\nSuch conventions have the drawback that they are hard to generalize or\nto extend beyond the very simple case presented here.  Their reliance on\nthe accidentals of physical layout may also make them difficult to\ntransport and to process computationally.  These Guidelines recommend\nthe following mechanisms to encode this.\nWhere the whole of one or another utterance is to be synchronized,\nthe start and end attributes may be used:\nbibliography\nNote that the second utterance above could equally well be encoded as\nfollows with exactly the same effect:\nbibliography\nIf synchronization with specific timing information is required, a\ntimeline must be included:\nbibliography\n\n(Note that If only the ordering or sequencing of utterances is needed, \nthen specific timing information shown here in unit, absolute \nand interval does not need to be provided.)\n\nAs above, since the whole of Bob's utterance is to be aligned, the\nstart and end attributes may be used as an\nalternative to the second pair of anchor elements:\nbibliography\nAn alternative approach is to mark the synchronization by pointing\nfrom the timeline to the text:\nbibliography\nTo avoid deciding whether to point from the timeline to the text or vice\nversa, a linkGrp may be used:\nbibliography\nNote that in each case, although Bob's utterance follows Tom's\nsequentially in the text, it is aligned temporally with its middle,\nwithout any need to disrupt the normal syntax of the text.\nAs a final example, consider the following exchange, first as it\nmight be represented using a musical-score-like notation, in which\npoints of synchronization are represented by vertical alignment of the\ntext:\n\nAll three speakers are simultaneous at the words my,\nBalderdash, and No; speakers Stig and Lou are\nsimultaneous at the words turn and it's.\nThis could be encoded as follows, using pointers from the alignment map\ninto the text:\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TS#TS\">8 Transcriptions of Speech</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSSA#TSSA\">8.4 Elements Defined Elsewhere</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSREG#TSREG\">8.4.3 Regularization of Word Forms</a>","content":"8.4.3 Regularization of Word Forms\nWhen speech is transcribed using ordinary orthographic notation, as\nis customary, some compromise must be made between the sounds produced\nand conventional orthography.  Particularly when dealing with informal,\ndialectal, or other varieties of language, the transcriber will\nfrequently have to decide whether a particular sound is to be treated as\na distinct vocabulary item or not.  For example, while in a given\nproject kinda may not be worth distinguishing as a\nvocabulary item from kind of, isn't may\nclearly be worth distinguishing from is not; for some\npurposes, the regional variant isnae might also be worth\ndistinguishing in the same way.\nOne rule of thumb might be to allow such variation only where a\ngenerally accepted orthographic form exists, for example, in published\ndictionaries of the language register being encoded; this has the\ndisadvantage that such dictionaries may not exist.  Another is to\nmaintain a controlled (but extensible) set of normalized forms for all\nsuch words; this has the advantage of enforcing some degree of\nconsistency among different transcribers.  Occasionally, as for example\nwhen transcribing abbreviations or acronyms, it may be felt necessary to\ndepart from conventional spelling to distinguish between cases where the\nabbreviation is spelled out letter by letter (e.g.  B B C\nor V A T) and where it is pronounced as a single word\n(VAT or RADA).  Similar considerations\nmight apply to pronunciation of foreign words\n(e.g. Monsewer vs. Monsieur).\nIn general, use of punctuation, capitalization, etc., in spoken\ntranscripts should be carefully controlled.  It is important to\ndistinguish the transcriber's intuition as to what the punctuation\nshould be from the marking of prosodic features such as pausing,\nintonation, etc.\nWhatever practice is adopted, it is essential that it be clearly and\nfully documented in the editorial declarations section of the header.\nIt may also be found helpful to include normalized forms of\nnon-conventional spellings within the text, using the elements for\nsimple editorial changes described in section 3.5 Simple Editorial Changes (see\nfurther section 8.4.5 Speech Management)."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TS#TS\">8 Transcriptions of Speech</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSSA#TSSA\">8.4 Elements Defined Elsewhere</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSTPPR#TSTPPR\">8.4.4 Prosody</a>","content":"8.4.4 Prosody\nIn the absence of conventional punctuation, the marking of prosodic\nfeatures assumes paramount importance, since these structure and\norganize the spoken message.  Indeed, such prosodic features as points\nof primary or secondary stress may be represented by specialized\npunctuation marks, or other characters such as those provided by the\nUnicode Spacing Modifier Letters block.  Pauses have already been dealt with in section\n8.3.2 Pausing; while tone units (or intonational phrases)\ncan be indicated by the segmentation tag discussed in section\n8.4.1 Segmentation. The shift element discussed in section 8.3.6 Shifts \nmay also be used to encode some prosodic features, for example where all\nthat is required is the ability to record shifts in voice quality.\n\nIn a more detailed phonological transcript, it is common practice\nto include a number of conventional signs to mark prosodic features of\nthe surrounding or (more usually) preceding speech. Such signs may be\nused to record, for example, particular intonation patterns,\ntruncation, vowel quality (long or short) etc. These signs may be\npreserved in a transcript either by using conventional punctuation or\nby marking their presence by g \nelements. Where a transcript\nincludes many phonetic or phonemic aspects, it will generally be\nmore convenient to use the appropriate Unicode characters (see\nfurther chapters 6 Languages and Character Sets and 5 Characters, Glyphs, and Writing Modes). For\nrepresentation of phonemic information, the use of the International\nPhonetic Alphabet, which can be represented in Unicode characters, is\nrecommended.\nIn the following example, special characters have been defined as\nfollows within the encodingDesc of the TEI header\n\nThese declarations might additionally provide information about\nhow the characters concerned should be rendered,  their equivalent\nIPA form, etc. In the transcript itself references to them can then\nbe included as follows:\nbibliography\n\nThis example, which is taken from a corpus of bookshop service\nencounters, \nalso demonstrates the use of the unclear and gap\nelements discussed in section 3.5 Simple Editorial Changes.  Where words are so\nunclear that only their extent can be recorded, the empty gap\nelement may be used; where the encoder can identify the words but wishes\nto record a degree of uncertainty about their accuracy, the\nunclear element may be used. More flexible and detailed\nmethods of indicating uncertainty are discussed in chapter 21 Certainty, Precision, and Responsibility.\n\n\nFor more detailed work, involving a detailed phonological transcript\nincluding representation of stress and pitch patterns, it is probably\nbest to maintain the prosodic description in parallel with the\nconventional written transcript, rather than attempt to embed detailed\nprosodic information within it.  The two parallel streams may be aligned\nwith each other and with other streams, for example an acoustic\nencoding, using the general alignment mechanisms discussed in section\n8.3.6 Shifts.\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TS#TS\">8 Transcriptions of Speech</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSSA#TSSA\">8.4 Elements Defined Elsewhere</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSTPSM#TSTPSM\">8.4.5 Speech Management</a>","content":"8.4.5 Speech Management\nPhenomena of speech management include disfluencies such\nas filled and unfilled pauses, interrupted or repeated words,\ncorrections, and reformulations as well as interactional devices asking\nfor or providing feedback.  Depending on the importance attached to such\nfeatures, transcribers may choose to adopt conventionalized\nrepresentations for them (as discussed in section 8.4.3 Regularization of Word Forms\nabove), or to transcribe them using IPA or some other transcription\nsystem.  To simplify analysis of the lexical features of a speech\ntranscript, it may be felt useful to tidy away many\nof these disfluencies.  Where this policy has been adopted, these\nGuidelines recommend the use of the tags for simple editorial\nintervention discussed in section 3.5 Simple Editorial Changes, to make explicit\nthe extent of regularization or normalization performed by the\ntranscriber.\nFor example, false starts, repetition, and truncated words might all\nbe included within a transcript, but marked as editorially deleted, in\nthe following way:\n\nAs previously noted, the gap element may be used to mark\npoints within a transcript where words have been omitted, for example\nbecause they are inaudible, as in the following example in which 5 seconds of\nspeech is drowned out by an external event:\n\nThe unclear element may be used to mark words which have\nbeen included although the transcriber is unsure of their accuracy:\n\nWhere a transcriber is believed to have incorrectly identified a\nword, the elements corr or sic embedded within a\nchoice element may be used to indicate\nboth the original and a corrected form of it:\n\nThese elements are further discussed in section 3.5.1 Apparent Errors.\n\nFinally phenomena such as code-switching, where a\nspeaker switches from one language to another, may easily be\nrepresented in a transcript by using the foreign element\nprovided by the core tagset:\nbibliography\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TS#TS\">8 Transcriptions of Speech</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSSA#TSSA\">8.4 Elements Defined Elsewhere</a><a class=\"breadcrumb\" href=\"p5.xml?id=TSTPAC#TSTPAC\">8.4.6 Analytic Coding</a>","content":"8.4.6 Analytic Coding\nThe recommendations made here only concern the establishment of a\nbasic text. Where a more sophisticated analysis is needed, more\nsophisticated methods of markup will also be appropriate, for example,\nusing stand-off markup to indicate multiple segmentation of the\nstream of discourse, or complex alignment of several segments within it.\nWhere additional annotations (sometimes called\ncodes or tags) are used to\nrepresent such features as linguistic word class (noun, verb, etc.),\ntype of speech act (imperative, concessive, etc.), or information status\n(theme/rheme, given/new, active/semi-active/new), etc., a selection from\nthe general purpose analytic tools discussed in chapters 16 Linking, Segmentation, and Alignment, 17 Simple Analytic Mechanisms, and 18 Feature Structures may be used to\nadvantage.\n\nThe general-purpose annotationBlock element may be used to group together a transcription and multiple layers of annotation. It also serves\nto divide a transcribed text up into meaningful analytic sections. \n\n<annotationBlock> groups together various annotations, e.g.\n  for parallel interpretations of a spoken segment.\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TS#TS\">8 Transcriptions of Speech</a><span class=\"breadcrumb\">8.5 Module for Transcribed Speech</span>","content":"\n  8.5 Module for Transcribed Speech\n  The module described in this chapter makes available the following components:\n  \n    Transcribed Speech\n    Transcribed Speech\n    \n    \n    \n    \n    \n  \n  The selection and combination of modules to form a TEI schema is\n  described in 1.2 Defining a TEI Schema.\n  \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a>","content":"\n  9 Dictionaries\n\nThis chapter defines a module for encoding lexical resources of all\nkinds, in particular human-oriented\nmonolingual and multilingual dictionaries, glossaries, and similar\ndocuments. The elements described here may also be useful in the\nencoding of computational lexica and similar resources intended for\nuse by language-processing software; they may also be used to provide\na rich encoding for wordlists, lexica, glossaries, etc. included\nwithin other documents.  Dictionaries are most familiar in\ntheir printed form; however, increasing numbers of dictionaries exist\nalso in electronic forms which are independent of any particular\nprinted form, but from which various displays can be produced. \n\nBoth typographically and structurally, print dictionaries are\nextremely complex. Such lexical resources are moreover of interest to\nmany communities with different and sometimes conflicting goals. As a\nresult, many general problems of text encoding are particularly\npronounced here, and more compromises and alternatives within the\nencoding scheme may be required in the future.1 Two problems are particularly\nprominent.\n\nFirst, because the structure of dictionary entries varies widely\nboth among and within dictionaries, the simplest way for an encoding\nscheme to accommodate the entire range of structures actually\nencountered is to allow virtually any element to appear virtually\nanywhere in a dictionary entry. It is clear, however, that strong and\nconsistent structural principles do govern the vast majority of\nconventional dictionaries, as well as many or most entries even in\nmore exotic dictionaries; \nencoding guidelines should include these structural principles. We\ntherefore define two distinct elements for dictionary entries, one\n(entry) which captures the regularities of many conventional\ndictionary entries, and a second (entryFree) which uses the\nsame elements, but allows them to combine much more freely. It is\nhowever recommended that entry be used in preference to\nentryFree wherever possible.\nThese elements and their contents are described in sections 9.2 The Structure of Dictionary Entries, 9.6 Unstructured Entries, and 9.4 Headword and Pronunciation References.\n\nSecond, since so much of the information in printed dictionaries is\nimplicit or highly compressed, their encoding requires clear thought\nabout whether it is to capture the precise typographic form of the\nsource text or the underlying structure of the information it\npresents. Since both of these views of the dictionary may be of\ninterest, it proves necessary to develop methods of recording both,\nand of recording the interrelationship between them as well. Users\ninterested mainly in the printed format of the dictionary will require\nan encoding to be faithful to an original printed version. However,\nother users will be interested primarily in capturing the lexical\ninformation in a dictionary in a form suitable for further processing,\nwhich may demand the expansion or rearrangement of the information\ncontained in the printed form. Further, some users wish to encode\nboth of these views of the data, and retain the links\nbetween related elements of the two encodings. Problems of recording\nthese two different views of dictionary data are discussed in section\n9.5 Typographic and Lexical Information in Dictionary Data, together with mechanisms for retaining both\nviews when this is desired.\n\nTo deal with this complexity, and in particular to account for the\nwide variety of linguistic contexts within which a dictionary may be\ndesigned, it can be necessary to customize or change the schema by\nproviding more restriction or possibly alternate content models for\nthe elements defined in this chapter.  Section 9.3.2 Grammatical Information\nillustrates this with the provision of a closed set of values for\ngrammatical descriptors.\n\nThis chapter contains a large number of examples taken from\nexisting print dictionaries; in each case, the original source is\nidentified. In presenting such examples, we have tried to retain the\noriginal typographic appearance of the example as well as presenting a\nsuggested encoding for it. Where this has not been possible (for\nexample in the display of pronunciation) we have adopted the\ntransliteration found in the electronic edition of the Oxford\nAdvanced Learner's Dictionary. Also, the middle dot in quoted\nentries is rendered with a full stop, while within the sample\ntranscriptions hyphenation and syllabification points are indicated by\na vertical bar |, regardless of their appearance in the source\ntext.\n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIBO#DIBO\">9.1 Dictionary Body and Overall Structure</a>","content":"\n9.1 Dictionary Body and Overall Structure\n\nOverall, dictionaries have the same structure of front matter,\nbody, and back matter familiar from other texts. In addition,\nthis module defines entry, entryFree,\nand superEntry as component-level elements which can occur\ndirectly within a text division or the text body. \n\nThe following tags can therefore be used to mark the gross structure of a\nprinted dictionary; the dictionary-specific tags are discussed further\nin the following section.\n<text> contains a single text of any kind, whether unitary or composite, for example a poem or\n    drama, a collection of essays, a novel, a dictionary, or a corpus sample.\n<front> contains any prefatory matter\n  (headers, abstracts, title page, prefaces, dedications, etc.) found at the\n  start of a document, before the main body.\n<body> contains the whole body of a single unitary text, excluding any front or back matter.\n<back> contains any appendixes, etc. following the main part\n  of a text.\n<div> contains a subdivision of the front, body, or back of a text.\n<entry> contains a single structured entry in any kind of lexical resource, such\n  as a dictionary or lexicon.\n<entryFree> contains a single unstructured entry in any kind of lexical\n  resource, such as a dictionary or lexicon.\n<superEntry> groups a sequence of entries within any kind of lexical resource, such\n  as a dictionary or lexicon which function as a single unit, for\n  example a set of homographs.\n\n\nAs members of the classes att.entryLike and \n att.sortable,\nentry and entryFree share the following\nattributes:\n<att.entryLike> provides attributes used to distinguish \n    different styles of dictionary entries.  \n <att.sortable> provides attributes for elements in lists or groups that are sortable, but whose sorting key cannot be derived mechanically from the element content. \n\n\n\nThe front and back matter of a dictionary may well contain\nspecialized material such as lists of common and proper nouns,\ngrammatical tables, gazetteers, a guide to the use of the\ndictionary, etc. These should be tagged using elements\ndefined elsewhere in these Guidelines, chiefly in the core module\n(chapter 3 Elements Available in All TEI Documents) together with the specialized dictionary\nelements defined in this chapter.\n\nThe body element consists of a set of\nentries, optionally grouped into one or several\ndiv elements. These text divisions might, for example, correspond to\nsections for different letters of the alphabet, or to sections for\ndifferent languages in a bilingual dictionary, as in the following\nexample:\n\nbibliography\n\n\nIn a\nprint dictionary, the entries are typically typographically distinct\nentities, each headed by some morphological form of the lexical item\ndescribed (the headword), and sorted in alphabetical\norder or (especially for non-alphabetic scripts) in some other\nconventional sequence. Dictionary entries should be encoded as\ndistinct successive items, each marked as an entry or\nentryFree element. The type attribute may be used\nto distinguish different types of entries, for example main entries,\nrelated entries, run-on entries, or entries for cross-references,\netc. \n\nSome dictionaries provide distinct entries for homographs, on the\nbasis of etymology, part-of-speech, or both, and typically provide a\nnumeric superscript on the headword identifying the homograph\nnumber. In these cases each homograph should be encoded as a separate\nentry; the superEntry element may optionally be used to group\nsuch successive homograph entries. In addition to a series of\nentry elements, the superEntry may contain a\npreliminary form group (see section 9.3.1 Information on Written and Spoken Forms)\nwhen information about hyphenation, pronunciation, etc., is given only\nonce for two or more homograph entries. If the homograph number is to\nbe recorded, the global attribute n may be used for this\npurpose. In some dictionaries, homographs are treated in distinct\nparts of the same entry; in these cases, they may be separated by use\nof the hom element, for which see section 9.2.1 Hierarchical Levels. \n\nA sort key, given in the sortKey attribute, is often\nrequired for superentries and entries, especially in cases where the\norder of entries does not follow the local character-set collating\nsequence (as, for example, when an entry for 3D appears at the\nplace where three-D would appear). \n\n\n\nA dictionary with no internal divisions might thus have a structure like\nthe following; a superEntry is shown grouping two homograph\nentries.bibliography\n\n\n \n\n  groups elements structurally analogous to paragraphs within dictionaries.\n  \n  \n  \n  \n  \n  \n  \n  \n    9.1 Dictionary Body and Overall Structure\n    1.3 The TEI Class System\n  \n\n\n  provides attributes used to distinguish \n    different styles of dictionary entries.\n  \n  \n  \n  \n  \n  \n  \n  \n    \n    \n  \n  \n    The global n attribute may be used to encode the homograph numbers attached to\n      entries for homographs.\n  \n  \n    Pour des homographes, l'attribut global npeut être utilisé pour encoder des\n      numéros d'homographes attachés aux entrées.\n  \n  \n     グローバル属性nを使い，同綴異義語の番号としてもよい． \n  \n  \n    9.1 Dictionary Body and Overall Structure\n    9.2 The Structure of Dictionary Entries\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIEN#DIEN\">9.2 The Structure of Dictionary Entries</a>","content":"\n9.2 The Structure of Dictionary Entries\n\nA simple dictionary entry may contain information about the form of\nthe word treated, its grammatical characterization, its definition,\nsynonyms, or translation equivalents, its etymology, cross-references\nto other entries, usage information, and examples. These we refer to\nas the constituent parts or constituents of\nthe entry; some dictionary constituents possess no internal structure,\nwhile others are most naturally viewed as groups of smaller elements,\nwhich may be marked in their own right.  In some styles of markup,\ntags will be applied only to the low-level items, leaving the\nconstituent groups which contain them untagged. We distinguish the\nclass of top-level constituents of dictionary entries,\nwhich can occur directly within the entry element, from the class of\nphrase-level constituents, which can normally occur only\nwithin top-level constituents. The top-level constituents of\ndictionary entries are described in section 9.2.2 Groups and Constituents,\nand documented more fully, together with their phrase-level\nsub-constituents, in section 9.3 Top-level Constituents of Entries. \n\nIn addition, however, dictionary entries often have a complex\nhierarchical structure. For example, an entry may consist of two or\nmore sub-parts, each corresponding to information for a different\npart-of-speech homograph of the headword. The entry (or part-of-speech\nhomographs, if the entry is split this way) may also consist of\nsenses, each of which may in turn be composed of two or more\nsub-senses, etc. Each sub-part, homograph entry, sense, or sub-sense\nwe call a level; at any level in an entry, any or all of\nthe constituent parts of dictionary entries may appear. The\nhierarchical levels of dictionary entries are documented in section\n9.2.1 Hierarchical Levels. \n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIEN#DIEN\">9.2 The Structure of Dictionary Entries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIENHI#DIENHI\">9.2.1 Hierarchical Levels</a>","content":"\n9.2.1 Hierarchical Levels\n\nThe outermost structural level of an entry is marked with the\nelements entry or entryFree. The hom\nelement marks the subdivision of entries into homographs differing in\ntheir part-of-speech. The sense element marks the subdivision\nof entries and part-of-speech homographs into senses; this element\nnests recursively in order to provide for a hierarchy of sub-senses of\nany depth.  It is recommended to use the sense element even \nfor an entry that has only one sense to group together all parts of \nthe definition relating to the word sense since this leads to more \nconsistent encoding across entries. \nAll of these levels may each contain any of the\nconstituent parts of an entry. A special case of hierarchical\nstructure is represented by the re (related entry) element,\nwhich is discussed in section 9.3.6 Related Entries. Finally, the\nelement dictScrap may be used at any point in the hierarchy\nto delimit parts of the dictionary entry which are structurally\nanomalous, as further discussed in section 9.6 Unstructured Entries.\n<entry> contains a single structured entry in any kind of lexical resource, such\n  as a dictionary or lexicon.\n<entryFree> contains a single unstructured entry in any kind of lexical\n  resource, such as a dictionary or lexicon.\n<hom> groups information relating to one homograph within an entry.\n<sense> groups together all information relating to one word sense in a dictionary entry, for\n    example definitions, examples, and translation equivalents.\n<dictScrap> encloses a part of a dictionary entry in which other phrase-level dictionary elements are\n        freely combined.\n\n\n For example, an entry with two senses will have the following structure:\n\nAn entry with two homographs, the first with two senses and the second with three\n (one of which has two sub-senses), may have a structure like this: In some dictionaries, homographs have separate entries; in\nsuch a case, as noted in section 9.1 Dictionary Body and Overall Structure, the two homographs may be\n treated as entries, optionally grouped in a superEntry:\n\nThe hierarchic structure of a dictionary entry is enforced by the\nstructures defined in this module. The content model for\nentry specifies that entries do not nest, that homographs\nnest within entries, and that senses nest within entries, homographs,\nor senses, and may be nested to any depth to reflect the embedding of\nsub-senses. Any of the top-level constituents (def,\nusg, form, etc.) can appear at any level (i.e.,\nwithin entries, homographs, or senses).\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIEN#DIEN\">9.2 The Structure of Dictionary Entries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIENGP#DIENGP\">9.2.2 Groups and Constituents</a>","content":"\n9.2.2 Groups and Constituents\n\nAs noted above, dictionary entries, and subordinate levels within dictionary entries,\nmay comprise several constituent parts, each providing a different type of\ninformation about the word treated. The top-level constituents of\ndictionary entries are:information about the form of the word treated (orthography,\npronunciation, hyphenation, etc.)grammatical information (part of speech, grammatical sub-categorization,\netc.)definitions or translations into another languageetymologyexamplesusage informationcross-references to other entriesnotesentries (often of reduced form) for related words, typically called\nrelated entries\n Any of the hierarchical levels (entry, entryFree,\nhom, and sense) may contain any of these top-level constituents, since\ninformation about word form, particular grammatical information, special\npronunciation, usage information, etc., may apply to an entire entry, or to only one\nhomograph, or only to a particular sense. The examples below illustrate this point. \nThe following elements are used to encode these top-level constituents:\n<form> groups all the information on the written and spoken forms of one headword.\n<gramGrp> groups morpho-syntactic information about a lexical item, e.g. pos, gen, number, case, or\n        iType (inflectional class).\n<def> contains definition text in a dictionary entry.\n<cit> contains a quotation from some other document, together with a bibliographic reference to\n    its source. In a dictionary it may contain an example text with at least one occurrence of the\n    word form, used in the sense being described, or a translation of the headword, or an example.\n<usg> contains usage information in a dictionary entry.\n<xr> contains a phrase, sentence, or icon referring the reader to some other location in this or\n    another text.\n<etym> encloses the etymological information in a dictionary entry.\n<re> contains a dictionary entry for a lexical item related to the headword, such as a compound\n    phrase or derived form, embedded inside a larger entry.\n<note> contains a note or annotation.\n\n\nIn a simple entry with no internal hierarchy, all top-level constituents can appear \nas children of entry.\n\ncom.peti.tor\n/k@m\"petit@(r)/ n person who competes. OALD \nbibliography \nFor the elements which appear within the form and gramGrp\nelements of this and other  examples, see below, section 9.3.1 Information on Written and Spoken Forms, and section 9.3.2 Grammatical Information. \nAny top-level constituent can appear at any level when the\nhierarchical structure of the entry is more complex. The most obvious examples are\ndef and cit, which appear at the sense level when\nseveral senses or translations exist:\ndisproof\n  (dɪsˈpru:f) n 1 facts that disprove something 2 the\nact of disproving. CED \nbibliography\n\nFor ease of processing of such entries containing multiple senses along with those containing \nonly a single sense, it is recommended to use sense in all entries to wrap those elements \nrelating to a particular word sense.\nIn the following example, gramGrp is used to distinguish two homographs:\nbray\n/breI/ n cry of an ass; sound of a trumpet. ∙ vt [VP2A]\nmake a cry or sound of this kind. OALD \nbibliography\n\n\nInformation of the same kind can appear at different levels within the same entry;\nhere, grammatical information occurs both at entry and homograph level.\nca.reen\n/k@\"ri:n/ vt,vi 1 [VP6A] turn (a ship) on one side for\ncleaning, repairing, etc. 2 [VP6A, 2A] (cause to) tilt, lean over to one side.\nOALD \nbibliography\n\n\nAlone among the constituent groups, form can appear at the\nsuperEntry level as well as at the entry, hom, and\nsense levels:\na.ban.don 1/@\"band@n/ \nv [T1] 1 to leave completely and for ever; desert: The sailors abandoned the\nburning ship. 2 …abandon 2 n [U] the state when one's\nfeelings and actions are uncontrolled; freedom from control...LDOCE\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITP#DITP\">9.3 Top-level Constituents of Entries</a>","content":"\n9.3 Top-level Constituents of Entries\nThis section describes the top-level constituents of dictionary entries, together with\nthe phrase-level constituents peculiar to each.the form element, which groups orthographic information and\npronunciations, is described in section 9.3.1 Information on Written and Spoken Forms\nthe gramGrp element, which groups elements for the grammatical\ncharacterization of the headword, is described in section 9.3.2 Grammatical Information\nthe def element, which describes the meaning of the headword, is\ndescribed in section 9.3.3 Sense Information\nthe etym element and its special phrase-level elements are documented\nin section 9.3.4 Etymological Information\nthe cit element and its specific applications are described in\nsection 9.3.3 Sense Information and section 9.3.5 Other Information\nthe usg, lbl, xr, and note elements are\ndescribed in section 9.3.5 Other Information\nthe re element, which marks nested entries for related words, is\ndescribed in section 9.3.6 Related Entries\n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITP#DITP\">9.3 Top-level Constituents of Entries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITPFO#DITPFO\">9.3.1 Information on Written and Spoken Forms</a>","content":"\n9.3.1 Information on Written and Spoken Forms\nDictionary entries most often begin with information about the form of the word to\nwhich the entry applies. Typically, the orthographic form of the word, sometimes\nmarked for syllabification or hyphenation, is the first item in an entry. Other\ninformation about the word, including variant or alternate forms, inflected forms,\npronunciation, etc., is also often given. \nThe following elements should be used to encode this information: the form\nelement groups one or more occurrences of any of them; it can also be\nrecursively nested to reflect more complex sub-grouping of information about word\nform(s), as shown in the examples.\n<form> groups all the information on the written and spoken forms of one headword.\n<orth> gives the orthographic form of a dictionary headword.\n<pron> contains the pronunciation(s) of the word.\n<hyph> contains a hyphenated form of a dictionary headword, or hyphenation information in some\n    other form.\n<syll> contains the syllabification of the headword.\n<stress> contains the stress pattern for a dictionary headword, if given separately.\n<lbl> contains a label for a form, example, translation, or other piece of information, e.g.\n    abbreviation for, contraction of, literally, approximately, synonyms:, etc.\n\n\nIn addition to those listed above, the following elements, which encode morphological\ndetails of the form, may also occur within form elements:\n<gram> within an entry in a dictionary or a terminological data file, contains grammatical\n    information relating to a term, word, or form.\n<gen> identifies the morphological gender of a lexical item, as given in the dictionary.\n<number> indicates grammatical number associated with a form, as given in a dictionary.\n<case> contains grammatical case information given by a dictionary for a given form.\n<per> contains an indication of the grammatical person (1st, 2nd, 3rd, etc.) associated with a\n    given inflected form in a dictionary.\n<tns> indicates the grammatical tense associated with a given inflected form in a dictionary.\n<mood> contains information about the grammatical mood of verbs (e.g. indicative, subjunctive,\n    imperative).\n<iType> indicates the inflectional class associated with a lexical item.\n<pos> indicates the part of speech assigned to a dictionary \nheadword  such as noun, verb, or adjective.\n<subc> contains subcategorization information (transitive/intransitive, countable/non-countable,\n        etc.)\n<colloc> contains any sequence of words that co-occur with the headword with significant frequency.\n Of these, the gram element is most general, and all of the\nothers are synonymous with a gram element with appropriate values (gen,\nnumber, case, etc.) for the type attribute.\nThe use of these elements as children of form is deprecated; instead, they\nshould always be children of a gramGrp within form when describing \nthat particular form of the word.\nDifferent dictionaries use different means to mark hyphenation,\nsyllabification, and stress, and they often use some unusual glyphs\n(e.g., the middle dot for hyphenation). All of\nthese glyphs are in the Unicode character set, as discussed in 5.7.1 Character References. When transcribing representations of pronunciation\nthe International Phonetic Alphabet should be used. It may be\nconvenient (as has been done in the text of this chapter) to use a\nsimple transliteration scheme for this; such a scheme should however be\nproperly documented in the header. \nIn the simplest case, nothing is given but the orthography:bibliography\n\nOften, however, pronunciation is given.\nsoucoupe [sukup] … DNT\nbibliography\n\nFor a variety of reasons including ease of processing, it may be desired to split\ninto separate elements information which is collapsed into a single element in the\nsource text; orthography and hyphenation may for example be transcribed as separate\nelements, although given together in the source text. For a discussion of the issues\ninvolved, and of methods for retaining both the presentation form and the\ninterpreted form, see section 9.5 Typographic and Lexical Information in Dictionary Data. \nThis example splits orthography and hyphenation, and adds syllabification because it\ndiffers from hyphenation:\nar.ea … W7\nbibliography\n\n\nMultiple orthographic forms may be given, e.g. to illustrate a word's inflectional\npattern:\nbrag … vb brags, bragging, bragged … CED\nbibliography Or the inflectional pattern may be indicated by reference to a table of\nparadigms, as here:\nhorrifier\n[ORifje] (7) vt … [C/R] \nbibliography\n\n\nExplanatory labels may be attached to alternate forms:\nMTBF\nabbreviation for mean time between failures CED\nbibliography\n\nWhen multiple orthographic forms are given, a pronunciation may be associated with\nall of them, as here:\nbiryani or biriani\n  (ˌbɪrɪˈa:nɪ) … CED\nbibliography\n\nIn other cases, different pronunciations are provided for different orthographic\nforms; here, the form element is repeated to associate the first\northographic form explicitly with the first pronunciation, and the second\northographic form with the second pronunciation:\nmackle\n  (ˈmækᵊl) or macule (ˈmækju:l) … CED \nbibliography\n\nRecursive nesting of the form element can preserve relations among elements\nthat are implicit in the text. For example, in the CED entry for hospitaller,\nit is clear that U.S. is associated only with hospitaler, but that the\npronunciation applies to both forms. The following encoding preserves these\nrelations:\n  hospitaller or US hospitaler (ˈhɒspɪtələ) … CED \nbibliography\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITP#DITP\">9.3 Top-level Constituents of Entries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITPGR#DITPGR\">9.3.2 Grammatical Information</a>","content":"\n9.3.2 Grammatical Information\nThe gramGrp element groups grammatical information, such as part of speech,\nsubcategorization information (e.g., syntactic patterns for verbs, count/mass\ndistinctions for nouns), etc. It can contain any of the morphological elements defined\nin section 9.3.1 Information on Written and Spoken Forms for form and can appear as a child of entry, \nform, sense, cit, or any other element containing content about which \nthere is grammatical information. For example, in the entry \n  pinna (ˈpɪnə) n, \n  pl -nae (-ni:) or -nas CED, the\nword defined can be either singular or plural; the pl. specification applies\nonly to the inflected forms provided. Compare this with pants (paents) pl.\nn., where pl. applies to the headword itself. \nAs noted above in section 9.3.1 Information on Written and Spoken Forms, the elements for morphological\ninformation are simply shorthand for the general purpose gram element.\nConsider this entry for the French word médire: \n\nmédire v.t. ind. (de) … PLC This entry can be\ntagged using specialized grammatical elements:bibliography Or using the gram element:bibliography\n\nLike form, gramGrp can be repeated, recursively nested, or used at\nthe sense level to show relations among elements.\nisotope adj. et n. m. … DNT\nbibliography\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  wits (wɪts) pl n 1 \n  (sometimes singular) the ability to\nreason and act, esp quickly … CED \nbibliography\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITP#DITP\">9.3 Top-level Constituents of Entries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITPSE#DITPSE\">9.3.3 Sense Information</a>","content":"\n9.3.3 Sense Information\nDictionaries may describe the meanings of words in a wide variety of different \n ways—by means of synonyms, paraphrases, translations into other languages, formal\ndefinitions in various highly stylized forms, etc. No attempt is made here to\ndistinguish all the different forms which sense information may take;\nall of them may\nbe tagged using the def element described in section 9.3.3.1 Definitions. \nAs a special case it is frequently desirable to distinguish\nthe provision of translation equivalents in other languages from other\nforms of sense information; the use of cit\ntype=\"translation\" (which groups a translation equivalent with\nrelated information such as its grammatical description) \nfor this purpose is described\nin section 9.3.3.2 Translation Equivalents. \n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITP#DITP\">9.3 Top-level Constituents of Entries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITPSE#DITPSE\">9.3.3 Sense Information</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITPDE#DITPDE\">9.3.3.1 Definitions</a>","content":"\n9.3.3.1 Definitions\nDictionary definitions are those pieces of prose in a dictionary entry that\ndescribe the meaning of some lexical item. Most often, definitions describe the\nheadword of the entry; in some cases, they describe translated texts, examples,\netc.; see cit type=\"translation\", section 9.3.3.2 Translation Equivalents, and\ncit type=\"example\", section 9.3.5.1 Examples. The\ndef element directly contains the text of the definition; unlike\nform and gramGrp, it does not serve solely to\ngroup a set of smaller elements. The close analysis of definition text, such as\nthe tagging of hypernyms, typical objects, etc., is not covered by these\nGuidelines. \nDefinitions may occur directly within an entry; when multiple\ndefinitions are given, they are typically identified as belonging to\ndistinct senses, as here: demigod (…) n. 1.a. a being who is part mortal, part\ngod. b. a lesser deity. 2. a godlike person. CP \nbibliography\n\nIn multilingual dictionaries, it is sometimes possible to distinguish translation\nequivalents from definitions proper; here a def element is\ndistinguished from the translation information within which it appears.\nrémoulade\n[Remulad]  nf remoulade, rémoulade (dressing containing mustard and herbs). CR\nbibliography\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITP#DITP\">9.3 Top-level Constituents of Entries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITPSE#DITPSE\">9.3.3 Sense Information</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITPTR#DITPTR\">9.3.3.2 Translation Equivalents</a>","content":"\n9.3.3.2 Translation Equivalents\nMultilingual dictionaries contain information about translations of a given word\nin some source language for one or more target languages. Minimally, the\ndictionary provides the corresponding translation in the target language; other\nmaterial, such as morphological information (gender, case), various kinds of\nusage restrictions, etc., may also be given. If translation equivalents are to\nbe distinguished from other kinds of sense information, they may be encoded\nusing cit type=\"translation\". The global xml:lang attribute\nshould be used to specify the target language. \nAs in monolingual dictionaries, the sense element is used in\nmultilingual dictionaries to group information (forms, grammatical information,\nusage, translation(s), etc.) about a given sense of a word where necessary.\nInformation about the individual translation equivalents within a sense is\ngrouped using cit type=\"translation\". This information may include the\ntranslation text (tagged q or quote), morphological\ninformation (gen, case, etc.), usage notes (usg),\ntranslation labels (lbl), and definitions (def).When\nbibliographic data is provided, the quote element should be used.\n<cit> contains a quotation from some other document, together with a bibliographic reference to\n    its source. In a dictionary it may contain an example text with at least one occurrence of the\n    word form, used in the sense being described, or a translation of the headword, or an example.\n<lbl> contains a label for a form, example, translation, or other piece of information, e.g.\n    abbreviation for, contraction of, literally, approximately, synonyms:, etc.\n\n\nNote how in the following example, different translation\nequivalents are grouped into the same or different senses, following\nthe punctuation of the source and the usage labels:\ndresser … (a) (Theat) habilleur m, -euse f;\n(Comm: window ~) étalagiste mf. she's a stylish ~ elle s'habille avec\nchic; V hair.  (b) (tool) (for wood) raboteuse f; (for stone) rabotin\nm. CR \n\n\n\nbibliography\n\nIn the following example, a distinction is made between the\ntranslation equivalent (OAS) and a descriptive phrase providing\nfurther information for the user of the dictionary.\nO.A.S. ... nf (abrév de Organisation de l'Armée secrète) OAS (illegal military organization supporting French rule of\nAlgeria). CR \nbibliography\n\nNote that cit type=\"translation\" may also be used in monolingual\ndictionaries when a translation is given for a foreign word: \n\nhavdalah or havdoloh Hebrew\n  (havdaˈla; Yiddish havˈdɔlə) \n  n Judaism the ceremony marking the end of the\nsabbath or of a festival, including the blessings over wine, candles and\nspices [literally: separation] CED \nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITP#DITP\">9.3 Top-level Constituents of Entries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITPET#DITPET\">9.3.4 Etymological Information</a>","content":"\n9.3.4 Etymological Information\nThe element etym marks a block of etymological information. Etymologies may\ncontain highly structured lists of words in an order indicating their descent from\neach other, but often also include related words and forms outside the direct line\nof descent, for comparison. Not infrequently, etymologies include commentary of\nvarious sorts, and can grow into short (or long!) essays with prose-like structure.\nThis variation in structure makes it impracticable to define tags which capture the\nentire intellectual structure of the etymology or record the precise interrelation\nof all the words mentioned. It is, however, feasible to mark some of the more\nobvious phrase-level elements frequently found in etymologies, using tags defined in\nthe core module or elsewhere in this chapter. Of particular relevance for the\nmarkup of etymologies are:\n<etym> encloses the etymological information in a dictionary entry.\n<lang> contains the name of a language mentioned in etymological or other linguistic discussion.\n<date> contains a date in any format.\n<mentioned> marks words or phrases mentioned, not used.\n<gloss> identifies a phrase or word used to provide a gloss or definition for some other word or\n    phrase.\n<pron> contains the pronunciation(s) of the word.\n<usg> contains usage information in a dictionary entry.\n<lbl> contains a label for a form, example, translation, or other piece of information, e.g.\n    abbreviation for, contraction of, literally, approximately, synonyms:, etc.\n\n\nAs in other prose, individual word forms mentioned in an etymological description are\ntagged with mentioned elements. Pronunciations, usage labels, and glosses\ncan be tagged using the pron, usg, and gloss elements\ndefined elsewhere in these Guidelines. In addition, the lang element may be\nused to identify a particular language name where it appears, in addition to using\nthe xml:lang attribute of the mentioned element. \nExamples:\nabismo m. (del gr. a priv. y byssos, fondo). Sima, gran\nprofundidad. … \nbibliography\n\nneume\n\\'n(y)üm\\ n [F, fr. ML pneuma, neuma, fr. Gk pneuma\nbreath — more at pneumatic]: any of various symbols used in\nthe notation of Gregorian chant … [WNC]\nbibliography\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITP#DITP\">9.3 Top-level Constituents of Entries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITPMI#DITPMI\">9.3.5 Other Information</a>","content":"\n9.3.5 Other Information\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITP#DITP\">9.3 Top-level Constituents of Entries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITPMI#DITPMI\">9.3.5 Other Information</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITPEG#DITPEG\">9.3.5.1 Examples</a>","content":"\n9.3.5.1 Examples\nDictionaries typically include examples of word use, usually accompanying\ndefinitions or translations. In some cases, the examples are quotations from\nanother source, and are occasionally followed by a citation to the author. \nThe cit type=\"example\" element contains usage examples and associated\ninformation; the example text itself should be enclosed in a q or\nquote element. The cit element associates a quotation with\na bibliographic reference to its source.\n<q> contains material which is distinguished from the\n    surrounding text using quotation marks or a similar method, for any one of a variety of reasons including, but not limited to: direct\n    speech or thought, technical terms or jargon, authorial distance, quotations from elsewhere, and\n    passages that are mentioned but not used.\n<quote> contains a phrase or passage attributed by the narrator or author to some agency external\n        to the text.\n<cit> contains a quotation from some other document, together with a bibliographic reference to\n    its source. In a dictionary it may contain an example text with at least one occurrence of the\n    word form, used in the sense being described, or a translation of the headword, or an example.\n\n\nExamples frequently abbreviate the headword, and so their transcription will\nfrequently make use of the oRef element described\nbelow in section 9.4 Headword and Pronunciation References. \nExamples:\nmultiplex\n/…/ adj tech having many parts: the multiplex eye\nof the fly. LDOCE\n\nbibliography Or when one wants a more comprehensive representation of\nexamples:bibliography As the following example shows, cit can also contain elements\nsuch as pron, def, etc.\nsome … 4. (S~ and any are used with more): Give me ~ more/s@'mO:(r)/ OALD \n\nbibliography In multilingual dictionaries, examples may also be accompanied by\ntranslations:\nhorrifier … vt to horrify. elle était\nhorrifiée par la dépense she was horrified at the expense. CR \n\nbibliography\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n When a source is indicated, the example should be marked\nwith a bibl element:\nvaleur … n. f. … 2. Vx. Vaillance, bravoure\n(spécial., au combat). La valeur n'attend pas le nombre des années\n(Corneille). … DNT\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITP#DITP\">9.3 Top-level Constituents of Entries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITPMI#DITPMI\">9.3.5 Other Information</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITPUS#DITPUS\">9.3.5.2 Usage Information and Other Labels</a>","content":"\n9.3.5.2 Usage Information and Other Labels\n\nMost dictionaries provide restrictive labels and phrases indicating\nthe usage of given words or particular senses. Other phrases, not\nnecessarily related to usage, may also be attached to forms, translations,\ncross-references, and examples.  The following elements are provided\nto mark up such  labels:\n<usg> contains usage information in a dictionary entry.\n<lbl> contains a label for a form, example, translation, or other piece of information, e.g.\n    abbreviation for, contraction of, literally, approximately, synonyms:, etc.\n As indicated in the following section (9.3.5.3 Cross-References to Other Entries), the\nlbl element may be used for any kind of significative phrase\nor label within the text. The usg element is a specialization\nof this to mark usage labels in particular. Usage labels typically\nindicate temporal use (archaic, obsolete, etc.)register (slang, formal, taboo, ironic, facetious, etc.)style (literal, figurative, etc.)connotative effect (e.g. derogatory, offensive)subject field (Astronomy, Philosophy, etc.)national or regional use (Australian, U.S., Midland dialect,\netc.) Many dictionaries provide an explanation and/or a list of such usage\nlabels in a preface or appendix. The type of the usage information may be\nindicated in the type attribute on the usg element. Some\ntypical values are:\ngeo\ngeographic area\ntime\ntemporal, historical era (archaic, old, etc.)\ndom\ndomain\nreg\nregister\nstyle\nstyle (figurative, literal, etc.)\nplev\npreference level (chiefly, usually, etc.)\nacc\nacceptability\nlang\nlanguage for foreign words, spellings pronunciations, etc.\ngram\ngrammatical usage In addition to this kind of information, multilingual dictionaries often\nprovide semantic cues to help the user determine the right\nsense of a word in the source language (and hence the correct translation).\nThese include synonyms, concept subdivisions, typical subjects and objects,\ntypical verb complements, etc. These labels may also be marked with the\nusg element; sample values for the type attribute in these\ncases include:\nsyn\nsynonym given to show use\nhyper\nhypernym given to show usage\ncolloc\ncollocation given to show usage\ncomp\ntypical complement\nobj\ntypical object\nsubj\ntypical subject\nverb\ntypical verb\nhint\nunclassifiable piece of information to guide sense choice\n\nIn this entry, one spelling is marked as geographically restricted:\ncolour or US color … CED \nbibliography\n\nIn the next example, usage labels are used to indicate domains, register, and\nsynonyms associated with different senses:\npalette\n[palEt] nf (a) (Peinture: lit, fig) palette. (b)\n(Boucherie) shoulder. (c) (aube de roue) paddle; (battoir à linge) beetle;\n(Manutention, Constr) pallet. CR \nbibliography\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhen the usage label is hard to classify, it may be described as a hint:\nrempaillage […] nm reseating, rebottoming (with straw). CR \n\nbibliography\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITP#DITP\">9.3 Top-level Constituents of Entries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITPMI#DITPMI\">9.3.5 Other Information</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITPXR#DITPXR\">9.3.5.3 Cross-References to Other Entries</a>","content":"\n9.3.5.3 Cross-References to Other Entries\nDictionary entries frequently refer to information in other entries, often using\nextremely dense notations to convey the headword of the entry to be sought, the\nparticular part of the entry being referred to, and the nature of the\ninformation to be sought there (synonyms, antonyms, usage notes, etymology, an\nillustration, etc.)\nCross-references may be tagged in dictionaries using the ref and\nptr elements defined in the core module (section 3.7 Simple Links and Cross-References). In addition, the xr element may be used to group all the\ninformation relating to a cross-reference. \n\n<xr> contains a phrase, sentence, or icon referring the reader to some other location in this or\n    another text.\n<ref> defines a reference to another location, possibly modified by additional text or comment.\n<ptr> defines a pointer to another location.\n<lbl> contains a label for a form, example, translation, or other piece of information, e.g.\n    abbreviation for, contraction of, literally, approximately, synonyms:, etc.\n\n\nAs in other types of text, the actual pointing element (e.g. ref or\nptr) is used to tag the cross-reference target proper (in\ndictionaries, usually the headword, possibly accompanied by a homograph number,\na sense number, or other further restriction specifying what portion of the\ntarget entry is being referred to).\nThe xr element\nis used to group the target with any accompanying phrases or symbols used to\nlabel the cross-reference; the cross-reference label itself may be encoded with\nlbl or may remain untagged. Both of the following are thus\nlegitimate: \nglee … Compare madrigal (1)\nCED \nbibliography\n\nhostellerie Syn. de hôtellerie (sens 1). DNT \nbibliography In addition to using, or not using, lbl to mark the\ncross-reference label, the two examples differ in another way. The former\nassumes that the first sense of madrigal has the\nidentifier madrigal.1, and that the specific form of the reference in the\nsource volume can be reconstructed, if needed, from that information. The latter\ndoes not require the first sense of hôtellerie to have an identifier, and\nretains the print form of the cross-reference; by omitting the target\nattribute of the ref element, however, the second example does assume\nimplicitly either that some software could usefully parse the phrase tagged as a\nref and find the location referred to, or else that such processing\nwill not be necessary. \nThe type attribute on the pointing element or on the xr\nelement may be used to indicate what kind of cross-reference is being made,\nusing any convenient typology. Since different dictionaries may label the same\nkind of cross-reference in different ways, it may be useful to give normalized\nindications in the type attribute, enabling the encoder to distinguish\nirregular forms of cross-reference more reliably:\nrose2 … vb the past tense of rise CED \nbibliography from cross-references for synonyms and the like:\nantagonist … syn see adverse \nW7 \nbibliographyStrictly speaking, the reference above is not to the entry for\nadverse, but to the list of synonyms found\nwithin that entry.  \n\n In some cases, the cross-reference is to a particular subset of the\nmeanings of the entry in question:\nglobe …V. armillaire (sphère)\nPR \nbibliography\n\n\nCross-references occasionally occur in definition texts, example\ntexts, etc., or may be free-standing within an entry. These may\ntypically be encoded using ref or ptr, without an\nenclosing xr. For example:\n\nentacher … Acte entaché de\nnullité, contenant un vice de forme ou passé par un incapable*. DNT\n The asterisk signals a reference to the entry for\nincapable.bibliography\n In\nsome cases, the form in the definition is inflected, and thus ref must\nbe used to indicate more exactly the intended target, as here:\njustifier …4. IMPRIM Donner a (une ligne) une longeur\nconvenable au moyen de blancs (2, sens 1, 3). DNT \nbibliography\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITP#DITP\">9.3 Top-level Constituents of Entries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITPMI#DITPMI\">9.3.5 Other Information</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITPNO#DITPNO\">9.3.5.4 Notes within Entries</a>","content":"\n9.3.5.4 Notes within Entries\nDictionaries may include extensive explanatory notes about usage, grammar,\ncontext, etc. within entries. Very often, such notes appear as a separate\nsection at the end of an entry. The standard note element should be used for\nsuch material.\n<note> contains a note or annotation.\n\n\nFor example:\nneither\n  (ˈnaɪðə, ˈni:ðə)\ndeterminer 1a not one nor the other (of two);\n  not either: neither foot is swollen …\n  usage A verb following a compound subject that uses neither… should be\n  in the singular if both subjects are in the singular: neither Jack nor John has done the work\n  CED \nbibliography\n\nThe formal declaration for note is given in section 3.9 Notes, Annotation, and Indexing. \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITP#DITP\">9.3 Top-level Constituents of Entries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DITPRE#DITPRE\">9.3.6 Related Entries</a>","content":"\n9.3.6 Related Entries\nThe re element encloses a degenerate entry which appears in the body of\nanother entry for some purpose. Many dictionaries include related entries for direct\nderivatives or inflected forms of the entry word, or for compound words, phrases,\ncollocations, and idioms containing the entry word. \nRelated entries can be complex, and may in fact include any of the information to be\nfound in a regular entry. Therefore, the re element is defined to contain\nthe same elements as an entry element, with the exception that it may not\ncontain any nested re elements. \nExamples:\nbevvy\n  (ˈbɛvɪ) informal n, pl -vies 1 a drink, esp an\n  alcoholic one: we had a few bevvies last night 2 a session of drinking. ▷ vb \n  -vies, -vying, -vied (intr) \n  3 to drink alcohol [probably from Old French bevee,\nbuvee, drinking] > 'bevvied adj CED \nbibliography\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIHW#DIHW\">9.4 Headword and Pronunciation References</a>","content":"\n9.4 Headword and Pronunciation References\nExamples, definitions, etymologies, and occasionally other elements such as\ncross-references, orthographic forms, etc., often contain a shortened or iconic reference to\nthe headword, rather than repeating the headword itself. The references may be to the\northographic form or to the pronunciation, to the form given or to a variant of that\nform. The following elements are used to encode such iconic references to a headword:\n<oRef> in a dictionary example, indicates a reference to the orthographic form(s) of the headword.\n<pRef> in a dictionary example, indicates a reference to the pronunciation(s) of the headword.\n\n\nThese elements all inherit the following attributes from the class att.pointing\nwhich may optionally be used to resolve any\nambiguity about the headword form being referred to.\n<att.pointing> provides a set of attributes used by all elements which point\n  to other elements by means of one or more URI references.\n\nHeadword references come in a variety of formats:~ indicates a reference to the full form of the headwordpref~ gives a prefix to be affixed to the headword~suf gives a suffix to be affixed to the headwordA~ gives the first letter in uppercase, indicating that the headword is\ncapitalizedpref~suf gives a prefix and a suffix to be affixed to the headworda. gives the initial of the word followed by a full stop, to indicate reference\nto the full form of the headwordA. refers to a capitalized form of the headword \n\nThe oRef element should be used for iconic or shortened references to the\northographic form(s) of the headword itself. It is an empty element and replaces, rather\nthan enclosing, the reference. Note that the reference to a headword is not necessarily\na simple string replacement. In the example \ncolour1, (US = color) …~ films; ~ TV; Red, blue and yellow\nare ~s. OALD, the tilde stands for either headword form\n(colour, color). \nExamples:\ncolonel … army officer above a lieutenant-~. OALD \nbibliography\n\n\n\n\n\n\n\n\n\n\nacademy … The Royal A~ of Arts OALD\nbibliography\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe following example demonstrates the use of the target attribute to refer to\na specific form of the headword:\nvag- or vago- comb form … : vagus nerve\n< vagal > < vagotomy\n> W7 \nbibliography\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn many cases the reference is not to the orthographic form of the headword, but rather\nto another form of the headword—usually to an inflected form. In these cases, the\nelement oRef should be used; this element may take as its content the string as it\nappears in the text.\ntake … < Mr Burton took us for\nFrench > NPEG \nbibliography\n\ntake … < was quite ~n with him\n> NPEG \nbibliography\n\nThe next example shows a discontinuous reference, using the\nattributes\nnext and\nprev, which are defined in the additional module for linking,\nsegmentation, and alignment (see chapter 16 Linking, Segmentation, and Alignment) and therefore require that\nthat module be selected in addition to that for dictionaries.\nmix up… < it's easy to mix her up with her sister > NPEG \nbibliography\n\nIn addition, some dictionaries make reference to the pronunciation of the headword in the\npronunciation of related entries, variants, or examples. The pRef\nelement should be used for such references.\nhors d'oeuvre\n/,aw'duhv  (Fr O:r dœvr)/ n, pl hors d'oeuvres also hors\nd'oeuvre /'duhv(z)  (Fr ~)/ NPEG \nbibliography\n\nBecause headword and pronunciation references can occur virtually anywhere in an entry,\nthe oRef and pRef elements may appear\nwithin any other element defined for dictionary entries.\nSince existing printed dictionaries use different conventions for headword references\n(swung dash, first letter abbreviated form, capitalization, or italicization of the word,\netc.) the exact method used should be documented in the header.\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIMV#DIMV\">9.5 Typographic and Lexical Information in Dictionary Data</a>","content":"\n9.5 Typographic and Lexical Information in Dictionary Data\nAmong the many possible views of dictionaries, it is useful to distinguish at least the\nfollowing three, which help to clarify some issues raised with particular urgency by\ndictionaries, on account of the complexity of both their typography and their\ninformation structure.(a) the typographic view—the\ntwo-dimensional printed page, including information about line and page breaks\nand other features of layout (b) the editorial view—the one-dimensional sequence of tokens\nwhich can be seen as the input to the typesetting process; the wording and\npunctuation of the text and the sequencing of items are visible in this view,\nbut specifics of the typographic realization are not (c) the lexical view—this view includes the underlying\ninformation represented in a dictionary, without concern for its exact textual\nform \n\nFor example, a domain indication in a dictionary entry might be broken over a line and\ntherefore hyphenated (naut-\nical); the typographic view of the dictionary preserves this information. In a\npurely editorial view, the particular form in which the domain name is given in the\nparticular dictionary (as nautical, rather than naut., Naut., etc.)\nwould be preserved, but the fact of the line break would not. Font shifts might\nplausibly be included in either a strictly typographic or an editorial view. In the\nlexical view, the only information preserved concerning domain would be some standard\nsymbol or string representing the nautical domain (e.g. naut.) regardless of the\nform in which it appears in the printed dictionary. \nIn practice, publishers begin with the lexical view—i.e., lexical data as it might\nappear in a database—and generate first the editorial view, which reflects editorial\nchoices for a particular dictionary (such as the use of the abbreviation Naut.\nfor nautical, the fonts in which different types of information are to be\nrendered, etc.), and then the typographic view, which is tied to a specific printed\nrendering. Computational linguists and philologists often begin with the typographic\nview and analyse it to obtain the editorial and/or lexical views. Some users may\nultimately be concerned with retaining only the lexical view, or they may wish to\npreserve the typographic or editorial views as a reference text, perhaps as a guard\nagainst the loss or misinterpretation of information in the translation process. Some\nresearchers may wish to retain all three views, and study their interrelations, since\nresearch questions may well span all three views. \nIn general, an electronic encoding of a text will allow the recovery of at least one view\nof that text (the one which guided the encoding); if editorial and typographic practices\nare consistently applied in the production of a printed dictionary, or if exceptions to\nthe rules are consistently recorded in the electronic encoding, then it is in\nprinciple possible to recover the editorial view from an encoding of the\nlexical view, and the typographic view from an encoding of the editorial view. In\npractice, of course, the severe compression of information in dictionaries, the variety\nof methods by which this compression is achieved, the complexity of formulating\ncompletely explicit rules for editorial and typographic practice, and the relative\nrarity of complete consistency in the application of such rules, all make the mechanical\ntransformation of information from one view into another something of a vexed question. \nThis section describes some principles which may be useful in capturing one or the other\nof these views as consistently and completely as possible, and describes some methods of\nattempting to capture more than one view in a single encoding. Only the editorial and\nlexical views are explicitly treated here; for methods of recording the physical or\ntypographic details of a text, see chapter 11 Representation of Primary Sources. Other approaches to\nthese problems, such as the use of repetitive encoding and links to show their\ncorrespondences, or the use of feature structures to capture the information structure,\nand of the ana and inst attributes to link feature structures to a\ntranscription of the editorial view of a dictionary, are not discussed here (for\nfeature structures, see chapter 18 Feature Structures. For linkage of textual form and\nunderlying information, see chapter 17 Simple Analytic Mechanisms). \n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIMV#DIMV\">9.5 Typographic and Lexical Information in Dictionary Data</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIMVTV#DIMVTV\">9.5.1 Editorial View</a>","content":"\n9.5.1 Editorial View\nCommon practice in encoding texts of all sorts relies on principles such as the\nfollowing, which can be used successfully to capture the editorial view when\nencoding a dictionary:\nAll characters of the source text should be retained, with the possible\nexception of rendition text (for which see further below). \nCharacters appearing in the source text should typically be given as\ncharacter data content in the document, rather than as the value of an\nattribute; again, rendition text may optionally be excepted from this rule. \nApart from the characters or graphics in the source text, nothing else\nshould appear as content in the document, although it may be given in\nattribute values. \nThe material in the source text should appear in the encoding in the same\norder. Complications of the character sequence by footnotes, marginal notes,\netc., text wrapping around illustrations, etc., may be dealt with by the\nusual means (for notes, see section 3.9 Notes, Annotation, and Indexing).2\n\n\n\nIn a very conservative transcription of the editorial view of a text, rendition\ncharacters (e.g. the commas, parentheses, etc., used in dictionary\nentries to signal boundaries among parts of the entry) and rendition\ntext (for example, conjunctions joining alternate headwords, etc.) are\ntypically retained. Removing the tags from such a transcription will leave all and\nonly the characters of the source text, in their original sequence.3\n\nConsider, for example, the following entry:\n  pinna (ˈpɪnə) n, pl -nae (-ni:) or\n-nas 1 any leaflet of a pinnate compound leaf 2 zoology\na feather, wing, fin, or similarly shaped part 3 another name for auricle (2). [C18: via New Latin from Latin: wing,\nfeather, fin] CED A conservative encoding of the editorial view of this\nentry, which retains all rendition text, might resemble the following:bibliography\n\nA somewhat simplified encoding of the editorial view of this entry might exploit the\nfact that rendition text is often systematically recoverable. For example,\nparentheses consistently appear around pronunciation in this dictionary, and thus\nare effectively implied by the start- and end-tags for pron.4 In such an\nencoding, removing the tags should exactly reproduce the sequence of characters in\nthe source, minus rendition text. The original character sequence can be recovered\nfully by replacing tags with any rendition text they imply. \nEncoding in this way, the example given above might resemble the following. The\ntagUsage element in the header would be used to record the following\npatterns of rendition text:parentheses appear around pron elementscommas appear before inflected formsthe word or appears before alternate formsbrackets appear around the etymologyfull stops appear after pos, inflection information, and sense\nnumberssenses are numbered in sequence unless otherwise specified using the\nglobal n attribute\nbibliography\n\nWhen rendition text is omitted, it is recommended that the means to regenerate it be\nfully documented, using the tagUsage element of the TEI header. \nIf rendition text is used systematically in a dictionary, with only a few mistakes or\nexceptions, the global attribute rend may be used on any tag to flag\nexceptions to the normal treatment. The values of the rend attribute are\nnot prescribed, but it can be used with values such as no-comma,\nno-left-paren, etc. Specific values can be documented using the\nrendition element in the TEI header. \nIn the following (imaginary) example, no left parenthesis precedes the\npronunciation:\nbiryani or biriani %bIrI\"A:nI) any of a\nvariety of Indian dishes … [from Urdu] This irregularity can be recorded\nthus:bibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIMV#DIMV\">9.5 Typographic and Lexical Information in Dictionary Data</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIMVLV#DIMVLV\">9.5.2 Lexical View</a>","content":"\n9.5.2 Lexical View\nIf the text to be interchanged retains only the lexical view of the text, there may\nbe no concern for the recoverability of the editorial (not to speak of the\ntypographic) view of the text. However, it is strongly recommended that the TEI\nheader be used to document fully the nature of all alterations to the original data,\nsuch as normalization of domain names, expansion of inflected forms, etc. \nIn an encoding of the lexical view of a text, there are degrees of departure from the\noriginal data: normalizing inconsistent forms like nautical, naut.,\nNaut., etc., to nautical is a relatively slight alteration;\nexpansion of delay -ed -ing to delay, delayed, delaying is a more\nsubstantial departure. Still more severe is the rearranging of the order of\ninformation in entries; for example:reorganizing the order of elements in an entry to show their\nrelationship, as in clem (klɛm)\nor clam vb clems, clemming, clemmed \n  or clams, clamming, clammed CED where in a strictly lexical view one\nmight wish to group clem and clam with their respective\ninflected forms. splitting an entry into two separate entries, as in \nceli.bacy /\"selIb@sI/ n [U] state of living\nunmarried, esp as a religious obligation. celi.bate /\"selIb@t/ n [C]\nunmarried person (esp a priest who has taken a vow not to marry).\nOALD For some purposes, this entry might usefully be split into an\nentry for celibacy and a separate entry for celibate. \n\nAn encoding which captures the lexical view of the example given in the previous\nsection might look something like the following. In this encoding:abbreviated forms have been silently expandedsome forms have been moved to allow related forms to be grouped togetherthe part of speech information has been moved to allow all forms to be\ngiven togetherthe cross-reference to auricle has been simplified\nbibliography\n\nWhether the given dictionary encoding focusses on the lexical view and thus approaches the status of\nlexical databases, or uses the typographic/editorial view approach and needs to communicate the\nsometimes informally stated values for the particular descriptive features, the issue of interoperability \nof the content and of the container objects becomes relevant, in view of the growing\ntendency to interlink pieces of information across Internet resources. In such\ncases, it becomes crucial to be able to encode the fact that whether the information on,\nfor instance, the value of the grammatical category of Number is provided as \"sg.\", \"sing.\", \"Singular\", or\nequivalently \"poj.\" in Polish, or \"Ez.\" in German, etc., what is actually referred to is always the same \ngrammatical value that can be rendered with a plethora of markers, depending on the publisher, language, or lexicographic tradition.\nIn order to signal that this variety of surface markers in fact indicate the same\nunderlying value, it is possible to align them with an external inventory of standardized\nvalues. The TEI provides means to align grammatical categories as well as their content\nwith the ISOcat reference, which is a Web implementation of ISO 12620.\nIn the example below, a fragment of the entry for isotope cited\nin section 9.3.2 Grammatical Information is adorned by references to ISOcat definitions for \"part\nof speech\" (dcr:datcat) and \"adjective\" (dcr:valueDatcat). Depending\non the status and extent of the dictionary, various strategies may be used to reduce the\nredundancy of the repeated ISOcat references.bibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIMV#DIMV\">9.5 Typographic and Lexical Information in Dictionary Data</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIMVBO#DIMVBO\">9.5.3 Retaining Both Views</a>","content":"\n9.5.3 Retaining Both Views\nIt is sometimes desirable to retain both the lexical and the editorial view, in which\ncase a potential conflict exists between the two. When there is a conflict between\nthe encodings for the lexical and editorial views, the principles described in the\nfollowing sections may be applied. \n \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIMV#DIMV\">9.5 Typographic and Lexical Information in Dictionary Data</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIMVBO#DIMVBO\">9.5.3 Retaining Both Views</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIMVAV#DIMVAV\">9.5.3.1 Using Attribute Values to Capture Alternate Views</a>","content":"\n9.5.3.1 Using Attribute Values to Capture Alternate Views\nIf the order of the data is the same in both views, then both views may be\ncaptured by encoding one dominant view in the character\ndata content of the document, and encoding the other using attribute values on\nthe appropriate elements. If all tags were to be removed, the remaining\ncharacters would be those of the dominant view of the text. \nThe attribute class att.lexicographic (which \nincludes the attributes norm and org from class att.lexicographic.normalized) \nis used to provide attributes for use in encoding multiple views of the same dictionary\nentry. These attributes are available for use on all elements defined in this\nchapter when the base module for dictionaries is selected. \nWhen the editorial view is dominant, the following attributes may be used to\ncapture the lexical view:\n<att.lexicographic> provides a set of attributes for specifying standard and normalized values, grammatical functions, alternate or equivalent forms, and information about composite parts.\n\n\nWhen the lexical view is dominant, the following attributes may be used to record\nthe editorial view:\n<att.lexicographic> provides a set of attributes for specifying standard and normalized values, grammatical functions, alternate or equivalent forms, and information about composite parts.\n\n\n\nOne attribute is useful in either view:\n<att.lexicographic> provides a set of attributes for specifying standard and normalized values, grammatical functions, alternate or equivalent forms, and information about composite parts.\n\n\nFor example, if the source text had the domain label naut., it might be\nencoded as follows. With the editorial view dominant:bibliography The lexical view of the same label would transcribe the normalized form\nas content of the usg element, the typographic form as an attribute\nvalue:bibliography\n\nIf the source text gives inflectional information for the verb\ndelay as delay, -ed, -ing, it might usefully be\nexpanded to delayed, delayed, delaying. An encoding of the editorial view\nmight take this form:bibliography Note the use of the tns tag with null content, to enable the\nrepresentation of implicit information even though it has no print realization. \nThe lexical view might be encoded thus:bibliography\n\n\n\n\nA particular problem may be posed by the common practice of presenting two\nalternate forms of a word in a single string, by marking some parts of the word\nas optional in some forms. The following entry is for a word which can be\nspelled either thyrostimuline or thyréostimuline:\nthyr(é)ostimuline [tiR(e)ostimylin] … With the\neditorial view dominant, this entry might begin thus:bibliography \n\nWith the lexical view dominant, however, two orth and\ntwo pron elements would be encoded, in order to disentangle the two\nforms; the orig attribute would be used to record the typographic\npresentation of the information in the source.bibliography\n\n\n\nThis example might also be encoded using the opt attribute combined\nwith the attributes next and prev defined in chapter 16 Linking, Segmentation, and Alignment.bibliography\n\nNote that this transcription preserves both the lexical and\neditorial views in a single encoding. However, it has the disadvantage\nthat the strings corresponding to entire words do not appear in the\nencoding uninterrupted, and therefore complex processing is required\nto retrieve them from the encoded text. The use of the opt\nattribute is recommended, however, when long spans of text are\ninvolved, or when the optional part contains embedded tags. \n\nFor example, the following gives two definitions in one text:\npicture drawn with coloured chalk made into crayons, and\ncoloured chalk made into crayons:\n pas.tel /\"pastl US: pa\"stel/ n\n1 (picture drawn with) coloured chalk made into crayons. 2… OALD  A simple encoding solution\nwould be to leave the definition text unanalysed, but this might be\nfelt inadequate since it does not show that there are two\ndefinitions. A possible alternative encoding would be:bibliography  This transcribes\nsome characters of the source text twice, however, which deviates from\nthe usual practice. The following encoding records both the editorial\nand lexical views:bibliography   \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIMV#DIMV\">9.5 Typographic and Lexical Information in Dictionary Data</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIMVBO#DIMVBO\">9.5.3 Retaining Both Views</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIMVOL#DIMVOL\">9.5.3.2 Recording Original Locations of Transposed Elements</a>","content":"\n9.5.3.2 Recording Original Locations of Transposed Elements\nThe attributes described in the previous section are useful only when the order\nof material is the same in both the editorial and the lexical view. When the two\nviews impose different orders on the data, the standard linking mechanisms may be used to\nshow the original location of material transposed in an encoding of the lexical\nview. \nIf the original is only slightly modified, the anchor element may be\nused to mark the original location of the material, and the location\nattribute may be used on the lexical encoding of that material to indicate its\noriginal location(s). Like those in the preceding section, this attribute is\ndefined for the attribute class att.lexicographic:\n<att.lexicographic> provides a set of attributes for specifying standard and normalized values, grammatical functions, alternate or equivalent forms, and information about composite parts.\n\n\nFor example:\npinna\n  (ˈpɪnə) n, pl \n  -nae (-ni:) or -nas CED \nbibliography\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><a class=\"breadcrumb\" href=\"p5.xml?id=DIFR#DIFR\">9.6 Unstructured Entries</a>","content":"\n9.6 Unstructured Entries\n\nThe content model for the entry element provides an entry\nstructure suitable for many average dictionaries, as well as many\nregular entries in more exotic dictionaries.  However, the structure\nof some dictionaries does not allow the restrictions imposed by the\ncontent model for entry. To handle these cases, the\nentryFree and dictScrap elements are provided to\nsupport much wider variation in entry structure. The\ndictScrap element offers less freedom, in that it can only\ncontain phrase level elements, but it can itself appear at any point\nwithin a dictionary entry where any of the structural components of a\ndictionary entry are permitted. As such, it acts as a container for\notherwise anomalous parts of an entry.\n\nThe entryFree element places no constraints at all upon\nthe entry: any element defined in this chapter, as well as all the\nnormal phrase-level and inter-level elements, can\nappear anywhere within it. With the entryFree element, the\nencoder is free to use any element anywhere, as well as to use or omit\ngrouping elements such as form, gramGrp, etc. \n\nThe entryFree element allows the encoding of entries which\nviolate the structure specified for the entry element. For\nexample, in the following entry from a dictionary already in\nelectronic form, it is necessary to include a pron element\nwithin a def. This is not permitted in the content model for\nentry, but it poses no problem in the entryFree\nelement. bibliography(OALD)\nbibliography\n\nThe entryFree element also makes it possible to transcribe a dictionary using\nonly phrase-level (atomic) elements—that is, using no grouping\nelements at all. This can be desirable if the encoder wants a completely\nflat view, with no indication of or commitment to the association\nof one element with another. The following encoding uses no grouping elements, and keeps\nall rendition text:\n  biryani or biriani\n  (ˌbɪrɪˈa:nɪ) n any of a variety of Indian dishes … [from\nUrdu] CED \nbibliography\n\nHere is an alternative way of representing the same structure, this time using\ndictScrap:bibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DI#DI\">9 Dictionaries</a><span class=\"breadcrumb\">9.7 The Dictionary Module</span>","content":"\n  9.7 The Dictionary Module\n  The module defined in this chapter makes available the following\n  components:\n  \n    Dictionaries\n    Dictionaries\n    \n    \n    \n    \n    \n  \n  \n  The selection and combination of modules to form a TEI schema is\n  described in 1.2 Defining a TEI Schema.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a>","content":"\n10 Manuscript Description\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msov#msov\">10.1 Overview</a>","content":"\n10.1 Overview\nThe msdescription module1 \ndefines a special purpose element which can be used to provide detailed\ndescriptive information about handwritten primary sources and other text-bearing objects. \nAlthough originally developed to meet the needs of cataloguers and scholars working with medieval\nmanuscripts in the European tradition, the scheme presented here is general\nenough that it can also be extended to other traditions and materials, and is\npotentially useful for any kind of text-bearing artefact. Where the textuality of \nan object is not the primary concern, encoders may wish to use the object\nelement which provides a very similar system of description (see 13.3.5 Objects.\nThe scheme described here is also intended to accommodate the needs of many\ndifferent classes of encoders. On the one hand, encoders may be engaged in\nretrospective conversion of existing detailed descriptions and\ncatalogues into machine tractable form; on the other, they may be engaged in\ncataloguing ex nihilo, that is, creating new detailed\ndescriptions for materials never before catalogued. Some may be primarily\nconcerned to represent accurately the description itself, as opposed to the\nideas and interpretations the description represents; others may have entirely\nopposite priorities. At one extreme, a project may simply wish to capture an\nexisting catalogue in a form that can be displayed on the Web, and which can be\nsearched for literal strings, or for such features such as titles, authors and\ndates; at the other, a project may wish to create, in highly structured and\nencoded form, a detailed database of information about the physical\ncharacteristics, history, interpretation, etc. of the material, able to support\npractitioners of quantitative codicology as well as librarians.\nTo cater for this diversity, here as elsewhere, these Guidelines propose a\nflexible strategy, in which encoders must choose for themselves the approach\nappropriate to their needs, and are provided with a choice of encoding\nmechanisms to support those differing degrees.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msdesc#msdesc\">10.2 The Manuscript Description Element</a>","content":"\n10.2 The Manuscript Description Element\nThe msDesc element will normally appear within the\nsourceDesc element of the header of a TEI-conformant document, where\nthe document being encoded is a digital representation of some manuscript\noriginal, whether as an encoded transcription, as a collection of digital images\n(as described in 11.1 Digital Facsimiles), or as some combination of the two.\nHowever, in cases where the document being encoded is essentially a collection\nof manuscript descriptions, the msDesc element may be used in the same\nway as the bibliographic elements (bibl, biblFull, and\nbiblStruct) making up the TEI element class model.biblLike. \nThese typically appear within the listBibl\nelement. \n<msDesc> contains a description of a single identifiable\n    manuscript or other text-bearing object such as an early printed book.\n\nThe msDesc element has the following components, which provide more\ndetailed information under a number of headings. Each of these component\nelements is further described in the remainder of this chapter. \n<msIdentifier> contains the information required to identify\nthe manuscript or similar object being described.\n<head> contains any type of heading, for example the title of a section, or the heading of a list,\n    glossary, manuscript description, etc.\n<msContents> describes the intellectual content of a manuscript, manuscript\n    part, or other object either as a series of paragraphs or as a series of structured manuscript items.\n<physDesc> contains a full physical description of a\nmanuscript, manuscript part, or other object optionally subdivided using more\nspecialized elements from the model.physDescPart class.\n<history>  groups elements\ndescribing the full history of a manuscript, manuscript part, or other object.\n<additional> groups additional information, combining\n    bibliographic information about a manuscript or other object, or surrogate copies of\nit, with curatorial or administrative information.\n<msPart> contains information about an originally\n    distinct manuscript or part of a manuscript, which is now part of a composite manuscript.\n<msFrag> contains information about a fragment described in relation to a prior context, typically as a description of a virtual reconstruction of a manuscript or other object whose fragments were catalogued separately\n\nThe first of these components, msIdentifier, is the only one which\nis mandatory; it is described in more detail in 10.4 The Manuscript Identifier below. It\nis followed optionally by one or more head elements, each holding a\nbrief heading (see 10.5 The Manuscript Heading), and then either one or more\nparagraphs, marked up as a series of p elements, or one or more of the\nspecialized elements msContents (10.6 Intellectual Content),\nphysDesc (10.7 Physical Description), history (10.8 History), and additional (10.9 Additional Information). These elements are all\noptional, but if used they must appear in the order given here. Finally, in the\ncase of a composite manuscript (a manuscript composed of several codicological\nunits) or a fragmented manuscript (a manuscript whose parts are now dispersed\nand kept at different places), a full description may also contain one or more\nmsPart (10.10 Manuscript Parts) elements and msFrag (10.11 Manuscript Fragments) elements, respectively.\nTo demonstrate the use of this module, consider the following sample\nmanuscript description, chosen more or less at random from the Bodleian\nLibrary's Summary catalogue (1 ) \n\nThe simplest way of digitizing this catalogue entry would simply be to key in\nthe text, tagging the relevant parts of it which make up the mandatory\nmsIdentifier element, as follows:\nbibliography\n With a suitable stylesheet, this encoding would be as readable as the original;\nit would not, however, be very useful for search purposes since only shelfmarks\nand other identifiers are distinguished. To improve on this, one might wrap the\nparagraphs in the appropriate special-purpose first-child-level elements of\nmsDesc and add some of the additional phrase-level elements available\nwhen this module is in use:\nbibliography\n Note that in this version the text has been slightly reorganized, but no actual\nrewriting has been necessary. The encoding now allows the user to search for\nsuch features as title, material, and date and place of origin; it is also\npossible to distinguish quoted material from descriptive passages and to search\nwithin descriptions relating to a particular topic (for example, history as\ndistinct from material).\nThis process could be continued further, restructuring the whole entry so as\nto take full advantage of many more of the encoding possibilities provided by\nthe module described in this chapter:\nbibliography\n In the remainder of this chapter we discuss all of the encoding features\ndemonstrated above, together with many other related matters.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphrase#msphrase\">10.3 Phrase-level Elements</a>","content":"\n10.3 Phrase-level Elements\nWhen the msdescription module is in use, several\nextra elements are added to the phrase level class, and thus become available\nwithin paragraphs and elsewhere in the document. These elements are listed below\nin alphabetical order: \n<catchwords> describes the system used to ensure\ncorrect ordering of the quires or similar making up a codex, incunable, or other object \ntypically by means of annotations at the foot of the page.\n<dimensions> contains a dimensional specification.\n<heraldry> contains a heraldic formula\nor phrase, typically found as part of a blazon, coat of arms, etc. \n\n<locus> defines a location within a manuscript, manuscript part, or other object typically \n    as a (possibly discontinuous) sequence of folio references.\n<locusGrp> groups a number of locations which together form a\n  distinct but discontinuous item within a manuscript, manuscript part, or other object.\n<material> contains a word or phrase describing the material of which the object being described is composed.\n<watermark> contains a word or phrase describing a\nwatermark or similar device.\n<objectType> contains a word or phrase describing the type of object being referred to.\n<origDate> contains any form of date, used to\n  identify the date of origin for a manuscript, manuscript part, or other object.\n<origPlace> contains any form of place name, used to identify the\nplace of origin for a manuscript, manuscript part, or other object.\n<secFol> marks the word or words taken from a fixed point in a codex \n    (typically the beginning of the second leaf) in order to provide a unique identifier for it.\n\n<signatures> contains discussion of the leaf or quire signatures found within a codex or similar object.\n\nWithin a manuscript description, many other standard TEI phrase level\nelements are available, notably those described in the Core module (3 Elements Available in All TEI Documents). Additional elements of particular relevance to manuscript\ndescription, such as those for names and dates, may also be made available by\nincluding the relevant module in one's schema.\n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphrase#msphrase\">10.3 Phrase-level Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=msdates#msdates\">10.3.1 Origination</a>","content":"\n10.3.1 Origination\nThe following elements may be used to provide information about the origins\nof any aspect of a manuscript: \n<origDate> contains any form of date, used to\n  identify the date of origin for a manuscript, manuscript part, or other object.\n<origPlace> contains any form of place name, used to identify the\nplace of origin for a manuscript, manuscript part, or other object.\n\nThe origDate and origPlace elements are specialized forms\nof the existing date and name elements respectively, used to\nindicate specifically the date and place of origin of a manuscript or manuscript\npart. Such information would normally be encoded within the history\nelement, discussed in section 10.8 History. origDate and\norigPlace can also be used to identify the place or date of origin of\nany aspect of the manuscript, such as its decoration or binding, when these are\nnot of the same date or from the same location as rest of the manuscript. Both\nthese elements are members of the att.editLike\nclass, from which they inherit many attributes.\n\nThe origDate element is a member of the att.datable class, and may thus also carry additional attributes giving\nnormalized values for the associated dating.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphrase#msphrase\">10.3 Phrase-level Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=msmat#msmat\">10.3.2 Material and Object Type</a>","content":"\n10.3.2 Material and Object Type\nThe material element can be used to tag any specific term used for\nthe physical material of which a manuscript (or binding, seal, etc.) is\ncomposed. The objectType element may be used to tag any term specifying\nthe type of object or manuscript upon with the text is written. \n<material> contains a word or phrase describing the material of which the object being described is composed.\n<objectType> contains a word or phrase describing the type of object being referred to.\n\nThese elements may appear wherever a term regarded as significant by the\nencoder occurs, as in the following examples:\nbibliography\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphrase#msphrase\">10.3 Phrase-level Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=mswat#mswat\">10.3.3 Watermarks and Stamps</a>","content":"\n10.3.3 Watermarks and Stamps\nTwo further elements are provided to mark up other decorative features\ncharacteristic of manuscript leaves and bindings: \n<watermark> contains a word or phrase describing a\nwatermark or similar device.\n<stamp> contains a word or phrase describing a\nstamp or similar device.\n\nThese element may appear wherever a term regarded as significant by the\nencoder occurs. The watermark element is most likely to be of use\nwithin the support element discussed in 10.7.1.1 Support\nbelow. We give a simple example here:\nbibliography\n\nThe stamp element will typically appear when text from the source is\nbeing transcribed, for example within a rubric in the following case:\nbibliography\n\nIt may also appear as part of the detailed description of a binding:\nbibliography\n\nIf, as here, any text contained by a stamp is included in its description it\nshould be clearly distinguished from that description. The element\nmentioned may be used for this purpose, as shown above.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphrase#msphrase\">10.3 Phrase-level Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=msdim#msdim\">10.3.4 Dimensions</a>","content":"\n10.3.4 Dimensions\nThe dimensions element can be used to specify the size of some\naspect of the manuscript, and thus may be thought of as a specialized form of\nthe existing TEI measure element. \n<dimensions> contains a dimensional specification.\n\nThe dimensions element will normally occur within the element\ndescribing the particular feature or aspect of a manuscript whose dimensions are\nbeing given; thus the size of the leaves would be specified within the\nsupport or extent element (part of the physDesc\nelement discussed in 10.7.1 Object Description), while the dimensions of other\nspecific parts of a manuscript, such as accompanying materials, binding, etc.,\nwould be given in other parts of the description, as appropriate. \nThe following elements are available within the dimensions element: \n<height> contains a measurement measured along the axis at a right angle to the bottom of the object.\n<width> contains a measurement of an object along the axis parallel to its bottom, e.g. perpendicular to the spine of a book or codex.\n<depth> contains a measurement from the front to the back of an object, perpendicular to the measurement given by the width element.\n<dim> contains any single measurement forming part of a dimensional\nspecification of some sort.\n\n\nThese elements, as well as dimensions itself, are all members of the\natt.dimensions class, which also inherits attributes\nfrom the att.ranging class. They all thus carry the\nfollowing attributes: \n<att.dimensions> provides attributes for describing the size of physical objects.\n<att.ranging> provides attributes for describing numerical ranges.\n\nAttributes scope, min, and max are used only\nwhen the measurement applies to several items, for example the size of all\nleaves in a manuscript; attributes atLeast and atMost are\nused when the measurement applies to a single item, for example the size of a\nspecific codex, but has had to be estimated. Attribute quantity is\nused when the measurement can be given exactly, and applies to a single item;\nthis is the usual situation. In this case, the units in which dimensions are\nmeasured may be specified using the unit attribute, the value of\nwhich will normally be taken from a closed set of values appropriate to the\nproject, using standard units of measurement wherever possible, such as\ncm, mm, in, line, char.\nIf however the only data available for the measurement uses some other unit, or\nit is preferred to normalize it in some other way, then it may be supplied as a\nstring value by means of the extent attribute.\nIn the simplest case, only the extent attribute may be supplied:\nbibliography\n More usually, the measurement will be normalized into a value and an\nappropriate SI unit:\nbibliography\n Where the exact value is uncertain, the attributes atLeast and\natMost may be used to indicate the upper and lower bounds of an\nestimated value:\nbibliography\n\nIt is often convenient to supply a measurement which applies to a number of\ndiscrete observations: for example, the number of ruled lines on the pages of a\nmanuscript (which may not all be the same), or the diameter of an object like a\nbell, which will differ depending where it is measured. In such cases, the\nscope attribute may be used to specify the observations for which\nthis measurement is applicable:\n\n This indicates that most pages have at least 20 lines. The attributes\nmin and max can also be used to specify the possible range\nof values: for example, to show that all pages have between 12 and 30 lines:\n\n\nThe dimensions element may be repeated as often as necessary, with\nappropriate attribute values to indicate the nature and scope of the measurement\nconcerned. For example, in the following case the leaf size and ruled space of\nthe leaves of the manuscript are specified:\n\n This indicates that for most leaves of the manuscript being described the ruled\nspace is 90 mm high and 48 mm wide, while the leaves throughout are between 157\nand 160 mm in height and 105 mm in width.\nThe dim element is provided for cases where some measurement other\nthan height, width, or depth is required. Its type attribute is used\nto indicate the type of measurement involved:\n\n\nThe order in which components of the dimensions element may be\nsupplied is not constrained.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphrase#msphrase\">10.3 Phrase-level Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=msloc#msloc\">10.3.5 References to Locations within a Manuscript</a>","content":"\n10.3.5 References to Locations within a Manuscript\nThe locus and its grouping element locusGrp element are\nspecialized forms of the ref element, used to indicate a location, or\nsequence of locations, within a manuscript. \n<locus> defines a location within a manuscript, manuscript part, or other object typically \n    as a (possibly discontinuous) sequence of folio references.\n<locusGrp> groups a number of locations which together form a\n  distinct but discontinuous item within a manuscript, manuscript part, or other object.\n\nThe locus element is used to reference a single location within a\nmanuscript, typically to specify the location occupied by the element within\nwhich it appears. If, for example, it is used as the first component of an\nmsItem or msItemStruct element, or of any of the more specific\nelements appearing within one (see further section 10.6 Intellectual Content below)\nthen it is understood to specify the location (or locations) of that item within\nthe manuscript being described.\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphrase#msphrase\">10.3 Phrase-level Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=msloc#msloc\">10.3.5 References to Locations within a Manuscript</a><span class=\"breadcrumb\">10.3.5.1 Identifying a Location</span>","content":"\n10.3.5.1 Identifying a Location\nA locus element can be used to identify any reference to one or more\nfolios within a manuscript, wherever such a reference is appropriate. Locations\nare conventionally specified as a sequence of folio or page numbers, but may\nalso be a discontinuous list, or a combination of the two. This specification\nshould be given as the content of the locus element, using the\nconventions appropriate to the individual scholar or holding institution, as in\nthe following example:\nbibliography\n\nA normalized form of the location can also be supplied, using special purpose\nattributes on the locus element, as in the following revision of the\nabove example:\nbibliography\n\nWhen the item concerned occupies a discontinuous sequence of pages, this may\nsimply be indicated in the body of the locus element:\nbibliography\n Alternatively, if it is desired to indicate normalized values for each part of\nthe sequence, a sequence of locus elements can be supplied, grouped\nwithin the locusGrp element:\nbibliography\n\nIf an existing catalogue is being transcribed and it is desirable to retain formatting of the reference (e.g. superscript or italic text) then the hi element may be used. If encoding multiple semantic divisions in a single location reference then a nested locus may be used to separate or annotate these. \n\nFinally, the content of the locus element may be omitted if a\nformatting application can construct it automatically from the values of the\nfrom and to attributes:\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphrase#msphrase\">10.3 Phrase-level Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=msloc#msloc\">10.3.5 References to Locations within a Manuscript</a><span class=\"breadcrumb\">10.3.5.2 Linking a Location to a Transcription or an Image</span>","content":"\n10.3.5.2 Linking a Location to a Transcription or an Image\nThe locus attribute can also be used to associate a location within\na manuscript with facsimile images of that location, using the facs\nattribute, or with a transcription of the text occurring at that location. The\nformer association is effected by means of the facs attribute; the\nlatter by means of the target attribute.\nThe facs is available only when the transcr module described in chapter 11 Representation of Primary Sources is included in\na schema. It associates a locus element with one or more digitized\nimages, as in the following example:\nbibliography\n Here, the facs attribute uses a URI reference to point directly to\nimages of the relevant pages. This method may be found cumbersome when many\nimages are to be associated with a single location. It is of most use when\nspecific pages are referenced within a description, as in the following example:\nbibliography\n For further discussion of the facs attribute, see section 11.1 Digital Facsimiles. \nWhere a transcription of the relevant pages is available, this may be\nassociated with the locus element using its target\nattribute, as in the following example:\nbibliography\n\nWhen (as in this example) a sequence of elements is to be supplied as target\nvalue, it may be given explicitly as above, or using the xPointer range() syntax\ndefined at 16.2.4.6 range(). Note however that support for this pointer\nmechanism is not widespread in current XML processing systems.\nThe target attribute should only be used to point to elements that\ncontain or indicate a transcription of the locus being described. To associate a\nlocus element with a page image or other comparable representation, the\nglobal facs attribute should be used instead. \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphrase#msphrase\">10.3 Phrase-level Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=msloc#msloc\">10.3.5 References to Locations within a Manuscript</a><span class=\"breadcrumb\">10.3.5.3 Using Multiple Location Schemes</span>","content":"\n10.3.5.3 Using Multiple Location Schemes\nWhere a manuscript contains more than one foliation, the scheme\nattribute may be used to distinguish them. For example, MS 65 Corpus Christi\nCollege, Cambridge contains two fly leaves bearing music. These leaves have\nmodern foliation 135 and 136 respectively, but are also marked with an older\nfoliation. This may be preserved in an encoding such as the following:\nbibliography\n Here the scheme attribute points to a foliation element\nproviding more details about the scheme used, as further discussed in 10.7.1.4 Foliation below.\nWhere discontinuous sequences are identified within two different foliations,\nthe scheme attribute should be supplied on the locusGrp\nelement in preference, as in the following:\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphrase#msphrase\">10.3 Phrase-level Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=msnames#msnames\">10.3.6 Names of Persons, Places, and Organizations</a>","content":"\n10.3.6 Names of Persons, Places, and Organizations\nThe standard TEI element name may be used to identify names of any\nkind occurring within a description: \n<name> contains a proper noun or noun phrase.\n As further discussed in 3.6.1 Referring Strings, this element is a\nmember of the class att.canonical, from which it\ninherits the following attributes: \n<att.canonical> provides attributes that can be used to associate a representation such as a name or title\n    with canonical information about the object being named or referenced.\n\n\nHere are some examples of the use of the name element:\nbibliography\n\nNote that the name element is defined as providing information about\na name, not the person, place, or organization to which that name\nrefers. In the last example above, the ref attribute is used to\nassociate the name with a more detailed description of the person named. This is\nprovided by means of the person element, which becomes available when\nthe namesdates module described in chapter 13 Names, Dates, People, and Places is included in a schema. An element such as the following might\nthen be used to provide detailed information about the person indicated by the\nname:\nbibliography\n Note that an instance of\nthe person element must be provided for each distinct ref\nvalue specified. For example, in the case above, the value HOC001\nmust be found as the xml:id attribute of some person\nelement; the same value will be used as the ref attribute of every\nreference to Hoccleve in the document (however spelled), but there will only be\none person element with this identifier.\nAlternatively, the key attribute may be used to supply a unique\nidentifying code for the person referenced by the name independently of both the\nexistence of a person element and the use of the standard URI reference\nmechanism. If, for example, a project maintains as its authority file some\nnon-digital resource, or uses a database which cannot readily be integrated with\nother digital resources for this purpose, the unique codes used by such\noffline resources may be used as values for the\nkey attribute. Although such practices clearly reduce the\ninterchangeability of the resulting encoded texts, they may be judged more\nconvenient or practical in certain situations. As explained in 3.6.1 Referring Strings, interchange is improved by use of tag URIs in ref\ninstead of key. \nAll the person elements referenced by a particular\ndocument set should be collected together within a listPerson\n element, located in a standOff element.\nThis functions as a kind of prosopography for all the people\nreferenced by the set of manuscripts being described, in much the same\nway as a listBibl element may be used to hold bibliographic\ninformation for all the works referenced.\nWhen the namesdates module described in chapter\n13 Names, Dates, People, and Places is included in a schema, similar mechanisms are used to\nmaintain and reference canonical lists of places or organizations, as further\ndiscussed in sections 13.2.3 Place Names and 13.2.2 Organizational Names\nrespectively. \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphrase#msphrase\">10.3 Phrase-level Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=msmisc#msmisc\">10.3.7 Catchwords, Signatures, Secundo Folio</a>","content":"\n10.3.7 Catchwords, Signatures, Secundo Folio\nThe catchwords element is used to describe one method by which\ncorrect ordering of the quires of a codex is ensured. Typically, this takes the\nform of a word or phrase written in the lower margin of the last leaf verso of a\ngathering, which provides a preview of the first recto leaf of the successive\ngathering. This may be a simple phrase such as the following:\nbibliography\n Alternatively, it may contain more details:\nbibliography\n\nThe Signatures element is used, in a similar way, to\ndescribe a similar system in which quires or leaves are marked progressively in\norder to facilitate arrangement during binding. For example:\nbibliography\n\nThe signatures element can be used for either leaf signatures, or a\ncombination of quire and leaf signatures, whether the marking is alphabetic,\nalphanumeric, or some ad hoc system, as in the following more complex example:\nbibliography\n\nThe secFol element (for secundo folio) is used\nto record an identifying phrase (also called dictio\nprobatoria) taken from a specific known point in a codex (for example\nthe first few words on the second leaf). Since these words will differ from one\ncopy of a text to another, the practice originated in the middle ages of using\nthem when cataloguing a manuscript in order to distinguish individual copies of\na work in a way which its opening words could not.\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphrase#msphrase\">10.3 Phrase-level Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=mshera#mshera\">10.3.8 Heraldry</a>","content":"\n10.3.8 Heraldry\n\nDescriptions of heraldic arms, supporters, devices, and mottos may appear at\nvarious points in the description of a manuscript, usually in the context of\nownership information, binding descriptions, or detailed accounts of\nillustrations. A full description may also contain a detailed account of the\nheraldic components of a manuscript independently considered. Frequently,\nhowever, heraldic descriptions will be cited as short phrases within other parts\nof the record. The phrase level element heraldry is provided to allow\nsuch phrases to be marked for further analysis, as in the following examples:\nbibliography\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msid#msid\">10.4 The Manuscript Identifier</a>","content":"\n10.4 The Manuscript Identifier\nThe msIdentifier element is intended to provide an unambiguous means\nof uniquely identifying a particular manuscript. This may be done in a\nstructured way, by providing information about the holding institution and the\ncall number, shelfmark, or other identifier used to indicate its location within\nthat institution. Alternatively, or in addition, a manuscript may be identified\nsimply by a commonly used name. \n<msIdentifier> contains the information required to identify\nthe manuscript or similar object being described.\n\nA manuscript's actual physical location may occasionally be different from\nits place of ownership; at Cambridge University, for example, manuscripts owned\nby various colleges are kept in the central University Library. Normally, it is\nthe ownership of the manuscript which should be specified in the manuscript\nidentifier, while additional or more precise information on the physical\nlocation of the manuscript can be given within the adminInfo element,\ndiscussed in section 10.9.1 Administrative Information below.\nThe following elements are available within msIdentifier to identify\nthe holding institution: \n<country> contains the name of a geo-political unit, such as a nation, country, colony, or\n    commonwealth, larger than or administratively superior to a region and smaller than a bloc.\n<region> contains the name of an administrative unit such as a state, province, or county, larger\n    than a settlement, but smaller than a country.\n<settlement> contains the name of a settlement such as a city, town, or village identified as a single geo-political or administrative unit.\n<institution> contains the name of an organization such as a university or\n  library, with which a manuscript or other object is identified, generally its holding institution.\n<repository> contains the name of a repository within which manuscripts or other objects are stored, possibly forming part of an institution.\n\nThese elements are all structurally equivalent to the standard TEI\nname element with an appropriate value for its type\nattribute; however the use of this syntactic sugar enables\nthe model for msIdentifier to be constrained rather more tightly than\nwould otherwise be possible. Specifically, only one of each of the elements\nlisted above may appear within the msIdentifier and they must, if\npresent, appear in the order given.\nLike name, these elements are all also members of the attribute\nclass att.canonical, and thus can use the attributes\nkey or ref to reference a single standardized source of\ninformation about the entity named. \nThe following elements are used within msIdentifier to provide\ndifferent ways of identifying the manuscript within its holding institution: \n<collection> contains the name of a collection of\nmanuscripts or other objects, not necessarily located within a single repository.\n<idno> supplies any form of identifier used to identify some\n    object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized\n    way.\n<altIdentifier> contains an alternative or former structured identifier used for a manuscript or other object, such as a former catalogue number.\n<msName> contains any form of unstructured alternative\nname used for a manuscript or other object, such as an  ocellus\nnominum, or nickname.\n\nMajor manuscript repositories will usually have a preferred form of citation\nfor manuscript shelfmarks, including rules about punctuation, spacing,\nabbreviation, etc., which should be adhered to. Where such a format also\ncontains information which might additionally be supplied as a distinct\nsubcomponent of the msIdentifier, for example a collection name, a\ndecision must be taken as to whether to use the more specific element, or to\ninclude such information within the idno element. For example, the\nmanuscript formally identified as El 26 C 9 forms a part of the Ellesmere\n(El) collection. Either of the following encodings is therefore feasible:\nbibliography\nbibliography\n\nIn the former example, the preferred form of the identifier can be retrieved\nby prefixing the content of the idno element with that of the\ncollection element, while in the latter it is given explicitly. The\nadvantage of the former is that it simplifies accurate retrieval of all\nmanuscripts from a given collection; the disadvantage is that encoded\nabbreviations of this kind may not be as immediately comprehensible. Care should\nbe taken to avoid redundancy: for example\nbibliography\n would clearly be inappropriate. Equally clearly,\nbibliography\n might be considered helpful in some circumstances (if, for example, some of the\nitems in the Ellesmere collection had shelfmarks which did not begin El). \nIn some cases the shelfmark may contain no information about the collection;\nin other cases, the item may be regarded as belonging to more than one\ncollection. The collection element may be added, and repeated as often\nas necessary to cater for such situations:\nbibliography\n\n\nbibliography\n\nNote in the latter case the use of the msName element to provide a\ncommon name other than the shelfmark by which a manuscript is known. Where a\nmanuscript has several such names, more than one of these elements may be used,\nas in the following example:\nbibliography\n Here the globally available xml:lang attribute has been used to\nspecify the language of the alternative names.\n\nIn very rare cases a repository may have only one manuscript (or only one of\nany significance), which will have no shelfmark as such but will be known by a\nparticular name or names. In such circumstances, the idno element may\nbe omitted, and the manuscript identified by the name or names used for it,\nusing one or more msName elements, as in the following example:\nbibliography\nIf a manuscript name contains a name or referencing string that it is useful to \nannotate (e.g. by referring to an authority list) then name or rs \nmay be used for this purpose.\n\nWhere manuscripts have moved from one institution to another, or even within\nthe same institution, they may have identifiers additional to the ones currently\nused, such as former shelfmarks, which are sometimes retained even after they\nhave been officially superseded. In such cases it may be useful to supply an\nalternative identifier, with a detailed structure similar to that of the\nmsIdentifier itself. The following example shows a manuscript which had\nshelfmark II-M-5 in the collection of the Duque de Osuna, but which\nnow has the shelfmark MS 10237 in the National Library in Madrid:\nbibliography\n Normally, such information would be dealt with under history, except\nin cases where a manuscript is likely still to be referred to or known by its\nformer identifier. For example, an institution may have changed its call number\nsystem but still wish to retain a record of the earlier number, perhaps because\nthe manuscript concerned is frequently cited in print under its previous number:\nbibliography\n Where (as in this example) no repository is specified for the\naltIdentifier, it is assumed to be the same as that of the parent\nmsIdentifier. Where the holding institution has only one preferred form\nof citation but wishes to retain the other for internal administrative purposes,\nthe secondary could be given within altIdentifier with an appropriate\nvalue on the type attribute:\nbibliography\n It might, however, be preferable to include such information within the\nadminInfo element discussed in section 10.9.1 Administrative Information\nbelow.\nCases of such changed or alternative identifiers should be clearly\ndistinguished from cases of fragmented (10.11 Manuscript Fragments) manuscripts, that is to say manuscripts which although physically disjoint\nare nevertheless generally treated as single units.\nAs mentioned above, the smallest possible description is one that contains\nonly the element msIdentifier; good practice in all but exceptional\ncircumstances requires the presence within it of the three sub-elements\nsettlement, repository, and idno, since they provide\nwhat is, by common consent, the minimum amount of information necessary to\nidentify a manuscript.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msdo#msdo\">10.5 The Manuscript Heading</a>","content":"\n10.5 The Manuscript Heading\nHistorically, the briefest possible meaningful description of a manuscript\nconsists of no more than a title, e.g. Polychronicon.\nThis will often have been enough to identify a manuscript in a small collection\nbecause the identity of the author is implicit. Where a title does not imply the\nauthor, and is thus insufficient to identify the main text of a manuscript, the\nauthor should be stated explicitly (e.g. Augustinus,\nSermones or Cicero, Letters). Many\ninventories of manuscripts consist of no more than an author and title, with\nsome form of copy-specific identifier, such as a shelfmark or secundo\nfolio reference (e.g. Arch. B. 3. 2: Evangelium Matthei\ncum glossa, 126. Isidori Originum libri octo,\nBiblia Hieronimi, 2o fo. opus est); information on date\nand place of writing will sometimes also be included. The standard TEI element\nhead element can be used to provide a brief description of this kind. \n<head> contains any type of heading, for example the title of a section, or the heading of a list,\n    glossary, manuscript description, etc.\n In this way the cataloguer or scholar can supply in one place a\nminimum of essential information, such as might be displayed or printed as the\nheading of a full description. For example:\nbibliography\n Any phrase-level elements, such as title, name,\ndate, or the specialized elements origPlace and\norigDate, can also be used within a head element, but it\nshould be remembered that the head element is intended principally to\ncontain a heading. More structured information concerning the contents, physical\nform, or history of the manuscript should be given within the specialized\nelements described below, msContents, physDesc,\nhistory, etc. However, in simple cases, the p element may also\nbe used to supply an unstructured collection of such information, as in the\nexample given above (10.2 The Manuscript Description Element).\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msco#msco\">10.6 Intellectual Content</a>","content":"\n10.6 Intellectual Content\nThe msContents element is used to describe the intellectual content\nof a manuscript or manuscript part. It comprises either a series of\ninformal prose paragraphs or a series of msItem or\nmsItemStruct elements, each of which provides a more detailed\ndescription of a single item contained within the manuscript. These may be\nprefaced, if desired, by a summary element, which is especially useful\nwhere one wishes to provide an overview of a manuscript's contents and describe\nonly some of the items in detail. \n<msContents> describes the intellectual content of a manuscript, manuscript\n    part, or other object either as a series of paragraphs or as a series of structured manuscript items.\n<msItem> describes an individual work or item within the intellectual\n  content of a manuscript, manuscript part, or other object.\n<msItemStruct> contains a structured description for an\n  individual work or item within the intellectual content of a manuscript, manuscript part, or other object.\n<summary> contains an overview of the available\n  information concerning some aspect of an item or object (for example, its\nintellectual content, history, layout, typography etc.) as a\ncomplement or alternative to the  more detailed information  carried by\n  more specific elements.\n\nIn the simplest case, only a brief description may be provided, as in the\nfollowing examples:\nbibliography\n\nThis description may of course be expanded to include any of the TEI elements\ngenerally available within a p element, such as title,\nbibl, or list. More usually, however, each individual work\nwithin a manuscript will be given its own description, using the msItem\nor msItemStruct element described in the next section, as in the\nfollowing example:\nbibliography\n\nThe summary element may be used in conjunction with one or more\nmsItem elements if it is desired to provide both a general summary of\nthe contents of a manuscript and more detail about some or all of the individual\nitems within it. It may not however be used within an individual msItem\nelement. \nbibliography\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msco#msco\">10.6 Intellectual Content</a><a class=\"breadcrumb\" href=\"p5.xml?id=mscoit#mscoit\">10.6.1 The msItem and msItemStruct Elements</a>","content":"\n10.6.1 The msItem and msItemStruct Elements\nEach discrete item in a manuscript or manuscript part can be described within\na distinct msItem or msItemStruct element, and may be\nclassified using the class attribute.\nThese are the possible component elements of msItem and\nmsItemStruct. \n<author> in a bibliographic reference, contains the name(s) of an\n  author, personal or corporate, of a work; for example in the same\n  form as that provided by a recognized bibliographic name authority.\n<respStmt> supplies a statement of responsibility for the intellectual content of a text, edition,\n    recording, or series, where the specialized elements for authors, editors, etc. do not suffice\n    or do not apply. May also be used to encode information about individuals or organizations \n    which have played a role in the production or distribution of a bibliographic work.\n<title> contains a title for any kind of work.\n<rubric> contains the text of any rubric or heading attached to a particular manuscript item, that is, a string of words through which a\nmanuscript or other object signals the beginning of a text division, often with an assertion as to its author and title, which is in some way set off from the text itself, typically in red ink, or by use of different size or type of script, or some other such visual device.\n<incipit> contains the incipit of a manuscript or similar object item, that is the opening words of the text proper, exclusive of any rubric which might precede it, of sufficient length to identify the work uniquely; such incipits were, in former times, frequently used a means of reference to a work, in place of a title.\n<quote> contains a phrase or passage attributed by the narrator or author to some agency external\n        to the text.\n\n<explicit> contains the  explicit of a\nitem, that is, the closing words of the text proper, exclusive of any rubric or colophon which might follow it.\n<finalRubric> contains the string of words that denotes the end of a text division, often with an assertion as to its author and title, usually set off from the text itself by red ink, by a different size or type of script, or by some other such visual device.\n<colophon> contains the  colophon\nof an item: that is, a statement providing information regarding the date, place, agency, or reason for production of the manuscript or other object.\n<decoNote> contains a note describing either a\ndecorative component of a manuscript or other object, or a fairly homogenous class of\nsuch components.\n<listBibl> contains a list of bibliographic citations of any kind.\n<bibl> contains a loosely-structured bibliographic citation of which the sub-components may or may\n    not be explicitly tagged.\n<filiation> contains information concerning the manuscript or other object's filiation, i.e. its relationship to other surviving manuscripts or other objects of the same text or contents, its protographs, antigraphs and apographs.\n<note> contains a note or annotation.\n<textLang> describes the languages and writing systems identified within the bibliographic work  \n  being described, rather than its description.\n\nIn addition, an msItemStruct may contain nested msItemStruct\nelements, just as an msItem may contain nested msItem\nelements.\nThe main difference between msItem and msItemStruct is that\nin the former, the order and number of child elements is not constrained; any\nelement, in other words, may be given in any order, and repeated as often as is\njudged necessary. In the latter, however, the sub-elements, if used, must be\ngiven in the order specified above and only some of them may be repeated;\nspecifically, rubric, finalRubric. incipit,\ntextLang and explicit can appear only once.\nWhile neither msItem nor msItemStruct may contain untagged\nrunning text, both permit an unstructured description to be provided in the form\nof one or more paragraphs of text. They differ in this respect also: if\nparagraphs are supplied as the content of an msItem, then none of the\nother component elements listed above is permitted; in the msItemStruct\ncase, however, paragraphs may appear anywhere as an alternative to any of the\ncomponent elements listed above. \nAs noted above, both msItem and msItemStruct elements may\nalso nest, where a number of separate items in a manuscript are grouped under a\nsingle title or rubric, as is the case, for example, with a work like The\nCanterbury Tales.\nThe elements msContents, msItem, msItemStruct,\nincipit, and explicit are all members of the class att.msExcerpt from which they inherit the\ndefective attribute. \n<att.msExcerpt> provides attributes used to describe excerpts from a manuscript placed in a description thereof.\n This attribute can be used for example with collections of\nfragments, where each fragment is given as a separate msItem and the\nfirst and last words of each fragment are transcribed as defective incipits and\nexplicits, as in the following example, a manuscript containing four fragments\nof a single work:\nbibliography\n\nThe elements ex, am, and expan used in the above\nexample are further discussed in section 11.3.1.2 Abbreviation and Expansion; they are\navailable only when the transcr module defined by\nthat chapter is selected. Similarly, the g element used in this example\nto represent the abbreviation mark is defined by the gaiji module documented in chapter 5 Characters, Glyphs, and Writing Modes. \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msco#msco\">10.6 Intellectual Content</a><a class=\"breadcrumb\" href=\"p5.xml?id=msat#msat\">10.6.2 Authors and Titles</a>","content":"\n10.6.2 Authors and Titles\nWhen used within a manuscript description, the title element should\nbe used to supply a regularized form of the item's title, as distinct from any\nrubric quoted from the manuscript. If the item concerned has a standardized\ndistinctive title, e.g. Roman de la Rose, then this\nshould be the form given as content of the title element, with the\nvalue of the type attribute given as uniform. If no\nuniform title exists for an item, or none has been yet identified, or if one\nwishes to provide a general designation of the contents, then a\nsupplied title can be given, e.g.\nmissal, in which case the type attribute on\nthe title should be given the value supplied.\nSimilarly, if used within a manuscript description, the author\nelement should always contain the normalized form of an author's name,\nirrespective of how (or whether) this form of the name is cited in the\nmanuscript. If it is desired to retain the form of the author's name as given in\nthe manuscript, this may be tagged as a distinct name element, within\nthe text at the point where it occurs. \n\nNote that the key attribute can also be used, as on names in\ngeneral, to specify the identifier of a person element carrying full\ndetails of the person concerned (see further 10.3.6 Names of Persons, Places, and Organizations).\nThe respStmt element can be used to supply the name and role of a\nperson other than the author who is responsible for some aspect of the\nintellectual content of the manuscript:\nbibliography\n\nThe respStmt element can also be used where there is a discrepancy\nbetween the author of an item as given in the manuscript and the accepted\nscholarly view, as in the following example:\nbibliography\n Note that such attributions of authorship, both correct and incorrect, are\nfrequently found in the rubric or final rubric (and occasionally also elsewhere\nin the text), and can therefore be transcribed and included in the description,\nif desired, using the rubric, finalRubric, or quote\nelements, as appropriate. \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msco#msco\">10.6 Intellectual Content</a><a class=\"breadcrumb\" href=\"p5.xml?id=mscorie#mscorie\">10.6.3 Rubrics, Incipits, Explicits, and Other Quotations from the Text</a>","content":"\n10.6.3 Rubrics, Incipits, Explicits, and Other Quotations from the Text\nIt is customary in a manuscript description to record the opening and closing\nwords of a text as well as any headings or colophons it might have, and the\nspecialized elements rubric, incipit, explicit,\nfinalRubric, and colophon are available within msItem\nfor doing so, along with the more general quote, for recording other\nbits of the text not covered by these elements. Each of these elements has the\nsame substructure, containing a mixture of phrase-level elements and plain text.\nA locus element can be included within each, in order to specify the\nlocation of the component, as in the following example:\nbibliography\n\nIn the following example, standard TEI elements for the transcription of\nprimary sources have been used to mark the expansion of abbreviations and other\nfeatures present in the original:\nbibliography\n Note here also the use of the defective attribute on\nincipit and explicit to indicate that the text begins and ends\ndefectively. \nThe xml:lang attribute for colophon, explicit,\nincipit, quote, and rubric may always be used to\nidentify the language of the text quoted, if this is different from the default\nlanguage specified by the mainLang attribute on\ntextLang.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msco#msco\">10.6 Intellectual Content</a><a class=\"breadcrumb\" href=\"p5.xml?id=msfil#msfil\">10.6.4 Filiation</a>","content":"\n10.6.4 Filiation\nThe filiation element can be used to provide information on the\nrelationship between the manuscript and other surviving manuscripts of the same\ntext, either specifically or in a general way, as in the following example:\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msco#msco\">10.6 Intellectual Content</a><a class=\"breadcrumb\" href=\"p5.xml?id=msclass#msclass\">10.6.5 Text Classification</a>","content":"\n10.6.5 Text Classification\nOne or more text classification or text-type codes may be specified, either\nfor the whole of the msContents element, or for one or more of its\nconstituent msItem elements, using the class attribute as\nspecified above:\nbibliography\n The value used for the class attribute in this example points to a\ncategory element with the identifier law, which defines\nthe classification concerned. Such category elements will typically\nappear within a taxonomy element, within the classDecl element\nof the TEI header (2.3.7 The Classification Declaration) as in the following example:\nbibliography\n More than one classification may apply to a single item. Another text,\nconcerned with legislation about military topics might thus be specified as\nfollows:\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msco#msco\">10.6 Intellectual Content</a><a class=\"breadcrumb\" href=\"p5.xml?id=mslangs#mslangs\">10.6.6 Languages and Writing Systems</a>","content":"\n10.6.6 Languages and Writing Systems\nThe textLang element should be used to provide information about the\nlanguages used within a manuscript item. It may take the form of a simple note,\nas in the following example:\nbibliography\n\nWhere, for validation and indexing purposes, it is thought convenient to add\nkeywords identifying the particular languages used, the mainLang\nattribute may be used. This attribute takes the same range of values as the\nglobal xml:lang attribute, on which see further 6.1 Language Identification. In the following example a manuscript written chiefly in Old Church Slavonic\nis described:\nbibliography\n\n\nA manuscript item will sometimes contain material in more than one language.\nThe mainLang attribute should be used only for the chief language.\nOther languages used may be specified using the otherLangs attribute\nas in the following example:\nbibliography\n\nSince Old Church Slavonic may be written in either Cyrillic or Glagolitic\nscripts, and even occasionally in both within the same manuscript, it might be\npreferable to use a more explicit identifier:\nbibliography\n\nThe form and scope of language identifiers recommended by these Guidelines is\nbased on the IANA standard described at 6.1 Language Identification and should be\nfollowed throughout. Where additional detail is needed correctly to describe a\nlanguage, or to discuss its deployment in a given text, this should be done\nusing the langUsage element in the TEI header, within which individual\nlanguage elements document the languages used: see 2.4.2 Language Usage. \nNote that the language element defines a particular combination of\nhuman language and writing system. Only one language element may be\nsupplied for each such combination. Standard TEI practice also allows this\nelement to be referenced by any element using the global xml:lang\nattribute in order to specify the language applicable to the content of that\nelement. For example, assuming that language elements have been defined\nwith the identifiers fr (for French), la (for\nLatin), and de (for German), a manuscript description written in\nFrench which specifies that a particular manuscript contains predominantly\nGerman but also some Latin material, might have a textLang element like\nthe following:\nbibliography\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph#msph\">10.7 Physical Description</a>","content":"\n10.7 Physical Description\nUnder the general heading physical description we\nsubsume a large number of different aspects generally regarded as useful in the\ndescription of a given manuscript. These include: aspects of the form, support, extent, and quire structure of the\nmanuscript object and of the way in which the text is laid out on the page (10.7.1 Object Description);the styles of writing, such as the way it is laid out on the page, the\nstyles of writing, decorative features, any musical notation employed and any\nannotations or marginalia (10.7.2 Writing, Decoration, and Other Notations); and discussion of its binding, seals, and any accompanying material (10.7.3 Bindings, Seals, and Additional Material).\nMost manuscript descriptions touch on several of these categories of\ninformation though few include them all, and not all distinguish them as clearly\nas we propose here. In particular, it is often the case that an existing\ndescription will include information for which we propose distinct elements\nwithin a single paragraph, or even sentence. The encoder must then decide\nwhether to rewrite the description using the structure proposed here, or to\nretain the existing prose, marked up simply as a series of p elements,\ndirectly within the physDesc element.\nThe physDesc element may thus be used in either of two distinct\nways. It may contain a series of paragraphs addressing topics listed above and\nsimilar ones. Alternatively, it may act as a container for any choice of the\nmore specialized elements described in the remainder of this section, each of\nwhich itself contains a series of paragraphs, and may also have more specific\nattributes.\n\nIn general, it is not recommended to combine unstructured prose description\nwith usage of the more specialized elements, as such an approach complicates\nprocessing, and may lead to inconsistency within a single manuscript\ndescription. A single physDesc element will normally contain either a\nseries of model.pLike elements, or a sequence of\nspecialized elements from the model.physDescPart\nclass. There are however circumstances in which this is not feasible, for\nexample: the description already exists in a prose form where some of the\nspecialized topics are treated together in paragraphs of prose, but others are\ntreated distinctly;although all parts of the description are clearly distinguished, some of\nthem cannot be mapped to a pre-existing specialized element.\nIn such situations, both specialized and generic (model.pLike) elements may be combined in a single physDesc.\nNote however that all generic elements given must precede the first specialized\nelement in the description. Thus the following is valid:\nbibliography\n but neither of the following is valid:\nbibliography\nbibliography\n The order in which specific elements may appear is also constrained by the\ncontent model; again this is for simplicity of processing. They may of course be\nprocessed or displayed in any desired order, but for ease of validation, they\nmust be given in the order specified below.\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph#msph\">10.7 Physical Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph1#msph1\">10.7.1 Object Description</a>","content":"\n10.7.1 Object Description\nThe objectDesc element is used to group together those parts of the\nphysical description which relate specifically to the text-bearing object, its\nformat, constitution, layout, etc. The objectDesc element is used for grouping \n elements relating to the physicality of a text-bearing object as part of a manuscript \n description. If a full description of an object (text-bearing or not) is desired, the \n more general object element may be preferred. \n \n The form attribute is used to\nindicate the specific type of writing vehicle being described, for example, as a\ncodex, roll, tablet, etc. If used it must appear first in the sequence of\nspecialized elements. The objectDesc element has two parts: a\ndescription of the support, i.e. the physical carrier on which the\ntext is inscribed; and a description of the layout, i.e. the way\ntext is organized on the carrier.\n\nTaking these in turn, the description of the support is tagged using the\nfollowing elements, each of which is discussed in more detail below: \n<supportDesc> groups elements describing the physical support for the written part of a manuscript or other object.\n<support> contains a description of the materials\netc. which make up the physical support for the written part of a manuscript or other object.\n<extent> describes the approximate size of a text stored on some carrier medium or of some other object, digital  or non-digital,  specified in any convenient units.\n<collation> contains a description of how the leaves, bifolia, or similar objects are physically\narranged.\n<foliation> describes the numbering system or systems used to \ncount the leaves or pages in a codex or similar object.\n<condition> contains a description of the physical\ncondition of the manuscript or object.\n\nEach of these elements contains paragraphs relating to the topic concerned.\nWithin these paragraphs, phrase-level elements (in particular those discussed\nabove at 10.3 Phrase-level Elements), may be used to tag specific terms of\ninterest if so desired.\nbibliography\n\nThis example combines information which might alternatively be more precisely\ntagged using the more specific elements described in the following\nsubsections.\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph#msph\">10.7 Physical Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph1#msph1\">10.7.1 Object Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph1sup#msph1sup\">10.7.1.1 Support</a>","content":"\n10.7.1.1 Support\nThe support element groups together information about the physical\ncarrier. Typically, for western manuscripts, this will entail discussion of the\nmaterial (parchment, paper, or a combination of the two) written on. For paper,\na discussion of any watermarks present may also be useful. If this discussion\nmakes reference to standard catalogues of such items, these may be tagged using\nthe standard ref element as in the following example:\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph#msph\">10.7 Physical Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph1#msph1\">10.7.1 Object Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph1ext#msph1ext\">10.7.1.2 Extent</a>","content":"\n10.7.1.2 Extent\nThe extent element, defined in the TEI header, may also be used in a\nmanuscript description to specify the number of leaves a manuscript contains, as\nin the following example:\nbibliography\n Information regarding the size of the leaves may be specifically marked using\nthe phrase level dimensions element, as in the following example, or\nleft as plain prose.\nbibliography\n\nAlternatively, the generic measure element might be used within\nextent, as in the following example:\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph#msph\">10.7 Physical Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph1#msph1\">10.7.1 Object Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph1col#msph1col\">10.7.1.3 Collation</a>","content":"\n10.7.1.3 Collation\nThe collation element should be used to provide a description of a\nbook's current and original structure, that is, the arrangement of its leaves\nand quires. This information may be conveyed using informal prose, or any\nappropriate notational convention. Although no specific notation is defined\nhere, an appropriate element to enclose such an expression would be the\nformula element, which is provided when the figures module is included in a schema. Here are some examples of\ndifferent ways of treating collation:\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph#msph\">10.7 Physical Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph1#msph1\">10.7.1 Object Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphfo#msphfo\">10.7.1.4 Foliation</a>","content":"\n10.7.1.4 Foliation\nThe foliation element may be used to indicate the scheme, medium or\nlocation of folio, page, column, or line numbers written in the manuscript,\nfrequently including a statement about when and, if known, by whom, the\nnumbering was done.\nbibliography\n\nWhere a manuscript contains traces of more than one foliation, each should be\nrecorded as a distinct foliation element and optionally given a\ndistinct value for its xml:id attribute. The locus element\ndiscussed in 10.3.5 References to Locations within a Manuscript can then indicate which foliation scheme is\nbeing cited by means of its scheme attribute, which points to this\nidentifier:\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph#msph\">10.7 Physical Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph1#msph1\">10.7.1 Object Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphco#msphco\">10.7.1.5 Condition</a>","content":"\n10.7.1.5 Condition\nThe condition element is used to summarize the overall physical\nstate of a manuscript, in particular where such information is not recorded\nelsewhere in the description. It should not, however, be used to describe\nchanges or repairs to a manuscript, as these are more appropriately described as\na part of its custodial history (see 10.9.1.2 Availability and Custodial History). It should be\nsupplied within the supportDesc element, if it discusses the condition\nof the physical support of the manuscript; within the bindingDesc or\nbinding elements (10.7.3.1 Binding Descriptions) if it discusses only the\ncondition of the binding or bindings concerned; or within the sealDesc\nelement if it discusses the condition of any seal attached to the\nmanuscript.\nbibliography\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph#msph\">10.7 Physical Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph1#msph1\">10.7.1 Object Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphla#msphla\">10.7.1.6 Layout Description</a>","content":"\n10.7.1.6 Layout Description\nThe second part of the objectDesc element is the layoutDesc\nelement, which is used to describe and document the\nmise-en-page of the manuscript, that is the way in which text\nand illumination are arranged on the page, specifying for example the number of\nwritten, ruled, or pricked lines and columns per page, size of margins, distinct\ntextual streams such as glosses, commentaries, etc. This may be given as a simple series\nof paragraphs. Alternatively, one or more different layouts may be identified\nwithin a single manuscript, each described by its own layout element. \n<layoutDesc> collects the set of layout descriptions applicable to a manuscript or other object.\n<layout> describes how text is laid out on the\n  page or surface of the object, including information about any ruling, pricking, or other evidence of page-preparation techniques.\n\nWhere the layout element is used, the layout will often be\nsufficiently regular for the attributes on this element to convey all that is\nnecessary; more usually however a more detailed treatment will be required. The\nattributes are provided as a convenient shorthand for commonly occurring cases,\nand should not be used except where the layout is regular. The value\nNA (not-applicable) should be used for cases where the layout is\neither very irregular, or where it cannot be characterized simply in terms of\nlines and columns, for example, where blocks of commentary and text are arranged\nin a regular but complex pattern on each page\nThe following examples indicate the range of possibilities:\nbibliography\n\nWhere multiple layout elements are supplied, the scope for each\nspecification can be indicated by means of locus elements within the\ncontent of the element, as in the following example:\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph#msph\">10.7 Physical Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph2#msph2\">10.7.2 Writing, Decoration, and Other Notations</a>","content":"\n10.7.2 Writing, Decoration, and Other Notations\nThe second group of elements within a structured physical description\nconcerns aspects of the writing, illumination, or other notation (notably,\nmusic) found in a manuscript, including additions made in later hands—the\ntext, as it were, as opposed to the carrier. \n<handDesc> contains a description of all the different hands used in a manuscript or other object.\n<handNote> describes a particular style or hand distinguished within a manuscript.\n<scriptDesc> contains a description of the scripts used in a manuscript or other object.\n<scriptNote> describes a particular script distinguished within\n    the description of a manuscript or similar resource.\n<typeDesc> contains a description of the typefaces or other aspects of\n  the printing of an incunable or other printed source.\n<typeNote> describes a particular font or other significant typographic feature distinguished within\n    the description of a printed resource.\n<decoDesc> contains a description of the decoration of a manuscript or other object, either as in paragraphs, or as one or more decoNote elements.\n<decoNote> contains a note describing either a\ndecorative component of a manuscript or other object, or a fairly homogenous class of\nsuch components.\n<musicNotation> contains description of type of musical notation.\n<additions> contains a description of any significant additions found\nwithin a manuscript or other object, such as marginalia or other annotations.\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph#msph\">10.7 Physical Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph2#msph2\">10.7.2 Writing, Decoration, and Other Notations</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphwr#msphwr\">10.7.2.1 Writing</a>","content":"\n10.7.2.1 Writing\nThe handDesc element can contain a short description of the general\ncharacteristics of the writing observed in a manuscript, as in the following\nexample:\nbibliography\n\nNote the use of the term element to mark specific technical terms\nwithin the context of the handDesc element.\nWhere several distinct hands have been identified, this fact can be\nregistered by using the hands attribute, as in the following example:\nbibliography\n\nAlternatively, or in addition, where more specific information about one or\nmore of the hands identified is to be recorded, the handNote element\nshould be used, as in the following example:\nbibliography\n Note here the use of the locus element, discussed in section 10.3.5 References to Locations within a Manuscript, to specify exactly which parts of a manuscript are written by\na given hand.\nWhen a full or partial transcription of a manuscript is available in addition\nto the manuscript description, the handShift element described in 11.3.2.1 Document Hands can be used to link the relevant parts of the transcription to\nthe appropriate handNote element in the description: for example, at\nthe point in the transcript where the second hand listed above starts (i.e. at\nfolio 72v:4), we might insert handShift new=\"#Eirsp-2\"/.\n Additions, notes, drawings etc. (e.g. add, note and figure) made by other hands \n  in the text, can be linked to the corresponding handNote element using the hand attribute.\nThe elements typeDesc, and typeNote are used to provide\ninformation about the printing of a source, in exactly the same way as the\nhandDesc or handNote elements provide information about its\nwriting. They are provided for the convenience of those using this module to\nprovide information about early printed sources and incunables. The\ntypeDesc element can simply provide a summary description:\nbibliography\n\nWhere detailed information about individual typefaces is to be recorded, this\nmay be done using the typeNote element:\nbibliography\n\nWhere information is required about both typography and written script, for\nexample where a printed book contains extensive handwritten annotation, both\nhandDesc and typeDesc elements should be supplied. Similarly,\nin the following example, the source text is a typescript with extensive\nhandwritten annotation:\nbibliography\n\nThe elements scriptNote and scriptDesc may be used in\nexactly the same way to document a script used in this and other manuscripts,\nfor example to record that this script was used mainly for the production of\nbooks or for charters; or that it is characteristic of some geographical area or\nscriptorium or date. Such information as the letter forms characteristic of this\nscript may also be recorded. By contrast, the handNote element would be\nused to document the way that a particular scribe uses a script, for example\nwith long or short descenders, or using a pen which is cut in a different way,\nor an ink of a given colour, and so forth. \nAs with typeNote, the scriptNote element can be used in\ncombination with handNote. \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph#msph\">10.7 Physical Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph2#msph2\">10.7.2 Writing, Decoration, and Other Notations</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphdec#msphdec\">10.7.2.2 Decoration</a>","content":"\n10.7.2.2 Decoration\nIt can be difficult to draw a clear distinction between aspects of a\nmanuscript which are purely physical and those which form part of its\nintellectual content. This is particularly true of illuminations and other forms\nof decoration in a manuscript. We propose the following elements for the purpose\nof delimiting discussion of these aspects within a manuscript description, and\nfor convenience locate them all within the physical description, despite the\nfact that the illustrative features of a manuscript will in many cases also be\nseen as constituting part of its intellectual content.\nThe decoDesc element may contain simply one or more paragraphs\nsummarizing the overall nature of the decorative features of the manuscript, as\nin the following example:\nbibliography\n Alternatively, it may contain a series of more specific typed decoNote\nelements, each summarizing a particular aspect or individual instance of the\ndecoration present, for example the use of miniatures, initials (historiated or\notherwise), borders, diagrams, etc., as in the following example:\nbibliography\n\nWhere more exact indexing of the decorative content of a manuscript is\nrequired, the standard TEI elements term or index may be used\nwithin the prose description to supply or delimit appropriate iconographic\nterms, as in the following example:\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph#msph\">10.7 Physical Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph2#msph2\">10.7.2 Writing, Decoration, and Other Notations</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphmu#msphmu\">10.7.2.3 Musical Notation</a>","content":"\n10.7.2.3 Musical Notation\nWhere a manuscript contains music, the musicNotation element may be\nused to describe the form of notation employed, as in the following examples:\nbibliography\nbibliography\nIf a manuscript employs more than one notation, they must both be described within the\nsame musicNotation element, for example as different list items. \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph#msph\">10.7 Physical Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph2#msph2\">10.7.2 Writing, Decoration, and Other Notations</a><a class=\"breadcrumb\" href=\"p5.xml?id=mspham#mspham\">10.7.2.4 Additions and Marginalia</a>","content":"\n10.7.2.4 Additions and Marginalia\nThe additions element can be used to list or describe any additions\nto the manuscript, such as marginalia, scribblings, doodles, etc., which are\nconsidered to be of interest or importance. Such topics may also be discussed or\nreferenced elsewhere in a description, for example in the history\nelement, in cases where the marginalia provide evidence of ownership. Note that\nthis element may not be repeated within a single manuscript description. If\nseveral different kinds of additional matter are discussed, the content may be\nstructured as a labelled list or a series of paragraphs. Some examples follow:\nbibliography\nbibliography\nbibliography\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph#msph\">10.7 Physical Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph3#msph3\">10.7.3 Bindings, Seals, and Additional Material</a>","content":"\n10.7.3 Bindings, Seals, and Additional Material\nThe third major component of the physical description relates to supporting\nbut distinct physical components, such as bindings, seals and accompanying\nmaterial. These may be described using the following specialist elements: \n<bindingDesc> describes the present and former bindings of a manuscript or other object, either\nas a series of paragraphs or as a series of distinct binding elements,\none for each binding of the manuscript.\n<binding> contains a description of one binding, i.e. type of covering, boards,\n    etc. applied to a manuscript or other object.\n<sealDesc> describes the seals or similar items related to the object described, either as a series of paragraphs or as a series of seal elements.\n<seal> contains a description of one seal or similar applied to the object described\n<accMat> contains details of any significant additional\nmaterial which may be closely associated with the manuscript or object being\ndescribed, such as non-contemporaneous documents or fragments bound in\nwith it at some earlier historical period.\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph#msph\">10.7 Physical Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph3#msph3\">10.7.3 Bindings, Seals, and Additional Material</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphbi#msphbi\">10.7.3.1 Binding Descriptions</a>","content":"\n10.7.3.1 Binding Descriptions\nThe bindingDesc element contains a description of the state of the\npresent and former bindings of a manuscript, including information about its\nmaterial, any distinctive marks, and provenance information. This may be given\nas a series of paragraphs if only one binding is being described, or as a series\nof distinct binding elements, each describing a distinct binding where\nthese are separately described. For example:\nbibliography\n\nWithin a binding description, the elements decoNote and\ncondition are available, as alternatives to p, for paragraphs\ndealing exclusively with information about decorative features of a binding, or\nabout its condition, respectively.\nbibliography\n\nAs noted above, (10.7.1.5 Condition) the element condition may\nalso be used as an alternative to p for paragraphs concerned\nexclusively with the condition of a binding, where this has not been supplied as\npart of the physical description.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph#msph\">10.7 Physical Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph3#msph3\">10.7.3 Bindings, Seals, and Additional Material</a><a class=\"breadcrumb\" href=\"p5.xml?id=msphse#msphse\">10.7.3.2 Seals</a>","content":"\n10.7.3.2 Seals\nThe sealDesc element supplies information about the seal(s) attached\nto documents to guarantee their integrity, or to show authentication of the\nissuer or consent of the participants. It may contain one or more paragraphs\nsummarizing the overall nature of the seals, or may contain one or more\nseal elements.\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph#msph\">10.7 Physical Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msph3#msph3\">10.7.3 Bindings, Seals, and Additional Material</a><a class=\"breadcrumb\" href=\"p5.xml?id=msadac#msadac\">10.7.3.3 Accompanying Material</a>","content":"\n10.7.3.3 Accompanying Material\nThe circumstance may arise where material not originally part of a manuscript\nis bound into or otherwise kept with a manuscript. In some cases this material\nwould best be treated in a separate msPart element (see 10.10 Manuscript Parts below). There are, however, cases where the additional matter\nis not self-evidently a distinct manuscript: it might, for example, be a set of\nnotes by a later scholar, or a file of correspondence relating to the\nmanuscript. The accMat element is provided as a holder for this kind of\ninformation. \n<accMat> contains details of any significant additional\nmaterial which may be closely associated with the manuscript or object being\ndescribed, such as non-contemporaneous documents or fragments bound in\nwith it at some earlier historical period.\n\nHere is an example of the use of this element, describing a note by the\nIcelandic manuscript collector Árni Magnússon which has been bound with the\nmanuscript:\nbibliography\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=mshy#mshy\">10.8 History</a>","content":"\n10.8 History\nThe following elements are used to record information about the history of a\nmanuscript: \n<history>  groups elements\ndescribing the full history of a manuscript, manuscript part, or other object.\n<origin> contains any descriptive or other information\nconcerning the origin of  a manuscript, manuscript part, or other object.\n<provenance> contains any descriptive or other information\nconcerning a single identifiable episode during the history of a manuscript, manuscript part, or other object after its creation but before its acquisition.\n<acquisition> contains any descriptive or other information\nconcerning the process by which a manuscript or manuscript part or other object entered the holding\ninstitution.\n\nThe three components of the history element all have the same\nsubstructure, consisting of one or more paragraphs marked as p\nelements. Each of these three elements is also a member of the att.datable attribute class, itself a member of the att.datable.w3c class, and thus also carries the following\noptional attributes: \n<att.datable.w3c> provides attributes for normalization of elements that contain\n  datable events  conforming to the W3C\n  XML Schema Part 2: Datatypes Second Edition.\n\nInformation about the origins of the manuscript, its place and date of\nwriting, should be given as one or more paragraphs contained by a single\norigin element; following this, any available information on distinct\nstages in the history of the manuscript before its acquisition by its current\nholding institution should be included as paragraphs within one or more\nprovenance elements. Finally, any information specific to the means by\nwhich the manuscript was acquired by its present owners should be given as\nparagraphs within the acquisition element.\nHere is a fairly simple example of the use of this element:\nbibliography\n\nHere is a fuller example, demonstrating the use of multiple\nprovenance elements where distinct periods of ownership for the\nmanuscript have been identified:\nbibliography\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msad#msad\">10.9 Additional Information</a>","content":"\n10.9 Additional Information\nThree categories of additional information are provided for by the scheme\ndescribed here, grouped together within the additional element\ndescribed in this section. \n<additional> groups additional information, combining\n    bibliographic information about a manuscript or other object, or surrogate copies of\nit, with curatorial or administrative information.\n<adminInfo> contains information about the present\ncustody and availability of the manuscript or other object, and also about the record\ndescription itself.\n<surrogates> contains information about any representations of the manuscript or other object being described which\nmay exist in the holding institution or elsewhere.\n<listBibl> contains a list of bibliographic citations of any kind.\n\nNone of the constituent elements of additional is required. If any\nis supplied, it may appear once only; furthermore, the order in which elements\nare supplied should be as specified above.\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msad#msad\">10.9 Additional Information</a><a class=\"breadcrumb\" href=\"p5.xml?id=msadad#msadad\">10.9.1 Administrative Information</a>","content":"\n10.9.1 Administrative Information\nThe adminInfo element is used to hold information relating to the\ncuration and management of a manuscript. This may be supplied as a note using\nthe global note element. Alternatively, different aspects of this\ninformation may be presented grouped within one of the following\nspecialized elements: \n<recordHist> provides information about the source and\nrevision status of the parent manuscript or object description itself.\n<availability> supplies information about the availability of a text, for example any restrictions on its\n  use or distribution, its copyright status, any licence applying to it, etc.\n<custodialHist> contains a description of a manuscript or other object's custodial history, either\nas running prose or as a series of dated custodial events.\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msad#msad\">10.9 Additional Information</a><a class=\"breadcrumb\" href=\"p5.xml?id=msadad#msadad\">10.9.1 Administrative Information</a><a class=\"breadcrumb\" href=\"p5.xml?id=msrh#msrh\">10.9.1.1 Record History</a>","content":"\n10.9.1.1 Record History\nThe recordHist element may contain simply a series of paragraphs.\nAlternatively it may contain a source element, followed by an optional\nseries of change elements. \n<source> describes the original source for the information contained with a manuscript or object description.\n<change> documents a change or set of changes made during the production\n    of a source document, or during the revision of an electronic file.\n\nThe source element is used to document the primary source of\ninformation for the record containing it, in a similar way to the standard TEI\nsourceDesc element within a TEI Header. If the record is a new one,\nmade without reference to anything other than the manuscript itself, then it may\nsimply contain a p element, as in the following example:\nbibliography\n\nFrequently, however, the record will be derived from some previously existing\ndescription, which may be specified using the standard TEI bibl\nelement, as in the following example:\nbibliography\n\nIf, as is likely, a full bibliographic description of the source from which\ncataloguing information was taken is included within the listBibl\nelement contained by the current additional element, or elsewhere in\nthe current document, then it need not be repeated here. Instead, it should be\nreferenced using the standard TEI ref element, as in the following\nexample:\nbibliography\n\nThe change element may also appear within the revisionDesc\nelement of the standard TEI header; its use here is intended to signal the\nsimilarity of function between the two container elements. Where the TEI header\nshould be used to document the revision history of the whole electronic file to\nwhich it is prefixed, the recordHist element may be used to document\nchanges at a lower level, relating to the individual description, as in the\nfollowing example:\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msad#msad\">10.9 Additional Information</a><a class=\"breadcrumb\" href=\"p5.xml?id=msadad#msadad\">10.9.1 Administrative Information</a><a class=\"breadcrumb\" href=\"p5.xml?id=msadch#msadch\">10.9.1.2 Availability and Custodial History</a>","content":"\n10.9.1.2 Availability and Custodial History\nThe availability element is another element also available in the\nTEI header, which should be used here to supply any information concerning\naccess to the current manuscript, such as its physical location (where this is\nnot implicit in its identifier), any restrictions on access, information about\ncopyright, etc.\nbibliography\n\nThe custodialHist record is used to describe the custodial history\nof a manuscript, recording any significant events noted during the period that\nit has been located within its holding institution. It may contain either a\nseries of p elements, or a series of custEvent elements, each\ndescribing a distinct incident or event, further specified by a type\nattribute, and carrying dating information by virtue of its membership in the\natt.datable class, as noted above. \n<custEvent> describes a single event during the custodial history of a manuscript or other object.\n\nHere is an example of the use of this element:\nbibliography\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msad#msad\">10.9 Additional Information</a><a class=\"breadcrumb\" href=\"p5.xml?id=msadsu#msadsu\">10.9.2 Surrogates</a>","content":"\n10.9.2 Surrogates\nThe surrogates element is used to provide information about\nrepresentations such as photographs or other representations of the manuscript\nwhich may exist within the holding institution or elsewhere. \n<surrogates> contains information about any representations of the manuscript or other object being described which\nmay exist in the holding institution or elsewhere.\n\nThe surrogates element should not be used to repeat information\nabout representations of the manuscript available within published works; this\nshould normally be documented within the listBibl element within the\nadditional element. However, it is often also convenient to record\ninformation such as negative numbers or digital identifiers for unpublished\ncollections of manuscript images maintained within the holding institution, as\nwell as to provide more detailed descriptive information about the surrogate\nitself. Such information may be provided as prose paragraphs, within which\nidentifying information about particular surrogates may be presented using the\nstandard TEI bibl element, as in the following example:\nbibliography\n Note the use of the specialized form of title (general material\ndesignation) to specify the kind of surrogate being documented.\nAt a later revision, the content of the surrogates element is likely\nto be expanded to include elements more specifically intended to provide\ndetailed information such as technical details of the process by which a digital\nor photographic image was made. For information about the inclusion of digital\nfacsimile images within a TEI document, refer also to 11.1 Digital Facsimiles. \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=mspt#mspt\">10.10 Manuscript Parts</a>","content":"\n10.10 Manuscript Parts\nThe msPart element may be used in cases where manuscripts or parts\nof manuscripts that were originally physically separate have been bound together\nand/or share the same call number. \n<msPart> contains information about an originally\n    distinct manuscript or part of a manuscript, which is now part of a composite manuscript.\n\nSince each component of such a composite manuscript will in all likelihood\nhave its own content, physical description, history, and so on, the structure of\nmsPart is in the main identical to that of msDesc, allowing\none to retain the top level of identity (msIdentifier), but to branch\nout thereafter into as many parts, or even subparts, as necessary. \n\n\n\n\n\nbibliography\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=msfg#msfg\">10.11 Manuscript Fragments</a>","content":"\n10.11 Manuscript Fragments\nThe msFrag element may be used inside msDesc when encoding\none or more fragments of a scattered or fragmented manuscript. The fragment(s)\ndescribed in a single msDesc element may be held either at several\ninstitutions or at a single institution, so different call numbers may be\nattached to the fragments. Inside the msFrag element, information about\nthe single fragment or each dispersed part is provided: e.g. the current\nshelfmark or call number, the labels of the range of folios concerned if the\nfragment currently forms part of a larger manuscript, dimensions, extent, title,\nauthor, annotations, illuminations and so on. \n<msFrag> contains information about a fragment described in relation to a prior context, typically as a description of a virtual reconstruction of a manuscript or other object whose fragments were catalogued separately\n\nOne well-known example of fragmentation is the Old Church Slavonic manuscript\nknown as Codex Suprasliensis, substantial parts of which are to\nbe found in three separate repositories, in Ljubljana, Warsaw, and St.\nPetersburg. This manuscript should be represented using one single\nmsDesc element in which msName is used to identify the\nfragmented manuscript, along with three distinct msFrag elements, each\nof which contains the current identifier of one of the fragments, a physical\ndescription, and other related information:\nbibliography\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=MS#MS\">10 Manuscript Description</a><a class=\"breadcrumb\" href=\"p5.xml?id=MSref#MSref\">10.12 Module for Manuscript Description</a>","content":"\n  10.12 Module for Manuscript Description\n  The module described in this chapter makes available the following\n  components:\n  \n    Manuscript Description\n    Manuscript Description\n    \n    \n    \n    \n    \n  \n  The selection and combination of modules to form a TEI schema is\n  described in 1.2 Defining a TEI Schema.\n  \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a>","content":"\n   11 Representation of Primary Sources\n\n   This chapter describes elements that may be used to represent primary source materials,\n      such as manuscripts, printed books, ephemera, or other textual  documents. Some of these specialized elements,\n      particularly at phrase-level, add to the other elements available within text\n      to deal with textual phenomena more specific to primary source transcription. \n      Other structural and block-level elements described here can be used to represent primary\n      source materials by prioritizing the encoding of their spatial features over their logical\n      textual structure (that is, the elements described in chapter 4 Default Text Structure). \n      These elements, facsimile, sourceDoc, and their children, may be used in \n      parallel and in combination with an encoding of logical text structures with text,\n      or as standalone representations. The element sourceDoc in particular provides a way\n      of combining facsimile and transcriptions by embedding transcribed text. This approach focuses\n      on physical and textual features that can be primarily described spatially, such as the sequence\n      of pages in a manuscript, or the layout of a printed page. This is not meant to be the only way\n      of transcribing primary sources in TEI, or even a preferred way; which approach is more appropriate\n      will depend on the specific needs of your project.\n \n   Although this chapter discusses manuscript materials more frequently than other forms of written text,\n      most of the recommendations presented are equally applicable to facsimiles of a wide variety of media,\n      including printed matter, monumental inscriptions, and art. Each medium has its own vocabulary of agents.\n      In the following examples, terms such as scribe, author, editor,\n      annotator or corrector may be re-interpreted in terms \n      more appropriate to the medium being transcribed. In printed material, for example, the compositor plays a role analogous to the scribe, while in an authorial manuscript, the author and the scribe are the same person.\n   \n   This module may be used in conjunction with other modules. These recommendations are not intended to meet every transcriptional circumstance likely to be faced by any scholar. They are intended rather as a base to enable encoding of the most common phenomena found in the course of scholarly transcription of primary source materials. These guidelines do not address the encoding of physical description of textual witnesses: the materials of the carrier, the medium of the inscribing implement, the organisation of the carrier materials themselves (such as quiring, collation), authorial instructions or scribal markup, etc., except insofar as these are involved in the broader question of manuscript description, as addressed by the msdescription module described in chapter 10 Manuscript Description. \n   \n   This chapter begins by describing elements for handling digitally-encoded images of primary source materials for the purpose of creating digital facsimiles using the facsimile element (11.1 Digital Facsimiles).\n   The next section (11.2 Combining Transcription with Facsimile) describes two ways of combining a facsimile images with a transcription; either by referencing a parallel transcription in text, or by providing an embedded transcription that prioritizes the encoding of a resource’s spatial features via the sourceDoc element and a number of transcriptional elements. \n   Section 11.3 Scope of Transcriptions documents elements that support scholars in recording information about specific features of the text written on its physical carrier, such as 11.3.1 Altered, Corrected, and Erroneous Texts and 11.3.2 Hands and Responsibility\n   Section 11.4 Aspects of Layout describes how complex page layouts may be represented.\n   Section 11.6 Headers, Footers, and Similar Matter introduces the element fw (forme work) for encoding material repeated from page to page that falls outside the stream of the text.\n   Section 11.7 Identifying Changes and Revisions describes how to document changes made during the production or revision of a primary source.\n   The chapter concludes with a technical overview of the structure and organization of the module described here. Some elements from other chapters are recontexualized for situations involving the transcription of primary source materials, whether within text or sourceDoc. Therefore, this overview should be read in conjunction with chapters 3 Elements Available in All TEI Documents and 5 Characters, Glyphs, and Writing Modes.   \n\n   \n   \n\n   \n   \n   \n   \n   \n   \n   \n   \n\n\n\n   \n\n\n\n   \n\n   \n "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHFAX#PHFAX\">11.1 Digital Facsimiles</a>","content":"\n\n      11.1 Digital Facsimiles\n\n      A common approach in the TEI to representing pre-existing sources involves transcribing or otherwise converting sources into character form before marking them up. However, it is also a common practice to make a different form of\n            digital text that is instead composed of digital images of the\n         original source, typically one per page, or other written surface. We call such a resource\n         a digital facsimile. A digital facsimile may, in the simplest case, just\n         consist of a collection of images, with some metadata to identify them and the source\n         materials portrayed. It may sometimes contain a variety of images of the same source pages,\n         perhaps of different resolutions, or of different kinds. Such a collection may form part of\n         any kind of document, for example a commentary of a codicological or paleographic nature,\n         where there is a need to align explanatory text with image data. It may also be\n         complemented by a transcribed or encoded version of the original source, which may be\n         linked to the page images or embedded as discussed in 11.2 Combining Transcription with Facsimile.\n         In this section we present elements designed to support these\n         various possibilities and discuss the associated mechanisms provided by these\n         Guidelines.\n\n\n      When this module is included in a schema, the class att.global\n         is extended to include two new pointer attributes, facs and change: \n            <att.global.facs> provides attributes used to express correspondence between an element and all or part of a facsimile image or surface.\n            <att.global.change> provides attributes allowing its member\nelements to specify one or more states or revision campaigns with which they are\nassociated.\n          The change attribute is discussed further below in section 11.7 Identifying Changes and Revisions. The facs attribute is used to associate any element\n         in a transcription with an image of the corresponding part of the source, by means of the\n         usual URI pointing mechanism. \n      \n\n      In the simple case where a digital text is composed of page images, the facs\n         attribute on the pb element may be used to associate each image with an\n         appropriate point in the text:  By convention, this encoding indicates that the image indicated by the\n            facs attribute represents the whole of the text following the pb\n         (page beginning) element, up to the next pb element. Any convenient milestone element\n         (see further 3.11.3 Milestone\nElements) could be used in the same way; for example if the\n         images represent individual columns, the cb element might be used. Though simple,\n         this method has some drawbacks. It does not scale well to more complex cases where, for\n         example, the images do not correspond exactly with transcribed pages, or where the\n         intention is to align specific marked up elements with detailed images, or parts of images.\n         The management of information about the images may become more difficult if references to\n         them are scattered through many files rather than being concentrated in a single\n         identifiable location. Nevertheless, this solution may be adequate for many straightforward\n            digital library applications. \n\n      The recommended approach to encoding facsimiles is instead to use the facs\n         attribute in conjunction with the elements facsimile or sourceDoc, and\n         the elements surface, surfaceGrp, and zone, which are also\n         provided by this module. These elements make it possible to accommodate multiple images of\n         each page, as well as to record the position and relative size of elements identified on\n         any kind of written surface and to link such elements with digital facsimile images of\n         them. Typical applications include the provision of full text search in digital\n            facsimile editions, and ways of annotating graphics, for example so as to\n         identify individuals appearing in group portraits and link them to data about the people\n         represented. \n\n      The following elements are available to represent components of a digital facsimile: \n            <facsimile> contains a representation of some written source in the form of\na set of images rather than as transcribed or encoded text.\n            <sourceDoc>  contains a transcription or other representation of a single\n source document potentially forming part of a dossier\n génétique or collection of sources.\n            <surface> defines a written surface as a two-dimensional \ncoordinate space, optionally grouping one or more graphic representations of\nthat space, zones of interest within that space, and transcriptions of the\n  writing within them.\n            <surfaceGrp> defines any kind of useful grouping of written surfaces, for\n  example the recto and verso of a single leaf, which the encoder\n  wishes to treat as a single unit.\n            <zone> defines any two-dimensional area within a surface\nelement.\n            <path> defines any line passing through two or more points within a surface\nelement.\n         \n      \n\n      Either of the facsimile or sourceDoc elements may be used to represent a\n         digital facsimile. Either may appear within a TEI document along with, or instead of, the\n         text element introduced in section 4 Default Text Structure. The sourceDoc element\n         is used when a digital facsimile contains a transcription that prioritizes the encoding of the spatial features and layout of a text document over the text’s logical textual structure; the text element\n         should be used when it contains a textual transcription focused on its logical features.\n         When the digital facsimile contains only images,\n         however, only facsimile elements should be used. In this section, we first discuss the\n         simpler case, returning to the use of the sourceDoc element in section 11.2 Combining Transcription with Facsimile below. When this module is selected therefore, a legal TEI\n         document may thus comprise any of the following: a TEI header and a text elementa TEI header and a facsimile elementa TEI header and a sourceDoc elementa TEI header, a facsimile element, and a text elementa TEI header, one or more sourceDoc or facsimile elements, and a text\n               element\n      \n      Like the text element, a facsimile element may also contain an optional\n            front or back element, used in the same way as described in sections\n            4.5 Front Matter and 4.7 Back Matter. \n\n      In the simplest case, a facsimile just contains a series of graphic elements, each\n         of which identifies an image file:  If desired, the binaryObject element described in 3.10 Graphics and Other Non-textual Components\n         (or any other element from the model.graphicLike class) can be\n         used instead of a graphic.\n\n      In this simple case, the four page images are understood to represent the complete\n         facsimile, and are to be read in the sequence given. Suppose, however, that the second page\n         of this particular work is available both as an ordinary photograph and as an infra-red\n         image, or in two different resolutions. The surface element may be used to group\n         the two image files, since these correspond with the same area of the work: \n      \n\n      The surface element provides a way of indicating that the two images of page2\n         represent the same surface within the source material. A surface might be one\n         side of a piece of paper or parchment, an opening in a codex treated as a single surface by\n         the writer, a face of a monument, a billboard, a membrane of a scroll, or indeed any\n         two-dimensional surface, of any size. \n\n      The surfaceGrp element may be used to indicate that two (or more) surfaces are\n         associated in some way, for example because they represent the recto and verso of the same\n         leaf, as in this example:  The surfaceGrp element may also be useful as a means of identifying other\n         groups of written surfaces, such as adjacent faces of a monument, or gatherings of leaves. \n\n      Simply grouping related graphics is not however the main purpose of the surface\n         element: rather it is to help identify the location and size of the various two-dimensional\n         spaces constituting the digital facsimile. Note that the actual dimensions of the object\n         represented are not provided by the surface element ; rather, the surface\n         element defines an abstract coordinate space which may be used to address parts of the\n         image. Four attributes supplied by the att.coordinated class\n         are used to define this space. \n         \n            <att.coordinated> provides attributes that can be used to position their parent \n    element within a two dimensional coordinate system.\n         \n      \n       By default, the same coordinate space is used for a surface and for all of its\n         child elements.1 It may\n         be most convenient to derive a coordinate space from a digital image of the surface in\n         question such that each pixel in the image corresponds with a whole number of units\n         (typically 1) in the coordinate space. In other cases it may be more convenient to use\n         units such as millimetres. Neither practice implies any specific mapping between the\n         coordinate system used and the actual dimensions of the physical object represented. \n\n      A surface element can contain one or more zone elements, each of which\n         represents a region or bounding box defined in terms of the same coordinate\n         space as that of its parent surface element. A zone may be rectangular or\n         non-rectangular: a rectangular zone is defined by a sequence of four coordinates in the\n         same way as a surface; a non-rectangular zone is defined using the attribute\n            points, which provides a sequence of coordinates, each of which specifies a\n         point on the perimeter of the zone.2\n      A zone may be used to define any region of interest, such as a detail or illustration, or\n         some part of the surface which is to be aligned with a particular text element, or\n         otherwise distinguished from the rest of the surface. A surface establishes a coordinate\n         system which may be used to address parts or the whole of some digital representation of a\n         written surface. A zone, by contrast, defines any arbitrary area of interest relative to\n         that surface, using the same coordinate system. It might be bigger or smaller than its\n         parent surface, or might overlap its boundaries. The only constraint is that it must be\n         defined using the same coordinate system. \n\n      When an image of some kind is supplied within either a zone or a surface, the implication\n         is that the image represents the whole of the zone or surface concerned. In the simple case\n         therefore, we might imagine a surface defining a page, within which there is a graphic\n         representing the whole of that page, and a number of zones defining parts of the page, each\n         with its own graphic, each representing a part of the page. If however one of those\n         graphics actually represents an area larger than the page (for example to include a binding\n         or the surface of a desk on which the page rests), then it will be enclosed by a zone with\n         coordinates larger than those of the parent surface. \n\n\n      For example, consider the following figure:  This is an image of a two page spread from a manuscript in the Badische\n         Landesbibliothek, Karlsruhe. We have no information as to the dimensions of the original\n         object, but the low resolution image displayed here contains 500 pixels horizontally and\n         321 pixels vertically. For convenience, we might map each pixel to one cell of the\n         coordinate space.3\n      \n\n      We therefore define a surface element corresponding with the area of the image\n         which represents the whole of the two page spread and embed the graphic within it: \n\n\n\n      If desired, the binaryObject element described in 3.10 Graphics and Other Non-textual Components (or any\n         other element from the model.graphicLike class) may be used\n         instead of a graphic element.\n\n      Since the image in this example is of a two page opening, we will probably wish to define\n         at least two nested zones, one for each page: \n      As this example shows, in addition to acting as a container for graphic elements,\n            zone elements may be used to identify parts of a surface for analytical\n         purposes. \n      The relationship between zone and surface can be quite complex: for example, it may be\n         appropriate to treat the whole of a two page spread as a single written surface, perhaps\n         because particular written zones span both pages. A zone may contain a nested surface, if\n         for example a page has an additional scrap of paper attached to it. A zone may be of any\n         shape, not simply rectangular. Discussion of these and other cases are provided in section\n            11.2.2.1 Advanced Uses of surface and zone below. \n\n\n      In the following extended example, we discuss a hypothetical digital edition of an early\n         16th century French work, Charles de Bovelles' Géometrie Pratique.4 In\n         this edition, each page has been digitized as a separate file: for example, recto page 49\n         is stored in a file called Bovelles-49r.png. In the\n            facsimile element used to contain the whole set of pages, we define a\n            surface element for this page, which we situate within a coordinate scale\n         running from 0 to 200 in the x (horizontal) axis, and 0 to 300 in the y (vertical) axis.\n         The surface element contains a graphic element which represents the whole\n         of this surface:  We can now identify distinct zones within the page image using the\n         coordinate scale defined for the surface. In the following figure 1 Detail of p 49r from Bovelles Géometrie Pratique we show the upper part of the page, with boxes indicating four such zones. Each of these\n         will be represented by a zone element, given within the surface element\n         already defined, and specified in terms of the same coordinate system. Some zones of\n         interest are indicated by red lines in the following image.  The following encoding defines each of the four zones identified in the figure\n         above.  Note that the location of each zone is defined independently but\n         using the same coordinate system.\n\n      A non rectangular-zone, for example that containing the word cloche.\n         at bottom left of the page, could also be defined, using the points attribute:\n            \n      \n\n\n      In the examples above a single graphic element has been associated directly with the\n         surface of the page rather than nesting it within a zone. However, it is also possible to\n         include multiple zone elements which contain a graphic element, if for\n         example a detailed image is available. Since all zone elements use the same\n         coordinate system (that defined by their parent surface), there is no need to\n         demonstrate enclosure of one zone within another by means of nesting. To continue the\n         current example, supposing that we have an additional image called \n         Bovelles49r-detail.png containing an additional image of the figure in the\n         third zone above, we might encode that zone as follows: \n      \n      \n      \n      Within a surface or zone, individual lines can be identified using the \n         path element, which also carries the points\n         attribute:\n         \n         bibliography\n         \n         This is useful for linking an annotation or explanation to a specific line on\n         an object surface. Any number of coordinates can be included to specify lines \n         which are not straight; this example shows how the first of the famous \n         story lines appearing at the beginning of chapter 40 of \n         Tristram Shandy might be encoded:\n         \n         \n         bibliography\n         \n      \n\n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PH-transcr#PH-transcr\">11.2 Combining Transcription with Facsimile</a>","content":"\n      11.2 Combining Transcription with Facsimile\n\n      A digitized source document may contain nothing more than page images and a small amount of\n         metadata. It may also contain an encoded transcription of the pages represented, which may\n         either be embedded within a sourceDoc element, or supplied in parallel with\n         a facsimile as defined above.\n      If the transcription is regarded as a text in its own right, organized and structured\n         independently of its physical realization in the document or documents represented by the\n         facsimile, then the recommended practice is to use the text element to contain\n         such a structured representation, and to present it in parallel. The text element\n         is a sibling of the facsimile and sourceDoc elements. This approach is\n         illustrated in section 11.2.1 Parallel Transcription below. Alternatively, if the transcription\n         is intended not to prioritize representation of the final text so much as the process by\n         which the document came to take its present form, or the physical disposition of its\n         component parts,  it can be presented as an embedded transcription, as further described \n         in section 11.2.2 Embedded Transcription below.\n      \n\n      \n\n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PH-transcr#PH-transcr\">11.2 Combining Transcription with Facsimile</a><a class=\"breadcrumb\" href=\"p5.xml?id=PH-bov#PH-bov\">11.2.1 Parallel Transcription</a>","content":"\n         11.2.1 Parallel Transcription\n\n         Suppose now that we wish to align a transcription of the page discussed in the preceding\n            section with particular zones. We begin by giving each relevant part of the facsimile an\n            identifier:  The alignment between transcription and image is made, as usual,\n            by means of the facs attribute: bibliography\n         \n\n         It is also possible to point in the other direction, from a surface or\n               zone to the corresponding text. This is the function of the start\n            attribute, which supplies the identifier of the element containing at least the start of\n            the transcribed text found within the surface or zone concerned. Thus, another way of\n            linking this page with its transcription would be simply bibliography\n\n         \n\n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PH-transcr#PH-transcr\">11.2 Combining Transcription with Facsimile</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHZLAB#PHZLAB\">11.2.2 Embedded Transcription</a>","content":"\n         11.2.2 Embedded Transcription\n         An embedded transcription is one in which words and other written traces\n            are encoded as subcomponents of elements representing the physical surfaces carrying\n            them rather than independently of them. \n         The following elements are available for this purpose: \n               <sourceDoc>  contains a transcription or other representation of a single\n source document potentially forming part of a dossier\n génétique or collection of sources.\n               <surface> defines a written surface as a two-dimensional \ncoordinate space, optionally grouping one or more graphic representations of\nthat space, zones of interest within that space, and transcriptions of the\n  writing within them.\n               <zone> defines any two-dimensional area within a surface\nelement.\n               \n               <line> contains the transcription of a topographic line in the source\n   document\n               <seg> represents any segmentation of text below the chunk level.\n            \n         \n\n         The elements surface, surfaceGrp, and zone were introduced\n            above in section 11.1 Digital Facsimiles. When supplied within a sourceDoc\n            element, these elements may contain transcriptions of the written content of a source in\n            addition to or as an alternative to digital images of them. Such transcription may be\n            placed directly within the zone element, or within one or more line\n            elements, for cases where the writing is linear, in the sense that it is composed of\n            discrete tokens organized physically into groups, typically organized in a sequence\n            corresponding with the way they are intended to be read. Depending on the directionality\n            of the writing system used, this might be any combination of top-down and left to right,\n            or vice versa. The element line may be used to hold a complete group of such\n            tokens. Where, however, the lineation is not considered significant, any group of tokens\n            may be indicated using the zone element. The seg element described in\n            section 16.3 Blocks, Segments, and Anchors may also be used to indicate smaller sequences of tokens\n            within zone, or line as appropriate. \n\n         Returning to the preceding example, we might transcribe the content of the zone to which\n            we gave the identifier B49rPara2 within a sourceDoc element as\n            follows: \n         bibliography\n         As mentioned above, some or all of the written surfaces being transcribed may be\n            composed of physically distinct scraps. In the following example, taken from the Walt\n            Whitman Archive, two pieces of newsprint have been glued to a piece of blue paper on\n            which a poem is being drafted:  The two pieces of newsprint might simply be regarded as special kinds of zone,\n            but they are also new surfaces, since they might contain additional written zones\n            themselves (such as the numbers in this case). \n\n         Using these elements, the Whitman draft above might be encoded as follows: bibliography\n         \n\n         The metamark element used in this example is further discussed below (11.3.4.2 Metamarks)\n\n         Note that in this example we have not included any graphic element\n            corresponding with the zone or surface elements identified in the\n            transcription. The encoder may choose to complement a transcription with graphic\n            representations of its source at whatever level is considered effective, or not at all.\n            Equally, the encoder may choose to provide only graphics without any transcription, to\n            provide only a structured (non-embedded) transcription, or to provide any combination of\n            the three. \n         This example also lacks any coordinate information to specify either the size of the two\n            newspaper fragments or whereabouts on the parent surface element they are to be\n            found, other than the reading order implicit in their sequence. Such information could\n            be added if desired by specifying a coordinate system on the outermost surface\n            element, and then indicating values within that system for each of the two fragments, as\n            was discussed above. We discuss this in further detail in section 11.2.2.1 Advanced Uses of surface and zone below. \n         \n         \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PH-transcr#PH-transcr\">11.2 Combining Transcription with Facsimile</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHZLAB#PHZLAB\">11.2.2 Embedded Transcription</a><a class=\"breadcrumb\" href=\"p5.xml?id=PH-surfzone#PH-surfzone\">11.2.2.1 Advanced Uses of surface and zone</a>","content":"\n            11.2.2.1 Advanced Uses of surface and zone\n            \n            As a child of sourceDoc, the surface element both identifies a specific area\n               containing writing and provides a two dimensional set of coordinates which can be used to position\n               and define dimensions for sub-parts of it. Furthermore, surfaces may nest within other\n               surfaces, as in the case of patches or other written materials attached to the main\n               writing surface. In the general case, the position and dimensions of such nested surfaces\n               will be defined using the same coordinate system as that supplied by the parent\n               surface element. It is also possible, however, that a different coordinate\n               system is required for such a nested surface, perhaps because it requires a more complex\n               granularity. We consider both possibilities.\n            \n            In the earlier examples showing nested examples we did not provide any coordinate\n               information, for simplicity of presentation. Suppose however, that we wish to indicate the\n               position and sizes of the newspaper scraps in 1 Single leaf of notes possibly related to the poem eventually titled\n                  Sleepers. From the Walt Whitman Archive (Duke 258).  above, relative to\n               the whole page. As previously noted, the four attributes ulx, uly,\n               lrx and lry when given on the surface element define the\n               coordinate scheme, rather than specifying the location of that surface. We must therefore\n               introduce an additional zone element, as in the following revised encoding for\n               this example bibliography In this version of the encoding, the inner surface, corresponding\n               with the first piece of newsprint, inherits locational information from the zone\n               element that contains it. This zone, and the preceding one, which contains a sequence of\n               line elements, are both positioned in terms of the coordinates specified on the\n               outermost surface element, which defines a scale running from 0 to 50 in either\n               direction. On that scale, the line elements occupy a rectangle with coordinates\n               (1,1,10,10), while the nested surface occupies a rectangle with coordinates\n               (4,4,20,20).\n            Now suppose that we wish to define a finer scale grid for the newspaper patch, perhaps\n               because we wish to localize zones within it with greater accuracy. To do this we will need\n               to specify the position of the nested surface as in the previous example, but also to\n               define the new coordinate system. We accomplish this as follows: bibliography As before, the second zone defines the position and size of the\n               newspaper patch itself in terms of a coordinate system running from 0 to 50 on both X and Y\n               axes. The nested surface element however defines a new scale for all of its\n               components, running from 0 to 100 on both X and Y axes. The position of the nested zone\n               containing the text Spring ... steamer is now given in terms of this\n               scale.\n            \n            All of the examples so far given have involved rectangular zones, for clarity of\n               exposition. As noted above, the points attribute may be used to define\n               non-rectangular zones as a series of points. For example, in the last of the Whitman\n               examples discussed in section 11.3.4.2 Metamarks above, we might wish to record the\n               exact shape of the zone containing the metamark Entered. Since this\n               is not a rectangular zone, we use the points attribute to indicate the points\n               defining a polygon which contains it. The values used are expressed in terms of a\n               coordinate space running from 0 to 229 in the X dimension, and 0 to 160 in the Y dimension. \n            \n            \n            \n            In exactly the same way, we may wish to identify the curved zone in the following image\n               containing the word Northamptonshire:  This curved zone might be encoded in the following way: \n            \n            Finally, it should be noted that a zone does not need to be entirely contained\n               within the two-dimensional space defined by its parent surface. For example, we might wish\n               to encode the example in 1 Badische Landesbibliothek, Manuscript Durlach 1, Fols. 95v-96r  above not as a surface representing the\n               whole of the two page spread, but as a surface representing only the written part of this\n               opening. The written part appears 50 units from the left of the image and 20 units from the\n               top, while the bottom right corner of the written part appears 400 units from the left of\n               the image, and 280 units from the top. We therefore define the written surface within this\n               image as follows:  To describe the whole image, we will now need to define a zone of\n               interest which represents an area larger than this surface. Using the same coordinate\n               system as that defined for the surface, its coordinates are 0,0,500,321. This\n               zone of interest can be defined by a zone element, within which we can place the\n               uncropped graphic: \n            \n            \n         "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a>","content":"\n      11.3 Scope of Transcriptions\n\n      When transcribing a primary source, whether using text or sourceDoc,\n         scholars may wish to record information concerning\n         individual readings of letters, words, or larger units.They\n         may also wish to include other editorial material, such as comments on the status or\n         possible origin of particular readings, corrections, or text supplied to fill lacunae. \n\n      Such elements may also be used for digital transcriptions in which the object is not to\n         represent a finished text, but rather to represent the creative process, as evidenced by\n         different layers or traces of writing in one or more documents.\n         Transcriptions of this kind are closely focussed on the physical appearance of specific\n         documents, needing to distinguish the traces of different writing activities on them, such\n         as additions and deletions but also other indications of how the writing is to be read,\n         such as indications of transposition, re-affirmation of writing which has been deleted, and\n         so on. Such distinctions are considered of particular importance when dealing with\n         authorial manuscripts, but are also relevant in the case of historical sources such as\n         charters or other legal documents.\n\n      In either case, it is customary in transcriptions to register certain features of the\n         source, such as ornamentation, underlining, deletion, areas of damage and lacunae. This\n         chapter provides ways of encoding such information: methods of recording editorial or other alterations to the text, such as expansion\n               of abbreviations, corrections, conjectures, etc. (section 11.3.1 Altered, Corrected, and Erroneous Texts)methods of describing important extra-linguistic phenomena in the source: unusual\n               spaces, lines, page and line breaks, changes of manuscript hand, etc. (section 11.3.2 Hands and Responsibility)methods of representing aspects of layout such as spacing or lines 11.4 Aspects of Layout\n            methods of representing material such as running heads, catch-words, and the like\n               (section 11.6 Headers, Footers, and Similar Matter)\n\n\n      The remainder of this chapter describes a model for encoding such transcriptions, in which\n         elements such as mod, del, etc. are used to mark writing traces and their\n         functions within the document. Each such element can be assigned to one or more\n         editorially-defined modification groups, termed a change, by means of a global\n            change attribute, which references a definition for the modification group\n         concerned, typically provided within the TEI header creation element; see further\n            11.7 Identifying Changes and Revisions. The transcription itself may be embedded within the\n         elements surface and zone described in section 11.1 Digital Facsimiles, or\n         provided in parallel within a text element. Within a zone, the\n         transcription may be organized topographically in terms of lines of writing, using the\n            line element, or in terms of further nested zones, or as a combination of the\n         two (11.2.2 Embedded Transcription). \n\n\n\n      These recommendations are not intended to meet every transcriptional circumstance likely to\n         be faced by any scholar. Rather, they should be regarded as a base which can be elaborated\n         if necessary by different scholars in different disciplines \n      \n\n      As a rule, all elements which may be used in the course of a transcription of a single\n         witness may also be used in a critical apparatus, i.e. within the elements proposed in\n         chapter 12 Critical Apparatus. This can generally be achieved by nesting a particular reading\n         containing tagged elements from a particular witness within the rdg element in an\n            app structure. \n      Just as a critical apparatus may contain transcriptional elements within its record of\n         variant readings in various witnesses, one may record variant readings in an individual\n         witness by use of the apparatus mechanisms app and rdg. This is discussed\n         in section 12.3 Using Apparatus Elements in Transcriptions. \n\n      \n\n      \n\n      \n\n\n      \n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHCH#PHCH\">11.3.1 Altered, Corrected, and Erroneous Texts</a>","content":"\n         11.3.1 Altered, Corrected, and Erroneous Texts\n\n         In the detailed transcription of any source, it may prove necessary to record various\n            types of actual or potential alteration of the text: expansion of abbreviations,\n            correction of the text (either by author, scribe, or later hand, or by previous or\n            current editors or scholars), addition, deletion, or substitution of material, and\n            similar matters. The sections below describe how such phenomena may be encoded using\n            either elements defined in the core module (defined in chapter 3 Elements Available in All TEI Documents) or\n            specialized elements available only when the module described in this chapter is\n            available.\n\n         \n\n         \n\n\n         \n\n         \n\n         \n\n         \n\n         \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHCH#PHCH\">11.3.1 Altered, Corrected, and Erroneous Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHCO#PHCO\">11.3.1.1 Core Elements for Transcriptional Work</a>","content":"\n            11.3.1.1 Core Elements for Transcriptional Work\n            In transcribing individual sources of any type, encoders may record corrections,\n               normalizations, additions, and omissions using the elements described in section 3.5 Simple Editorial Changes. Representation of abbreviations and their expansions may also\n               involve use of elements described in section 3.6 Names, Numbers, Dates, Abbreviations, and Addresses. Elements\n               particularly relevant to this chapter include: \n                  <abbr> contains an abbreviation of any sort.\n                  <add> contains letters, words, or phrases inserted in the source\n  text by an author, scribe, or a previous annotator or corrector.\n                  <choice> groups a number of alternative encodings for the same point in\n        a text.\n                  <corr> contains the correct form of a passage apparently erroneous in the copy text.\n                  <del> contains a letter, word, or passage deleted, marked as deleted, or otherwise indicated as\n    superfluous or spurious in the copy text by an author, scribe, or a previous annotator or corrector.\n                  <expan> contains the expansion of an abbreviation.\n                  <gap> indicates a point where material has been omitted in a transcription, whether for editorial\n    reasons described in the TEI header, as part of sampling practice, or because the material is\n    illegible, invisible, or inaudible.\n                  <sic> contains text reproduced although apparently incorrect or inaccurate.\n               \n            \n            All of these elements bear additional attributes for specifying who is responsible\n               for the interpretation represented by the markup, and the associated certainty. In\n               addition, some of them bear an attribute allowing the markup to be categorized by\n               type and source. \n                  <att.editLike> provides attributes describing the nature of an encoded scholarly intervention or\n    interpretation of any kind.\n                  <att.global.source> provides attributes used by elements to point to an\n    external source.\n                  <att.global.responsibility> provides attributes indicating the agent\n    responsible for some aspect of the text, the markup or \n    something asserted by the markup, and the degree of certainty \n    associated with it.\n                  <att.typed> provides attributes that can be used to classify or subclassify elements in any way.\n                The specific aspect of the markup described by these attributes differs\n               on different elements; for further discussion, see the relevant sections below,\n               especially section 11.3.2.2 Hand, Responsibility, and Certainty Attributes.\n            The following sections describe how the core elements just named may be used in the\n               transcription of primary source materials. \n         "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHCH#PHCH\">11.3.1 Altered, Corrected, and Erroneous Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHAB#PHAB\">11.3.1.2 Abbreviation and Expansion</a>","content":"\n            11.3.1.2 Abbreviation and Expansion\n\n            The writing of manuscripts by hand lends itself to the use of abbreviation to shorten\n               scribal labour. Commonly occurring letters, groups of letters, words, or even whole\n               phrases, may be represented by significant marks. This phenomenon of manuscript\n               abbreviation is so widespread and so various that no taxonomy of it is here\n               attempted. Instead, methods are shown which allow abbreviations to be encoded using\n               the core elements mentioned above.\n            A manuscript abbreviation may be viewed in two ways. One may transcribe it as a\n               particular sequence of letters or marks upon the page: thus, a p with a bar\n                  through the descender, a superscript hook, a macron. One may\n               also interpret the abbreviation in terms of the letter or letters it is seen as\n               standing for: thus, per, re, n. Both of these views are\n               supported by these Guidelines. \n\n            In many cases the glyph found in the manuscript source also exists in the Unicode\n               character set: for example the common Latin brevigraph ⁊, standing for\n                  et and often known as the Tironian et\n               can be directly represented in any XML document as the Unicode character with code\n               point U+204A (see further 5.7.1 Character References and 6.1 Language Identification). In cases where it does not, these Guidelines recommend use of the g\n               element provided by the gaiji module described in\n               chapter 5 Characters, Glyphs, and Writing Modes. This module allows the encoder great flexibility both in\n               processing and in documenting non-standard characters or glyphs, including the\n               ability to provide detailed documentation and images for them. \n\n            These two methods of coding abbreviation may also be combined. An encoder may record,\n               for any abbreviation, both the sequence of letters or marks which constitutes it, and\n               its sense, that is, the letter or letters for which it is believed to stand. For\n               example, in the following fragment the phrase euery persone is\n               represented by a sequence of abbreviated characters:  These lines may be transcribed directly, using the g element to\n               indicate the two brevigraphs as follows: bibliography Note that in each case the g element may contain a\n               suggested replacement for the referenced brevigraph; this is purely advisory however,\n               and may not be appropriate in all cases. The referenced character definitions may be\n               located elsewhere in this or some other document, typically forming part of a\n                  charDecl element, as described in 5.2 Markup Constructs for Representation of Characters and Glyphs. \n\n            The transcriber may also wish to indicate that, because of the presence of these\n               particular characters, the two words are actually abbreviations, by using the\n                  abbr element: bibliography Alternatively, the\n               transcriber may choose silently to expand these abbreviations, using the\n                  expan element: bibliography And, of course, the choice element\n               can be used to show that one encoding is an alternative for the other: bibliography\n            \n            When abbreviated forms such as these are expanded, two processes are carried out:\n               some characters not present in the abbreviation are added (always), and some\n               characters or glyphs present in the abbreviation are omitted or replaced (often). For\n               example, when the abbreviation Dr. is expanded to\n                  Doctor, the dot in the abbreviation is removed, and the\n               letters octo are added. Where detailed markup of abbreviated\n               words is required, these two aspects may be marked up explicitly, using the following\n               elements: \n                  <ex> contains a sequence of letters added by an editor or\n  transcriber when expanding an abbreviation.\n                  <am> contains a sequence of letters or signs present in an\n  abbreviation which are omitted or replaced in the expanded form of\n  the abbreviation.\n                Using these elements, a transcriber may indicate the status of the\n               individual letters or signs within both the abbreviation and the expansion. The\n                  am element surrounds characters or signs such as tittles or tildes, used\n               to indicate the presence of an abbreviation, which are typically removed or replaced\n               by other characters in the expanded form of the abbreviation: bibliography while the ex\n               element may be used to indicate those characters within the expansion which are not\n               present in the abbreviated form. bibliography The content of the abbr\n               element should usually include the whole of the abbreviated word, while the\n                  expan element should include the whole of its expansion. If this is not\n               considered necessary, the am and ex elements may be used within a\n                  choice element, as in this example: bibliography\n            \n            As implied in the preceding discussion, making decisions about which of these various\n               methods of representing abbreviation to use will form an important part of an\n               encoder's practice. As a rule, the abbr and am elements should be\n               preferred where it is wished to signify that the content of the element is an\n               abbreviation, without necessarily indicating what the abbreviation may stand for. The\n                  ex and expan elements should be used where it is wished to\n               signify that the content of the element is not present in the source but has been\n               supplied by the transcriber, without necessarily indicating the abbreviation used in\n               the original. The decision as to which course of action is appropriate may vary from\n               abbreviation to abbreviation; there is no requirement that the same system be used\n               throughout a transcription, although doing so will generally simplify processing. The\n               choice is likely to be a matter of editorial policy. If the highest priority is to\n               transcribe the text literatim (letter by letter), while indicating\n               the presence of abbreviations, the choice will be to use abbr or am\n               throughout. If the highest priority is to present a reading transcription, while\n               indicating that some letters or words are not actually present in the original, the\n               choice will be to use ex or expan throughout.\n            Further information may be attached to instances of these elements by the\n                  note element, on which see section 3.9 Notes, Annotation, and Indexing, and by use of\n               the resp and cert attributes. In this instance from the English\n                  Brut, a note is attached to an editorial expansion of the tail on\n               the final d of good to goode: bibliography\n                Then the note: bibliography The editor might declare a degree of certainty\n               for this expansion, based on the OED examples, and state the responsibility for the\n               expansion: bibliography The value\n               supplied for the resp attribute should point to the name of the editor\n               responsible for this and possibly other interventions; an appropriate element\n               therefore might be a respStmt element in the header like the following:\n                  bibliography Observe that the cert and resp\n               attributes are used with the ex element only to indicate confidence in the\n               content of the element (i.e. the expansion), and responsibility for suggesting this\n               expansion respectively. \n            The choice element may be used to indicate that the proposed expansion is\n               one way of encoding what might equally well be represented as an abbreviation,\n               represented by the hooked D, as follows: bibliography If it is desired to express aspects of certainty and\n               responsibility for some other aspect of the use of these elements, then the\n               mechanisms discussed in chapter 21 Certainty, Precision, and Responsibility should be used. See also 11.3.2.2 Hand, Responsibility, and Certainty Attributes for discussion of the issues of certainty and responsibility in\n               the context of transcription.\n\n            If more than one expansion for the same abbreviation is to be recorded, multiple\n               notes may be supplied. It may also be appropriate to use the markup for critical\n               apparatus; an example is given in section 12.3 Using Apparatus Elements in Transcriptions.\n         "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHCH#PHCH\">11.3.1 Altered, Corrected, and Erroneous Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHCC#PHCC\">11.3.1.3 Correction and Conjecture</a>","content":"\n            11.3.1.3 Correction and Conjecture\n\n            The sic, corr, and choice elements, defined in the core module should be used to indicate passages deemed in\n               need of correction, or actually corrected, during the transcription of a source. For\n               example, in the manuscript of William James's A Pluralistic Universe\n               as edited by Fredson Bowers (Cambridge: Harvard University Press, 1977), a sentence\n               first written One must have lived longer with this system, to\n                  appreciate its advantages. has been modified by James to begin But One must\n                  ..., without the initial capital O having been reduced to lowercase. This\n               non-standard orthography could be recorded thus: bibliography or corrected: bibliography or the two possibilities might be\n               represented as a choice: bibliography\n            Similarly, in this example from Albertus Magnus, both a manuscript error\n                  angues and its correction augens are\n               registered within a choice element: bibliography\n            \n            Note that the corr element is used to provide a corrected form which is\n                  not present in the source; in the case of a correction made in the\n               source itself, whether scribal, authorial, or by some other hand, the add,\n                  del, and subst elements described in 11.3.1.4 Additions and Deletions\n               should be used.\n            The sic element is used to mark passages considered by the transcriber to be\n               erroneous; in such cases, the corr element indicates the transcriber's\n               correction of them. Where the transcriber considers that one or more words have been\n               erroneously omitted in the original source and corrects this omission, the\n                  supplied element discussed in 11.3.1.7 Text Omitted from or Supplied in the Transcription should be used in\n               preference to corr. Thus, in the following example, from George Moore's\n               draft of additional materials for Memoirs of My Dead Life, the\n               transcriber supplies the word we omitted by the author: bibliography\n            \n            As with expan and abbr, the choice as to whether to record simply\n               that there is an apparent error, or simply that a correction has been applied, or to\n               record both possible readings within a choice element is left to the\n               encoder. The decision is likely to be a matter of editorial policy, which might be\n               applied consistently throughout or decided case by case. If the highest priority is\n               to present an uncorrected transcription while noting perceived errors in the\n               original, the choice will typically be to use only sic throughout. If the\n               highest priority is to present a reading transcription, while indicating that\n               perceived errors in the original have been corrected, the choice will be to use only\n                  corr throughout.\n\n            Further information may be attached to instances of these elements by the\n                  note element and resp and cert attributes.\n               Instances of these elements may also be classified according to any convenient\n               typology using the type attribute. \n            For example, consider the following encoding of an emendation in the Hengwrt\n               manuscript proposed by E. Talbot Donaldson: bibliography The note element discussed in 3.9 Notes, Annotation, and Indexing may be used to\n               give a more detailed discussion of the motivation for or scope of a correction. If\n               linked by means of a pointer (as in this example) it may be located anywhere\n               convenient within the transcription; typically all detailed notes will be collected\n               together in a separate div element in the back. Alternatively, the\n               pointer may be omitted, and the note placed immediately adjacent to the\n               element being annotated. The advantage of the former solution is that it permits the\n               same annotation to refer to several corrections, by supplying more than one pointer\n               in the target attribute of the note, as shown in the example\n               below. \n            The attribute cert may be used to indicate the degree of confidence\n               ascribed by the encoder to the proposed emendation on a broad scale: high, medium, or\n               low. The attribute resp is used to indicate who is responsible for the\n               proposed emendation. Its value is a pointer, which will typically indicate a\n                  respStmt or name element in the header of the transcribed\n               document, but can point anywhere, for example to some online authority file. Using\n               these two attributes, the corr element presented above might usefully be\n               enhanced as follows: bibliography\n\n            As remarked above, where the same annotation applies to several corrections, this may\n               be represented by supplying multiple pointers on the note. Consider for example such\n               corrections as the following, in Dudo of S. Quentin. Parkes cites two cases in this\n               manuscript of the same phenomenon: bibliography which may be\n               described as follows: bibliography\n            \n            The target attribute on the note element indicates the\n                  choice elements which exemplify this kind of scribal error. This\n               necessitates the addition of an identifier to each choice element. However,\n               if the number of corrections is large and the number of notes is small, it may well\n               be both more practical and more appropriate to regard the collection of annotations\n               as constituting a typology and then use the type attribute. Suppose that\n               the note given above is one of half a dozen possible kinds of corrected phenomena\n               identified in a given text; others might include, say, repetition of a word from\n                  the preceding line, etc. The type attribute on the corr\n               element can be used to specify an arbitrary code for the particular kind of\n               correction (or other editorial intervention) identified within it. This code can be\n               chosen freely and is not treated as a pointer. bibliography Note that this encoding\n               might be extended to include a range of possible corrections: bibliography In addition, the conscientious encoder will\n               provide documentation explaining the circumstances in which particular codes are\n               judged appropriate. A suitable location for this might be within the\n                  correction element of the encodingDesc of the header, which\n               might include a list such as the following: bibliography A subtype attribute may be used\n               in conjunction with the type for subclassification purposes: the above\n               examples might thus be represented as choice type=\"substitution\"\n                  subtype=\"graphicResemblance\" for example. \n            For a given project, it may well be desirable to limit the possible values for the\n                  type or subtype attributes automatically. This is easily\n               done but requires customization of the TEI system using techniques described in 23.3 Customization, in particular 23.3.1.3 Modification of Attribute and Attribute Value Lists, which should be consulted\n               for further information on this topic.\n            When making a correction in a source which forms part of a textual tradition attested\n               by many witnesses, a textual editor will sometimes use a reading from one witness to\n               correct the reading of the source text. In the general case, such encoding is best\n               achieved with the mechanisms provided by the module for textual criticism described\n               in chapter 12 Critical Apparatus. However, for simple cases, the source\n               attribute of the corr element may suffice. In the passage from Chaucer's\n                  Wife of Bath's Tale mentioned above, Parkes proposes to emend the\n               problematic word wight to wyf which is\n               the reading found in the Cambridge manuscript Gg.1. 27. This may be simply\n               represented as follows: bibliography The value of the source\n               attribute here is, like the value of the resp attribute, a pointer, in\n               this case indicating the manuscript used as a witness. Elsewhere in the transcribed\n               text, a list of witnesses used in this text will be given, one of which has an\n               identifier Gg. Each witness will be represented either by a\n                  witness element (see 12.1 The Apparatus Entry, Readings, and Witnesses) or more fully by an\n                  msDesc element (see 10 Manuscript Description): bibliography\n            \n\n            The app element described in chapter 12 Critical Apparatus provides a more\n               powerful way of representing all three possible readings in parallel: bibliography\n            This encoding simply records the three readings found in the various traditions, and\n               gives (by means of the wit attribute) an indication of the witnesses\n               supporting each. If the resp attribute were supplied on the rdg\n               element, it would indicate the person responsible for asserting that the manuscript\n               indicated has this reading, who is not necessarily the same as the person responsible\n               for asserting that this reading should be used to correct the others. Editorial\n               intervention elements such as corr can however be nested within a\n                  rdg to provide this additional information: bibliography This encoding asserts that the reading wyf\n               found in Gg is regarded as a correction by Parkes. \n\n            Like the resp attribute, the cert attribute may be used with\n               both corr and rdg elements. When used on the rdg element,\n               these attributes indicate confidence in and responsibility for identifying the\n               reading within the sources specified; when used on the corr element they\n               indicate confidence in and responsibility for the use of the reading to correct the\n               base text. If no other source is indicated (either by the source\n               attribute, or by the wit attribute of a parent rdg), the reading\n               supplied within a corr has been provided by the person indicated by the\n                  resp attribute. \n\n            If it is desired to express certainty of or responsibility for some other aspect of\n               the use of these elements, then the mechanisms discussed in chapter 21 Certainty, Precision, and Responsibility may be found useful. See also 11.3.2.2 Hand, Responsibility, and Certainty Attributes for further discussion of the\n               issues of certainty and responsibility in the context of transcription.\n         "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHCH#PHCH\">11.3.1 Altered, Corrected, and Erroneous Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHAD#PHAD\">11.3.1.4 Additions and Deletions</a>","content":"\n            11.3.1.4 Additions and Deletions\n\n            Additions and deletions observed in a source text may be described using the\n               following elements: \n                  <add> contains letters, words, or phrases inserted in the source\n  text by an author, scribe, or a previous annotator or corrector.\n                  <addSpan> marks the beginning of a longer sequence of text added by an\n  author, scribe, annotator or corrector (see also add).\n                  <del> contains a letter, word, or passage deleted, marked as deleted, or otherwise indicated as\n    superfluous or spurious in the copy text by an author, scribe, or a previous annotator or corrector.\n                  <delSpan> marks the beginning of a longer sequence of text deleted,\nmarked as deleted, or otherwise signaled as superfluous or spurious by an\nauthor, scribe, annotator, or corrector.\n                Of these, add and del are included in the core module,\n               while addSpan and delSpan are available only when using the module\n               defined in this chapter. These particular elements are members of the att.spanning class, from which they inherit the following\n               attribute: \n                  <att.spanning> provides attributes for elements which delimit a span of text by pointing mechanisms rather than by enclosing it.\n               \n            \n\n            Further characteristics of each addition and deletion, such as the hand used, its\n               effect (complete or incomplete, for example), or its position in a sequence of such\n               operations may conveniently be recorded as attributes of these elements, all of which\n               are members of the att.transcriptional class: \n                  <att.transcriptional> provides attributes specific to elements encoding authorial or\n  scribal intervention in a text when\n  transcribing manuscript or similar sources.\n               \n            \n\n\n            As described in section 3.5 Simple Editorial Changes, the add element is used to\n               record any manuscript addition observed in the text, whether it is considered to be\n               authorial or scribal. In the autograph manuscript of Max Beerbohm's The Golden\n                  Drugget, the author's addition of do ever may be\n               recorded as follows, with the hand attribute indicating that the addition\n               was Beerbohm's by referencing a handNote element defined elsewhere in the\n               document (see further 11.3.2.1 Document Hands): bibliography\n            \n\n            The del element is used to record manuscript deletions in a similar way. In\n               the autograph manuscript of D. H. Lawrence's Eloi, Eloi, lama\n                  sabachthani the author's deletion of my may be\n               recorded as follows. In this case, the hand attribute indicating that the\n               deletion was Lawrence's is complemented by a rend attribute indicating\n               that the deletion was by strike-through: bibliography\n\n\n            If deletions are classified systematically, the type attribute may be\n               useful to indicate the classification; when they are classified by the manner in\n               which they were effected, or by their appearance, however, this will lead to a\n               certain arbitrariness in deciding whether to use the type or the\n                  rend attribute to hold the information. In general, it is recommended\n               that the rend attribute be used for description of the appearance or\n               method of deletion, and that the type attribute be reserved for higher\n               level or more abstract classifications.\n\n            The place attribute is also available to indicate the location of an\n               addition. For example, consider the following passage from a draft letter by Robert\n               Graves:  At the end of this extract, the writer inserts the word cant, above\n               the line, with a stroke to indicate insertion. Assuming that we have previously\n               defined the identifier RG somewhere: , this extract might now be encoded as follows: bibliography A little earlier in the same extract,\n               Graves writes for an abridgement above the line, and then deletes it. This may\n               be encoded similarly: bibliography Similarly, in the margin, the word Norton has been added and then\n               deleted: bibliography\n               The word O.E.D. in this first sentence has also clearly been the result of\n               some redrafting: it may be that Graves started to write Oxford, and then\n               changed it; it may be that he inserted other punctuation marks between the letters\n               before replacing them with the centre dots used elsewhere to represent this acronym.\n               We do not deal with these possibilities here, and mention them only to indicate that\n               any encoding of manuscript material of this complexity will need to make decisions\n               about what is and is not worth mentioning. \n\n            \n            \n\n\n            An encoder may also wish to indicate that an addition replaces a specific deletion,\n               that is to encode a substitution as a single intervention in the text. This may be\n               achieved by grouping the addition and deletion together within a subst\n               element. At the end of the passage illustrated above, Graves first writes It is\n                  the expressed..., then deletes It is, and substitutes an uppercase T at\n               the start of the. bibliography The use of this\n               element and of the seq attribute to indicate the order in which\n               interventions such as deletions are believed to have occurred are further discussed\n               in section 11.3.1.5 Substitutions below. \n\n            The add and del elements defined in the core module suffice only\n               for the description of additions and deletions which fit within the structure of the\n               text being transcribed, that is, which each deletion or addition is completely\n               contained by the structural element (paragraph, line, division) within which it\n               occurs. Where this is not the case, for example because an individual addition or\n               deletion involves several distinct structural subdivisions, such as poems or prose\n               items, or otherwise crosses a structural boundary in the text being encoded, special\n               treatment is needed. The addSpan and delSpan elements are provided\n               by this module for that purpose. (For a general discussion of the issue see further\n                  20 Non-hierarchical Structures).\n\n            In this example of the use of addSpan, the insertion by Helgi Ólafsson of a\n               gathering containing four neo-Eddic poems into Lbs 1562 4to is\n               recorded as follows.  A handNote\n               element is first declared, within the header of the document, to associate the\n               identifier heol with Helgi. Each of the added poems is encoded as a\n               distinct div element. In the body of the text, an addSpan element\n               is placed to mark the beginning of the span of added text, and an anchor is\n               used to mark its end. The hand attribute on the addSpan element\n               ascribes responsibility for the addition to the manuscript to Helgi, and the\n                  spanTo attribute points to the end of the added text: bibliography\n            The delSpan element is used in the same way. An authorial manuscript will\n               often contain\n                several\n               occasions where sequences of whole lines are marked for deletion, either by boxes or\n               by being struck out. If the encoder is marking up individual verse lines with the\n                  l element, such deletions are problematic: deletion of two consecutive\n               lines should be regarded as a single deletion, but the del element must be\n               properly nested within a single l element. The delSpan element\n               solves this problem: bibliography\n            \n            It is also often the case that deletions and additions may themselves contain other\n               deletions and additions. For example, in Thomas Moore's autograph of the second\n               version of Lalla Rookh two lines are marked for omission by vertical\n               strike-through. Within the first of the two lines, the word\n                  upon has also been struck out, and the word\n                  over has been added: bibliography In this\n               case the anchor and delSpan have been placed within the structural\n               elements (the ls) rather than between, as in the previous example. This is\n               to indicate that placement of these empty elements is arbitrary. \n            The text deleted must be at least partially legible, in order for the encoder to be\n               able to transcribe it. If all of part of it is not legible, the gap element\n               should be used to indicate where text has not been transcribed, because it could not\n               be. The unclear element described in section 11.3.3.1 Damage, Illegibility, and Supplied Text may be\n               used to indicate areas of text which cannot be read with confidence. See further\n               section 11.3.1.7 Text Omitted from or Supplied in the Transcription and section 11.3.3.1 Damage, Illegibility, and Supplied Text.\n         "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHCH#PHCH\">11.3.1 Altered, Corrected, and Erroneous Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHSU#PHSU\">11.3.1.5 Substitutions</a>","content":"\n            11.3.1.5 Substitutions\n\n            Substitution of one word or phrase for another is perhaps the most common of all\n               phenomena requiring special treatment in transcription of primary textual sources. It\n               may be simply one word written over the top of another, or deletion of one word and\n               its replacement by another written above it by the same hand on the same occasion;\n               the deletion and replacement may be done by different hands at different times; there\n               may be a long chain of substitutions on the same stretch of text, with uncertainty as\n               to the order of substitution and as to which of many possible readings should be\n               preferred.\n            As we have shown, the simplest method of recording a substitution is simply to record\n               both the addition and the deletion. However, when the module defined by this chapter\n               is in use, additional elements are available to indicate that the encoder believes\n               the addition and the deletion to be part of the same intervention: a substitution. \n                  <subst> groups one or more deletions (or surplus text) with one or more additions when\n  the combination is to be regarded as a single intervention in the text.\n                  <substJoin> identifies a series of  possibly fragmented additions, deletions, or other revisions on a manuscript that combine to make up a single intervention in the text\n                Using the subst element, the example at the end of the last\n               section might be encoded as follows: bibliography Since\n               the purpose of this element is solely to group its child elements together, the order\n               in which they are presented is not significant. When both deletion and addition are\n               present, it may not always be clear which occurs first: using the seq\n               attribute is a simple way of resolving any such ambiguities.\n\n            For example, returning to the example from William James, in a passage first written\n               out by James as One must have lived longer with this system, to appreciate its\n                  advantages, the word this is first replaced by\n                  such a and this is then replaced by\n                  a.5 This may be\n               encoded as follows, representing the two changes as a sequence of additions and\n               deletions: bibliography Note\n               the nesting of an add element within a del to record text first\n               added, then deleted in the source. The numbers assigned by the seq\n               attribute may be used to identify the order in which the various additions and\n               deletions are believed by the encoder to have been carried out, and thus provide a\n               simple method of supporting the kind of genetic textual\n               criticism typified by (for example) Hans Walter Gabler's work on the reconstruction\n               of the overlay levels implicit in the manuscripts of James\n               Joyce's Ulysses. A fuller and more complex way of supporting such an\n               approach is discussed in 11.7 Identifying Changes and Revisions. \n            \n            A special case of a substitution may consist of a superfluous word\n               or phrase that is silently replaced by some addition. E.g. a scribe\n               abandons a word (without indicating it should be deleted), and then\n               writes a replacement word immediately after. Here the encoder may\n               interpret this as an unmarked deletion which can\n               then be combined with a corresponding addition to a substitution.\n\n             The case of a single substitution or scribal correction that involves non-contiguous\n               addition and deletion can be handled by using the substJoin element to make\n               an explicit connection between one or more add and del elements. In\n               the following example from Thomas Moore's Lalla Rookh, the deletion and addition are\n               not contiguous: they are separated by the word thus, which is not part of the\n               scribal intervention being marked. Because of this intervening text, it would be\n               inappropriate to use subst to group this add and del.\n                  substJoin allows the encoder to indicate that additions and deletions\n               separated in this way are part of a single scribal intervention: bibliography Note that, unlike subst, the placement of the substJoin is\n               arbitrary. It may occur before or after the relevant add and del\n               elements. \n\n            As a more complex example, consider the following passage:\n                This passage might be encoded as follows: bibliography In this representation, the authorial slip (amongt for\n                        amongst) is retained without comment.the other two authorial corrections are marked as substitutions, each\n                     combining a deletion and an addition. the false start fif in the last line is simply marked\n                     as a deletion; \n            \n            The app element presented in chapter 12 Critical Apparatus provides similar\n               facilities, by treating each state of the text as a distinct reading. The\n                  rdg element has a varSeq attribute which may be used in the\n               same way as the seq attribute to indicate the preferred sequence. The\n               James example above might thus be represented as follows: bibliography\n            \n         "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHCH#PHCH\">11.3.1 Altered, Corrected, and Erroneous Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHCD#PHCD\">11.3.1.6 Cancellation of Deletions and Other Markings</a>","content":"\n            11.3.1.6 Cancellation of Deletions and Other Markings\n            An author or scribe may mark a word or phrase in some way, and then on reflection\n               decide to cancel the marking. For example, text may be marked for deletion and the\n               deletion then cancelled, thus restoring the deleted text. Such cancellation may be\n               indicated by the restore element: \n                  <restore> indicates restoration of text to an earlier state by\ncancellation of an editorial or authorial marking or instruction.\n               \n            This element bears the same attributes as the other transcriptional elements. These\n               may be used to supply further information such as the hand in which the restoration\n               is carried out, the type of restoration, and the person responsible for identifying\n               the restoration as such, in the same way as elsewhere. \n            Presume that Lawrence decided to restore my to the phrase of\n                  Eloi, Eloi, lama sabachthani first written For I hate this my\n                  body, with the my first deleted then restored by\n               writing stet in the margin. This may be encoded: bibliography\n            Another feature commonly encountered in manuscripts is the use of circles, lines, or\n               arrows to indicate transposition of material from one point in the text to another.\n               No specific markup for this phenomenon is proposed at this time. Such cases are most\n               simply encoded as additions at the point of insertion and deletions at the point of\n               encirclement or other marking. \n         "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHCH#PHCH\">11.3.1 Altered, Corrected, and Erroneous Texts</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHOM#PHOM\">11.3.1.7 Text Omitted from or Supplied in the Transcription</a>","content":"\n            11.3.1.7 Text Omitted from or Supplied in the Transcription\n            Where text is not transcribed, whether because of damage to the original, or because\n               it is illegible, or for some other reason such as editorial policy, the gap\n               core element may be used to register the omission; where such text is transcribed,\n               but the editor wishes to indicate that they consider it to be superfluous, for\n               example because it is an inadvertent scribal repetition or an interpolation from\n               another source, the surplus element may be used in preference. Where the\n               editor believes text to be interpolated but genuine, the secl element may be\n               used instead. Where text not present in the source is supplied (whether conjecturally\n               or from other witnesses) to fill an apparent gap in the text, the supplied\n               element may be used. \n                  <gap> indicates a point where material has been omitted in a transcription, whether for editorial\n    reasons described in the TEI header, as part of sampling practice, or because the material is\n    illegible, invisible, or inaudible.\n                  <surplus> marks text present in the source which the editor believes to\n  be superfluous or redundant.\n                  <secl> Secluded. Marks text present in the source which the editor believes to be genuine but out of its original place (which is unknown).\n                  <supplied> signifies text supplied by the transcriber or editor for any\n  reason; for example because the original cannot be read due to\n  physical damage, or because of an obvious omission by the author or scribe.\n               \n            By its nature, the gap element has no content. It marks a point in the text\n               where nothing at all can be read, whether because of authorial or scribal erasure,\n               physical damage, or any other form of illegibility. Its attributes allow the encoder\n               to specify the amount of text which is illegible in this way at this point, using any\n               convenient units, where this can be determined. For example, in the Beerbohm\n               manuscript of The Golden Drugget cited above, the author has erased a\n               passage amounting about 10 cm in length by inking over it completely: bibliography\n            In an autograph letter of Sydney Smith now in the Pierpont Morgan library three words\n               in the signature are quite illegible: bibliography The degree of precision attempted when measuring the size\n               of a gap will vary with the purpose of the encoding and the nature of the material:\n               no particular recommendation is made here.\n\n            As noted above, the gap element should only be used where text has not been\n               transcribed. If partially legible text has been transcribed, one of the elements\n                  damage and unclear should be used instead (these elements are\n               described in section 11.3.3.1 Damage, Illegibility, and Supplied Text); if the text is legible and has been\n               transcribed, but the editor wishes to indicate that they regard it is superfluous or\n               redundant, then the element surplus may be used in preference to the core\n               element sic used to indicate text regarded as erroneous. \n\n            Amongst the many examples cited in Hans Krummrey & Silvio Panciera's classic text\n               on the editing of epigraphic inscriptions is the following. In a late classical\n               inscription, the form dedikararunt is encountered. The editor\n               may choose any of the following three possibilities: \n            mark this as an erroneous form bibliographyadditionally supply a corrected form bibliographyindicate that the erroneous form contains surplus characters which the editor\n                  wishes to suppress bibliography\n\n            The surplus element may also be used to mark up interpolations, as in the\n               following example taken from a 13th century Italian source: bibliography The words marked as surplus here are metrically inconsistent with\n               the rest and have been marked by the editor as such. \n\n            In the case of an interpolation which the editor regards as genuine (i.e. written by\n               the author in question), but out of its original place, the secl element\n               should be used instead of surplus. For example:\n               bibliography\n               The final line is bracketed in the Loeb edition, with a note: versum secl.\n                  Bothe, meaning Bothe regarded this line as Plautine, but probably\n               interpolated. It is easy to see how the line might have crept in as a gloss on the\n               metaphor in the previous line. \n\n            If some part of the source text is completely illegible or missing, an encoder may\n               sometimes wish to supply new (conjectural) material to replace it. This conjectural\n               reading is analogous to a correction in that it contains text provided by the encoder\n               and not attested in the source. This is not however a correction, since no error is\n               necessarily present in the original; for that reason a different element\n                  supplied should be used. If another (imaginary) copy of the letter above\n               preserved the signature as reading I am dear Sir your very humble Servt Sydney\n                  Smith, the text illegible in the autograph might be supplied in the\n               transcription: bibliography Here the source and\n                  resp attributes are used, as elsewhere, to indicate respectively the\n               sigil of a manuscript from which the supplied reading has been taken, and the\n               identifier of the person responsible for deciding to supply the text. If the\n                  source attribute is not supplied, the implication is that the encoder\n               (or whoever is indicated by the value of the resp attribute) has supplied\n               the missing reading. Both gap and supplied may be used in\n               combination with unclear, damage, and other elements; for\n               discussion, see section 11.3.3.2 Use of the gap, del, damage, unclear, and\n                  supplied Elements in Combination.\n         "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHPH#PHPH\">11.3.2 Hands and Responsibility</a>","content":"\n         11.3.2 Hands and Responsibility\n         This section discusses in more detail the representation of aspects of responsibility\n            perceived or to be recorded for the writing of a primary source. These include points at\n            which one scribe takes over from another, or at which ink, pen, or other characteristics\n            of the writing change. A discussion of the usage of the hand,\n            resp, and cert attributes is also included. \n         \n\n         \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHPH#PHPH\">11.3.2 Hands and Responsibility</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHDH#PHDH\">11.3.2.1 Document Hands</a>","content":"\n            11.3.2.1 Document Hands\n\n            For many text-critical purposes it is important to signal the person responsible (the\n                  hand) for the writing of a whole document, a stretch of text within a\n               document, or a particular feature within the document. A hand, as the name suggests,\n               need not necessarily be identified with a particular known (or unknown) scribe or\n               author; it may simply indicate a particular combination of writing features\n               recognized within one or more documents. The examples given above of the use of the\n                  hand attribute with coding of additions and deletions illustrate this. \n\n            The handNote element is used to provide information about each hand\n               distinguished within the encoded document. \n                  <handNote> describes a particular style or hand distinguished within a manuscript.\n               \n            \n\n            A handNote element, with an identifier given by its xml:id\n               attribute, may appear in either of two places in the TEI header, depending on which\n               modules are included in a schema. When the transcr\n               module defined by the present chapter is used, the element handNotes is\n               available, within the profileDesc element of the TEI header, to hold one or\n               more handNote elements. When the msdescription\n               module defined in chapter 10 Manuscript Description is included, the handDesc\n               element described in 10.7.2 Writing, Decoration, and Other Notations also becomes available as part of a\n               structured manuscript description. The encoder may choose to place handNote\n               elements identifying individual hands in either location without affecting their\n               accessibility since the element is always addressed by means of its xml:id\n               attribute. The handDesc element may be more appropriate when a full\n               cataloguing of each manuscript is required; the handNotes element if only a\n               brief characterization of each hand is needed. It is also possible to use the two\n               elements together if, for example, the handDesc element contains a single\n               summary describing all the hands discursively, while the handNotes element\n               gives specific details of each. The choice will depend on individual encoders'\n               priorities.\n\n            As shown above, the hand attribute is available on several elements to\n               indicate the hand in which the content of the element (usually a deletion or\n               addition) is carried out. The handShift element may also be used within the\n               body of a transcription to indicate where a change of hand is detected for whatever\n               reason. \n                  <handShift> marks the beginning of a sequence of text written in a new\nhand, or the beginning of a scribal stint.\n               \n            \n            Both handShift and handNote are members of the att.handFeatures class, and thus share the following attributes: \n                  <att.handFeatures> provides attributes describing aspects of the hand in which a\n  manuscript is written.\n               \n            \n\n            A single hand may employ different writing styles and inks within a document, or may\n               change character. For example, the writing style might shift from anglicana to\n                  secretary, or the ink from blue to brown, or the character of the hand may\n               change. Simple changes of this kind may be indicated by assigning a new value to the\n               appropriate attribute within the handShift element. It is for the encoder to\n               decide whether a change in these properties of the writing style is so marked as to\n               require treatment as a distinct hand.\n            Where such a change is to be identified, the new attribute indicates the\n               hand applicable to the material following the handShift. The sequence of\n               such handShift elements will often, but not necessarily, correspond with the\n               order in which the material was originally written. Where this is not the case, the\n               facilities described in section 11.7 Identifying Changes and Revisions may be found helpful. \n\n             As might be expected, a single hand may also vary renditions within the same writing\n               style, for example medieval scribes often indicate a structural division by\n               emboldening all the words within a line. Such changes should be indicated by use of\n               the rend attribute, in the same manner as underlining, emboldening, font\n               shifts, etc. are represented in transcription of a printed text, rather than by\n               introducing a new handShift element.\n\n            In the following example there is a change of ink within a single hand. This is\n               simply indicated by a new value for the medium attribute on the\n                  handShift element: bibliography\n\n            In the following example, the encoder has identified two distinct hands within the\n               document and given them identifiers h1 and h2, by means of the\n               following declarations included in the document's TEI header: bibliography\n            \n            Then the change of hand is indicated in the text: bibliography\n\n            When a more precise or nuanced discussion of the writing in a manuscript is required,\n               the handNote and scriptNote elements discussed in 10.7.2 Writing, Decoration, and Other Notations should be used. Either element may serve as the target for a\n                  handShift. \n\n         "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHPH#PHPH\">11.3.2 Hands and Responsibility</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHHR#PHHR\">11.3.2.2 Hand, Responsibility, and Certainty Attributes</a>","content":"\n            11.3.2.2 Hand, Responsibility, and Certainty Attributes\n            \n            The hand and resp attributes have similar, but not identical,\n               meanings. Observe their distinctive uses in the following encoding of the William\n               James passage mentioned above in section 11.3.1.3 Correction and Conjecture. In this example, the\n                  But inserted by James is tagged as an add, and the\n               consequent editorial correction of One to\n                  one treated separately: bibliography As in this example, hand should be reserved for indicating the\n               hand of any form of marking—here, addition but also deletion, correction, annotation,\n               underlining, etc.—within the primary text being transcribed. The scribal or authorial\n               responsibility for this marking may be inferred from the value of the hand\n               attribute. The value of the hand attribute should be a pointer to a hand\n               identifiers typically declared in the document header but potentially in another\n               document or repository (see section 11.3.2.1 Document Hands).\n            The resp attribute, by contrast, indicates the person responsible for\n               deciding to mark up this part of the text with this particular element. In the case\n               of the add element, for example, the resp attribute will indicate\n               the responsibility for identifying that the addition is indeed an addition, and also\n               (if the hand attribute is supplied) to which hand it should be attributed.\n               In this case, Bowers is credited with identifying the hand as that of William James.\n               In the case of the corr element, the resp attribute indicates who\n               is responsible for supplying the intellectual content of the correction reported in\n               the transcription: here, Bowers' correction of One to one. In the case\n               of a deletion, the resp attribute will similarly indicate who bears\n               responsibility for identifying or categorizing the deletion itself, while other\n               attributes (hand most obviously) attribute responsibility for the deletion\n               itself. It should be noted that the source attribute may be used in a simiilar\n               fashion to indicate, for example, when an encoding decision is based on the work of a\n               previous editor or on an article. In that case, the source would point to\n               a bibl in the bibliography.\n            \n               In cases where both the resp and cert attributes are defined\n               for a particular element, the two attributes refer to the same aspect of the markup.\n               The one indicates who is intellectually responsible for some item of information, the\n               other indicates the degree of confidence in the information. Thus, for a correction,\n               the resp attribute signifies the person responsible for supplying the\n               correction, while the cert attribute signifies the degree of editorial\n               confidence felt in that correction. For the expansion of an abbreviation, the\n                  resp attribute signifies the person responsible for supplying the\n               expansion and the cert attribute signifies the degree of editorial\n               confidence felt in the expansion.\n            This close definition of the use of the resp and cert\n               attributes with each element is intended to provide for the most frequent\n               circumstances in which encoders might wish to make unambiguous statements regarding\n               the responsibility for and certainty of aspects of their encoding. The\n                  resp and cert attributes, as so defined, give a convenient\n               mechanism for this. However, there will be cases where it is desirable to state\n               responsibility for and certainty concerning other aspects of the encoding. For\n               example, one may wish in the case of an apparent addition to state the responsibility\n               for the use of the add element, rather than the responsibility for\n               identifying the hand of the addition. It may also be that one editor may make an\n               electronic transcription of another editor's printed transcription of a manuscript\n               text—here, one will wish to assign layers of responsibility, so as to allow the\n               reader to determine exactly what in the final transcription was the responsibility of\n               each editor. In these complex cases of divided editorial responsibility for and\n               certainty concerning the content, attributes, and application of a particular\n               element, the more general mechanisms for representing certainty and responsibility\n               described in chapter 21 Certainty, Precision, and Responsibility should be used.\n            \n            It should be noted that the certainty and responsibility mechanisms described in\n               chapter 21 Certainty, Precision, and Responsibility replicate all the functions of the resp and\n                  cert attributes on particular elements. For example, the encoding of\n               Donaldson's conjectured emendation of wight to\n                  wright in line 117 of Chaucer's Wife of Bath's\n                  Prologue (see 11.3.1.3 Correction and Conjecture) may be encoded as follows using the\n                  resp and cert attributes on the corr element:\n                  bibliography Exactly the same information could be conveyed\n               using the certainty and responsibility mechanisms, as follows: bibliography The choice of which\n               mechanism to use is left to the encoder. In transcriptions where only such statements\n               of responsibility and certainty are made as can be accommodated within the\n                  resp and cert attributes of particular elements, it will be\n               economical to use the resp and cert attributes of those\n               elements. Where many statements of responsibility and certainty are made which cannot\n               be so accommodated, it may be economical to use the respons and\n                  certainty elements throughout.\n            The above discussion supposes that in each case an encoder is able to specify exactly\n               what it is that one wishes to state responsibility for and certainty about.\n               Situations may arise when an encoder wishes to make a statement concerning certainty\n               or responsibility but is unable or unwilling to specify so precisely the domain of\n               the certainty or responsibility. In these cases, the note element may be\n               used with the type attribute set to cert or resp and the\n               content of the note giving a prose description of the state of affairs.\n         "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHDAMCON#PHDAMCON\">11.3.3 Damage and Conjecture</a>","content":"\n         11.3.3 Damage and Conjecture\n         The carrier medium of a primary source may often sustain physical damage which makes\n            parts of it hard or impossible to read. In this section we discuss elements which may be\n            used to represent such situations and give recommendations about how these should be\n            used in conjunction with the other related elements introduced previously in this\n            chapter. \n\n\n         \n         \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHDAMCON#PHDAMCON\">11.3.3 Damage and Conjecture</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHDA#PHDA\">11.3.3.1 Damage, Illegibility, and Supplied Text</a>","content":"\n            11.3.3.1 Damage, Illegibility, and Supplied Text\n            The gap and supplied elements described above (section 11.3.1.7 Text Omitted from or Supplied in the Transcription) should be used with appropriate attributes where the degree of\n               damage or illegibility in a text is such that nothing can be read and the text must\n               be either omitted or supplied conjecturally or from one or more other sources. In\n               many cases, however, despite damage or illegibility, the text may yet be read with\n               reasonable confidence. In these cases, the following elements should be used: \n                  <damage> contains an area of damage to the text witness.\n                  <damageSpan> marks the beginning of a longer sequence of text which is\n  damaged in some way but still legible.\n                As members of the class att.damaged, these\n               elements bear the following attributes: \n                  <att.damaged> provides attributes describing the nature of any physical damage affecting a reading.\n                The class att.damaged is a subclass of the\n               class att.dimensions, itself a subclass of the class\n                  att.ranging. Consequently these elements also\n               therefore bear at least the following attributes: \n                  <att.dimensions> provides attributes for describing the size of physical objects.\n                  <att.ranging> provides attributes for describing numerical ranges.\n                From the att.spanning class,\n                  damageSpan inherits the following additional attribute: \n                  <att.spanning> provides attributes for elements which delimit a span of text by pointing mechanisms rather than by enclosing it.\n               \n            \n            The following examples all refer to the recto of folio 5 of the unique manuscript of\n               the Elder Edda. Here, the manuscript of Vóluspá has been damaged\n               through irregular rubbing so that letters in various places are obscured and in some\n               cases cannot be read at all. \n            In the first line of this leaf, the transcriber may believe that the last three\n               letters of daga can be read clearly despite the damage: bibliography\n            \n            If, as is often the case, the damage crosses structural divisions, so that the\n                  damage element cannot be nested properly within the containing\n                  div elements, the damageSpan element may be used, in the same\n               way as the delSpan and addSpan elements discussed in section 11.3.1.4 Additions and Deletions. bibliography Note that in this example the spanTo element points to the\n               next pb element rather than to an inserted anchor element, since it\n               is the whole of the leaf (the text between the two pb elements) which has\n               sustained damage. For other techniques of handling non-nesting information, see\n               chapter 20 Non-hierarchical Structures.\n            If, as is also likely, the damage affects several disjoint parts of the text, each\n               such part must be marked with a separate damage or damageSpan\n               element. To indicate that each of these is to be regarded as forming part of the same\n               damaged area, the group attribute may be used as in the following example.\n               In this (imaginary) text of Fitzgerald's translation from Omar Khayam, water damage\n               has affected an area covering parts of several lines: bibliography\n            \n            A more general solution to this problem is provided by the join element\n               discussed in 16.7 Aggregation which may be used to link together arbitrary\n               elements of any kind in the transcription. Here, several phenomena of illegibility\n               and conjecture all result from a single cause: an area of damage to the text caused\n               by rubbing at various points. The damage is not continuous, and affects the text at\n               irregular points. In cases such as this, the join element may be used to indicate\n               which tagged features are part of the same physical phenomenon. \n\n            If the damage has been so severe as to render parts of the text only imperfectly\n               legible, the unclear element should be used to mark the fact. Returning to\n               the Eddic example above, an encoder less confident in the daga\n               reading might indicate this as follows: bibliography\n            If it is desired to supply more information about the kind of damage, it is also\n               possible to nest an unclear element within the damage element:\n                  bibliography\n            Alternatively, the transcriber may not feel able to read the last three letters of\n                  daga but may wish to supply them by conjecture. Note the\n               use of the resp attribute to assign the conjecture to Finnur Jónsson:\n                  bibliography The supplied element may if desired be enclosed within\n               a damage element: bibliography The transcriber may also provide alternative conjectures by \n               enclosing multiple supplied elements within a choice element.\n            Contrast the use of gap in the next line, where the transcriber believes\n               that four letters cannot be read at all because of the damage: bibliography As with supplied, this\n                  gap might be enclosed by a damage element.\n            Where elements are nested in this way, information about agency, etc. is by default\n               inherited. In the following imaginary example, there is a smoke-damaged part within\n               which two stretches can be read with some difficulty, and a third stretch which\n               cannot be read at all: bibliography\n            \n            The above examples record imperfect legibility due to damage. When imperfect\n               legibility is due to some other reason (typically because the handwriting is\n               ill-formed), the unclear element should be used without any enclosing\n                  damage element. In Robert Southey's autograph of The Life of\n                  Cowper the final six letters of attention are\n               difficult to read because of the haste of the writing, though reasonably certain from\n               the context. bibliography\n               The cert attribute on the unclear element may be used to indicate\n               the level of editorial confidence in the reading contained within it.\n         "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHDAMCON#PHDAMCON\">11.3.3 Damage and Conjecture</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHCOMB#PHCOMB\">11.3.3.2 Use of the gap, del, damage, unclear, and\n                  supplied Elements in Combination</a>","content":"\n            11.3.3.2 Use of the gap, del, damage, unclear, and\n                  supplied Elements in Combination\n            The gap, damage, unclear, supplied, and\n                  del elements may be closely allied in their use. For example, an area of\n               damage in a primary source might be encoded with any one of the first four of these\n               elements, depending on how far the damage has affected the readability of the text.\n               Further, certain of the elements may nest within one another. The examples given in\n               the last sections illustrate something of how these elements are to be distinguished\n               in use. This may be formulated as follows: where the text has been rendered completely illegible by deletion or damage\n                     and no text is supplied by the editor in place of what is lost: place an empty\n                        gap element at the point of deletion or damage. Note that the gap\n\t\t\t could be wrapped in a del or damage element. Use the\n                        reason attribute to state the cause (damage, deletion, etc.) of\n                     the loss of text.where the text has been rendered completely illegible by deletion or damage\n                     and text is supplied by the editor in place of what is lost: surround the text\n                     supplied at the point of deletion or damage with the supplied element.\n                     Use the reason attribute to state the cause (damage, deletion, etc.)\n                     of the loss of text leading to the need to supply the text.where the text has been rendered partly illegible by deletion or damage so\n                     that the text can be read but without perfect confidence: transcribe the text\n                     and surround it with the unclear element. Use the reason\n                     attribute to state the cause (damage, deletion, etc.) of the uncertainty in\n                     transcription and the cert attribute to indicate the confidence in\n                     the transcription.where there is deletion or damage but at least some of the text can be read\n                     with perfect confidence: transcribe the text and surround it with the\n                        del element (for deletion) or the damage element (for\n                     damage). Use appropriate attribute values to indicate the cause and type of\n                     deletion or damage. Observe that the degree attribute on the\n                        damage element permits the encoding to show that a letter, word, or\n                     phrase is not perfectly preserved, though it may be read with\n                     confidence.where there is an area of deletion or damage and parts of the text within\n                     that area can be read with perfect confidence, other parts with less\n                     confidence, other parts not at all: in transcription, surround the whole area\n                     with the del element (for deletion; or the delSpan element\n                     where it crosses a structural boundary); or the damage element (for\n                     damage). Text within the damaged area which can be read with perfect confidence\n                     needs no further tagging. Text within the damaged area which cannot be read\n                     with perfect confidence may be surrounded with the unclear element.\n                     Places within the damaged area where the text has been rendered completely\n                     illegible and no text is supplied by the editor may be marked with the\n                        gap element. For each element, one may use appropriate attribute\n                     values to indicate the cause and type of deletion or damage and the certainty\n                     of the reading.\n            The rules for combinations of the add and del elements, and for the\n               interpretation of such combinations, are similar: \n            if one add element (with identifier ADD1) contains\n                  another (with identifier ADD2), then the addition\n                     ADD1 was first made to the text, and later a second addition\n                     (ADD2) was made within that added text: bibliographyif one del element contains another, and the seq attribute\n                  does not indicate otherwise, it should be assumed that the inner deletion was made\n                  before the enclosing one. In the following example, the word\n                     redundant was deleted before a second deletion removed\n                  the entire passage: bibliographyif a del element contains an add element, the normal\n                  interpretation will be that an addition was made within a passage which was later\n                  deleted in its entirety: bibliographyif an add element contains a del element, the normal\n                  interpretation will be that a deletion was made from a passage which had earlier\n                  been added: bibliographyWhen some text has been blackened out so thoroughly that can no longer be read,\n\t\t             the encoding should be: bibliographyFor consistency, one might prefer to encode the deletion as such, using del,\n\t\t             and containing a gap, as in the following example:\n                     bibliographyThis is something that would be necessary if one wanted to encode a subst including an illegible deletion:\n\t\t             bibliographyIf some parts of the deleted text are readable, and other parts unreadable, it should be encoded as in the following example:\n\t\t                bibliography\n         "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=alterations#alterations\">11.3.4 Marking up the Writing Process</a>","content":"\n         11.3.4 Marking up the Writing Process\n         Modifications of various kinds (correction, addition, deletion, etc.) are frequently\n            found within a single document, and may also be inferred when different documents are\n            compared, although it may be an open question as to whether inter-document discrepancies\n             should be regarded in the same way as intra-document\n            alterations. When two witnesses are collated, we may observe that a word present in one\n            is missing from the other: this does not necessarily imply that the word was added to\n            the first witness, nor that it was deleted from the other. \n\n         In this section we discuss a number of elements which may be useful when attempting to\n            record traces of the writing process within a document. \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n         \n         \n\n         \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=alterations#alterations\">11.3.4 Marking up the Writing Process</a><a class=\"breadcrumb\" href=\"p5.xml?id=PH-mod#PH-mod\">11.3.4.1 Generic Modification</a>","content":"\n            11.3.4.1 Generic Modification\n\n\n\n            Most, if not all, transcriptional elements imply a certain level of semantic\n               interpretation. For instance, using the add element to encode a word or\n               phrase that occupies interlinear space involves a decision that it has been\n               deliberately inserted as an addition rather than an alternative, and indeed a\n               judgment that it was written after, rather than before, the other lines. Where it is\n               felt desirable to keep the recording of what is on the page\n               entirely separate from what is the editor’s interpretation, the\n               generic mod element may be preferred. \n                  <mod> represents any kind of modification identified within a single document.\n                This element simply indicates any kind of modification that has been\n               identified in the document, without prejudice as to its function. Occurrences of the\n                  mod element may be categorized by means of their type\n               attribute, and visual aspects of their appearance can be described by means of the\n                  rend attribute, but they provide no further interpretation of the\n               function or intention of the passage so marked up. The spanTo attribute\n               may be used to indicate the end of a modified passage if this extends across the\n               boundaries of some other XML element, for example from the middle of one line tagged\n               as a line to the middle of another line some distance further on in\n               the document. \n            bibliography\n            \n            \n\n            The distinction between an example such as that above and the simple use of\n                  hi to mark the visual salience of the underlining (apart from the use of\n               the spanTo attribute) is that hi does not imply that the visual\n               effect being recorded is understood to represent some kind of modification. \n         "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=alterations#alterations\">11.3.4 Marking up the Writing Process</a><a class=\"breadcrumb\" href=\"p5.xml?id=PH-meta#PH-meta\">11.3.4.2 Metamarks</a>","content":"\n            11.3.4.2 Metamarks\n\n            By metamark we mean marks such as numbers, arrows, crosses, or other\n               symbols introduced by the writer into a document expressly for the purpose of\n               indicating how the text is to be read. Such marks thus constitute a kind of markup of\n               the document, rather than forming part of the text. \n                  <metamark> contains or describes any kind of graphic or written signal\n   within a document the function of which is to determine how it\n   should be read rather than forming part of the actual content of\n   the document.\n               \n            \n\n            Unlike marginal notes or other additions to the text, metamarks are used by the\n               writer to indicate a deliberate alteration of the writing itself, such as move\n                  this passage over there. An addition or annotation by contrast would typically\n               concern some property of the passage other than its intended location or status\n               within the text flow. A metamark may contain text, or some other graphic which the\n               encoder wishes to represent, or it may simply consist of arrows, dots, lines etc.\n               which the encoder simply describes.\n\n            \n\n            The metamark element carries a function attribute which specifies\n               the function of the metamark, using values such as reorder,\n                  flag, delete, insert or used. The\n               passage to which the metamark applies may be indicated in either of two ways: the\n                  target attribute may be used to point to the element or elements\n               containing the passage concerned, or the spanTo element may be used to\n               point to a position in the document at which the passage concerned finishes. In the\n               latter case, the metamark itself must be supplied at the position in the\n               document where the passage concerned begins; in the former case it may be supplied at\n               any convenient point. Both attributes should not be supplied. \n\n            The following example is taken from an 15th century legal book from the city of\n               Göttingen, containing regulations of everyday life issued by the city council \n            \n\n\n            In the second paragraph, the word lege (\"read\")\n               was written in the left hand margin, next to the sentence beginning Ock en\n                  schullen de bruwere.... It is thought to function as a metamark, indicating\n               that this sentence forms part of the regulations. A further sentence was then added,\n               while at some later stage the text and also the metamark were deleted. We might\n               encode this as follows as an embedded transcription (keeping in mind that the elements described here can also be used within text): bibliography\n            \n            The change attribute used here to indicate the sequencing of these various\n               interventions is discussed below, in section 11.7 Identifying Changes and Revisions. The\n               elements addSpan and delSpan are discussed in section 11.3.1.4 Additions and Deletions. \n\n            The metamark element may also be used to encode the symbols etc. often found\n               in marked-up proofs such as the following, taken from the Walt Whitman archive: \n            \n            In this example, the whole of what was originally the 14th section of the poem has\n               been marked for deletion, both by horizontal and vertical lines, and by the proofreading mark\n               resembling the deleatur or dele deletion symbol to left and right of the section. The\n               deletion itself might be encoded by using the normal del or delSpan\n               element, and the metamarks by the metamark element. This is quite a\n               different case from that of the next example, in which the writer does not intend to\n               suppress the content, but only to mark that it has been copied to another manuscript\n               or reused. \n            \n               \n            \n            This page contains internal deletions, additions, and retracings but these are\n               semantically quite different from the apparent deletion\n               signalled by the larger of the two single vertical lines, which shows that the\n               written material has been transferred or re-used, not deleted. \n            bibliography\n            In this embedded transcription example, we class as metamarks both the long vertical line and the annotation\n                  Entered - yes.\n               \n               Both metamarks are assumed to indicate that the whole of the written zone with\n               identifier X2 is marked as having been used. metamark can be similarly used within text to encode the same phenomenon as part of a transcription that privileges logical over physical and layout structures. \n\n         "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=alterations#alterations\">11.3.4 Marking up the Writing Process</a><a class=\"breadcrumb\" href=\"p5.xml?id=PH-fix#PH-fix\">11.3.4.3 Fixation and Clarification</a>","content":"\n            11.3.4.3 Fixation and Clarification\n\n            A writer may sometimes rewrite material a second time without significant change and\n               in the same place. We consider this a distinct activity from addition as usually\n               defined because no new textual material results; instead the status of existing\n               material is reaffirmed. We may distinguish two variants of this:\n                  fixation where the first version was a tentative draft which is\n               subsequently reaffirmed, for example by inking it over; and\n                  clarification, where the first version was badly written and has been\n               rewritten for clarity. The element retrace is provided for both cases; its\n                  cause attribute may be used to distinguish these or other cases. \n                  <retrace> contains a sequence of writing which has been retraced, for\n      example by over-inking, to clarify or fix it.\n               \n            \n\n            In this simple example, taken from the papers of Henrik Ibsen, the writer wrote the\n               word skuldren hastily, and then returned to it to make the\n               letter l larger and clearer:  We might transcribe this word as follows: bibliography\n            \n\n            A single rewrite may not be sufficient, and it may be that the document becomes\n               almost unreadable as a result of repeated clarification. In the following example, we\n               can distinguish at least three attempts to write the letters\n                  er in the word bægerklang:  We might encode this by nesting the retrace element as follows:\n                  bibliography The change attribute used here is discussed further below (11.7 Identifying Changes and Revisions). \n\n            The retrace element is used only for cases where text has been written\n               multiple times. When metamarks and other markup-like strokes have been rewritten\n               multiple times, the redo element described in the next section should be\n               used in preference. \n         "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=alterations#alterations\">11.3.4 Marking up the Writing Process</a><a class=\"breadcrumb\" href=\"p5.xml?id=undo#undo\">11.3.4.4 Confirmation, Cancellation, and Reinstatement of Modifications</a>","content":"\n            11.3.4.4 Confirmation, Cancellation, and Reinstatement of Modifications\n\n            \n               A writer may  indicate that an alteration is itself to be altered: for\n               example, a struck-through passage may be restored via a dotted underlining, or the\n               underlining of a passage may be deleted by a wavy line.\n\n            The following elements are provided to represent these situations: \n                  <redo> indicates one or more cancelled interventions in a\n\t\t  document which have subsequently been\n\t\t  marked as reaffirmed or repeated.\n                  <undo> indicates one or more marked-up interventions in a document\n   which have subsequently been marked for cancellation.\n               \n            \n\n            \n\n\n\n            The element restore (11.3.1.6 Cancellation of Deletions and Other Markings) is provided for the\n               comparatively simple case where a simple deletion is marked as having been\n               subsequently cancelled. The undo element discussed here is more widely\n               applicable and may be used for any kind of cancellation. It points to the element or\n               elements which are being cancelled. These components need not be contiguous, provided\n               that the cancellation is clearly a single act; each distinct act of cancellation\n               requires a distinct undo element, however. Either of the attributes\n                  target or spanTo may be used to indicate the passages\n               concerned. \n\n            Consider the following imaginary example:  We hypothesize that the text has gone through three states or changes, as\n               follows: \n                  This is just some sample text, we need a real example. \n                  This is not a real example.\n                  This is just some text, not a real example.\n               \n            \n\n            This sequence of events might be encoded as follows: bibliography using two undo elements, each with a spanTo attribute,\n               to delimit the two parts of the deletion which were reverted at change s3. Note that\n               in this case, since target is not supplied, it is the effect of the parent\n               element (the del) which is assumed to be undone. \n\n            Alternatively, we might more economically use the generic seg element to delimit the two sequences whose deletion is being reverted, and\n               then use the target attribute on a single undo element: bibliography\n               \n            \n         "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=alterations#alterations\">11.3.4 Marking up the Writing Process</a><a class=\"breadcrumb\" href=\"p5.xml?id=transpo#transpo\">11.3.4.5 Transpositions</a>","content":"\n            11.3.4.5 Transpositions\n\n            A transposition occurs when metamarks are found in a document indicating\n               that passages should be moved to a different position. Typically this may be done\n               using arrows, asterisks or numbers, or other means. By definition the result of a\n               transposition is not present in the document, and should not therefore be encoded, if\n               the intention is to represent the actual appearance of the document. Instead, the\n               following elements may be used to indicate the intended reordering: \n                  <listTranspose> supplies a list of transpositions, each of which is  indicated at some point in\n   a document typically by means of metamarks.\n                  <transpose>  describes a single textual transposition as an ordered list\n   of at least two pointers specifying the order in which the elements\n   indicated should be re-combined.\n               \n            Consider for example, the following extract from an Ibsen manuscript  The underlined numbers 1 and 2 here indicate that, although the word\n                  bör precedes the word hör in the\n               text, the order of the two words should be reversed. We may encode this as follows:\n                  bibliography\n            \n\n            Note the use of the generic seg element to identify the sections of text\n               being transposed. The following example uses an embedded transcription approach, which typically identifies lines of writing with the line element. This makes it trivial to refer to the transposed line, but when encoding transposition within text the encoder will need to find a way to identify the line with another element, such as seg.\n               bibliography When transposition is made, the whole element indicated is understood to be\n               moved, not just its contents. In the above example, the metamarks are thus understood\n               to be moved along with the lines to which they apply. \n\n            \n\n            One or more listTranspose elements may be\n            supplied either embedded within the text, in the\n            profileDesc of the header, or in a\n            standOff depending on local preference. Each\n            listTranspose can contain one or more\n            transpose elements, each of which defines a\n            single transposition.\n         "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=alterations#alterations\">11.3.4 Marking up the Writing Process</a><a class=\"breadcrumb\" href=\"p5.xml?id=alter#alter\">11.3.4.6 Alternative Readings</a>","content":"\n            11.3.4.6 Alternative Readings\n             In this example two alternative readings are provided, but no preference is\n               indicated. While the author apparently first composed the line Alone before his\n                  native river -, at some later point, he entertained the possibility of using\n               the word beside instead of before. The\n               manuscript supplies no indication of which word Moore favours at this point, although\n               in fact, in the first printed edition of Lalla Rookh the word\n                  beside was chosen. \n            The element alt provided by the linking module\n               gives a simple way of encoding the state of this manuscript, as follows: bibliography\n            \n            The mode attribute here indicates that the two possible readings indicated\n               by the target attribute are mutually exclusive. The weights\n               attribute indicates the relative importance or preference to be attached to the two\n               readings on a scale running from zero (most improbable) to one (most probable). In\n               this case, we have a very strong preference for the second reading because this is\n               the one that appears in the published version of the poem. The alt element\n               is further discussed in section 16.8 Alternation. \n         "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHST#PHST\">11.3 Scope of Transcriptions</a><a class=\"breadcrumb\" href=\"p5.xml?id=alterations#alterations\">11.3.4 Marking up the Writing Process</a><a class=\"breadcrumb\" href=\"p5.xml?id=instantcorr#instantcorr\">11.3.4.7 Instant Corrections</a>","content":"\n            11.3.4.7 Instant Corrections\n            The use of elements such as del and add necessarily implies that\n               the modifications they indicate were made at some time after the original writing. An\n               exception to this is where a false start or instant correction\n               has been identified: the author starts to write, and then immediately corrects what\n               has been written. \n            The instant attribute defined by this module may be used on any element\n               which is a member of the att.editLike class to modify\n               this default assumption. When the value of instant is set to\n                  true, the addition or deletion is considered to belong to the same\n               change as its parent element, while false means some change later than\n               that of its parent.\n             An example of false start or instant correction can be seen in the following line:\n                   in which we can detect the following sequence of events: \n                  The letter T is written and then immediately deleted\n                  The word The is written, deleted, and replaced by the word\n                        His\n                  The added word His is then deleted\n                  The initial letter i of the words iron\n                        necklace is overwritten with a capital I\n                To indicate that the first of these acts must have taken place during the\n               main act of writing, before the other deletion and additions, we might encode this\n               revision campaign as follows: bibliography\n            \n         "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHLAY#PHLAY\">11.4 Aspects of Layout</a>","content":"\n      11.4 Aspects of Layout\n      The following methods are available to capture general aspects of the layout of material on\n         a page where this is considered important. Within the sourceDoc element, as\n         already indicated, the element surface and surfaceGrp enable the encoder\n         to represent directly the structure of a codex as gatherings or quires, leaves, and\n         surfaces, as in the following example: \n      In some cases, it may be preferable to define surfaces corresponding with each two\n         page opening, for example where it is clear that the writer regarded each such opening as a\n         single writing surface, with written zones or other features crossing the page divide. An\n         example is shown here: \n      \n      The coloured lines added to this image indicate a number of zones of writing, colour coded\n         to indicate the order in which they were written (purple, then green, then red). For\n         example, the zone marked in red on the left contains a note referring to the purple zone on\n         the right. \n      \n      This approach assumes that the transcription will primarily be organized in the same way as\n         the physical layout of the source, using embedded transcription elements. Alternatively,\n         where the a non-embedded transcription has been provided, using the text element,\n         it is still possible to record gathering breaks, page breaks, column breaks, line breaks\n         etc in the source, using the elements described in section 3.11 Reference Systems. Detailed\n         metadata about the physical make-up of a source will usually be summarized by the\n            physDesc component of an msDesc element discussed in 10.7 Physical Description. \n\n      \n      \n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHLAY#PHLAY\">11.4 Aspects of Layout</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHSP#PHSP\">11.4.1 Space</a>","content":"\n         11.4.1 Space\n         The author or scribe may have left space for a word, or for an initial capital, and for\n            some reason the word or capital was never supplied and the space left empty. The\n            presence of significant space in the text being transcribed may be indicated by the\n               space element. \n               <space> indicates the location of a significant space in the text.\n             Note that this element should not be used to mark normal inter-word space or\n            the like. \n         In line 694 of Chaucer's Wife of Bath's Prologue in the Holkham\n            manuscript the scribe has left a space for a word where other manuscripts read\n               preestes: bibliography The supplied element discussed in the previous section may\n            be used to supply the text presumed missing: bibliography Here, the fact of the space within the manuscript is indicated\n            by the value of the reason attribute. The source of the supplied text is\n            shown by the value of the source attribute as the Hengwrt manuscript; the\n            transcriber responsible for supplying the text is ES. \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHLAY#PHLAY\">11.4 Aspects of Layout</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHLN#PHLN\">11.4.2 Lines</a>","content":"\n         11.4.2 Lines\n         One of the more common forms of modification encountered in written documents of any\n            kind is the presence of lines written under, beside, or through the text. Such lines may\n            be of various types: they may be solid, dashed or dotted, doubled or tripled, wavy or\n            straight, or a combination of these and other renderings. The line may be used for\n            emphasis, or to mark a foreign or technical term, or to signal a quotation or a title,\n            etc.: the elements emph, foreign, term, mentioned,\n            or title may be used for these. Where the line has a clear paratextual function\n            the metamark element may be considered more appropriate. Frequently, a scholar\n            may judge that a line is used to delete text: the del element is available to\n            indicate this. In all these cases, the rend attribute may be used to supply\n            further details concerning the style of the line. Thus, Lawrence's deletion by\n            strike-through of my in the autograph of Eloi, Eloi, lama\n               sabachthani may be encoded: bibliography\n         There will be instances, however, where a scholar wishes only to register the occurrence\n            of lines in the text, without making any judgement as to what the lines signify. In\n            these cases the hi element may be used, with the rend attribute to\n            mark the style of line. In the manuscript of a letter by Robert Browning to George\n            Moulton-Barrett the underlining of the phrase had obtained all the letters to\n               Mr Boyd may be marked-up as follows: bibliography\n         The above examples presume the common case where a single word or phrase is marked by a\n            line, with no doubt as to where the marking begins or ends and with no overlapping of\n            the area of text with other marked areas of text. Where there is doubt, the\n               certainty element may be used to record the doubt. In the Browning example\n            cited above the underlining actually begins half-way under who,\n            and this uncertainty could be remarked as follows: bibliography\n         Where the area of text marked overlaps other areas of text, for example crossing a\n            structural division, one of the spanning mechanisms mentioned above must be used; for\n            example where the line is thought to mark a deletion, the delSpan element may\n            be used. Where it is desired simply to record the marking of a span of text in\n            circumstances where it is not possible to surround the text with a hi element,\n            the span element may be used with the rend or type\n            attribute indicating the style of line-marking.\n         More work needs to be done on clarifying the treatment of other textual features marked\n            by lines which might so overlap or nest. For example, in many Middle English manuscripts\n            (e.g. the Jesus and Digby verse collections), marginal sidebars may indicate metrical\n            structure: couplets may be linked in pairs, with the pairs themselves linked into\n            stanzas. Or, marginal sidebars may indicate emphasis, or may point out a region of text\n            on which there is some annotation: in many manuscripts of Chaucer's Wife of\n               Bath's Prologue lines 655–8 are marked with nesting parentheses against which\n            the scribe has written nota.\n         Such features could be captured by use of the note element, containing a prose\n            description of the manuscript at this point, enhanced by a link to a visual\n            representation (or facsimile) of the feature in question. For example, in the Chaucer\n            example just cited, one may wish to record that the nota is\n            written in the Hengwrt manuscript in the right margin against a single large left\n            parenthesis bracketing the four lines, with two right parentheses in the right margin\n            bracketing two overlapping pairs of lines: the first and third, the second and fourth.\n            The note element allows us to record that the scribe wrote\n               nota, but is not well-adapted to show that the\n               nota points both at all four lines and at two pairs of lines\n            within the four lines. The metamark element discussed in section 11.3.4.2 Metamarks above provides better facilities for this kind of complex\n            annotation. \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHRB#PHRB\">11.5 Transcription and Ruby</a>","content":"\n      11.5 Transcription and Ruby\n      \n      These Guidelines also provide special elements to support the\n         encoding of ruby annotations, which are common in East Asian textual\n         traditions. These elements provide a method of capturing a specific\n         type of annotation, in addition to the generic methods like the\n         note or interp elements. Both the specific and\n         general methods should integrate well with the transcriptional\n         elements described above, allowing authorial and scribal features to\n         be captured in conjunction with ruby base text and annotations. See\n         3.4.2 Ruby Annotations for more information about these\n         elements.\n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHSK#PHSK\">11.6 Headers, Footers, and Similar Matter</a>","content":"\n      11.6 Headers, Footers, and Similar Matter\n\n      Such information as page numbers, signatures, or catchwords may be recorded in a\n         specialized fw element provided for that purpose. Although the name derives from\n         the term forme work, used in description of early printed documents (the\n            forme being the block used to hold movable type), the fw element may be\n         used for such features of any document, written or printed. Note that the purpose of this\n         element is to record page numbers etc. actually present in the document being\n         encoded, not necessarily to provide a complete or accurate pagination of it. \n      Information about pagination etc. may also be provided using the n attribute of\n         the pb or gb elements, or by other appropriate milestone\n         elements, as further discussed in section 3.11 Reference Systems: since this information is\n         usually provided by the encoder, it is not subject to the constraint that it should be\n         present only if textually present in the source being encoded. In text-critical situations\n         it may be useful to provide both a normalized version of the pagination and a\n         representation of the catch-word or numbering, especially when the latter presents a\n         variant reading, or is significant for compositor identification. \n            <fw> contains a running head (e.g. a header, footer), catchword, or\n  similar material appearing on the current page.\n          The fw element may be used to encode any of the unchanging portions of\n         a page forme, such as: running heads (whether repeated or changing on every page, or alternating\n               pages)running footerspage numberscatch-wordsother material repeated from page to page, which falls outside the stream of the\n               text It should not be used for marginal glosses, annotations, or textual variants, which\n         should be tagged using gloss, note, or the text-critical tags described\n         in chapter 12 Critical Apparatus, respectively.\n      For example: bibliography\n         \n         \n         \n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PH-changes#PH-changes\">11.7 Identifying Changes and Revisions</a>","content":"\n      11.7 Identifying Changes and Revisions\n      A major purpose of genetic editing is the identification of revision\n         campaigns or, more generally, changes. An editor may wish to\n         regard a particular set of alterations (deletions, additions, substitutions, transpositions, etc.) or\n         any other act of writing as a single object for which we use the general term change, to indicate both that one or more of such\n         phenomena preceded or followed another and also to indicate that they are related in some\n         way, for example that one is a consequence of the other. They might also wish to group\n         together certain revisions, regardless of when they might have occurred, based on a variety\n         of other shared characteristics (e.g., corrections of factual errors or revisions that\n         incorporate suggestions made by a given reader). To document this we need: a system to assign phenomena to a particular change as defined abovea way to characterize each such change, in itself and in relation to others.\n\n      The element creation (within the TEI header profile description) contains all\n         information relating to the genesis or production of a text. It may contain a\n            listChange element which contains a number of change elements, one for\n         each set of alterations identified: \n            <listChange> groups a number of change descriptions associated \nwith either the creation of a source text or the revision of an encoded text.\n            <change> documents a change or set of changes made during the production\n    of a source document, or during the revision of an electronic file.\n         \n      \n\n      In the following example an editor has identified four distinct sets of alterations:\n      bibliography\n      The listChange element carries an attribute ordered, which can take the\n         values true or false (the default). The attribute specifies\n         whether the order of child elements signifies a temporal order for the revision campaigns\n         which they document. In the example above, the editor has asserted that the four sets\n         distinguished are ordered chronologically according to the order of the change\n         elements.\n         \n         If necessary, listChange elements can be nested hierarchically. This may be\n         helpful in two cases. Firstly one can build up hypotheses about related revisions\n         step-by-step, starting with change elements of smaller coverage, whose members are certainly\n         related, and then in a subsequent pass grouping these  in turn, thereby extending\n         their reach.\n\n      bibliography\n      A nested listChange element is also useful to indicate a partial\n         ordering of change elements.\n      bibliography\n      In addition to the possibility of being ordered by their sequence within\n         a listChange element, \n            change elements may carry a number of attributes from the att.datable class (period, when, notBefore,\n            notAfter, from, and to) which allow each element to be\n         dated as exactly or inexactly as necessary, in the same way as is currently possible for\n         the TEI date element.\n      \n      bibliography\n      Each change element, apart from declaring a distinct moment or phase in the creation of the\n         document, may also contain references to other annotations contained within the\n            teiHeader or in the document (as shown in the previous example). Such\n         references, along with the textual content, are purely documentary. The association between  a textual\n         component and a change  element\n         is always made explicitly, either by using the target\n         attribute on the change element to point to one or more textual elements, or by pointing\n         from the element or elements concerned to the change element by means of their\n            change attribute. If a change element is associated with some\n         element, it is also associated with all of that element's children, unless otherwise\n         indicated, for example by a new value for the change attribute. \n      In the following simple example, the text at one stage read This is a mouse, and at\n         the next This is a house mouse: bibliography\n      \n      In this example, however, the text originally read This is a house, and subsequently\n            This is a mouse: bibliography Note that in this case both the deletion and the addition are associated with the\n         second change element. The word house, because its deletion forms part of\n         this second set of alterations, must have\n         been present originally, whereas the word mouse must have been added during\n         the second set of alterations. \n\n      Elements such as add and del and the like carry an implied semantics\n         concerning the order in which events in the writing of a document was carried out:\n         something which is deleted must have been written before it was deleted; something which is\n         added must have been added at a later stage of the writing. Even when a combination of such\n         elements is used, the chronology can usually be inferred (see further 11.3.3.2 Use of the gap, del, damage, unclear, and\n                  supplied Elements in Combination). Explicit indication of the set of alterations to which some modification belongs is mostly useful\n         in situations where all the alterations identified in a document are to be grouped, for\n         example chronologically. \n      \n      \n      The interpretation of change elements with respect to a particular text passage is based on a number\n         of implicit assumptions and constraints which have the effect of minimizing the amount of\n         tagging necessary. The system is also flexible enough to support an explicit distinction\n         between acts of writing and textual alterations, since either of these can be associated\n         with changes described in the encoding. The following example shows an encoding in which\n         the same passage is transcribed twice, once from a documentary perspective, and once from a\n         textual one: bibliography\n      \n\n      The documentary transcription stresses the writing process, while the textual transcription\n         emphasizes textual alterations. In either case, the change of writing activity associated\n         with a particular feature in the transcript is explicitly indicated. From the documentary\n         perspective, by assigning particular modifications to a specific change element, we describe the\n         writing process, in that they specify which segment has been written when\n         . From the textual perspective, the markup concentrates simply on the\n         existence of textual alterations and makes no explicit claims about the order of writing.\n         \n      \n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><a class=\"breadcrumb\" href=\"p5.xml?id=PHTRXX#PHTRXX\">11.8 Other Primary Source Features not Covered in these Guidelines</a>","content":"\n      11.8 Other Primary Source Features not Covered in these Guidelines\n      We repeat the advice given at the beginning of this chapter, that these recommendations are\n         not intended to meet every transcriptional circumstance ever likely to be faced by any\n         scholar. They are intended rather as a base to enable encoding of the most common phenomena\n         found in the course of scholarly transcription of primary source materials. These\n         guidelines particularly do not address the encoding of physical description of textual\n         witnesses: the materials of the carrier, the medium of the inscribing implement, the\n         organisation of the carrier materials themselves (as quiring, collation, etc.), and authorial\n         instructions or scribal markup, except insofar as these are involved in the broader\n         question of manuscript description, as addressed by the msdescription module described in chapter 10 Manuscript Description. \n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PH#PH\">11 Representation of Primary Sources</a><span class=\"breadcrumb\">11.9 Module for Transcription of Primary Sources</span>","content":"\n     11.9 Module for Transcription of Primary Sources\n     The module described in this chapter makes available the following components:\n     \n       Transcription of Primary Sources\n       Transcription of primary sources\n       \n       \n       \n       \n       \n     \n     \n     The selection and combination of modules to form a TEI schema\n     is described in 1.2 Defining a TEI Schema.\n     \n   "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TC#TC\">12 Critical Apparatus</a>","content":"\n  12 Critical Apparatus\n  Scholarly editions of texts, especially texts of great antiquity or importance, often record\n    some or all of the known variations among different witnesses to the text.\n    Witnesses to a text may include authorial or other manuscripts, printed editions of the work,\n    early translations, or quotations of a work in other texts. Information concerning variant\n    readings of a text may be accumulated in highly structured form in a critical apparatus of\n    variants. This chapter defines a module for use in encoding such an apparatus of variants, which\n    may be used in conjunction with any of the modules defined in these Guidelines. It also defines\n    an element class which provides extra attributes for some elements of the core tag set when this\n    module is selected. In printed critical editions, the apparatus takes the form of highly-compressed\n    notes at the bottom of each page. TEI’s critical apparatus module allows variation to be encoded\n    so that such notes may be generated, but it also models the variation so that, for example,\n    interactive editions in which readers can choose which witness readings to display are possible.\n  \n  Information about variant readings (whether or not represented by a critical apparatus in the\n    source text) may be recorded in a series of apparatus entries, each entry\n    documenting one variation, or set of readings, in the text. Elements for the\n    apparatus entry and readings, and for the documentation of the witnesses whose readings are\n    included in the apparatus, are described in section 12.1 The Apparatus Entry, Readings, and Witnesses. Special tags for\n    fragmentary witnesses are described in section 12.1.5 Fragmentary Witnesses. The available methods\n    for embedding the apparatus in the rest of the text, or for linking an external apparatus to the\n    text of the edition, are described in section 12.2 Linking the Apparatus to the Text. Finally, several extra\n    attributes for some tags of the core tag set, made available when the additional tag set for\n    text criticism is selected, are documented in section 11.3.1.1 Core Elements for Transcriptional Work. \n  \n  Scholarly practice in representing critical editions differs widely across disciplines, time\n    periods, and languages. The TEI does not make any recommendations as to which text-critical\n    methods are best suited to any given text. Editors will wish to consider questions such as:\n    What source documents will be used? Are there many witnesses, few, or one? Are the\n        sources relatively close copies or not?Will there be a single base text? Or will witnesses be separately\n        transcribed?If a single base text will be used, will it be that of a particular witness, or will the\n        editor attempt to reconstruct an ideal or original text?Will each reading in an apparatus entry record every attestation (a positive\n        apparatus), or merely witnesses that deviate from the base text (a negative\n        apparatus)?Will the readings of most or all witnesses be represented in the apparatus, or only a\n        selection the editor deems relevant?What level of variation will require distinguishing one witness reading from another?\n        For example, will the editor consider an abbreviated word in a witness as agreeing with the\n        base text, or not?Will conjectures (variant readings suggested by an editor) be treated differently than\n        readings found in witnesses?Will there be a need to distinguish different types of variation, for example\n        orthographic vs. morphological or lexical variants?\n  \n  Different editorial methodologies will produce different answers to these questions, and those\n    answers may influence choices of markup used in the edition. For example, if there will be\n    multiple witness transcriptions and a single apparatus, then the double\n      end-point attachment method may be the best choice of apparatus linking style. The parallel segmentation method may present several advantages to editors\n    producing an edition with a single base text. Editors of single-source editions may care to note\n    material aspects of the text (such as damage or unclear text). On the other\n    hand, editors attempting to synthesize an ideal or original text from many witnesses may feel\n    little need to represent the material aspects of individual witnesses. Editors wishing to\n    distinguish witness readings from conjectures by modern editors may wish to use wit\n    to indicate the former and source for the latter. Differences in types of variation\n    might be marked using type or ana on the rdg element.\n  \n  Many examples given in this chapter refer to the following texts of the opening (usually just\n    line 1) of Chaucer's Wife of Bath's Prologue, as it appears in each of the four\n    different manuscripts Ellesmere, Huntingdon Library 26.C.9 (El)\n        Hengwrt, National Library of Wales, Aberystwyth, Peniarth 392D (Hg)\n         British Library Lansdowne 851 (La)\n        Bodleian Library Rawlinson Poetic 149 (Ra2)\n        \n      \n\n  \n  \n\n\n\n\n  \n  \n  \n\n  \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TC#TC\">12 Critical Apparatus</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLL#TCAPLL\">12.1 The Apparatus Entry, Readings, and Witnesses</a>","content":"\n    12.1 The Apparatus Entry, Readings, and Witnesses\n    This section introduces the fundamental markup methods used to encode textual variations:\n        the app element for entries in the critical apparatus: see section 12.1.1 The Apparatus Entry.elements for identifying individual readings: see section 12.1.2 Readings.ways of grouping readings together: see section 12.1.3 Indicating Subvariation in Apparatus Entries.methods of identifying which witnesses support a particular reading, and for\n          describing the witnesses included in the apparatus: see section 12.1.4 Witness Information.elements for indicating which portions of a text are covered by fragmentary witnesses:\n          see section 12.1.5 Fragmentary Witnesses.\n    The app element is in one sense a more sophisticated and complex version of the\n        choice element introduced in 3.5.1 Apparent Errors as a way of marking points\n      where the encoding of a passage in a single source may be carried out in more than one way.\n      Unlike choice, however, the app element allows for the representation of\n      many different versions of the same passage taken from different sources.\n\n    \n    \n    \n    \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TC#TC\">12 Critical Apparatus</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLL#TCAPLL\">12.1 The Apparatus Entry, Readings, and Witnesses</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPEN#TCAPEN\">12.1.1 The Apparatus Entry</a>","content":"\n      12.1.1 The Apparatus Entry\n      Individual textual variations are encoded using the app element, which groups\n        together all the readings constituting the variation. The identification of discrete textual\n        variations or apparatus entries is not a purely mechanical process; different editors will\n        group readings differently. No rules are given here as to how to collect readings into\n        apparatus entries.\n      The individual apparatus entry is encoded with the app element: \n          <app> contains one entry in a critical apparatus, with an optional\nlemma and usually one or more readings or notes on the relevant passage.\n        \n      The attributes loc, from, and to, are used to link the\n        apparatus entry to the base text, if present. In such cases, several methods may be used for\n        such linkage, each involving a slightly different usage for these attributes. Linkage\n        between text and apparatus is described below in section 12.2 Linking the Apparatus to the Text. For the\n        use of the app element without a base text, see 12.2.3 The Parallel Segmentation Method. \n      Each app element usually comprises one or more readings, which in turn are encoded using\n        the rdg or other elements, as described in the next section. A very simple partial\n        apparatus for the first line of the Wife of Bath's Prologue might take a form\n        something like this:\n        bibliography\n        Of course, in practice the apparatus will be somewhat more complex. Specifically, it may be\n        desired to record more obviously that manuscripts El and La agree on the words noon\n          Auctoritee, to indicate a preference for one reading, etc. The following sections on\n        readings, subvariation, and witness information describe some of the more important\n        complications which can arise.\n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TC#TC\">12 Critical Apparatus</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLL#TCAPLL\">12.1 The Apparatus Entry, Readings, and Witnesses</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLR#TCAPLR\">12.1.2 Readings</a>","content":"\n      12.1.2 Readings\n      Individual readings are the crucial elements in any critical apparatus of variants. The\n        following elements should be used to tag individual readings within an apparatus entry: \n          <lem> contains the lemma, or base text, of a textual variation.\n          <rdg> contains a single reading within a textual variation.\n         N.B. the term lemma is used here in the text-critical sense of\n          the reading accepted as that of the original or of the base text. This sense\n        differs from that in which the word is used elsewhere in the Guidelines, for example as in\n        the attribute lemma where the intended sense is the root form of an inflected\n          word, or the heading of an entry in a reference book, especially a dictionary.\n        \n      In recording readings within an apparatus entry, the rdg element should always be\n        used; each app usually contains at least one rdg, though it may contain only \n        notes.\n      The lem element may also be used to record the base text of the source edition, \n        to mark the readings of a base witness, to indicate the preference of an editor or encoder \n        for a particular reading, or (e.g. in the case of an external apparatus) to indicate \n        precisely to which portion of the main text the variation applies. Those who prefer to work \n        without the notion of a base text or who are not using the parallel segmentation method \n        may prefer not to use it at all. How it is used depends in part on the method chosen for \n        linking the apparatus to the text; for more information, see section 12.2 Linking the Apparatus to the Text.\n      Readings may be encoded individually, or grouped for clarity using the rdgGrp\n        element described in section 12.1.3 Indicating Subvariation in Apparatus Entries.\n      As members of the attribute class att.textCritical, both of these elements \n         inherit the following attributes:  <att.textCritical> defines a set of attributes common to all elements representing variant readings in text critical work. . \n        rdg (but not rdgGrp) is also a member of att.witnessed: \n        <att.witnessed> provides attributes used to identify the witnesses\n  supporting a particular reading in a critical apparatus. These elements also inherit the following attributes from the \n        att.global.responsibility class: \n          <att.global.responsibility> provides attributes indicating the agent\n    responsible for some aspect of the text, the markup or \n    something asserted by the markup, and the degree of certainty \n    associated with it.\n         As elsewhere, these attributes may be used to indicate the person responsible\n        for the editorial decision being recorded, and also the degree of certainty associated with\n        that decision by the person carrying out the encoding. \n      The wit attribute identifies the witnesses which have the reading in question.\n        It is required if the apparatus gathers together readings from different witnesses, but may\n        be omitted in an apparatus recording the readings of only one witness, e.g. substitutions,\n        divergent opinions on what is in the witness or on how to expand abbreviations, etc. Even in\n        such a one-witness apparatus, however, the wit attribute may still be useful when\n        it is desired to record the occurrence of a particular reading in some other witness. For\n        other methods of identifying the witnesses to a reading, see section 12.1.4 Witness Information. \n      The type attribute allows the encoder to classify readings in any convenient\n        way, for example as substantive variants of the lemma:\n        bibliography\n        or as orthographic variants:\n        bibliography\n      The varSeq and cause attributes may be used to convey information on\n        the sequence and cause of variation. In the following apparatus fragment, the reading\n          Eryment is tagged as sequential to (derived from) the reading\n          Experiment, and the cause is given as loss of the abbreviation for\n          per.\n        bibliography\n      If a manuscript is written in several hands, and it is desired to report which hand wrote a\n        particular reading, the hand attribute should be used. For example, in the Munich\n        manuscript containing the Carmina Burana, the word\n          alle has been changed to allen: bibliography\n        \n        \n        \n      Similarly, if a witness is hard to decipher, it may be desired to indicate responsibility\n        for the claim that a particular reading is supported by a particular witness. In line 2212a\n        of Beowulf, for example, the manuscript is read in different ways by\n        different scholars; the editor Klaeber prints one text, using parentheses to indicate his\n        expansion, and records in the apparatus two different accounts of the manuscript reading, by\n        Zupitza and Chambers:1\n        bibliography\n      \n      Because the hand attribute indicates a particular manuscript hand, it is intelligible \n        only on a reading from a single witness. If an encoder wishes to indicate that a particular \n        reading from a list in wit is in a particular hand, the witDetail element \n        should be used; see section 12.1.4 Witness Information.\n      Where there is a greater weight of editorial discussion and interpretation than can\n        conveniently be expressed through the attributes provided on these elements (for example\n        where the editor wishes to discuss how a section of text might be punctuated) this information \n        can be attached to the apparatus in a note.\n      The note element may also be used to record the specific wording of notes in the\n        apparatus of the source edition, as here in a transcription of Friedrich Klaeber's note on\n          Beowulf 2207a: bibliography\n         Notes providing details of\n        the reading of one particular witness should be encoded using the specialized\n          witDetail element described in section 12.1.4 Witness Information.\n      Encoders should be aware of the distinct fields of use of the attribute values\n          wit, hand, and source. Broadly, wit identifies\n        the physical entity in which the reading is found (manuscript, clay tablet, papyrus, printed\n        edition); hand refers to the agent responsible for inscribing that reading in\n        that physical entity (scribe, author, inscriber, hand 1, hand 2); source indicates\n        the scholar responsible for asserting the existence of that reading in that physical entity.\n        In some cases, the categories may blur: a scholar may produce an edition introducing\n        readings for which he or she is responsible; that edition may itself become a witness in a\n        later critical apparatus. Thus, readings introduced as corrections in the earlier edition\n        will be seen in the later apparatus as witnessed by the earlier edition. As observed in the\n        discussion concerning the discrimination of hand and resp in \n        transcription of primary sources in section 11.3.2.2 Hand, Responsibility, and Certainty Attributes, the division of layers of\n        responsibility through various scholars for particular aspects of a particular reading may\n        require the more complex mechanisms for assigning responsibility described in chapter 21 Certainty, Precision, and Responsibility.\n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TC#TC\">12 Critical Apparatus</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLL#TCAPLL\">12.1 The Apparatus Entry, Readings, and Witnesses</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPSU#TCAPSU\">12.1.3 Indicating Subvariation in Apparatus Entries</a>","content":"\n      12.1.3 Indicating Subvariation in Apparatus Entries\n      The rdgGrp element may be used to group readings, either because they have\n        identical values on one or more attributes, or because they are seen as forming a\n        self-contained variant sequence, or for some other reason. This grouping of readings is\n        entirely optional: no such grouping of readings is required. \n          <rdgGrp> within a textual variation,\ngroups two or more readings perceived to have a genetic\nrelationship or other affinity.\n        \n      The rdgGrp element is a member of class att.textCritical and therefore can carry the type,\n          cause, varSeq, hand, and resp attributes\n        described in the preceding section. When values for any of these attributes are given on a\n          rdgGrp element, the values given are inherited by the rdg or\n          lem elements nested within the reading group, unless overridden by a new\n        specification on the individual reading element.\n      To indicate that both Hg and La vary only orthographically from the lemma, one might tag\n        both readings rdg type='orthographic', as shown in the preceding section. This\n        fact can be expressed more perspicuously, however, by grouping their readings into a\n          rdgGrp, thus:\n        bibliography\n      Similarly, rdgGrp may be used to organize the substantive variants of an apparatus\n        entry. Editors may need to indicate that each of a group of witnesses may be taken as all\n        supporting a particular reading, even though there may be variation concerning the exact\n        form of that reading in, or the degree of support offered by, those witnesses. For example:\n        one may identify three substantive variants on the first word of Chaucer's Wife of\n          Bath's Prologue in the manuscripts: these might be expressed in regularized\n        spelling as Experience, Experiment, and\n          Eriment. In fact, the manuscripts display many different spellings\n        of these words, and a scholar may wish both to show that the manuscripts have all these\n        variant spellings and that these variant spellings actually support only the three\n        regularized spelling forms. One may term these variant spellings as\n          subvariants of the regularized spelling forms.\n      This subvariation can be expressed within an app element by gathering the readings\n        into three groups according to the normalized form of their reading. All the readings within\n        each group may be accounted subvariants of the main reading for the group, which may be\n        indicated by tagging it as a lem element or as rdg type='groupBase'.\n      In this example, the different subvariants on Experience,\n          Experiment, and Eriment are held within\n        three rdgGrp elements nested within the enclosing app element:\n        bibliography\n        From this, one may deduce that the regularized reading Experience is\n        supported by all three manuscripts El Hg Ha4, although the spelling differs in Ha4, and that\n        the regularized reading Eriment is supported by Ra2, even though the\n        form differs in that manuscript. Accordingly, an application which recognizes that these\n        apparatus entries show subvariation may then assign all the witnesses instanced as attesting\n        the sub-variants on that lemma as actually supporting the reading of the lemma itself at a\n        higher level of classification. Thus, Ha4 here supports the reading\n          Experience found in El and Hg, even though it is spelt slightly\n        differently in Ha4.\n      Reading groups may nest recursively, so that variants can be classified to any desired\n        depth. Because apparatus entries may also nest, the app element might also be used\n        to group readings in the same way. The example above is substantially identical to the\n        following, which uses app instead of rdgGrp:\n        bibliography\n        This expresses even more clearly than the previous encoding of this material that at the\n        highest level of classification (apparatus entry A1), this variation has three normalized\n        readings, and that the first of these is supported by manuscripts El, Hg, and Ha4; the\n        second by Cp, Ld1, and La; and the third by Ra2. Some encoders may find the use of nested\n        apparatus entries less intuitive than the use of reading groups, however, so both methods of\n        classifying the readings of a variation are allowed.\n      Reading groups may also be used to bring together variants which form an apparent\n        developmental sequence, and to make clear that other readings are not part of that sequence,\n        as in the following example, which makes clear that the variant sequence\n          experiment to eriment says nothing about the\n        relative priority of experiment and\n        experience:\n        bibliography\n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TC#TC\">12 Critical Apparatus</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLL#TCAPLL\">12.1 The Apparatus Entry, Readings, and Witnesses</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLW#TCAPLW\">12.1.4 Witness Information</a>","content":"\n      12.1.4 Witness Information\n      A given reading is associated with the set of witnesses attesting it by listing the\n        witnesses in the wit attribute on the rdg or lem element. Special \n        mechanisms, described in the following sections, are needed to associate annotation on a reading \n        with one specific witness among several (section 12.1.4.1 Witness Detail Information), to transcribe \n        witness information verbatim from a source edition (section 12.1.4.2 Witness Information in the Source), and to \n        identify the formal lists of witnesses typically provided in the front matter of critical \n        editions (section 12.1.4.3 The Witness List).\n      \n      \n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TC#TC\">12 Critical Apparatus</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLL#TCAPLL\">12.1 The Apparatus Entry, Readings, and Witnesses</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLW#TCAPLW\">12.1.4 Witness Information</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPWD#TCAPWD\">12.1.4.1 Witness Detail Information</a>","content":"\n        12.1.4.1 Witness Detail Information\n        When it is desired to give additional information about the reading of a particular witness \n          or witnesses, such as noting that it appears in the margin or was corrected\n          for the reading, that information may be given in a witDetail element. This is a\n          specialized note, which can be linked to both a reading and to one or more of the\n          witnesses for that reading. The link to the reading may be inferred from witDetail's \n          position or made explicit by the target attribute which witDetail inherits \n          from the attribute class \n          att.pointing; the link to the witness, by the wit attribute. \n            <att.pointing> provides a set of attributes used by all elements which point\n  to other elements by means of one or more URI references.\n            <witDetail> gives further information about a particular witness, or\nwitnesses, to a particular reading.\n          \n        Because it annotates an attribute value, witDetail cannot be included in the text at the point of\n          attachment; without a target attribute, it refers to the closest preceding lem or rdg. \n          But if there is any ambiguity or if the witDetail refers to multiple readings, target must be \n          used to point to the reading(s) being annotated. To indicate that the\n          Ellesmere manuscript has an ornamental capital in the word\n            Experience, for example, one might write:\n          bibliography\n          This encoding makes clear that the ornamental capital mentioned is in the Ellesmere\n          manuscript, and not in Hengwrt or Ha4. \n        Like note, witDetail may be used to record the specific wording of\n          information in the source text, even when the information itself is captured in some more\n          formal way elsewhere. The example from the Carmina Burana above (section\n            12.1.2 Readings), for example, might be extended thus, to record the wording of\n          the note explaining that the variant reading adds n to the original \n          in a second hand: bibliography\n          \n          \n          \n        Feature structures containing information about the text in a witness (whether retroversion,\n          regularization, or other) can also be linked to specific lem and rdg\n          instances. See chapter 18 Feature Structures.\n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TC#TC\">12 Critical Apparatus</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLL#TCAPLL\">12.1 The Apparatus Entry, Readings, and Witnesses</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLW#TCAPLW\">12.1.4 Witness Information</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCSCWL#TCSCWL\">12.1.4.2 Witness Information in the Source</a>","content":"\n        12.1.4.2 Witness Information in the Source\n        Although witDetail provides a good way to annotate witness references in wit, lists\n          of sigla 2 may be complex enough that it is impractical to use the combination of \n          wit and witDetail.\n          Moreover, in the transcription of printed critical editions, it may be desirable to retain for\n          future reference the exact form in which the source edition records the witnesses to a\n          particular reading; this is particularly important in cases of ambiguity in the\n          information, or uncertainty as to the correct interpretation. The wit element may\n          be used to transcribe such lists of witnesses to a particular reading. \n            <wit> contains a list of one or more sigla of witnesses attesting a\ngiven reading, in a textual variation.\n           The wit list may appear following a rdg, rdgGrp, or\n            lem element in any apparatus entry. wit may be used in a way functionally equivalent\n          to wit if the sigla therein are wrapped in refs with target attributes\n          pointing to a predefined witness. For example \n          bibliography\n          which indicates that the reading nundum for nondum is to be found in MSS G (although it is \n          corrected to nondum in the primary hand) and P, might be written:\n          bibliography\n          This is somewhat more verbose, but accomplishes the same goal. Because wit is more succinct, and because it makes\n          the automated verification of correct witness references easier, using wit (with witDetail when\n          needed) is almost always to be preferred.\n        \n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TC#TC\">12 Critical Apparatus</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLL#TCAPLL\">12.1 The Apparatus Entry, Readings, and Witnesses</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLW#TCAPLW\">12.1.4 Witness Information</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPWL#TCAPWL\">12.1.4.3 The Witness List</a>","content":"\n        12.1.4.3 The Witness List\n        A list of all identified witnesses should normally be supplied in the front matter of the\n          edition, or in the sourceDesc element of its header. This may be given either as\n          a simple bibliographic list, using the listBibl element described in \n          3.12 Bibliographic Citations and References, or as a listWit element, which contains a series of\n            witness elements. Each witness element may contain a brief\n          characterization of the witness, given as one or more prose paragraphs. If more detailed\n          information about a manuscript witness is available, it should be represented using the\n            msDesc element provided by the msdescription\n          module; an msDesc may appear within a listBibl. \n        Whether information about a particular witness is supplied by means of a bibl,\n            msDesc, or witness element, a unique siglum for this source should\n          always be supplied, using the global xml:id attribute. This identifier can then\n          be used elsewhere to refer to this particular witness. \n            <listWit> lists definitions for all the witnesses referred to by a critical\n  apparatus, optionally grouped hierarchically.\n            <witness> contains either a description of a single witness referred to\nwithin the critical apparatus, or a list of witnesses which is to be\nreferred to by a single sigil.\n            <msDesc> contains a description of a single identifiable\n    manuscript or other text-bearing object such as an early printed book.\n            <bibl> contains a loosely-structured bibliographic citation of which the sub-components may or may\n    not be explicitly tagged.\n            <listBibl> contains a list of bibliographic citations of any kind.\n          \n        The minimal information provided by a witness list is thus the set of sigla for all the\n          witnesses named in the apparatus. For example, the witnesses referenced by the examples of\n          this chapter might simply be listed thus:\n          \n        It is more helpful, however, for witness lists to be somewhat more informative: each\n            witness element should contain at least a brief prose description of the\n          witness, perhaps including a bibliographic citation, as in the following examples:\n          bibliography\n          As the last example shows, the witness description here may be complemented by a reference\n          to a full description of the manuscript supplied elsewhere, typically as the content of an\n            msDesc or bibl element. Alternatively, it may contain a whole\n          paragraph of commentary for each witness: bibliography\n          \n        \n        It would however generally be preferable to represent such detailed information using an\n          appropriately structured msDesc element, as discussed in chapter 10 Manuscript Description. Note also that if the witnesses being recorded are not manuscripts but\n          printed works, it may be preferable to document them using the standard bibl or\n            biblStruct elements described in 3.12 Bibliographic Citations and References, as in this example:\n          bibliography\n        \n        In text-critical work it is customary to refer to frequently occurring groups of\n          witnesses by means of a single common siglum. Such sigla may be documented as\n          pseudo-witnesses in their own right by including a nested witness list within the witness\n          list, which uses the siglum for the group as its identifier, and supplies a fuller name for\n          the group in its optional child head element, before listing the other witnesses\n          contained by the group.\n          For example, the Constant Group C of manuscripts comprising witnesses Cp, La, and S12,\n          might be represented as follows: bibliography\n          That the reading Experiment occurs in all three manuscripts can now be\n          indicated simply as follows: bibliography\n        The more elaborate example below shows both multiple levels of nesting and a strategy for mapping\n          the the xml:id of the witness to the siglum which will be displayed to the reader of a derived visualisation:\n          bibliography\n          Here we have a summary of the witnesses, with their sigla, used in an edition, as is generally\n          found in the conspectus siglorum in the front matter of a critical edition.\n          Families are indicated with Greek letters and manuscript witnesses with Latin letters. The siglum for\n          display is always contained in the abbr with type siglum child of each\n          witness, so it is always easy to retrieve the display siglum for a given identifier reference. \n        \n\n\n        Situations commonly arise where there are many more or less fragmentary witnesses, such\n          that there may be quite distinct groups of witnesses for different parts of a text or\n          collection of texts. One may treat this with distinct listWit elements for each\n          different part. Alternatively, one may have a single listWit element at the\n          beginning of the file or in its header listing all the witnesses, partial and complete,\n          for the text, with the attestation of fragmentary witnesses indicated within the apparatus\n          by use of the witStart and witEnd elements described in section 12.1.5 Fragmentary Witnesses.\n        If a witness list is provided, it may be unnecessary to give, in each apparatus entry, an\n          exhaustive list of the witnesses which agree with the base text. An application program\n          can—in principle—compare the witnesses given for each variant found with those given in\n          the full list of witnesses, subtracting from this list all the witnesses not active at\n          this point (perhaps because of lacuna, or because they contain a variation on a different,\n          overlapping lemma) and thence calculate all the manuscripts agreeing with the base text.\n          In practice, encoders may find it less error-prone to list all witnesses explicitly in\n          each apparatus entry.\n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TC#TC\">12 Critical Apparatus</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLL#TCAPLL\">12.1 The Apparatus Entry, Readings, and Witnesses</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPMI#TCAPMI\">12.1.5 Fragmentary Witnesses</a>","content":"\n      12.1.5 Fragmentary Witnesses\n      If a witness is incomplete (whether a single fragment, a series of fragments, or a\n        relatively complete text with one or more lacunae), it is usually desirable to record\n        explicitly where its preserved portions begin and end. The following empty tags, which may\n        occur within any lem or rdg element, indicate the beginning or end of a\n        fragmentary witness or of a lacuna within a witness: \n          <witStart> indicates the beginning, or resumption, of the text of a\nfragmentary witness.\n          <witEnd> indicates the end, or suspension, of the text of a fragmentary\nwitness.\n          <lacunaStart> indicates the beginning of a lacuna in the text of a mostly\ncomplete textual witness.\n          <lacunaEnd> indicates the end of a lacuna in a mostly complete textual\nwitness.\n         These elements constitute the class model.rdgPart,\n        members of which are permitted within the elements lem and rdg when the\n        module defined by this chapter is included in a schema.\n      Suppose a fragment of a manuscript X of the Wife of Bath's Prologue has a\n        physical lacuna, and the text of the manuscript begins with\n        auctorite. In an apparatus this might appear thus, distinguished from\n        the reading of other manuscripts by the presence of the lacunaEnd element:\n        bibliography\n        Alternatively, it may be clearer to record this as\n        bibliography\n        since this shows more clearly that the lacuna and the reading of auctorite both\n        appear in witness X. In some cases, the apparatus in the source may commence recording the\n        readings for a particular witness without its being clear whether the previous absence of\n        readings for this witness is due to a lacuna, or to some other reason. The witStart\n        element may be used in this circumstance:\n        bibliography\n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TC#TC\">12 Critical Apparatus</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLK#TCAPLK\">12.2 Linking the Apparatus to the Text</a>","content":"\n    12.2 Linking the Apparatus to the Text\n    Three different methods may be used to link a critical apparatus to the text: \n        the location-referenced method,\n        the double-end-point-attached method, and\n        the parallel segmentation method.\n      \n    Both the location-referenced and the double end-point methods may be used with either\n        in-line or external apparatus, the former dispersed within the\n      base text, the latter held in some separate location, within or outside the document containing the\n      base text. The parallel segmentation method may only be used for in-line apparatus.\n    \n    \n\n    Where an external apparatus is used, the listApp element \n    provides a useful means of grouping together a series of app elements of a specific type,\n    or from a particular source:\n      \n        <listApp> contains a list of apparatus entries.\n        <att.typed> provides attributes that can be used to classify or subclassify elements in any way.\n      \n      \n      listApp elements would normally appear in the back of \n    a document, but they may also be placed in any other convenient location.\n    \n    Any document containing app elements requires a variantEncoding declaration\n      in the encodingDesc element of its TEI header, thus: \n        <variantEncoding> declares the method used to encode text-critical variants.\n      \n\n    \n    \n    \n\n    \n\n    \n\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TC#TC\">12 Critical Apparatus</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLK#TCAPLK\">12.2 Linking the Apparatus to the Text</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLO#TCAPLO\">12.2.1 The Location-referenced Method</a>","content":"\n      12.2.1 The Location-referenced Method\n      The location-referenced method of encoding apparatus provides a convenient method for\n        encoding printed apparatus; in this method as in most printed editions, the apparatus is\n        linked to the base text by indicating explicitly only the block of text on which there is a\n        variant (noted usually by a canonical reference scheme, or by line number in the edition,\n        such as A 137 or Page 15 line 1).\n      If the location-referenced method is used for an apparatus stored externally to the base\n        text, the TEI header must have the declaration:\n        \n      In the body of the document, the base text (here El) will appear:\n        bibliography\n      Elsewhere in the document, or in a separate file, the apparatus will appear. On each\n          app element, the loc attribute should be specified to indicate where\n        the variant occurs in the base text.\n        bibliography\n      If the same text is encoded using in-line storage, the apparatus is dispersed through the\n        base text block to which it refers. In this case, the location of the variant can be read\n        from the line in which it occurs.\n        bibliography\n      Since the location is not required to be exact, the apparatus for a line might also appear\n        at the end of the line:\n        bibliography\n      When the apparatus is linked to the text by means of location references, as shown here, it\n        is not possible to find automatically the precise portion of text varied by the readings. In\n        order to show explicitly what portion of the base text is replaced by the variant readings,\n        the lem element may be used:\n        bibliography\n        Often the lemma will have no attributes, being simply the base text\n          reading and requiring no qualification, but it may optionally carry the normal\n        attributes, as shown here. Some text critics prefer to abbreviate or elide the lemma, in\n        order to save space or trouble; such practice is not forbidden by these Guidelines, but no\n        recommendations are made for conventions of abbreviating the lemma, whether abbreviation of\n        each word, or suppression of all but the first and last word, etc.\n      Where it is intended that the apparatus be complete enough to allow the reconstruction of\n        the witnesses (or at least of their non-orthographic variations), simple location-reference\n        methods are unlikely to be as successful as the other two methods, which allow the\n        unambiguous reconstruction of the lemma from the encoding.\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TC#TC\">12 Critical Apparatus</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLK#TCAPLK\">12.2 Linking the Apparatus to the Text</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPDE#TCAPDE\">12.2.2 The Double End-Point Attachment Method</a>","content":"\n      12.2.2 The Double End-Point Attachment Method\n      In the double end-point attachment method, the beginning and end of the lemma in the base\n        text are both explicitly indicated. It thus differs from the location-referenced method, in\n        which only the larger span of text containing the lemma is indicated. Double end-point\n        attachment permits unambiguous matching of each variant reading against its lemma. It or the\n        parallel-segmentation method should be used in all cases where this is desired, for example\n        where the apparatus is intended to enable full reconstruction of the text, or of the\n        substantives, of every witness.\n      When the double end-point attachment method is used, the from and to\n        attributes of the app element are used to indicate the beginning and ending points\n        of the reading in the base text: their values are identifiers which occur at the locations\n        in question. If no other markup is present there, the beginning and ending points should be\n        marked using the anchor element defined in chapter 16 Linking, Segmentation, and Alignment. In cases\n        where it is not possible to insert anchors within the base text (e.g. where the text is on a\n        read-only medium) the beginning and end of the lemma may be indicated by using the\n          indirect pointing mechanisms discussed in chapter 16 Linking, Segmentation, and Alignment. Explicit anchors are more likely to be reliable, and are therefore to be preferred.\n      The double end-point attachment method may be used with in-line or external apparatus. In\n        the latter case, the base text (here El) will appear with anchor elements inserted\n        at every place where a variant begins or ends (unless some element with an identifier\n        already begins or ends at that point):\n        bibliography\n        The apparatus will be separately encoded:\n        bibliography\n        No anchor element is needed at the beginning of the line, since the from\n        attribute can use the identifier for the line as a whole; the lemma is assumed to run from\n        the beginning of the element indicated by the from attribute, to the end of that\n        indicated by the to attribute. If no value is given for to, the lemma\n        runs from the beginning to the end of the element indicated by the from\n        attribute.\n      When the apparatus is encoded in-line, it is dispersed through the base text. Only the\n        beginning of the lemma need be marked with an anchor, since the app is\n        inserted at the end of the lemma, and itself therefore marks the end of the lemma.\n        bibliography\n      The lemma need not be repeated within the app element in this method, as it may be\n        extracted reliably from the base text. If an exhaustive list of witnesses is available, it\n        will also not be necessary to specify just which manuscripts agree with the base text to\n        enable reconstruction of witnesses. An application will be able to determine the manuscripts\n        that witness the base reading, by noting which witnesses are attested as having a variant\n        reading, and inferring the base text reading for all others after adjusting for fragmentary\n        witnesses and for witnesses carrying overlapping variant readings.\n      Alternatively, if it is desired to make an explicit record of the attestation of the base\n        text, the lem element may be embedded within app, carrying the witnesses\n        to the base. Thus\n        bibliography\n      This method is designed to cope with overlapping lemmata. For example,\n        at line 117 of the Wife of Bath's Prologue, the manuscripts Hg (Hengwrt), El (Ellesmere),\n        and Ha4 (British Library Harleian 7334) read: HgAnd of so parfit wys a wight ywroghtElAnd for what profit was a wight ywroghtHa4And in what wise was a wight ywroght\n      In this case, one might wish to record in what wise was in Ha4 as a\n        single variant for of so parfit wys in Hg, and was a\n          wight in El and Ha4 as a variant on wys a wight in Hg.\n        This method can readily cope with such difficult situations, typically found in large and\n        complex traditions:\n        bibliography\n        The parallel segmentation method, to be discussed next, cannot handle overlaps among\n        variants, and would require the individual variants to be split into pieces.\n      Because creation and interpretation of double end-point attachment apparatus will be\n        lengthy and difficult it is likely that they will usually be created and examined by\n        scholars only with mechanical assistance.\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TC#TC\">12 Critical Apparatus</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLK#TCAPLK\">12.2 Linking the Apparatus to the Text</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPPS#TCAPPS\">12.2.3 The Parallel Segmentation Method</a>","content":"\n      12.2.3 The Parallel Segmentation Method\n      This method differs from the double end-point attachment method in that all variants at any\n        point of the text are expressed as variants on one another. In this method, no two\n        variations can overlap, although they may nest. The texts compared are divided into matching\n        segments all synchronized with one another. This permits direct comparison of any span of\n        text in any witness with that in any other witness. With a positive apparatus, it is\n        straightforward for an application to extract the full text of any one witness from the\n          apparatus.3\n      This method will (by definition) always be satisfactory when there are just two texts for\n        comparison (assuming they are in the same language and script). It will however be less\n        convenient for textual traditions where establishing a base text with variations from\n        it is not a satisfactory goal for the edition, or in some cases where every detail of\n        variation needs to be modeled.\n      In the parallel segmentation method, each segment of text on which there is variation is\n        marked by an app element. If there is a preferred (or base) reading it is tagged\n        with lem; each reading is given in a rdg element: bibliography\n      This method cannot be used with external apparatus: it must be used in-line. Note that\n        apparatus encoded with this method may be translated into the double end-point attachment\n        method and back without loss of information. Where double-end-point-attachment encodings\n        have no overlapping lemmata, translation of these to the parallel segmentation encoding and\n        back will also be possible without loss of information.\n\n      As noted, apparatus entries may nest in this method: if an imaginary fifth manuscript of\n        the text read Auctoritee, though none experience, the variation on\n        the individual words of the line would nest within that for the line as a whole: bibliography\n      Parallel segmentation cannot, however, deal very gracefully with variants which overlap\n        without nesting: such variants must be broken up into pieces in order to keep all witnesses\n        synchronized. \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TC#TC\">12 Critical Apparatus</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLK#TCAPLK\">12.2 Linking the Apparatus to the Text</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCAPLN#TCAPLN\">12.2.4 Other Linking Methods</a>","content":"\n      12.2.4 Other Linking Methods\n       When an apparatus is provided it does not need to be given at the location in the\n        transcription where the variation, emendation, attribution, or other apparatus observation\n        occurs. Instead it may be stored in a separate place in the same file, or indeed in another\n        file, and point to the location at which it is meant to be used. Storing apparatus entries\n        separately can be beneficial when encoding multiple competing, potentially overlapping,\n        interpretations of the same point in the source texts. \n       The location-referenced method can be used to point a position in a text using the\n          loc attribute and a canonical reference that is understood and documented in\n        the context of the file where it is used. Where possible it is recommended that other\n        methods use the from attribute to point to an xml:id attribute on an\n          anchor or other element at the location where the apparatus observation takes\n        place. The contents of an element pointed to are understood to be equivalent to a\n          lem if none exists in the app, and if a lem does exist this\n        should replace any content. \n      The from attribute is a teidata.pointer datatype and\n        thus contains a URI as a value. This means that it can point directly to an\n          xml:id, an xml:id in another local file, or indeed a file identified\n        by any URL or URN.\n        bibliography\n        This could also be encoded as:\n        bibliography\n        However, this should be considered more fragile since a full reading of the lem is\n        not provided in the source file. \n       In addition, URLs can contain XPointer schemes including xpath(), range(), and\n        string-range() which can be used in providing the location of an app that is stored\n        separately from the text to which it applies. Both from and to can be\n        used, as in the double end-point attachment method, to identify the starting and ending\n        location for an apparatus using XPointer schemes described in 16.2.4 TEI XPointer Schemes section\n        to more precisely identify this location where beneficial.\n        bibliography\n      \n      If only the from attribute is provided then it should be understood that this\n        supplies the location of the textual variance that the apparatus documents. If the\n          from attribute contains an XPointer scheme that identifies a range of text (or\n        elements) then this is understood to record the starting and ending of the range as in the\n        double end-point attachment method. In such a case a @to attribute is unnecessary. \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TC#TC\">12 Critical Apparatus</a><a class=\"breadcrumb\" href=\"p5.xml?id=TCTR#TCTR\">12.3 Using Apparatus Elements in Transcriptions</a>","content":"\n    12.3 Using Apparatus Elements in Transcriptions\n    It is often desirable to record different transcriptions of one stretch of text. These\n      variant transcriptions may be grouped within a single app element. An application may\n      then construct different views of the transcription by extraction of the\n      appropriate variant readings from the apparatus elements embedded in the transcription.\n    For example, alternative expansions can be recorded in several different expan\n      elements, all grouped within an app element. Consider, for example, the three\n      different transcriptions given below of line 105 of the Hengwrt manuscript of Chaucer's\n        The Wife of Bath's Prologue. The last word of the line Virginite\n        is grete perfection is written perfectio followed by two\n      minims over which a bar has been drawn, which has been read in different ways by different\n      scholars. The first transcription, by Elizabeth Solopova, represents the two minims with bar\n      above as a special composite character using the g element. This transcription notes\n      this as a mark of abbreviation but gives no expansion for it. A second transcriber, F. J.\n      Furnivall, regards the bar as an abbreviation of u, and therefore reads\n      the two minims as an n. A third transcriber, P. G. Ruggiers, regards\n      the bar as an abbreviation of n, reading the minims as\n        u. This information may be held within an app structure, as\n      follows:\n      bibliography\n      This example uses special purpose elements am and ex used to represent\n      abbreviation marks and editorial expansion respectively; these elements are provided by the\n        transcr module documented in chapter 11 Representation of Primary Sources, which\n      should be consulted for further discussion of methods of representing multiple readings of a\n      source.\n      \n    Editorial notes may also be attached to app structures within transcriptions. Here,\n      editorial preference for Ruggiers' expansion and an explanation of that preference is given:\n      bibliography\n    \n    In most cases, elements used to indicate features of a primary textual source may be\n      represented within an app structure simply by nesting them within its readings, just\n      as the am and ex elements are nested within the rdg elements in the\n      example just given. However, in cases where the tagged feature extends across a span of text\n      which might itself contain variant readings which it is desired to represent by app\n      structures, some adaptation of the tagging may be necessary. For example, a span of text may\n      be marked in the transcription of the primary source as a single deletion but it may be\n      desirable to represent just a few words from this source as individual deletions within the\n      context of a critical apparatus drawing together readings from this and several other\n      witnesses. In this case, the tagging of the span of words as one deletion may need to be\n      decomposed into a series of one-word deletions for encoding within the apparatus. If it is\n      important to record the fact that all were deleted by the same act, the markup may use the\n        join element or the next and prev attributes defined by\n      chapter 16 Linking, Segmentation, and Alignment.\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TC#TC\">12 Critical Apparatus</a><span class=\"breadcrumb\">12.4 Strategies for Encoding Variation</span>","content":"\n    12.4 Strategies for Encoding Variation\n    Textual variation may manifest itself in many ways. Variation most frequently occurs at the phrase level,\n      but is also common at higher structural levels, such as the verse line, paragraph, or chapter. When\n      these structures are involved, some care must be taken in their encoding to ensure that TEI's\n      Abstract Model is not being broken. It would be an error, for example, to have a div in\n      the lem, but a p in a rdg inside the same apparatus entry, because these \n      structures cannot occur at the same level. Similarly, it is an error if the contents of an \n      apparatus entry place a p inside another p or an l inside an l.\n    Phenomena such as omissions and transpositions in witnesses will require some encoding strategies\n      that differ from those in the examples above. An editor wishing to signal an omission in one witness \n      should encode the omission using an empty rdg, thus:\n      bibliography\n      Notice that in this example, the variation occurs at the unit of the verse line. The scribe of MS J has \n      skipped line 18 (probably by mistake) because, like line 19, it begins with the name \"Hypsipyle.\" If a witness \n      contains an interpolation that the editor does not wish to show in the base text, an empty\n      lem should be used, in the same fashion.\n    \n    Transpositions are harder to encode, because they involve variation that occurs in different \n      locations. A single app will therefore not be sufficient, and the variants must be linked. \n      For example, in his edition of Propertius 1.16, Housman printed lines 25-6 after line 32, Heyworth prints \n      them in place. We might encode Heyworth's edition, which records Housman's conjecture despite disagreeing \n      with it, as follows:\n      bibliography and then, after line 32:\n      bibliography\n      Note that both apps are linked via the exclude attribute, because they are mutually\n      exclusive: if one reading is chosen for display in a reading interface, for example, the other must \n      disappear and vice versa. To avoid repetition, the second pair of lines can make use of the copyOf \n      attribute. If they were both transposed and somewhat different, then both sets should be written in full.\n    \n    Apparatus entries may nest when there is variation at both higher and lower structural levels, e.g.:\n      bibliography\n      Here, MS C omits lines 8-11, but there are variations the editor wishes to record in the other witnesses \n      which do have these lines. Therefore, an outer app gives the lines in the lem and the\n      omission in a rdg. Further variation is encoded for lines 8 and 9 using nested apps.\n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TC#TC\">12 Critical Apparatus</a><span class=\"breadcrumb\">12.5 Module for Critical Apparatus</span>","content":"\n    12.5 Module for Critical Apparatus\n    The module described in this chapter makes available the following components:\n    \n      Text Criticism\n      Critical Apparatus\n      \n      \n      \n      \n      \n    \n\n    The selection and combination of modules to form a TEI schema is\n    described in 1.2 Defining a TEI Schema.\n        \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a>","content":"\n\n  13 Names, Dates, People, and Places\n\n  This chapter describes a module which may be used for the encoding of names and other phrases descriptive of persons, places,\n    or organizations, in a manner more detailed than that possible using the elements already provided for these purposes in the\n    Core module. In section 3.6 Names, Numbers, Dates, Abbreviations, and Addresses it was noted that the elements provided in the core module allow an encoder to\n    specify that a given text segment is a proper noun, or a referring string, and to specify the kind of object\n    named or referred to only by supplying a value for the type attribute. The elements provided by the present module\n    allow the encoder to supply a detailed sub-structure for such referring strings, and to distinguish explicitly between names\n    of persons, places, and organizations.\n\n  This module also provides elements for the representation of information about the person, place, or organization to which a\n    given name is understood to refer and to represent the name itself, independently of its application. In simple terms, where\n    the core module allows one simply to represent that a given piece of text is a name, this module allows one\n    further to represent a personal name, to represent the person being named, and to represent the\n      canonical name being used. A similar range is provided for names of places and organizations. The main intended\n    applications for this module are in biographical, historical, or geographical data systems such as gazetteers and biographical\n    databases, where these are to be integrated with encoded texts.\n\n  The chapter begins by discussing attributes common to many of the elements discussed in the remaining parts of the chapter\n      (13.1 Attribute Classes Defined by This Module) before discussing specifically the elements provided for the encoding of component parts of\n    personal names (section 13.2.1 Personal Names), place names (section 13.2.3 Place Names) and organizational names\n    (section 13.2.2 Organizational Names). Elements for encoding personal and organizational data are discussed in section 13.3 Biographical and Prosopographical Data. Elements for the encoding of geographical data are discussed in section 13.3.4 Places.\n    Finally, elements for encoding onomastic data are discussed in 13.3.6 Names and Nyms, and the detailed encoding of dates and\n    times is described in section 13.4 Dates.\n\n\n\n  \n\n  \n\n  \n\n    \n\n\n  \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDATTS#NDATTS\">13.1 Attribute Classes Defined by This Module</a>","content":"\n    13.1 Attribute Classes Defined by This Module\n    Most of the elements made available by this chapter share some important characteristics which are expressed by their\n      membership in specific attribute classes. Members of the class att.naming have specialized\n      attributes which support linkage of a naming element with the entity (person, place, organization) being named; members of\n      the class att.datable have specialized attributes which support a number of ways of normalizing\n      the date or time of the data encoded by the element concerned.\n\n    \n\n    \n\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDATTS#NDATTS\">13.1 Attribute Classes Defined by This Module</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDATTSnr#NDATTSnr\">13.1.1 Linking Names and Their Referents</a>","content":"\n      13.1.1 Linking Names and Their Referents\n\n      The class att.naming is a subclass of the class att.canonical,\n        from which it inherits the following attributes: \n          <att.canonical> provides attributes that can be used to associate a representation such as a name or title\n    with canonical information about the object being named or referenced.\n         As discussed in 3.6.1 Referring Strings, these attributes provide two different ways of associating any sort\n        of name with its referent. For cases where all that is required is to provide some minimal information about the person\n        name, for example their occupation or status, the att.naming class also provides a simple\n          role attribute. It also provides an additional attribute, which allows the name itself to be associated with\n        a base or canonical form: \n          <att.naming> provides attributes common to elements which refer to named persons, places, organizations etc.\n         The encoder may use these attributes in combination as appropriate. For example: bibliography The ref attribute should be used wherever it is possible to supply a direct link\n        such as a URI to indicate the location of canonical information about the referent. bibliography This encoding requires that there exist somewhere a person element with the identifier\n          DPB1, which will contain canonical information about this particular person, marked up using the elements\n        discussed in 13.3 Biographical and Prosopographical Data below. The same element might alternatively be provided by some other document, of\n        course, which the same attribute could refer to by means of a URI, as explained in 16.2 Pointing Mechanisms: bibliographyMore than one URI may be supplied if the name refers to\n        more than one person. For example, assuming the existence of another person element for Mrs Brown, with\n        identifier EBB1, a reference to the Browns might be encoded bibliography\n      \n\n      The key attribute is provided for cases where no such direct link is required: for example because resolution\n        of the reference is carried out by some local convention, or because the encoder judges that no such resolution is\n        necessary. As an example of the first case, a project might maintain its own local database system containing canonical\n        information about persons and places, each entry in which is accessed by means of some system-specific identifier\n        constructed in a project-specific way from the value supplied for the key attribute.1 As an example of the second case, consider the use of well-established\n        codifications such as country or airport codes, which it is probably unnecessary for an encoder to expand further: bibliography\n      \n\n      However, as explained in 3.6.1 Referring Strings, interchange is improved by use of tag URIs in ref instead of\n          key.\n\n      The nymRef attribute has a more specialized use, where it is the name itself which is of interest rather than\n        the person, place, or organization being named. See section 13.3.6 Names and Nyms for further discussion.\n\n      All members of the att.naming class inherit the following attributes from the att.global.responsibility class: \n          <att.global.responsibility> provides attributes indicating the agent\n    responsible for some aspect of the text, the markup or \n    something asserted by the markup, and the degree of certainty \n    associated with it.\n         This enables an encoder to record the agency responsible for a given assertion (for example, the name) and the\n        confidence placed in that assertion by the encoder. Examples are given below.\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDATTS#NDATTS\">13.1 Attribute Classes Defined by This Module</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDATTSda#NDATTSda\">13.1.2 Dating Attributes</a>","content":"\n      13.1.2 Dating Attributes\n\n      Members of the att.datable class share the following attributes: \n          <att.datable> provides attributes for normalization of elements\n    that contain dates, times, or datable events.\n          <att.datable.w3c> provides attributes for normalization of elements that contain\n  datable events  conforming to the W3C\n  XML Schema Part 2: Datatypes Second Edition.\n        \n      \n      The when attribute is used to specify a normalized form for any temporal expression, independently of how it\n        is represented in the text, as in the following example: bibliography\n      \n      The period attribute provides a convenient way of associating an event or date with a named period. Its value\n        is a pointer which should indicate some other element where the period concerned is more precisely defined. A convenient\n        location for such definitions is the taxonomy element in the classDecl (classification declaration) in\n        the encodingDesc of a TEI header. A taxonomy may contain simply a bibliographic reference to an external\n        definition for it. More usefully, it may also contain a series of category elements, each with an identifier and\n        a description. The identifier can then be used as the target for a period attribute. For example, a taxonomy of\n        named periods might be defined as follows: bibliography\n      \n      With these definitions in place, any datable element may be associated with a specific period: bibliography\n      The other dating attributes provided by this class support a wide range of methods of specifying temporal information in\n        a normalized form. The from and to attributes may be used to express the begining and ending of a\n        period of time, for example: bibliography\n      The notBefore and notAfter attributes may be used to express a range of possibilities for a\n        particular date (or time). For example the following element, extracted from an imaginary prosopographic entry for Anne\n        Calthorpe, indicates that although the exact date of her death is not known, it can be narrowed down to a particular\n        range: from 22 August 1579 to 28 March 1582, inclusive. Ostensibly the encoder has evidence that Anne Calthorpe was alive\n        on the 22nd of August 1579 and evidence that she was already dead on the 28th of March 1582. \n      Since when is used for a particular date or time, from and to for a duration, and\n          notBefore and notAfter for a date or time within a range, it makes no sense to use when\n        in combination with one or more of the others. Thus these Guidelines at present recommend against the use of\n          when in combination with any of from, to, notBefore, or\n        notAfter.\n      The from or to attributes imply that the temporal expression to which they are attached signifies a\n        duration, so the use of either with notBefore or notAfter means a duration is indicated. \n          \n            \n            notBefore\n            from\n          \n          \n            notAfter\n            range of possibilities, inclusive\n            duration from from to sometime before\n                notAfter, inclusive\n          \n          \n            to\n            duration from sometime after notBefore to\n                to, inclusive\n            duration from from to to, inclusive\n          \n        \n      \n      \n      \n      Some further self-explanatory examples follow: bibliography\n        bibliography\n        bibliography\n        bibliography\n        bibliography\n        bibliography\n      \n      Normalization of date and time values permits the efficient processing of data (for example, to determine whether one\n        event precedes or follows another). These examples all use the W3C standard format for representation of dates and times.\n        Further examples, and discussion of some alternative approaches to normalization are given in section 13.4.3 More Expressive Normalizations below.\n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDNA#NDNA\">13.2 Names</a>","content":"\n    13.2 Names\n\n    \n\n    \n\n    \n\n    \n\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDNA#NDNA\">13.2 Names</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPER#NDPER\">13.2.1 Personal Names</a>","content":"\n      13.2.1 Personal Names\n\n      The core rs and name elements can distinguish names in a text but are insufficiently powerful to mark\n        their internal components or structure. To conduct nominal record linkage or even to create an alphabetically sorted list\n        of personal names, it is important to distinguish between a family name, a forename and an honorary title. Similarly, when\n        confronted with a string such as John, by the grace of God, king of England, lord of Ireland, duke of Normandy and\n          Aquitaine, and count of Anjou, the analyst will often wish to distinguish amongst the various constituent elements\n        present, since they provide additional information about the status, occupation, or residence of the person to whom the\n        name belongs. The following elements are provided for these and related purposes: \n          <persName> contains a proper noun or proper-noun phrase referring to a\n  person, possibly including one or more of\n  the person's forenames, surnames, honorifics, added names, etc.\n          <surname> contains a family (inherited) name, as opposed to a given, baptismal, or nick name.\n          <forename> contains a forename, given or baptismal name.\n          <roleName> contains a name component which indicates that the referent has a particular role or position in society, such as an official title or\n        rank.\n          <addName> contains an additional name component, such as a nickname, epithet, or alias, or any other descriptive phrase used within a personal\n    name.\n          <nameLink> contains a connecting phrase or link used within a name but not regarded as part of it, such as van der or\n            of.\n          <genName> contains a name component used to distinguish otherwise similar names on the basis of the relative ages or generations of the persons\n        named.\n        \n      \n\n      In addition to the att.naming attributes mentioned above, all of the above elements are\n        members of the class att.personal, and thus share the following attributes: \n          <att.personal> common attributes for those elements which form part of a name usually, but not necessarily, a personal name.\n        \n      \n      The persName element may be used in preference to the general name element irrespective of whether or\n        not the components of the personal name are also to be marked.\n        The\n        element persName is synonymous with the element name type=\"person\", except that its type\n        attribute allows for further subcategorization of the personal name itself, for example as a married,\n          birth, pen, pseudo, or religious name. Consequently the following examples\n        are equivalent: bibliography\n        bibliography\n        bibliography\n        bibliography\n      \n      The persName element is more powerful than the rs and name elements because distinctive name\n        components occurring within it can be marked as such.\n      Many cultures distinguish between a family or inherited surname and additional personal names, often known\n        as given names. These should be tagged using the surname and forename elements respectively\n        and may occur in any order: bibliography\n      \n      The type attribute may be used with both forename and surname elements to provide further\n        culture- or project-specific detail about the name component, for example: bibliography Values for the type attribute are not constrained, and may be chosen as appropriate to the encoding\n        needs of the project. They may be used to distinguish different kinds of forename or surname, as well as to indicate the\n        function a name component fills within the whole. In this example, we indicate that a surname is toponymic, and also point\n        to the specific place name from which it is derived: bibliography\n      \n\n      The value complex was suggested above for the not uncommon case where the whole of a surname is composed of\n        several other surname elements. These nested surnames may be individually tagged as well, together with appropriate type\n        values: bibliography\n      \n      The full attribute may be used to indicate whether a name is an abbreviation, initials, or given in full:\n          bibliography\n      \n\n      These elements may be applied as the encoder considers appropriate, including cases where phrases or expressions are used\n        to stand for surnames or forenames, as in the following: bibliography\n      \n\n      Similarly, patronymics may be treated as forenames, thus: bibliography When a patronymic is used as a surname, however (e.g.\n        by an individual who otherwise would have no surname, but lives in a culture which requires surnames), it may be tagged as\n        such: bibliography Alternatively, it may\n        be felt more appropriate to mark a patronymic as a distinct kind of name, neither a forename nor a surname, using the\n          addName element: bibliography In the following example, the type attribute is used to distinguish a patronymic from other forenames:\n          bibliography\n      \n\n\n      This example also demonstrates the use of the sort attribute common to all members of the model.persNamePart class; its effect is to state the sequence in which forename and surname\n        elements should be combined when constructing a sort key for the name.\n      Some names include generational or dynastic information, such as a number, or phrases such as Junior, or the\n          Elder; these qualifications may also be used to distinguish similarly named but unrelated people. In either case,\n        the genName element may be used to distinguish such labels from other parts of the name, as in the following\n        examples: bibliography\n        bibliography\n        bibliography\n        bibliography\n      \n      It is also often convenient to distinguish phrases (historically similar to the generational labels mentioned above) used\n        to link parts of a name together, such as von, of, de etc. It is often a matter of arbitrary choice\n        whether such components are regarded as part of the surname or not; the nameLink element is provided as a means\n        of making clear what the correct usage should be in a given case, as in the following examples: bibliography\n        bibliography\n      \n      Finally, the addName and roleName elements are used to mark all name components other than those\n        already listed. The distinction between them is that a roleName encloses an associated name component such as an\n        aristocratic or official title which exists in some sense independently of its bearer. The distinction is not always a\n        clear one. As elsewhere, the type attribute may be used with either element to supply culture- or application-\n        specific distinctions. Some typical values for this attribute for names in the Western European tradition follow: \n            nobility\n          An inherited or life-time title of nobility such as Lord, Viscount,\n              Baron, etc.\n            honorific\n          An academic or other honorific prefixed to a name e.g. Doctor,\n              Professor, Mrs., etc.\n            office\n          Membership of some elected or appointed organization such as President,\n              Governor, etc.\n            military\n          Military rank such as Colonel.\n            epithet\n          A traditional descriptive phrase or nick-name such as The Hammer, The\n              Great, etc. Note, however, that the role a person has in a given context (such as witness,\n          defendant, etc. in a legal document) should not be encoded using the roleName element,\n        since this is intended to mark roles which function as part of a person's name, not the role of the person bearing the\n        name in general. Information about roles, occupations, etc. of a person are encoded within the person element\n        discussed below in 13.3 Biographical and Prosopographical Data.\n      Here are some further examples of the usage of these elements: bibliography\n        bibliography\n        bibliography\n        bibliography\n        bibliography\n      \n      A name may have any combination of the above elements: bibliography\n      \n      Although highly flexible, these mechanisms for marking personal name components will not cater for every personal name,\n        nor for every processing need. Where the internal structure of personal names is highly complex or where name components\n        are particularly ambiguous, feature structures are recommended as the most appropriate mechanism to mark and analyze them,\n        as further discussed in chapter 18 Feature Structures.\n\n      White space is allowed and therefore significant between elements within name, persName,\n          orgName, and placeName. Therefore  encodes Mary Ann DeMint and  encodes MaryAnn De Mint. See 1.3.1.1.6 XML Whitespace for more information on whitespace in XML.\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDNA#NDNA\">13.2 Names</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDORG#NDORG\">13.2.2 Organizational Names</a>","content":"\n      13.2.2 Organizational Names\n      In these Guidelines, we use the term organization for any named collection of people regarded as a single unit.\n        Typical examples include institutions such as Harvard College or the BBC and\n        businesses such as Apple or Google but also racial or ethnic groupings or\n        political factions where these are regarded as forming a single agency such as the Scythians or\n          the Militant Tendency. Giving a loosely-defined group of individuals a name often serves a\n        particular political or social agenda and an analysis of the way such phrases are constructed and used may therefore be of\n        considerable importance to the social historian, even where the objective existence of an organization in this\n        sense is harder to demonstrate than that of (say) a named person. In the case of businesses or other formally constituted\n        institutions, the component parts of an organizational name may help to characterize the organization in terms of its\n        perceived geographical location, ownership, likely number of employees, management structure, etc.\n\n      Like names of persons or places, organizational names can be marked up as referring strings or as proper names with the\n          rs or name elements respectively. The element orgName is provided for use where it is desired\n        to distinguish organizational names more explicitly. \n          <orgName> contains an organizational name.\n         This element is a member of the same attribute classes as persName, as discussed above in 13.1.1 Linking Names and Their Referents.\n      The orgName element may be used to mark up any form of organizational name: bibliography This encoding is equivalent to, but more specific than, either of the following\n        representations: bibliography\n        bibliography As shown above, like\n        the rs and name elements, the orgName element has a key attribute with which an\n        external identifier such as a database key can be assigned to the organization name, and also a ref attribute\n        which can be used to point directly to an org element containing information about the organization itself (see\n        further 13.3.3 Organizational Data). Its type attribute should be used to characterize the name (rather than the\n        organization), for example as an acronym: bibliography as a phrase: bibliography\n        bibliography or as a composite of other kinds of name: bibliography\n      \n      The components of an organization's name may include place names as well as personal names: bibliography or role names: bibliography\n      \n      As indicated above, organizational names may also be specified hierarchically particularly where the named organization\n        is itself a department or a branch of a larger organizational entity. The Department of Modern History, Glasgow\n          University is an example: bibliography\n      \n\n      \n        \n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDNA#NDNA\">13.2 Names</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPLAC#NDPLAC\">13.2.3 Place Names</a>","content":"\n      13.2.3 Place Names\n      Like other proper nouns or noun phrases used as names, place names can simply be marked up with the rs element,\n        or with the name element. For cartographers and historical geographers, however, the component parts of a place\n        name provide important information about the relation between the name and some spot in space and time. They also provide\n        important evidence in historical linguistics.\n      These Guidelines distinguish three ways of referring to places. A place name (represented using the placeName\n        element) may consist of one or more names for hierarchically-organized geo-political or administrative units (see section\n          13.2.3.1 Geo-political Place Names). A place named simply in terms of geographical features such as mountains or rivers is\n        represented using the geogName element (see section 13.2.3.2 Geographic Names). Finally, an expression consisting\n        of phrases expressing spatial or other kinds of relationship between other kinds of named place may itself be regarded as\n        a way of referring to a place, and hence as a kind of named place (see section 13.2.3.3 Relative Place Names). \n          <placeName> contains an absolute or relative place name.\n          <geogName> identifies a name associated with some geographical feature such as Windrush Valley or Mount Sinai.\n        \n      \n      As members of the att.naming class, all of these elements bear the attributes key,\n          ref, and nymRef mentioned above. These attributes are primarily useful as a means of linking a\n        place name with information about a specific place. Recommendations for the encoding of information about a place, as\n        distinct from its name, are provided in 13.3.4 Places below.\n\n      Like the persName element discussed in section 13.2.1 Personal Names, the placeName element may be\n        regarded simply as an abbreviation for the elements name type=\"place\" or rs type=\"place\". The\n        following encodings are thus equivalent:2\n        bibliography\n        bibliography\n      \n      \n      \n      \n\n\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDNA#NDNA\">13.2 Names</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPLAC#NDPLAC\">13.2.3 Place Names</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPLGU#NDPLGU\">13.2.3.1 Geo-political Place Names</a>","content":"\n        13.2.3.1 Geo-political Place Names\n        A place name may contain text with no indication of its internal structure: bibliography More usually\n          however, a place name of this kind will be further analysed in terms of its constitutive geo-political or administrative\n          units. These may be arranged in ascending sequence according to their size or administrative importance, for example:\n            Rochester, New York, or as a single such unit, for example Belgium. These Guidelines provide a hierarchy\n          of generic element names, each of which may be more exactly specified by means of a type attribute: \n            <district> contains the name of any kind of subdivision of a settlement, such as a parish, ward, or other administrative or geographic unit.\n            <settlement> contains the name of a settlement such as a city, town, or village identified as a single geo-political or administrative unit.\n            <region> contains the name of an administrative unit such as a state, province, or county, larger\n    than a settlement, but smaller than a country.\n            <country> contains the name of a geo-political unit, such as a nation, country, colony, or\n    commonwealth, larger than or administratively superior to a region and smaller than a bloc.\n            <bloc> contains the name of a geo-political unit consisting of two or more nation states or\n    countries.\n          \n        These elements are all members of the model.placeNamePart class, members of which may be\n          used anywhere that text is permitted, including within each other as in the following examples: bibliography\n          bibliography\n          bibliography\n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDNA#NDNA\">13.2 Names</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPLAC#NDPLAC\">13.2.3 Place Names</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPLGF#NDPLGF\">13.2.3.2 Geographic Names</a>","content":"\n        13.2.3.2 Geographic Names\n        Places may also be named in terms of geographic features such as mountains, lakes, or rivers, independently of\n          geo-political units. The geogName is provided to mark up such names, as an alternative to the\n            placeName element discussed above. For example: bibliography\n        \n        In addition to the usual phrase level elements, the geogName element may contain the following specialized\n          element: \n            <geogFeat> contains a common noun identifying some geographical feature contained within a geographic\n        name, such as valley, mount, etc.\n          \n        \n        Where the geogFeat element is used to characterize the kind of geographic feature being named, the\n            name element will generally also be used to mark the associated proper noun or noun phrase: bibliography A more complex example, showing a variety of practices, follows: bibliography\n        The Gaelic word lairig may be glossed as sloping hill face. The most efficient\n          way of including this information in the above encoding would be to create a separate nym element for this\n          component of the name and then point to it using the nymRef attribute, as further discussed in 13.3.6 Names and Nyms.\n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDNA#NDNA\">13.2 Names</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPLAC#NDPLAC\">13.2.3 Place Names</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPLR#NDPLR\">13.2.3.3 Relative Place Names</a>","content":"\n        13.2.3.3 Relative Place Names\n\n        All the place name specifications so far discussed are absolute, in the sense that they\n          define only one place. A place may however be specified in terms of its relationship to another place, for example 10\n            miles northeast of Paris or near the top of Mount Sinai. These relative place names will\n          contain a place name which acts as a referent (e.g. Paris and Mount Sinai). They will also contain a word\n          or phrase indicating the position of the place being named in relation to the referent (e.g. the top of, north\n            of). A distance, possibly only vaguely specified, between the referent place and the place being indicated may\n          also be present (e.g. 10 miles, near).\n        Relative place names may be encoded using the following elements in combination with either a placeName or a\n            geogName element. \n            <offset> marks that part of a relative temporal or spatial expression which indicates the direction of the offset between the two place names, dates, or\n        times involved in the expression.\n            <measure> contains a word or phrase referring to some quantity of an object or commodity, usually\n        comprising a number, a unit, and a commodity name.\n           Some examples of relative place names are: bibliography\n          bibliography If desired, the distance specified may be normalized using the unit and\n            quantity attributes of measure: bibliography\n        \n        The internal structure of place names is like that of personal names—complex and subject to an enormous amount of\n          variation across time and different cultures. The recommendations in this section should however be adequate for a\n          majority of users and applications; they may be extended using the mechanisms described in chapter 23.3 Customization\n          to add new elements to the existing classes. When the focus of interest is on the name components themselves, as in\n          place name studies for example, the elements discussed in 13.3.6 Names and Nyms may also be of use. Alternatively, the\n          meaning structure itself may be represented using feature structures (18 Feature Structures).\n        \n          \n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDNA#NDNA\">13.2 Names</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDOBJN#NDOBJN\">13.2.4 Object Names</a>","content":"\n      13.2.4 Object Names\n      \n      \n          <objectName> contains a proper noun or noun phrase used to refer to an object.\n        \n\n      As with other proper nouns or noun phrases used as names, the names of objects may be marked up simply with the\n          name element. For those working with a variety of named objects the objectName element provides more\n        flexibility. bibliography\n      \n      The objectName element may be used to encode any named object whether or not this is a text-bearing object. The\n        use of objectName by itself does not categorize the object referenced, but this may be done further with the\n          type and subtype attributes or through reference to a taxonomy. Additionally, the use of\n        the objectName element says nothing about the physical reality of the object – that is whether it is real,\n        fictional, purported, or missing – and this may be one aspect that some may wish to record through the type\n        attribute. Where more detailed information is available for a named object the ref attribute should be used to\n        point to an object element or other source of information about this object. The objectName element is\n        intended for named objects; where an object is mentioned through a descriptive phrase but not named explicitly the\n          rs element should be used.\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERS#NDPERS\">13.3 Biographical and Prosopographical Data</a>","content":"\n    13.3 Biographical and Prosopographical Data\n    This module defines a number of special purpose elements which can be used to markup biographical, historical, and\n      prosopographical data. We envisage a number of users and uses for these elements. For example, an encoder may be interested\n      in creating or converting a set of biographical records of the type found in a Dictionary of National\n      Biography. Another use is the creation or conversion of a database-like collection of information about a group of people,\n      such as the people referenced in a marked-up collection of documents, or persons who have served as informants in the\n      creation of spoken corpora. It is also appropriate to use these elements to register information relating to those who have\n      taken part in the creation of a TEI document.\n\n    To cater for this diversity, these Guidelines propose a flexible strategy, in which encoders may choose for themselves the\n      approach appropriate to their needs. If one were interested, for example, in converting existing DNB-type records, and\n      wanted to preserve the text as is, the person element (see 13.3.2 The Person Element) could simply contain the text\n      of an article, placed within p elements, possibly using elements such as name or date to mark up\n      features of that text. For a more structured entry, however, one would extract the data and place information contained in\n      the text, and encode it directly using the more specific elements described in this section.\n    \n    \n\n    \n\n    \n\n    \n\n\n\n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERS#NDPERS\">13.3 Biographical and Prosopographical Data</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERSbp#NDPERSbp\">13.3.1 Basic Principles</a>","content":"\n      13.3.1 Basic Principles\n      Information about people, places, and organizations, of whatever type, essentially comprises a series of statements or\n        assertions relating to: characteristics or traits which do not, by and large, change over timecharacteristics or states which hold true only at a specific timeevents or incidents which may lead to a change of state or, less frequently, trait,external resources where other information on the subject can be found.\n      \n\n      Characteristics or traits are typically independent of an individual's volition\n        or action and can be either physical, such as hair and eye colour; or cultural, such as ethnicity and caste.\n        The distinction is not entirely straightforward: gender and sex can be regarded as culturally determined with physical manifestations, \n        interpreted based on the social hierarchies of a time and place. Also the division of humanity into different races,\n        formalized in the nineteenth century to organize a hierarchy of humanity on the basis of physical characteristics such as skin colour, hair type,\n        and skull measurements, is now recognized as a colonialist social construct.3 \n        When such a construct defined individuals' identities beyond their volition, the markup and documentation should reflect \n        this as a culturally-determined characteristic.\n\n      States include, for example, marital status, place of residence, and position or occupation. Such\n        states have a definite duration, that is, they have a beginning and an end and are typically a consequence of the\n        individual's own action or that of others.\n\n      Changes in state refer to life-changing or identity-changing events such as birth, marriage, or appointment\n        to office; such events will normally be associated with a specific date or a fairly narrow date-range. Changes in states\n        can also cause or be caused by changes in characteristics. Any statement or assertion about these aspects of a\n        person's life will be based on some source, possibly multiple sources, possibly contradictory. Taking all this into\n        account it follows that each such statement or assertion needs to be documentable, put into a time frame, and be\n        relatable to other statements or assertions.\n\n      The elements defined by the module described in this chapter may, for the most part, all be regarded as specializations\n        of one or other of the above three classes. Generic elements for state, trait, and event are also defined: \n          <state> contains a description of some status or quality attributed to a person, place, or organization often at some specific time or for a specific date range.\n          <trait> contains a description of some status or quality attributed to a person, place, or organization typically, but not necessarily, \n    independent of the volition or action of the holder and usually not at some specific time or for a specific date range.\n          <event> contains data relating to any kind of significant event associated with a person, place, or organization.\n          <att.locatable> provides attributes for referencing locations by pointing to entries in a canonical list of places.\n          <listEvent> contains a list of descriptions, each of which provides information\n    about an identifiable event.\n          \n        \n      \n\n      When developing a prosopography record of a named entity it is a common practice to refer explicitly to other resources, for example the Library of Congress Name Authority File, Virtual Internationl Authority File (VIAF), a gazetteer of places like Pleiades, or a printed book.\n        \n          <idno> supplies any form of identifier used to identify some\n    object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized\n    way.\n        \n      \n      Here is a simple example:\n      bibliography\n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERS#NDPERS\">13.3 Biographical and Prosopographical Data</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERSE#NDPERSE\">13.3.2 The Person Element</a>","content":"\n      13.3.2 The Person Element\n      Information about a person, as distinct from references to a person, for example by name, is grouped together within a\n          person element. Information about a group of people regarded as a single entity (for example the\n          audience of a performance) may be encoded using the personGrp element. Note however that information\n        about a group of people with a distinct identity (for example a named theatrical troupe) should be recorded using the\n          org element described in section 13.3.3 Organizational Data below.\n      These elements may appear only within a listPerson element, which groups such descriptions together, and\n        optionally also describes relationships amongst the people listed. \n          <listPerson> contains a list of descriptions, each of which provides information about an identifiable\n    person or a group of people, for example the participants in a language interaction, or the\n    people referred to in a historical source.\n          <listRelation> provides information about relationships identified amongst people, places, and\n    organizations, either informally as prose or as formally expressed relation links.\n        \n      \n\n      One or more listPerson elements may be supplied\n      within the standOff element (see 16.10 The standOff Container) or, when used to list the participants in\n      a linguistic interaction, within the particDesc\n      (participant description) element in the profileDesc\n      element of a TEI header. Like other forms of list, however,\n      listPerson can also appear within the body of a text\n      when the module defined by this chapter is included in a\n      schema.\n\n      The type attribute may be used to distinguish lists of people of different kinds where this is considered\n        convenient:\n        bibliography\n      \n\n      The person element carries several attributes. As a member of the classes att.global.responsibility, att.editLike, and att.global.source class, it carries the usual attributes for providing details about the information recorded\n        for that person, such as its reliability or source: \n          <att.global.responsibility> provides attributes indicating the agent\n    responsible for some aspect of the text, the markup or \n    something asserted by the markup, and the degree of certainty \n    associated with it.\n          <att.editLike> provides attributes describing the nature of an encoded scholarly intervention or\n    interpretation of any kind.\n          <att.global.source> provides attributes used by elements to point to an\n    external source.\n         In addition, a small number of very commonly used personal properties may be recorded using attributes\n        specific to person and personGrp: \n          <person> provides information about an identifiable individual, for example a participant in a language interaction, or a person referred to in a\n        historical source.\n          <personGrp> describes a group of individuals treated as a single person for analytic purposes.\n        \n\n      These attributes are intended for use where only a small amount of data is to be encoded in a more or less normalized\n        form, possibly for many person elements, for example when encoding basic facts about respondents to a questionnaire. When\n        however a more detailed encoding is required for all kinds of information about a person, for example in a historical\n        gazetteer, then it will be more appropriate to use the elements age, sex and others described elsewhere\n        in this chapter.\n\n      Note that the age attribute is not intended to record the person's age expressed in years, months, or other\n        temporal unit. Rather it is intended to record into which age bracket, for the purposes of some analysis, the person\n        falls. A simple (perhaps too simple to be useful) binary classification of age brackets would be child and\n          adult. The actual age brackets useful to various projects are likely to be varied and idiosyncratic, and thus\n        these Guidelines make no particular recommendation as to possible values. Instead, individual projects are recommended to\n        define the values they use in their own customization file, using a declaration like the following: bibliography The above declaration, were it properly placed in a customization file, establishes that the age\n        attribute of person has only three possible values, child, adult, and retired.\n        For more information on customization see 23.3 Customization.\n\n      The person element may contain many sub-elements, each specifying a different property of the person being\n        described. The remainder of this section describes these more specific elements. For convenience, these elements are\n        grouped into three classes, corresponding with the tripartite division outlined above: one for traits, one for states and\n        one for events. Each class may contain specific elements for common types of biographical information, and contains a\n        generic element for other, user-defined, types of information.\n      All the elements in these three classes belong to the attribute class att.datable, which\n        provides the following attributes: \n          <att.datable.w3c> provides attributes for normalization of elements that contain\n  datable events  conforming to the W3C\n  XML Schema Part 2: Datatypes Second Edition.\n         as discussed in 13.1 Attribute Classes Defined by This Module above.\n\n      \n      \n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERS#NDPERS\">13.3 Biographical and Prosopographical Data</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERSE#NDPERSE\">13.3.2 The Person Element</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERSEpc#NDPERSEpc\">13.3.2.1 Personal Characteristics</a>","content":"\n        13.3.2.1 Personal Characteristics\n        The model.persStateLike class contains elements describing physical or socially-constructed\n          characteristics, traits, or states of a person. Members of the class comprise the following specific elements: \n          \n            <affiliation> contains an informal description of a person's present or past affiliation with some\n        organization, for example an employer or sponsor.\n            <age> specifies the age of a person.\n            <education> contains a description of the educational experience of a person.\n            <faith> specifies the faith, religion, or belief set of a person.\n            <floruit> contains information about a person's period of activity.\n            <gender> specifies the gender identity of a person, persona, or character.\n            <langKnowledge> summarizes the state of a person's linguistic knowledge, either as prose or by a list of langKnown elements.\n            <nationality> contains an informal description of a person's present or past nationality or citizenship.\n            <occupation> contains an informal description of a person's trade, profession or occupation.\n            <persName> contains a proper noun or proper-noun phrase referring to a\n  person, possibly including one or more of\n  the person's forenames, surnames, honorifics, added names, etc.\n            <persona> provides information about one of the personalities identified for a given individual, where\n    an individual has multiple personalities.\n            <persPronouns> indicates the personal pronouns used, or assumed to be used, by the individual being described.\n            <residence> describes a person's present or past places of residence.\n            <sex> specifies the sex of an organism.\n            <socecStatus> contains an informal description of a person's perceived social or economic status.\n            <state> contains a description of some status or quality attributed to a person, place, or organization often at some specific time or for a specific date range.\n            <trait> contains a description of some status or quality attributed to a person, place, or organization typically, but not necessarily, \n    independent of the volition or action of the holder and usually not at some specific time or for a specific date range.\n           All, apart from langKnowledge and persona, allow content of ordinary prose containing\n          phrase-level elements. bibliography\n          \n        \n        Encoders should take particular care to be explicit about culturally determined concepts such as nationality, ethnicity, age, \n          or sex/gender system that influence their markup.4 For example, when recording\n          personal age in different cultures, there may be different assumptions about the point from which age is reckoned. \n          Scholars face similar issues when marking sex and gender according to cultural systems from times and places not their own. \n          A statement of the practice adopted in a given encoding may usefully be provided in the editorialDecl element\n          discussed in 2.3.3 The Editorial Practices Declaration.\n\n        The langKnowledge element contains either paragraphs or a number of langKnown elements; it may take a\n            tags attribute, which provides one or more standard codes or tags for the languages.\n          The langKnown element must have a tag attribute, which indicates the language with the same kind of\n            language tag. These language tags are discussed in detail in 6.1 Language Identification.\n        Furthermore, the langKnown element also has a level attribute to indicate the level of the person's\n          competence in the language. It is thus possible either to say: bibliography or bibliography\n        \n        The persona element may contain the same component elements as a person element. Its function is to\n          document a distinct persona assumed by the person element containing it. A person, not necessarily fictional,\n          may take on different personas at different times or in different situations, each persona having different personal\n          characteristics, such as name, age, sex, gender etc. We distinguish a persona, which is a set of characteristics associated with\n          one specific individual, from a role, which is a set of characteristics that many different people can assume. An actor\n          does not change their persona when adopting a different role, but none of the personas associated with one person can\n          properly be associated with another.\n\n          The persPronouns element may be used to indicate\n          the personal pronouns used, or assumed to be used, by the\n          individual being described. It is common practice in email\n          signatures and biographies, for people to include their\n          preferred personal pronouns along with their name or handle.\n          This allows transgender and gender variant people to express\n          how they wish to be identified, without having to share\n          their gender identity (though some do). Cisgender people\n          have also adopted the practice, which normalizes the idea\n          that a person's personal pronouns should not be inferred by\n          their name, sex, gender, or gender presentation. The\n          persPronouns element may be used either in\n          transcribed content to encode a phrase used to indicate\n          preferred personal pronouns, or may be used inside a\n          person or persona element to indicate\n          the associated pronouns.\n\n          For example, the following entry from a hypothetical\n          prosopography lists only the nominative case of the\n          preferred pronouns as identified by Miss Major\n          Griffin-Gracy, a historical figure.\n\t  \n\t  \n          \n          \n\t  Personal pronouns often occur as part of the closer of an\n\t  email, post, or other electronic communication.\n\t  \n\t  bibliography\n          The sex and gender elements each carry a value attribute to give values from a project-internal taxonomy, or an\n          external standard. bibliography As elsewhere, these coded values may be used as an alternative to or normalization of the actual descriptive\n          text contained in the element. The previous example might equally well be given as \n        \n        The generic trait and state elements are also members of this class, \n            <trait> contains a description of some status or quality attributed to a person, place, or organization typically, but not necessarily, \n    independent of the volition or action of the holder and usually not at some specific time or for a specific date range.\n            <state> contains a description of some status or quality attributed to a person, place, or organization often at some specific time or for a specific date range.\n           These elements can be used to extend the range of information supplied about an individual's personal\n          characteristics. Either may contain an optional label element, used to provide a human-readable specification\n          for the characteristic concerned and a description of the feature itself supplied within a desc element. These\n          may be followed by or one or more p elements supplying more detailed information about the trait. In either\n          case, these may be followed by one or more notes or bibliographical references. The type, ref, and\n            key attributes may be used to indicate a fuller definition of the combination of feature and value. bibliography\n        \n        \n        \n\n        These elements are provided as a simple means of extending the set of descriptive features available in a standardized\n          way. For example, there are no predefined elements for such features as eye or hair colour. If these are to be recorded,\n          they may simply be added as new types of trait: bibliography\n        \n\n        If none of the more specialized elements listed above is appropriate, then a choice must be made between the two\n          generic elements trait and state. If you wish to distinguish between characteristics that are\n          generally perceived to be transient and those which are generally considered unchanging, use state for the\n          former, and trait for the latter. It may also be helpful to note that traits are typically, but not\n          necessarily, independent of the volition or action of the holder. If the distinction between state and trait is not\n          considered relevant or useful, use state.\n\n        The persName element is repeatable and can, like all TEI elements, take the attribute xml:lang to\n          indicate the language of the content of the element, as well as a type attribute to indicate the type of\n          name, whether a nickname, maiden or birth name, alternative form, etc. This is useful in cases where, for example, a\n          person is known by a Latin name and also by any number of vernacular names, many or all of which may have claims to\n            authenticity. In order to ensure uniformity, the method generally employed in the library world\n          has been to accept the form found in some authority file, for example that of the American Library of Congress, as the\n            base or neutral form. Feelings can run high on this matter, however, and\n          people are often reluctant to accept as neutral an overtly foreign form of the name of their local\n          saint or hero. Within the person element any number of variant forms of a name can be given, with no\n          prioritization, and hence less likelihood of offence. The Icelandic scholar and manuscript collector Árni Magnússon, to\n          give his name in standard modern Icelandic spelling, is known in Danish as Arne Magnusson, the form which he himself, as\n          a long term resident of Denmark, generally used; there is also a Latinized form, Arnas Magnæus, which he used in his\n          scholarly writings. All three forms can be given, and in any order: bibliography\n        \n        At the other extreme, a person may be named periphrastically as in the following example: bibliography\n        \n\n        Alternatively, the generic name element may be used for all of the naming components in a description. For\n          example, a description of the first living held by the Icelandic clergyman and poet Jón Oddsson Hjaltalín might be\n          tagged as follows: bibliography\n        \n\n        Similarly, the generic state or trait element may be used in preference to the more specific elements\n          listed above: bibliography is the same as: bibliography or even: \n        \n\n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERS#NDPERS\">13.3 Biographical and Prosopographical Data</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERSE#NDPERSE\">13.3.2 The Person Element</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERSEpe#NDPERSEpe\">13.3.2.2 Personal Events</a>","content":"\n        13.3.2.2 Personal Events\n        Events in a person's history are not characteristics of an individual, but often cause an individual to gain such\n          characteristics, or to enter a new state. Most such events, for example marriage, appointment, promotion, or a journey\n          may be recorded using the generic element event, which may be grouped with listEvent, and has a\n          content model similar to that of state and trait. The chief difference is that event can\n          include a placeName element to identify the name of the place where the event occurred.\n        Two particular events in a persons life, namely birth and death, are both ubiquitous and usually considered\n          particularly important, and thus may be represented by specialized elements for the purpose: \n            <birth> contains information about a person's birth, such as its date and place.\n            <death> contains information about a person's death, such as its date and place.\n          \n        \n        In the following example, we give a brief summary of the wedding of Jane Burden to the English writer, designer, and\n          socialist William Morris, encoded as an event element embedded within the person element used to\n          record data about Morris, though we could equally well have embedded the event element within the\n            person element for Burden, or have encoded it independently of either person element: bibliography In this example the ref attributes on the various name elements point either to an external\n          source or to a person element within which other information about the person named may be found. As further\n          discussed below (13.3.2.3 Personal Relationships), a relation element may then be used to link them in a more\n          meaningful way: \n        \n        As mentioned above, all these elements, both the specific and the generic, are members of the att.datable attribute class, which means they can be limited in terms of time. The following encoding, for\n          example, demonstrates that the person named David Jones changed his name in 1966 to David Bowie: bibliography\n        \n        All the generic elements are also members of the att.global.responsibility and att.editLike classes. These classes make available the attributes cert, to indicate\n          the degree of certainty, resp, the agency responsible, evidence, the nature of the evidence used,\n          and source, a pointer to a resource from which the information derives. In this way it is possible, in the\n          case of multiple and conflicting sources, to provide more than one view of what happened, as in the following example:\n            bibliography\n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERS#NDPERS\">13.3 Biographical and Prosopographical Data</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERSE#NDPERSE\">13.3.2 The Person Element</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERSREL#NDPERSREL\">13.3.2.3 Personal Relationships</a>","content":"\n        13.3.2.3 Personal Relationships\n\n        When the module defined by this chapter is included in a schema, the following two elements may be used to document\n          relationships amongst the persons, places, or organizations identified: \n            <listRelation> provides information about relationships identified amongst people, places, and\n    organizations, either informally as prose or as formally expressed relation links.\n            <relation> describes any kind of relationship or linkage amongst a\n  specified group of places, events, persons, objects or other items.\n           These elements are both members of the att.typed class, from which they inherit\n          the type and subtype attributes in the usual way. The value specified for either attribute on a\n            listRelation element is implicitly applicable to all of its child relation elements, unless\n          overridden.\n        A relationship, as defined here, may be any kind of describable link between specified participants. A\n          participant (in this sense) might be a person, a place, or an organization. In the case of persons, therefore, a\n          relationship might be a social relationship (such as employer/employee), a personal relationship (such as sibling,\n          spouse, etc.) or something less precise such as possessing shared knowledge. A relationship may be\n            mutual, in that all the participants engage in it on an equal footing (for example the sibling\n          relationship); or it may not be if participants are not identical with respect to their role in the relationship (for\n          example, the employer relationship). For non-mutual relationships, only two kinds of role are currently\n          supported; they are named active and passive. These names are chosen to reflect the fact that\n          non-mutual relations are directed, in the sense that they are most readily described by a transitive verb,\n          or a verb phrase of the form is X of or is X to. The subject of the verb\n          is classed as active; the direct object of the verb, or the object of the concluding preposition, as\n            passive. Thus parents are active and children passive in the relationship parent\n          (interpreted as is parent of); the employer is active, the employee passive, in the\n          relationship employs. These relationships can be inverted: parents are passive and\n          children active in the relationship is child of; similarly works for inverts the\n          active and passive roles of employs.\n        For example:  This example defines the relationships amongst a number of people not further described here;\n          we assume however that each person has been allocated an identifier such as P1, P2, etc. which can\n          be linked to using references such as #P1, #P2, etc. Then the above set of relation\n          elements describe the following three relationships amongst the people referenced: P1 and P2 are parents of P3 and P4.P1 and P2 are linked in a mutual relationship called spouse—that is, P2 is the spouse of P1, and P1 is\n              the spouse of P2.P1 has the social relationship employer with respect to P3 and P4.\n        Relationships within places and organizations are further discussed in the relevant sections below. Relationships\n          between for example organizations and places, or places and persons, may be handled in exactly the same way.\n          \n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERS#NDPERS\">13.3 Biographical and Prosopographical Data</a><a class=\"breadcrumb\" href=\"p5.xml?id=ND-org#ND-org\">13.3.3 Organizational Data</a>","content":"\n      13.3.3 Organizational Data\n      The org and listOrg elements are used to store data about an organization such as its preferred name,\n        its locations, or key persons within it. \n          <org> provides information\n  about an identifiable organization such as a business, a tribe, or\n  any other grouping of people.\n          <listOrg> contains a list of elements, each of which provides information about an identifiable\n        organization.\n         These elements are intended to be used in a way analogous to the place and person elements\n        discussed elsewhere in this chapter, that is to provide a unique wrapper element for information about an entity, distinct\n        from references to that entity which are typically encoded using a naming element such as name type=\"org\" or\n          orgName. The content of a naming element will represent the way an organization is named in a given context;\n        the content of an org represents the information known to the encoder about that organization, gathered together\n        in a single place, and independent of its textual realization.\n      An organization is not the same thing as a list or group of people because it has an identity of its own. That identity\n        may be expressed solely in the existence of a name (for example The Scythians), but is likely to consist in the\n        combination of that name with a number of events, traits, or states which are considered to apply to the organization\n        itself, rather than any of its members. For example, a sports team might be described in terms of its membership (a\n          listPerson), its fixtures (a listPlace), its geographical affiliation (a placeName), or any\n        combination of these. It will also have properties which may be used to categorize it in some way such as the kind of\n        sport played, whether the team is amateur or professional, and so on: these are probably best dealt with by means of the\n          type attribute. However, it is the name of the sports team alone which identifies it.\n      The content model for org permits any mixture of generic state, trait, or event\n        elements: the presence of the orgName element described in 13.2.2 Organizational Names is however strongly\n        recommended.\n      In other respects, the org element is used in much the same way as place or person. An\n        organization may have different names at different times: bibliography\n      \n      The names of the people making up an organization can also change over time, (if they are known at all). For example:\n          bibliography\n      \n      An org may contain subordinate orgs: bibliography\n      \n      The following example demonstrates the use of the listOrg element to group together a number of org\n        elements, each of which is defined solely by means of an informal description, itself containing other names. bibliography In a more elaborated version of this example, the organizational names tagged using orgName might\n        be linked using the key or ref attribute to a unique org element elsewhere.\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERS#NDPERS\">13.3 Biographical and Prosopographical Data</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDGEOG#NDGEOG\">13.3.4 Places</a>","content":"\n      13.3.4 Places\n\n      In 13.2.3 Place Names we discuss various ways of naming places such as towns, countries, etc. In much the same way\n        as these Guidelines distinguish between the encoding of names for people and the encoding of other data about people, so\n        they also distinguish between the encoding of names for places and the encoding of other data about places. In this\n        section we present elements which may be used to record in a structured way data about places of any kind which might be\n        named or referenced within a text. Such data may be useful as a way of normalizing or standardizing references to\n        particular places, as the raw material for a gazetteer or similar reference document associated with a particular text or\n        set of texts, or in conjunction with any form of geographical information system.\n      The following elements are provided for this purpose: \n          <listPlace> contains a list of places, optionally followed by a list of relationships (other than\n        containment) defined amongst them.\n          <place> contains data about a geographic location\n        \n      \n\n      The model.placeStateLike class contains elements describing characteristics of a place which\n        have a definite duration, such as its name. Any member of the model.placeNamePart may be used\n        for this purpose, since a place element will usually contain at least one, and possibly several,\n          placeName-like elements indicating the names associated with it, by different people, in different languages,\n        or at different times.\n\n      For example, the modern city of Lyon in France was in Roman times known as Lugdunum. Although the modern and the Roman\n        city are not physically co-extensive, they have significant areas which overlap, and we may therefore wish to regard them\n        as the same place, while supplying both names with an indication of the time period during which each was current.\n\n      Places usually have physical locations in addition to names. As with the example of Lyon, the precise\n        geographic location and extent of a place may change over time, and so locations like names may need to be\n        qualified with indications of the time period to which they apply. Locations may be\n        specified in a number of ways: as a set of coordinates defining a point or an area on the\n        surface of the earth, or by providing a description of how the place may be found, usually\n        in terms of other place names. For example, we can identify the location of the Canadian\n        city of London, either by specifying its latitude and longitude, or by specifying that we\n        mean the city called London located in the province called Ontario within the country called\n        Canada.\n      \n      In addition we may wish to supply a brief characterization of the place identified, for example to state that it is a\n        city, an administrative area such as a country, or a landmark of some kind such as a monument or a battlefield. If our\n        typology of places is simple, the open ended type attribute is the easiest way to represent it: so we might say\n          place type=\"city\", place type=\"battlefield\" etc.\n\n\n      Within the place element, the following elements may be used to provide more information about specific aspects\n        of the place in a structured form: \n          <placeName> contains an absolute or relative place name.\n          <location> defines the location of a place as a set of geographical coordinates, in terms of other named geo-political entities, or as an\n        address.\n        \n      \n      \n      \n      \n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERS#NDPERS\">13.3 Biographical and Prosopographical Data</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDGEOG#NDGEOG\">13.3.4 Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDGEOGva#NDGEOGva\">13.3.4.1 Varieties of Location</a>","content":"\n        13.3.4.1 Varieties of Location\n        A location may be specified in one or more of the following ways: \n            by supplying a string representing its coordinates in some standardized way within a geo element, as\n              shown below\n            by supplying one or more place name component elements (e.g. country, settlement etc.) to\n              place it within a geo-political context\n            by supplying a postal address, e.g. using the address element\n            by supplying a brief textual description, e.g. using the desc element\n            by using a non-TEI XML vocabulary such as the Geography Markup Language\n           We give examples of all of these methods in the remainder of this section.\n\n        The simplest method of specifying a location is by means of its geographic coordinates, supplied within the\n            geo element. This may be used to supply any kind of positional information, using one of the many different\n          geodetic systems available. Such systems vary in their format, in their scope or coverage, and more fundamentally in the\n          reference frame (the datum) used for the coordinate system itself. The default recommended by these\n          Guidelines is to supply a string containing two real numbers separated by whitespace, of which the first indicates\n          latitude and the second longitude according to the 1984 World Geodetic System (WGS84); this is the system currently used\n          by most GPS applications which TEI users are likely to encounter.5We might therefore record the information about the place known as\n            Lyon as follows: bibliography\n        \n\n        Identifying Lyon by its geo-political status as a settlement within a country forming part of a larger political\n          entity, we might represent the same place as follows: bibliography Elements such as bloc are specialized forms of placeName, as discussed in 13.2.3.1 Geo-political Place Names.\n        We may use the same procedure to represent the location of smaller places, such as a street or even an individual\n          building: bibliography Note the use of the type attribute to categorize more precisely both the kind of place\n          concerned (a building) and the kind of name used to locate it, for example by characterizing the generic\n            district as an arrondissement, or a quartier.\n\n        We may also treat imaginary places in the same way: bibliography\n\n        A location sometimes resembles a set of instructions for finding a place: bibliography\n        \n        The element address may also be used to identify a location in terms of its postal or other address: bibliography When, as here, the same place is given multiple locations, the type attribute should be\n          used to characterize the kind of location, as a means of indicating that these are alternative ways of identifying the\n          same place, rather than that the place is spread across several locations.\n\n        The location element may thus identify a place to a greater or lesser degree of precision, using a variety of\n          means: a name, a set of names, or a set of coordinates. The geo element introduced earlier is by default\n          understood to supply a value expressed in a specific (and widely used) notation. If a location contains more\n          than one geo, this is interpreted as being really the same place in the universe, but with different systems\n          used to refer to it. If there is a lack of consensus about the location (of, for example, Camelot), more than one\n            location should be used, each with its own geo.\n\n        By default, the content of geo is interpreted as following the standard known as the World Geodetic System\n          (WGS). This may be modified, however, in two ways.\n        Firstly, the content of the geo element can be expressed some other way, that is, according to some different\n          geodetic system. The decls attribute is used point to a geoDecl element defined in the document\n          header, which describes a different datum.\n        Secondly, the element geo may be redefined to contain markup from a different XML vocabulary which is\n          specifically designed to represent this kind of information. This technique is used throughout these Guidelines where\n          specialized markup is required, for example to embed mathematical expressions or vector graphics, and is further\n          described and exemplified in 23.3.4 Examples of Modification . For geographic information, suitable non-TEI vocabularies include:\n             the OpenGIS Geography Markup Language (GML) being defined by the OGC6\n             the Keyhole Markup Language (KML) used by Google Maps7\n            \n        \n        In the following example, we have defined the location of the place Lyon using GML and indicated\n          the two names associated with it at different times: bibliography\n        \n\n        A bibl element may be used within location to indicate the source of the location information.\n        bibliography\n\n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERS#NDPERS\">13.3 Biographical and Prosopographical Data</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDGEOG#NDGEOG\">13.3.4 Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDGEOGmp#NDGEOGmp\">13.3.4.2 Multiple Places</a>","content":"\n        13.3.4.2 Multiple Places\n        A place may contain other places. This containment relation can be directly modelled in XML: thus we can say that the\n          towns of Vilnius and Kaunas are both in a place called Lithuania (or Lietuva) as follows: bibliography\n        \n        This does not, of course, imply that Vilnius and Kaunas are the only places constituting Lithuania; only that they are\n          within it. A separate place element may indicate that it is a part of Lithuania by supplying a\n            relation element, as discussed below (13.3.4.4 Relations Between Places).\n\n        As a further example, the islands of Mauritius, Réunion, and Rodrigues are collectively known as the Mascarene Islands.\n          Grouped together with Mauritius there are also several smaller offshore islands, with rather picturesque French names.\n          These offshore islands do not however constitute an identifiable place as a whole. One way of representing this is as\n          follows: bibliography\n        \n        Here is a more complex example, showing the variety of names associated at different times and in different languages\n          with a set of hierarchically grouped places—the settlement of Carmarthen Castle, within the town of Carmarthen, within\n          the administrative county of Carmarthenshire, Wales. bibliography\n        \n        As noted previously, country, region, and settlement are all specializations of the generic\n            placeName element; they are not specializations of the place element. If it is desired to\n          distinguish amongst kinds of place this can only be done by means of the type attribute as in\n          the above example.\n\n        This use of multiple place elements should be distinguished from the (possibly simpler) case where a number of\n          places with some property in common are being grouped together for convenience, for example, in a gazetteer. The\n            listPlace element is provided as a means of grouping places together where there is no implication that the\n          grouped elements constitute a distinct place. For example: bibliography\n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERS#NDPERS\">13.3 Biographical and Prosopographical Data</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDGEOG#NDGEOG\">13.3.4 Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDGEOGste#NDGEOGste\">13.3.4.3 States, Traits, and Events</a>","content":"\n        13.3.4.3 States, Traits, and Events\n\n        There are many different kinds of information which it might be considered useful to record for a place in addition to\n          its name and location, and the categories selected are likely to be very project-specific. As with persons therefore\n          these Guidelines make no claim to comprehensiveness in this context. Instead, the generic state,\n          trait, and event elements defined by this module should be used. Each of these may be customized for\n          particular needs by means of their type attribute. These are complemented by a small number of predefined\n          elements of general utility: \n            <population> contains information about the population of a place.\n            <climate> contains information about the physical climate of a place.\n            <terrain> contains information about the physical terrain of a place.\n          \n        \n\n        These are all specializations of the generic trait element. This element may be used for almost any kind of\n          event in the life of a place; no specialized version of this element is proposed, nor do we attempt to enumerate the\n          possible values which might be appropriate for the type attribute on any of these generic elements.\n        Here is an example, showing how the specific and generic elements may be combined: bibliography\n        \n\n        In the following example, the climate example is used to provided a detailed discussion of this particular\n          aspect of the information available about a particular place: bibliography\n          \n        \n        As the above example shows, state and trait elements, and others of the same class, can be nested\n          hierarchically within each other. When this is done, values for the type attribute are to be understood as\n          cumulatively inherited, as elsewhere in the TEI scheme (for example on category or linkGrp). In the\n          following example, the outermost population element concerns the squirrel population between the dates given.\n          This is then broken down into red and gray squirrel populations, and within that into male and female: bibliography The dating and responsibility attributes here behave slightly differently from the type attribute:\n          responsibility is not an additive property, and therefore an element either states it explicitly, or inherits it from\n          its nearest ancestor. Dating is slightly different again, in that a child element may specify a date more precisely than\n          its parent, as in the example above\n\n        Events may also be subdivided into other events. For example, a two part meeting might be represented as follows:\n            bibliography\n        \n\n        An event element is usually used to record information about a place, or a person; for this reason the element\n          usually appears as content of a place or person. However, it is also possible to describe events\n          independently of either a person or a place. This may be useful in such applications as chronologies, lists of\n          significant events such as battles, legislation, etc.\n\n        The listEvent element is a member of the model.listLike class, and may therefore\n        appear inside standOff, or wherever else lists are\n        permitted, in the same way as the listPerson,\n        listPlace etc. elements described elsewhere in this\n        chapter.\n        bibliography\n        The next example demonstrates the use of the\n        where attribute with event, coordinated\n        with location information stored in listPlace.\n        bibliography\n        The where attribute on event can point to multiple \n          canonical place descriptions, which should indicate \n          that the event took place in multiple locations. For example, the November 2015\n          Paris Attacks took place at six different locations in Paris; this\n          might be encoded as an event with a where\n          attribute with six space-separated values.\n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERS#NDPERS\">13.3 Biographical and Prosopographical Data</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDGEOG#NDGEOG\">13.3.4 Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=place-rel#place-rel\">13.3.4.4 Relations Between Places</a>","content":"\n        13.3.4.4 Relations Between Places\n\n        The relation element may also be used to express relationships of various kinds between places, or between\n          places and persons, in much the same way as it is used to express relationships between persons alone. Returning to the\n          Mascarene Islands example cited above, we might define the island group and its constituents separately, but indicate\n          the relationship by means of a relation element: bibliography\n        \n\n        This stand-off style of representation has the advantage that we can now also represent the fact\n          that a place may be a part of more than one other place; for example, Réunion is part of France, as well as part\n          of the Mascarenes. If we add a declaration for France to the list above: bibliography we can now model this dual allegiance by means of a relation element: \n        \n\n        \n\n        \n\n        \n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERS#NDPERS\">13.3 Biographical and Prosopographical Data</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDOBJ#NDOBJ\">13.3.5 Objects</a>","content":"\n      13.3.5 Objects\n      \n        \n          <object> contains a description of a single identifiable physical object.\n          <objectName> contains a proper noun or noun phrase used to refer to an object.\n          <listObject> contains a list of descriptions, each of which provides information about an\n    identifiable physical object.\n         An object is any material thing whether real, in existence, fictional, missing, or purported about which more\n        information is known. Where objects have proper names the objectName element may be used to encode these.\n        However, many objects are not named but the object element may still be used to provide a description of them.\n        The object element is a more general descriptive form of the msDesc element. The latter should be used\n        for describing manuscripts and similar text-bearing objects but can be viewed as a more specific form of the\n        object element.\n        \n          Please note: The object element is a recent addition to TEI P5 Guidelines as of version 3.5.0 and as such might\n          be more prone to further revision in the next few releases as its use develops. This may be particularly evident where its\n          contents have been borrowed from msDesc and have yet to be generalized from their use in the context of manuscript descriptions.\n        \n        The object element usually appears inside the\n        listObject element which is used to group\n        descriptions of identifiable objects. The listObject\n        element is a member of model.listLike and so may appear inside\n        standOff, or anywhere else that list is\n        allowed. This enables the flexibility of using\n        listObject to contain a set of metadata descriptions\n        stored in the TEI header, or as a list of objects transcribed from\n        a source document. The equivalent list for manuscript\n        descriptions is listBibl.\n      \n        \n          <objectIdentifier> groups one or more identifiers or pieces of locating information concerning a single object.\n          <msContents> describes the intellectual content of a manuscript, manuscript\n    part, or other object either as a series of paragraphs or as a series of structured manuscript items.\n          <physDesc> contains a full physical description of a\nmanuscript, manuscript part, or other object optionally subdivided using more\nspecialized elements from the model.physDescPart class.\n          <history>  groups elements\ndescribing the full history of a manuscript, manuscript part, or other object.\n          <additional> groups additional information, combining\n    bibliographic information about a manuscript or other object, or surrogate copies of\nit, with curatorial or administrative information.\n        \n        Overall, the basic structure of an object element is akin to that of msDesc in that it is providing a\n        structured description of an object. After a group of\n        identifying information, it has the option of paragraphs or, if the msdescription module is\n        loaded, msContents, physDesc, history, and additional elements for descriptive\n        metadata about this object. Although these elements originate from manuscript description the object element may\n        be used for all forms of object (whether text-bearing or not).\n\n        \n        Where descendents of object still have the hallmarks\n        of their use in manuscript description, the descriptions as relating to manuscripts should be interpreted as applying to all\n        forms of object (text-bearing) or not.\n        The objectIdentifier element is a general-purpose\n        grouping element for location or identification information relating to a single object or resource. It is very similar to\n        an msIdentifier element with less contraints on the order of its contents. The objectIdentifier may be more\n        or less detailed dependent on the needs of the encoder. In some cases an object may be used mostly as a common\n        reference point for multiple objectName elements to refer back to. In situations, one might provide more detailed\n        information in the objectIdentifier where it is available or desirable. Compare bibliography where only a single objectName is provided and below where multiple versions are provided. bibliography\n      \n      Moreover, the objectIdentifier may include an address element to provide the address at which the object\n        currently resides. The use of location within this enables the provision of geographical coordinates when\n        describing objects not housed in traditional repositories or institutions. This may also be used to supplement more\n        traditional repository location information if available and, for example, to enable providing outputs such as maps\n        showing the location of encoded objects. bibliography\n      \n      The msContents element is currently used to provide a description of the intellectual contents of any text on an object\n        and, being optional, is not necessary if there are no intellectual contents to describe. (Such contents, especially in the\n        case of artistic objects, may not always be textual.) The physDesc element may be used to give a physical\n        description of the object either in prose or using more structured elements as and where they apply to that kind of\n        object. The history element provides the option to describe the history of the object as paragraphs or with more\n        structure using the origin element, as many provenance stages as are appropriate, and\n          acquisition to describe its current ownership. The additional element may be used to provide\n        information about surrogates for the object (such as digital facsimiles) as well as administrative and curatorial\n        information. A full description of an object can provide more or less detail at any level to represent the state of\n        knowledge about the object.\n        bibliography\n      \n\n\n      If the object is being referenced from elsewhere in the document, this is usually done with an objectName. For\n        example here the Alfred-Jewel xml:id is referenced from a paragraph elsewhere in the document using the ref\n         attribute on the objectName element.\n\n        bibliography\n      \n\n\nThere is no restriction on the form, size, or type of object that may be described by an object element, however, some objects may be more adequately described by a place element depending on context. Where a description of an object is being provided in terms of identification, physical characteristics, or history, then an object element may be preferred. Where metadata is being recorded about the geo-political location, population, or similar traits, then the place element may be better suited. A corresponding relation between an object description and place may be recorded through the use of the corresp attribute. An example of a large object that might be described with the object element could be a building such as the Central Library of the National Autonomous University of Mexico.\n\n\n\n\n        bibliography\n\n\n\n\n      \n      \n\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDPERS#NDPERS\">13.3 Biographical and Prosopographical Data</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDNYM#NDNYM\">13.3.6 Names and Nyms</a>","content":"\n      13.3.6 Names and Nyms\n      So far we have discussed ways in which a name or referring string encountered in running text may be resolved by\n        considering the object that the name refers to: in the case of a personal name, the name refers to a person; in the case\n        of a place name, to a place, for example. The resolution of this reference is effected by means of the key or\n          ref attributes available to all elements which are members of the att.naming\n        class, such as persName or placeName and their more specialized variants such as forename or\n          country. However, names can also be regarded as objects in their own right, irrespective of the\n        objects to which they are attached, notably in onomastic studies. From this point of view, the names\n          John in English, Jean in French, and Ivan in\n        Russian might all be regarded as existing independently of any person to which they are attached, and also independently\n        of any variant forms that might be attested in different sources (such as Jon or Johnny in English, or Jehan or Jojo in\n        French). We use the term nym to refer to the canonical or normalized form of a name regarded in such a way,\n        and provide the following elements to encode it: \n          <listNym> contains a list of nyms, that is, standardized names for any thing.\n          <nym> contains the definition for a canonical name or name component of any kind.\n        \n      \n      Any element which is a member of the att.naming class may use the attribute nymRef\n        to indicate the nym with which it corresponds. Thus, given the following nym for the name\n          Antony: bibliography an occurrence of this name in running text might be encoded as follows: bibliography Note that this association (between \"Tony\" and \"Antony\") has\n        nothing to do with any individual who might use the name.\n      The person identified by this particular Tony may however be indicated independently using the ref attribute,\n        either on the forename or on the whole name component: bibliography\n      \n      The nym element may be thought of as providing a specialized kind of dictionary entry. Like a dictionary entry,\n        it may contain any element from the model.entryPart class, such as form,\n          etym, etc. For example, we may show that the canonical form for a given nym has two orthographic variants in\n        this way: bibliography\n      \n      Because a schema intending to make use of the nym or listNym element must include the dictionaries module as well as the namesdates module, many other\n        elements are available in addition to form. For example, to provide a more complex etymological decomposition of\n        a name, we might use the existing etym element, as follows: bibliography\n      \n      Where it is necessary to mark the substructure of nyms, this may be done by seg elements within the\n          form:bibliography\n         The seg element used here is provided by the TEI\n          linking module, which would therefore also need to be included in a schema built to\n        validate such markup. Other possibilities for more detailed linguistic analysis are provided by elements included in that\n        and the analysis (see 17 Simple Analytic Mechanisms) or iso-fs modules\n        (see 18 Feature Structures).\n      Alternatively, each of the constituents of Bogomil might be regarded as a nym in its own right:\n          bibliography Within running text, a name can specify all the nyms associated with it: bibliography Similarly,\n        within a nym, the attribute parts is used to indicate its constituent parts, where these have been identified\n        as distinct nyms: bibliography\n      \n      The nym element may also combine a number of other nym elements together, where it is intended to show\n        that they are all regarded as variations on the same root. Thus the different forms of the name John, all being derived\n        from the same root, may be represented as a hierarchic structure like this: bibliography\n      \n      The nym element may be used for components of geographical or organizational names as well. For example: bibliography\n      \n\n      \n         As noted above, use of these elements implies that both the dictionaries and the\n          namesdates modules are included in a schema.\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDDATE#NDDATE\">13.4 Dates</a>","content":"\n      13.4 Dates\n      The following elements for the encoding of dates and times were introduced in section 3.6.4 Dates and Times: \n          <date> contains a date in any format.\n          <time> contains a phrase defining a time of day in any format.\n        \n      \n      The current module namesdates provides a mechanism for more detailed encoding of relative\n        dates and times. A relative temporal expression describes a date or time with reference to some other\n        (absolute) temporal expression, and thus may contain an offset element in addition to one or more date\n        or time elements: \n          <offset> marks that part of a relative temporal or spatial expression which indicates the direction of the offset between the two place names, dates, or\n        times involved in the expression.\n        \n      \n      As members of the att.datable and att.duration classes, which in\n        turn are members of att.datable.w3c and att.duration.w3c\n        respectively, the date and time elements share the following attributes: \n          <att.datable.w3c> provides attributes for normalization of elements that contain\n  datable events  conforming to the W3C\n  XML Schema Part 2: Datatypes Second Edition.\n          <att.duration.w3c> provides attributes for recording normalized temporal durations.\n        \n      \n      \n\n      \n      \n\n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDDATE#NDDATE\">13.4 Dates</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDDATER#NDDATER\">13.4.1 Relative Dates and Times </a>","content":"\n        13.4.1 Relative Dates and Times \n        As noted above, relative dates and times such as in the Two Hundredth and First Year of the Republic, twenty\n            minutes before noon, and, more ambiguously, after the lamented death of the Doctor or an hour after the\n            game have two distinct components. As well as the absolute temporal expression or event to which reference is made\n          (e.g. noon, the game, the death of the Doctor, [the foundation of] the Republic), they also\n          contain a description of the distance between the time or date which is indicated and the referent\n          expression (e.g. the Two Hundredth and First Year, twenty minutes, an hour); and (optionally) an\n            offset describing the direction of the distance between the time or date indicated and the\n          referent expression (e.g. of implying after, before, after).\n        The distance component of a relative temporal expression may be encoded as a temporal element in\n          its own right using either date or time, or with the more generic measure element. A special\n          element, offset, is provided by this module for encoding the offset component of a\n          relative temporal expression. The absolute temporal expression contained within the relative expression may be encoded\n          with a date or time element; in turn, those elements may of course be relative, and thus contain\n            date or time elements within themselves. This allows for deeply nested structures such as the\n            third Sunday after the first Monday before Lammastide in the fifth year of the King's second marriage ...  but so\n          does natural language.\n        In the following examples, the when and dur attributes have been used to simplify processing of\n          variant forms of expression: bibliography\n          bibliography\n        In the following example, a nested date element is used to show that my birthday and the cited date are\n          parts of the same temporal expression, and hence to disambiguate the phrase A week before my birthday on 9th\n            December: bibliography The alternative reading of this phrase could be encoded as follows: bibliography\n        \n        Where more complex or ambiguous expressions are involved, and where it is desirable to make more explicit the\n          interpretive processes required, the feature structure notation described in chapter 18 Feature Structures may be used.\n          Consider, for example, the following temporal expression which occurs in the Scottish Temperance Review\n          of August 1850, referring to the summer holiday known in Glasgow simply as the Fair: bibliography\n        \n        For the definition of the ana attribute, see chapter 17 Simple Analytic Mechanisms (in particular 17.2 Global Attributes for Simple Analyses). It is used here to link the temporal phrase with an interpretation of it. Like most traditional\n          fairs and market days, the Glasgow Fair was established by local custom and could vary from year to year. Consequently,\n          in order to provide such an interpretation, it is necessary to draw upon additional information which may or may not be\n          located in the particular text in question. In this case, it is necessary at least to know the spatial and temporal\n          context (year and place) of the fair referred to. These and other features required for the analysis of this particular\n          temporal expression may be combined together as one feature structure of type date-analysis: bibliography For further discussion of feature structure representation see chapter 18 Feature Structures.\n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDDATE#NDDATE\">13.4 Dates</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDDATEA#NDDATEA\">13.4.2 Absolute Dates and Times</a>","content":"\n        13.4.2 Absolute Dates and Times\n\n        The following are examples of absolute temporal expressions.\n        \n          bibliography\n          \n        \n        It may be useful to categorize a temporal expression which is given in terms of a named event, such as a public\n          holiday, or a named time such as tea time or matins: bibliography\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        Absolute temporal expressions denoting times which are given in terms of seconds, minutes, hours, or of well-defined\n          events (e.g. noon, sunset) may similarly be represented using the time element. bibliography\n          bibliography\n          bibliography\n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDDATE#NDDATE\">13.4 Dates</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDDATEISO#NDDATEISO\">13.4.3 More Expressive Normalizations</a>","content":"\n        13.4.3 More Expressive Normalizations\n        The attributes for normalization of dates and times so far described use a standard format defined by XML Schema Part 2: Datatypes Second Edition. This format is widely accepted and has significant\n          software support. It is essentially a profile of ISO 8601 Data elements and interchange formats — Information\n            interchange — Representation of dates and times. The full ISO standard provides formats not available in the\n          W3C recommendation, for example, the capability to refer to a date by its ordinal date or week date, or to refer to a\n          century. It also provides ways of indicating duration and range.\n\n        When this module is included in a schema, the following additional attributes are provided: \n            <att.datable.iso> provides attributes for normalization of elements that contain datable events using the ISO 8601:2004 standard.\n            <att.duration.iso> provides attributes for recording normalized temporal durations.\n           These attributes may be used in preference to their W3C equivalent when it is necessary to provide a\n          normalized value in some form not supported by the W3C attributes. For example, a century date in the W3C format must be\n          expressed as a range, using the from attribute together with either the to attribute or the\n            dur (duration) attribute: bibliography With the attribute when-iso, however, it is possible to express the same normalized value in any of\n          the following additional ways: bibliography\n        \n\n        \n\n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDDATE#NDDATE\">13.4 Dates</a><a class=\"breadcrumb\" href=\"p5.xml?id=NDDATECUSTOM#NDDATECUSTOM\">13.4.4 Using Non-Gregorian Calendars</a>","content":"\n        13.4.4 Using Non-Gregorian Calendars\n        All date-related encoding described above makes use of the Gregorian calendar, on which both the ISO and W3C datetime\n          formats are based. However, historical texts often pre-date the invention of the Gregorian calendar in the 16th century,\n          or its adoption in Europe over the following centuries, and many other calendars are used in texts from other cultures\n          and contexts. Non-Gregorian dates can be encoded using methods described below.\n\n        First, a Calendar Description element needs to be supplied in the teiHeader as described in 2.4.5 Calendar Description:\n\n        bibliography\n\n        The following attributes can now be used to encode dates using this calendar: \n            <att.datable> provides attributes for normalization of elements\n    that contain dates, times, or datable events.\n            <att.datable.custom> provides attributes for normalization of elements that contain datable events to a custom dating system\n    (i.e. other than the Gregorian used by W3 and ISO).\n          \n          bibliography Here, the calendar attribute points to the calendar element in the header which defines and\n          describes the calendar used.\n\n        The calendar attribute is used to specify the calendar used in the text content of the dating\n          element which bears it. For reasons of consistency and computability, it is often useful to complement the content of an \n          element with attributes such as when, notBefore, notAfter, etc. For dates expressed in a non-Gregorian calendar, \n          such normalizations may also be expressed in terms of the non-Gregorian calendar specified by the datingMethod attribute. \n          The attributes when-custom, notBefore-custom, from-custom, etc. are provided for this purpose; the datingMethod attribute \n          is used to identify the calendar used in the value of these attributes: bibliography Here, the calendar attribute specifies the calendar used in the text content of the date\n          element, as before, whereas the datingMethod attribute signifies that the calendar used in the\n            when-custom attribute is also Julian. The schema could be customized in order to constrain the content of\n          custom attributes in a manner similar to the constraints provided on regular Gregorian dating attributes such as\n            when, to enforce consistency in the use of non-Gregorian dates.\n\n        Custom dating attributes can be combined with any of the standard dating attributes in order to provide a standardized\n          Gregorian version of a non-Gregorian date. We might enhance the preceding example with the addition of when,\n          providing the Gregorian calendar equivalent of the Julian date: bibliography\n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=ND#ND\">13 Names, Dates, People, and Places</a><span class=\"breadcrumb\">13.5 Module for Names and Dates</span>","content":"\n    13.5 Module for Names and Dates\n    The module described in this chapter makes available the following components: \n        Names, dates, persons and places\n        Names and dates\n        \n        \n        \n        \n        \n       The selection and combination of modules to form a TEI schema is described in 1.2 Defining a TEI Schema.\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FT#FT\">14 Tables, Formulæ, Graphics, and Notated Music</a>","content":"\n  14 Tables, Formulæ, Graphics, and Notated Music\n  Many documents, both historical and contemporary, include not only text,\n    but also graphics, artwork, and other images. Although some types of images\n    can be represented directly with markup, it is more common practice to\n    include such information by using a reference to an external entity\n    (typically a URL) encoded in a suitable graphical notation.\n  In addition to graphic images, documents often contain material presented\n    in graphical or tabular format. In such materials, details of layout and\n    presentation may also be of comparatively greater significance or complexity\n    than they are for running text. Indeed, it may often be difficult to make a\n    clear distinction between details relating purely to the rendition of\n    information and those relating to the information itself.\n  Documents may also contain mathematical formulæ or expressions in other\n    formulaic notations, for which no notation is defined in these\n    Guidelines.\n  Finally, documents may contain musical notation, embedded in a manner\n    similar to tables, graphs, and formulæ.\n  These areas (graphics, tabular material, and mathematical or other formulæ,\n    and music) have in common that they have received considerable attention\n    from many other standards bodies or similar professional groups. In part\n    because of this, they may frequently be most conveniently encoded and\n    processed using some notation not defined by these Guidelines. For these\n    reasons, and others, we consider tables, formulæ, graphics, and notated music\n    together in this chapter.\n  As with text markup in general, many incompatible formats have been\n    proposed for the representation of graphics, formulæ, and tables in\n    electronic form. Unfortunately, no single format as effective as XML in the\n    domain of text has yet emerged for their interchange, to some extent because\n    of the difficulty of representing the information these data formats convey\n    independently of the way it is rendered.\n  The module defined by this chapter defines special purpose\n      container elements that can be used to encapsulate\n    occurrences of such data within a TEI-conformant document in a portable way.\n    Specific recommendations for the encoding of tables are provided in section\n      14.1 Tables, recommendations for mathematical or other formulæ\n    in section 14.2 Formulæ and Mathematical Expressions, and for the encoding of musical notation\n    in section 14.3 Notated Music in Written Text. Specific recommendations for the encoding\n    of graphic figures may be found in section 14.4 Specific Elements for Graphic Images. The rest\n    of the chapter is devoted to general problems of encoding graphic\n    information.\n  There is at the time of writing no consensus on formats for graphical\n    images, and such formats vary in many ways. We therefore provide (in section\n      14.5 Overview of Basic Graphics Concepts) a brief discussion of the ways in which images\n    may be represented, and (in section 14.6 Graphic Image Formats) a list of\n    formal names for those representations most popular at this time. Each one\n    includes a very brief description. These Guidelines recommend a few\n    particular representations as being the most widely supported and\n    understood.\n  \n  \n  \n  \n  \n  \n  \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FT#FT\">14 Tables, Formulæ, Graphics, and Notated Music</a><a class=\"breadcrumb\" href=\"p5.xml?id=FTTAB#FTTAB\">14.1 Tables</a>","content":"\n    14.1 Tables\n    A table is the least graphic of the elements\n      discussed in this chapter. Almost any text structure can be presented as a\n      series of rows and columns: one might, for example, choose to show a\n      glossary or other form of list in tabular form, without necessarily\n      regarding it as a table. In such cases, the global rend\n      attribute is an appropriate way of indicating that some element is being\n      presented in tabular format; similarly, the global style attribute coud be used\n      to provide an appropriate display property in CSS. When tabular presentation is regarded as of less\n      intrinsic importance, it is correspondingly simpler to encode descriptive\n      or functional information about the contents of the table, for example to\n      identify one cell as containing a name and another as containing a date,\n      though the two methods may be combined. \n    When, however, particular elements are required to encode the tabular\n      arrangement itself, then one or other of the various table\n        schemas now available may be preferable. The schemas in\n      common use generally view a table as a special text element, made up of\n      row elements, themselves composed of\n      cells.\n      Table cells generally appear in row-major order, with the first row from\n      left to right, then the second row, and so on. Details of appearance such\n      as column widths, border lines, and alignment are generally encoded by\n      numerous attributes. Beyond this, however, such schemas differ greatly.\n      This section begins by describing a table schema of this kind; a brief\n      summary of some other widely available table schemas is also provided in\n      section 14.1.2 Other Table Schemas. \n    \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FT#FT\">14 Tables, Formulæ, Graphics, and Notated Music</a><a class=\"breadcrumb\" href=\"p5.xml?id=FTTAB#FTTAB\">14.1 Tables</a><a class=\"breadcrumb\" href=\"p5.xml?id=FTTAB1#FTTAB1\">14.1.1 TEI Tables</a>","content":"\n      14.1.1 TEI Tables\n      For encoding tables of low to moderate complexity, these Guidelines\n        provide the following special purpose elements: \n          <table> contains text displayed in tabular form, in rows and columns.\n          <row> contains one row of a table.\n          <cell> contains one cell of a table.\n        \n      \n      The table element is defined as a member of the class model.inter; it may therefore appear both within\n        other components (such as paragraphs), or between them, provided that\n        the module defined in this chapter has been enabled, as described at the\n        beginning of this chapter.\n      It is to a large extent arbitrary whether a table should be regarded as\n        a series of rows or as a series of columns. For compatibility with\n        currently available systems, however, these Guidelines require a\n        row-by-row description of a table. It is also possible to describe a\n        table simply as a series of cells; this may be useful for tabular\n        material which is not presented as a simple matrix. \n      The attributes rows and cols may be used to\n        indicate the size of a table, or to indicate that a particular cell or\n        row of a table spans more than one row or column. For both tables and\n        cells, rows and columns are always given in top-to-bottom, left-to-right\n        order, although formatting properties such as those provided by CSS may\n        be used to specify that they should be displayed differently. These\n        Guidelines do not require that the size of a table be specified; for\n        most formatting and many other applications, it will be necessary to\n        process the whole table in two passes in any case. \n      Where cells span more than one column or row, the encoder must\n        determine whether this is a purely presentational effect (in which case\n        the rend attribute may be more appropriate), whether the part\n        of the table affected would be better treated as a nested table, or\n        whether to use the spanning attributes listed above. \n      The role attribute may be used to categorize a single cell,\n        or set a default for all the cells in a given row. The present\n        Guidelines distinguish the roles of label and\n          data only, but the encoder may define other roles, such\n        as derived, numeric, etc., as appropriate. \n      These three attributes are provided by the attribute class\n      att.tableDecoration of which both\n      cell and row are members; see further 1.3.1 Attribute Classes. \n      The following simple example demonstrates how the data presented as a\n        labelled list in section 3.8 Lists might be represented by\n        an encoder wishing to preserve its original appearance as a table:\n        bibliography\n        \n      \n      Note that this encoding makes no attempt to represent the full\n        significance of the ditto cells above; these might be regarded as\n        simple links between the cells containing them and that to which they\n        refer, or as virtual copies of it. For ways of representing either\n        interpretation, see chapter 16 Linking, Segmentation, and Alignment. \n      The following example demonstrates how a simple statistical table may\n        be represented using this scheme:\n        bibliography\n      \n      Note the use of a blank cell in the first row to ensure that the column\n        labels are correctly aligned with the data. Again, this encoding does\n        not explicitly represent the alignment between column and row labels and\n        the data to which they apply. Where the primary emphasis of an encoding\n        is on the semantic content of a table, a more explicit mechanism for the\n        representation of structured information such as that provided by the\n        feature structure mechanism described in chapter 18 Feature Structures may\n        be preferred. Alternatively, the general purpose linkage and alignment\n        mechanisms described in chapter 16 Linking, Segmentation, and Alignment may also be applied\n        to individual cells of a table. \n      The content of a table cell need not be simply character data. It may\n        also contain any sequence of the phrase-level elements described in\n        chapter 3 Elements Available in All TEI Documents, thus allowing for the encoding of\n        potentially more useful semantic information, as in the following\n        example, where the fact that one cell contains a number and the other\n        contains a place name has been explicitly recorded:\n        bibliography\n      \n      The use of semantically marked elements within a cell enables\n        the encoder to convey something about the nature and significance of the\n        information, rather than merely suggesting how to display it in rows and\n        columns.\n      Alternatively, the role attribute might be used to convey\n        such information:\n        bibliography\n      \n      The content of table elements is not limited to head and\n          row. Milestone elements such as cb and lb\n        allow breaks to be signalled inside tables; figure provides an\n        option for including data which is not amenable to normal row and cell\n        analysis; and other elements such as epigraph and\n          trailer provide options for including text which is clearly\n        part of the table, but outside the actual tabular layout. This example\n        shows the use of trailer:\n        bibliography\n      \n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FT#FT\">14 Tables, Formulæ, Graphics, and Notated Music</a><a class=\"breadcrumb\" href=\"p5.xml?id=FTTAB#FTTAB\">14.1 Tables</a><a class=\"breadcrumb\" href=\"p5.xml?id=FTTAB2#FTTAB2\">14.1.2 Other Table Schemas</a>","content":"\n      14.1.2 Other Table Schemas\n      Many authoring systems include built-in support for their own or for\n        public table schemas. These provide an enhanced user interface and good\n        formatting capabilities, but are often product-specific, despite their\n        use of a XML markup language. \n      The DTD developed by the Association of American Publishers (AAP) and\n        standardized in ANSI Z39.59 provided a very simple encoding for\n        correspondingly simple tables. This has been further developed, together\n        with the table DTD documented in ISO Technical Report 9537, and now\n        forms part of ISO 12083. The TEI table model described above has\n        functionality very similar to that defined by ISO 12083. \n      For more complex tables, the most effective publicly-available DTD is\n        probably that developed by the US Department of Defense CALS project.\n        This supports vertical and horizontal spanning and various kinds of text\n        rotation and justification within cells and is also directly supported\n        by a number of existing XML software systems. \n      The CALS table model is much too complex to describe fully here; for\n        historical background see http://archive.is/gGzsZ; for\n        more recent simplifications of it and current implementations see https://www.oasis-open.org/specs/tablemodels.php. As with\n        any other XML vocabulary, the XML version of the CALS model may readily\n        be included in a TEI schema, using the techniques described in 23.3 Customization. \n      \n      \n      The XHTML table model (1 ) is based on the HTML\n        table model (1 ). Both models support arrangement of\n        arbitrary data into rows and columns of cells. Table rows and columns\n        may be grouped to convey additional structural information and may be\n        rendered by user agents in ways that emphasize this structure. Support\n        for incremental rendering of tables and for rendering on\n          non-visual user agents\n        \n        is also available. Special elements and attributes are provided to\n        associate metadata with tables. They indicate the table's purpose, or\n        are for the benefit of people using speech or Braille-based user agents.\n        Tables are not recommended for use purely as a means to lay out document\n        content, as this leads to many accessibility problems (see further https://www.w3.org/TR/WCAG10-HTML-TECHS/#tables).\n        Stylesheets provide a far more effective means of controlling layout and\n        other visual characteristics in both HTML and XML documents. \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FT#FT\">14 Tables, Formulæ, Graphics, and Notated Music</a><a class=\"breadcrumb\" href=\"p5.xml?id=FTFOR#FTFOR\">14.2 Formulæ and Mathematical Expressions</a>","content":"\n    14.2 Formulæ and Mathematical Expressions\n    Mathematical and chemical formulæ pose problems similar to those posed by\n      tables in that rendition may be of great significance and hard to\n      disentangle from content. They also require access to a wide range of\n      special characters, for most of which standard entity names already exist\n      in the documented ISO entity sets (see further chapters 6 Languages and Character Sets and 5 Characters, Glyphs, and Writing Modes). \n    Formulæ and tables are also similar in that well-researched and detailed\n      DTD fragments have already been developed for them independently of the\n      TEI. They differ in that (for mathematics at least) there also exists a\n      richly detailed text-based but non-XML notation which is very widely used:\n      this is the TeX system, and the sets of descriptive macros developed for\n      it such as LaTeX, AMS-TeX, and AMS-LaTeX. \n    The AAP and ISO standards mentioned in section 14.1 Tables\n      above both provide DTDs for equations as well as for tables, which now\n      form part of ISO 12083. The European Mathematical Trust, an organization\n      set up specifically to enhance research support for European\n      mathematicians, has also defined a general purpose mathematical DTD known\n      as EuroMath (http://xml.coverpages.org/emt-ukc-index.html), for which it provides both software and services. \n    Most if not all of the functionality provided by these DTDs can now be\n      found in the OpenMath and MathML XML-based systems briefly described\n      below. \n    As with tables, in all the XML solutions a tension exists between the\n      need to encode the way a formula is written (its appearance) and the need\n      to represent its semantics. If the object of the encoding is purely to act\n      as an interchange format among different formatting programs, then there\n      is no need to represent the mathematical meaning of an expression. If\n      however the object is to use the encoding as input to an algebraic\n      manipulation system (such as Mathematica or Maple) or a database system,\n      clearly simply representing superscripts and subscripts will be\n      inadequate. \n    The formula element provided by these Guidelines makes no\n      attempt to represent the internal structure of formulæ. \n        <formula> contains a mathematical or other formula.\n      \n    \n    By default, a formula is assumed to contain character data which\n      is not validated in any way. The notation used may however be named, using\n      the notation attribute provided by the\n        att.notated class.\n      bibliography\n       The character data must still be well-formed, of course, which means that\n        < and & must be\n      escaped with entity references or numeric character references, e.g.\n      bibliography\n    \n    Alternatively, if more detailed markup is desired, the content of the formula element may be redefined\n      to include elements defined by some other XML vocabulary, such as that of ISO\n      12083, or to use elements from the OpenMath or\n      MathML\n      schemas.\n    \n    When the content of a formula element is not expressed in XML\n      the notation used should always be specified using the notation\n      attribute as above, and in the following longer example:\n      bibliography\n       The notation attribute supplies the name of a notation\n        (TeX), which is expected to be identified somewhere in document\n      metadata. \n    Mathematical Markup Language (MathML) (1 ) is a\n      vocabulary for describing mathematical notation, capturing both its\n      structure and content.\n      \n      It provides two types of markup: Presentation Markup, which captures the\n        notational structure of an expression and could be seen as the\n        TeX for the Web and Content Markup, which captures\n      the mathematical structure of an expression. Most of its content\n      elements correspond with the range of operators, relations, and named\n      functions typically found at the high-school level of mathematics. The\n      tortoise example given above in TeX can be re-expressed in MathML as\n      bibliography\n    \n    MathML 2.0 provides support for a Semantic Math-Web,\n      XML namespaces, and other current XML standards, such as XML DOM, OMG IDL,\n      ECMAScript, and Java. It also provides a modularized version of the MathML\n      DTD so that MathML fragments embedded in XHTML 1.1\n      documents  can be correctly validated.\n    The OpenMath (https://www.openmath.org/standard/) project is coordinated by the OpenMath Society (https://www.openmath.org/) and funded by the European\n      Commission under the Esprit Multimedia Standards Initiative that commenced\n      in September 1997. It is likely to become a key standard for communicating\n      semantically rich representations of mathematical objects both on and off\n      the Web in a platform-independent manner.\n    The OpenMath Standard (https://www.openmath.org/standard/om20-2004-06-30/) consists\n      of specifications for \n        OpenMath objects, representing the structure of formulæ (https://www.openmath.org/standard/om20-2004-06-30/omstd20html-2.xml#cha_obj);\n        Content Dictionaries, providing semantic context (https://www.openmath.org/standard/om20-2004-06-30/omstd20html-4.xml#cha_cd);\n        Encodings, both binary (https://www.openmath.org/standard/om20-2004-06-30/omstd20html-3.xml#sec_binary) and XML (https://www.openmath.org/standard/om20-2004-06-30/omstd20html-3.xml#sec_xml).\n      \n    OpenMath and MathML have certain common aspects. They both use prefix\n      operators, both are XML-based and they both construct their objects by\n      applying certain rules recursively. Such similarities facilitate mapping\n      between the two standards. There are also some key differences between\n      MathML and OpenMath. OpenMath does not provide support for presentation of\n      mathematical objects and its scope of semantically-oriented elements is\n      much broader that of MathML, with the expressive power to cover virtually\n      all areas of computational mathematics. In fact, a particular set of\n      Content Dictionaries, the MathML CD Group, covers the\n      same areas of mathematics as the Content Markup elements of MathML\n      2.0.\n    Finally, OMDoc (http://omdoc.org/) is an extension of the\n      OpenMath standard that supplies markup for structures such as axioms,\n      theorems, proofs, definitions, texts (mixing formal content with\n      mathematical text). \n    In-line versus block placement for an equation can be distinguished if\n      desired, via the global rend attribute. The global n\n      and xml:id attributes may also be used to label or identify the\n      formula, as in the following example:\n      bibliography\n    \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FT#FT\">14 Tables, Formulæ, Graphics, and Notated Music</a><a class=\"breadcrumb\" href=\"p5.xml?id=FTNM#FTNM\">14.3 Notated Music in Written Text</a>","content":"\n    14.3 Notated Music in Written Text\n    Music, like many other art forms, is often mentioned, discussed and\n      described in writings of various kinds. This applies to both historical\n      and contemporary documents, even though methods of notating music have\n      changed considerably in western history. In most cases, music notation\n      enters the text flow in a way similar to figures, images, or graphs. On\n      other occasions, elements of music notation are treated as inline\n      characters in running text.\n    notatedMusic provides a way to signal the presence of music\n      notation in text, but defer to other representations, which are not\n      covered by the TEI guidelines, to describe the music notation itself. In\n      fact several commercial, academic, and standard bodies have developed\n      digital representations of music notation. Given the topic's\n      complexity, these representations often focus on different aspects and\n      adopt different methodologies. Therefore, notatedMusic only\n      defines a container element to encode the occurrence of music notation and\n      allows linking to the data format preferred by the encoder. (Note:\n        notatedMusic is not the same as musicNotation, a\n      metadata element, which is used to describe musical notation that appears\n      in a manuscript. See 10 Manuscript Description.)\n    The following elements can be used for encoding music notation in text: \n        <notatedMusic> encodes the presence of music notation in a text\n        <ptr> defines a pointer to another location.\n        <desc> contains a short description of the purpose, function, or\n    use of its parent element,\n    or when the parent is a documentation element, describes or defines the object being documented. \n   \n  \n        <graphic> indicates the location of a graphic or illustration, either forming\n    part of a text, or providing an image of it.\n        <binaryObject> provides encoded binary data representing an inline graphic,\n  audio, video or other object.\n      \n    \n    \n        notatedMusic groups elements representing or\n        containing music notation.\n        ptr can be used to indicate the location of a\n        representation of the music notation. mimeType supplies the MIME type of the data format,\n            when available.\n      \n        desc can be used to give a prose description of\n        the notated music.\n        graphic can be used to indicate the location of\n        a graphical representation of the music notation.\n        binaryObject provides encoded binary data which\n        constitutes another representation of the music notation (e.g.\n        audio).\n    The notatedMusic element may contain a textual description and\n      pointers to various representations of the music notation in different\n      media. An external representation of the notated music is specified using\n      the ptr element, whose target attribute provides its\n      electronically-accessible location. The attribute mimeType\n      supplies the MIME type of the data format when available. For example:\n    \n    A textual description of the notation can be provided within the\n        desc element; alternatively, a label may be supplied.\n      For example:\n    bibliography\n    It is possible to link to any kind of music notation data format.\n      However, when a MIME type is not available, it is recommended that the\n      format be specified in the description. See the following examples.\n    MIME type available:\n    bibliography\n    MIME type not available:\n    bibliography\n    Application format:\n    bibliography\n    It is possible to specify the location of digital objects representing\n      the notated music in other media such as images or audio-visual files. The\n      interpretation of the correspondence between the notated music and these\n      digital objects is not encoded explicitly. We recommend the use of\n        graphic and binaryObject mainly as a fallback\n      mechanism when the notated music format is not displayable by the\n      application using the encoding. The alignment of encoded notated music,\n      images carrying the notation, and audio files is a complex matter for\n      which we refer the reader to other formats and specifications such as MPEG-SMR.\n    bibliography\n    \n    It is also recommended, when useful, to embed XML-based music notation \n      formats, such as the Music Encoding Initiative \n      format as content of notatedMusic. This must be done by means of customization.\n    \n    In modern printing, music notation positioned between blocks of text for\n      illustrative purposes is usually referred to as a figure or\n        example. In this cases, we recommend the inclusion of\n        notatedMusic in figure in order to encode possible\n      captions and headers. For example:\n    \n      Example from: \n          Prout, E. (1899). The\n            orchestra.\n        \n      \n    \n    bibliography\n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FT#FT\">14 Tables, Formulæ, Graphics, and Notated Music</a><a class=\"breadcrumb\" href=\"p5.xml?id=FTGRA#FTGRA\">14.4 Specific Elements for Graphic Images</a>","content":"\n    14.4 Specific Elements for Graphic Images\n    The following special purpose elements are used to indicate the presence\n      of graphic images within a document: \n        <figure> groups elements representing or containing graphic information\n  such as an illustration, formula,  or    figure.\n        <graphic> indicates the location of a graphic or illustration, either forming\n    part of a text, or providing an image of it.\n        <binaryObject> provides encoded binary data representing an inline graphic,\n  audio, video or other object.\n        <figDesc> contains a brief prose description of the appearance or content\nof a graphic figure, for use when documenting an image without\ndisplaying it.\n      \n    \n    The graphic and binaryObject elements form part of the\n      common core module, and are discussed in section 3.10 Graphics and Other Non-textual Components. \n    The figure element is used to contain images, captions, and\n      textual descriptions of the pictures. The images themselves are specified\n      using the graphic element, whose url attribute\n      provides the location of an image. For example:\n      \n    \n    Three kinds of content may be supplied inside a figure element:\n      the element head may be used to transcribe (or supply) a\n      descriptive heading or title for the graphic itself as in this example:\n      bibliography\n    \n    Figures are often accompanied not only by a title or heading (a caption),\n      but by a paragraph or so of commentary (a legend) following the caption.\n      One or more p or ab elements\n       may be used to transcribe any\n      commentary on the figure in the source:\n      bibliography\n      \n       Here,\n      the figure contains a heading Above which is complemented by a\n      paragraph of description The drawing room ... several hundred\n        people. Both of these are transcribed from the source, while the\n      description is provided by the encoder, for use by applications which\n      cannot display the graphic directly. In documents created in electronic\n      form with the needs of print-handicapped readers in mind, the\n        figDesc element may be provided by the author rather than a\n      subsequent encoder.\n      bibliography\n    \n    Where the graphic itself contains large amounts of text, perhaps with a\n      complex structure, and perhaps difficult to distinguish from the graphic,\n      the encoder should choose whether to regard the graphic as containing the\n      text (in which case, a nested floatingText element may be\n      included within the figure element) or to regard the enclosed\n      text as being a separate division of the text element in which\n      the graphic appears. In this latter case, an appropriate div or\n        div1 (etc.) element may be used for the text represented within\n      the graphic, and the figure element embedded within it. The\n      choice will depend to a large degree on the encoder's understanding of the\n      relationship between the graphic and the surrounding text.\n    A figure which is internally divided, or contains sub-figures, may be\n      encoded with nested figure elements, as in the following example.\n      bibliography\n      \n    \n    Like any other element in the TEI scheme, figures may be given\n      identifiers so that they can be aligned with other elements, and linked to\n      or from them, as described in chapter 16 Linking, Segmentation, and Alignment. Some common\n      examples are discussed briefly here; full information is provided in that\n      chapter.\n    It is often desirable to maintain two versions of an image in an\n      electronic file: one a low resolution or thumbnail\n      version which, when selected by the user, causes the other, high\n      resolution, version to be accessed. In TEI terms, the thumbnail image acts\n      as a reference to the other. Supposing that a thumbnail\n      version of the figure discussed above is available as fig1th.png, we might embed a reference to the image using the\n      simple ref element discussed in section 3.7 Simple Links and Cross-References:\n      bibliography\n    \n    Another common requirement is to associate part or the whole of an image\n      with a textual element not necessarily contiguous to it in the text; this\n      is sometimes known as a callout. When the module for\n      transcription is included in a schema, specific attributes for parts of a\n      text and parts (or all) of a digital image are available; these are\n      discussed in 11.1 Digital Facsimiles. In addition, chapter 16 Linking, Segmentation, and Alignment may be consulted for other mechanisms available for this\n      purpose. \n    The following example assumes that we wish to associate one portion of\n      the image held as fig1 with chapter two of some text, and another\n      portion of it with chapter three. The application may be thought of as a\n      hypertext browser in which the user selects from a graphic image which\n      part of a text to read next, but the mechanism is independent of this\n      particular application.\n    The first requirement is some way of identifying and hence pointing to\n      sub-parts of a graphic image. This may be done by pointing into an XML\n      graphic representation, for example an SVG file. Thus\n      \n    \n    These ptr elements identify two areas within the image\n        Fig1 by pointing at elements inside the XML file Fig1.svg, which contains the following.\n      \n    \n    The next requirement is some way of identifying the parts of the document\n      to which a link is to be made. The most obvious way of doing this is to\n      use the global xml:id attribute:\n      \n    \n    Now, all that is needed to linking these areas to the relevant chapters\n      is a linkGrp element, as described in section 16.1 Links:\n      \n    \n    In this example, the SVG representation of the graphic is stored\n      externally to the TEI document and linked by means of a pointer. It is\n      also possible to embed the SVG representation directly within the TEI by\n      extending the content model of the figure element to permit an\n      element svg from the SVG namespace. Like other\n      customizations of the TEI scheme, this is carried out using the techniques\n      documented in section 1.2 Defining a TEI Schema; further examples are provided\n      in chapter 16 Linking, Segmentation, and Alignment.\n    \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FT#FT\">14 Tables, Formulæ, Graphics, and Notated Music</a><a class=\"breadcrumb\" href=\"p5.xml?id=FTGROV#FTGROV\">14.5 Overview of Basic Graphics Concepts</a>","content":"\n    14.5 Overview of Basic Graphics Concepts\n    The first major distinction in graphic representation is that between\n      raster graphics and vector graphics. A raster image is a list\n      of points, or dots. Scanners, fax machines, and other simple devices easily\n      produce digital raster images, and such images are therefore quite common.\n      A vector image, in contrast, is a list of geometrical\n      objects, such as lines, circles, arcs, or even cubes. These are much more\n      difficult to produce, and so are mainly encountered as the output of\n      sophisticated systems such as architectural and engineering CAD\n      programs.\n    Raster images are difficult to modify because by definition they only\n      encode single points: a line, for example, cannot grow or shrink as such,\n      since it is not identified as such. Only its component parts are\n      identified, and only they can be manipulated. Therefore the resolution or\n      dot-size of a raster image is important, which is not the case with vector\n      images. It is also far more difficult to convert raster images to vector\n      images than to perform the opposite conversion. Raster images generally\n      require more storage space than vector images, and a wide variety of\n      methods exists for compressing them; the variation in these methods leads\n      to corresponding variations in representations for storage and\n      transmission of raster images.\n    Motion video usually consists of a long series of raster images. Data\n      compression is even more effective on video than on single raster images\n      (mainly owing to redundancy which arises from the usual similarity of\n      adjacent frames). Notations for representing full-motion video are hotly\n      debated at this time, and any user of these Guidelines would do well to\n      obtain up-to-date expert advice before undertaking a project using\n      them.\n    The compression methods used with any of these image types may be\n        lossy or lossless. Methods for\n        lossy compression save space by discarding a small portion\n      of the image's detail, such as fine distinctions of shading. When\n      decompressed, therefore, such an image will be only a close approximation\n      of the original. In contrast, lossless compression guarantees\n      that the exact uncompressed image will be reproducible from the compressed\n      form: only truly redundant information is removed. In general, therefore,\n      lossless compression does not save quite so much space as lossy\n      compression, though it does guarantee fidelity to the original\n      uncompressed image.\n    Raster images may be characterized by their resolution,\n      which is the number of dots per inch used to represent the image. Doubling\n      the resolution will give a more precise image, but also quadruple the\n      storage requirement (before compression), and affect processing time for\n      any operations to be performed, such as displaying an image for a reader.\n      Motion video also has resolution in time: the number of frames to be shown\n      per second. Encoders should consider carefully what resolution(s) and\n      frame rate(s) to use for particular applications; these Guidelines express\n      no recommendation in this matter, save the universal ones of consistency\n      and documentation.\n    Within any image, it is typical to refer to locations via Cartesian\n      coordinate axes: values for x, y, and sometimes z and/or time. However,\n      graphic notations vary in whether coordinates count from left-to-right and\n      top-to-bottom, or another way. They also vary in whether coordinates are\n      considered real (inches, millimeters, and so on), or virtual (dots). These\n      Guidelines do not recommend any of these methods over another, but all\n      decisions made should be applied consistently, and documented in the\n        encodingDesc section of the TEI header.1\n    Methods of aligning images and text are discussed in 11.1 Digital Facsimiles.\n    The chromatic values of an image may be rendered in many different ways.\n      In monochrome images every displayed point is either black or white. In\n        grayscale images, each point is rendered in some shade of\n      gray, the number of shades varying from system to system. In true\n      polychrome images, points are rendered in different hues, again with\n      varying limitations affecting the number of distinct shades and the means\n      by which they are displayed.\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FT#FT\">14 Tables, Formulæ, Graphics, and Notated Music</a><a class=\"breadcrumb\" href=\"p5.xml?id=FTGRNO#FTGRNO\">14.6 Graphic Image Formats</a>","content":"\n    14.6 Graphic Image Formats\n    As noted above, there exists a wide variety of different graphics\n      formats, and the following list is in no way exhaustive. Moreover,\n      inclusion of any format in this list should not be taken as indicating\n      endorsement by the TEI of this format or any products associated with it.\n      Some of the formats listed here are proprietary to a greater or lesser\n      extent and cannot therefore be regarded as standards in any meaningful\n      sense. They are however widely used by many different vendors.\n    The following formats are widely used at the present time, and likely to\n      remain supported by more than one vendor's software: BMP: Microsoft bitmap formatCGM: Computer Graphics MetafileGIF: Graphics Interchange FormatJPEG: Joint Photographic Expert GroupPBM: Portable Bit MapPCX: IBM PC raster formatPICT: Macintosh drawing formatPNG: Portable Network Graphics formatPhoto-CD: Kodak Photo Compact Disk formatQuickTime: Apple real-time image systemSMIL: Synchronized Multimedia Integration Language formatSVG: Scalable Vector Graphics formatTIFF: Tagged Image File Format\n    Brief descriptions of all the above are given below. Where possible,\n      current addresses or other contact information are shown for the\n      originator of each format. Many formal standards, especially those\n      promulgated by ISO and many related national organizations (ANSI, DIN,\n      BSI, and many more), are available from those national organizations.\n      Addresses may be found in any standard organizational directory for the\n      country in question. \n    \n    \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FT#FT\">14 Tables, Formulæ, Graphics, and Notated Music</a><a class=\"breadcrumb\" href=\"p5.xml?id=FTGRNO#FTGRNO\">14.6 Graphic Image Formats</a><a class=\"breadcrumb\" href=\"p5.xml?id=FTGRAVGF#FTGRAVGF\">14.6.1 Vector Graphic Formats</a>","content":"\n      14.6.1 Vector Graphic Formats\n      CGM: Computer Graphics MetafileThis vector graphics format is specified by an ISO standard, ISO\n          8632:1987, amended in 1990. It defines binary, character, and\n          plain-text encodings; the non-binary forms are safer for blind\n          interchange, especially over networks. Documentation on CGM is\n          available from ISO and from its member national bodies such as AFNOR,\n          ANSI, BSI, DIN, JIS, etc.SVG: Scalable Vector Graphics formatSVG is a language for describing two-dimensional vector and mixed\n          vector or raster graphics in XML. It is defined by the Scalable Vector\n          Graphics (SVG) 1.0 Specification, W3C Recommendation, 04 September\n          2001, and is available at https://www.w3.org/TR/2001/REC-SVG-20010904/.PICT: Macintosh drawing formatThis format is universally supported on Macintosh™ systems,\n          and readable by a limited range of software for other systems.\n          Documentation is available from Apple Computer Company, Cupertino,\n          California USA.\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FT#FT\">14 Tables, Formulæ, Graphics, and Notated Music</a><a class=\"breadcrumb\" href=\"p5.xml?id=FTGRNO#FTGRNO\">14.6 Graphic Image Formats</a><a class=\"breadcrumb\" href=\"p5.xml?id=FTGRARGF#FTGRARGF\">14.6.2 Raster Graphic Formats</a>","content":"\n      14.6.2 Raster Graphic Formats\n      PNG: Portable Network Graphics formatPNG is a non-proprietary raster format currently widely available.\n          It provides an extensible file format for the lossless, portable,\n          well-compressed storage of raster images. Indexed-color, grayscale,\n          and truecolor images are supported, plus an optional alpha channel.\n          Sample depths range from 1 to 16 bits. It is defined by IETF RFC 2083,\n          March 1997.TIFF: Tagged Image File FormatCurrently the most widely supported raster image format,\n          especially for black and white images, TIFF is also one of the few\n          formats commonly supported on more than one operating system. The\n          drawback to TIFF is that it actually is a wrapper for several formats,\n          and some TIFF-supporting software does not support all variants. TIFF\n          files may use LZW, CCITT Group 4, or PackBits compression methods, or\n          may use no compression at all. Also, TIFF files may be monochrome,\n          grayscale, or polychromatic. All such options should be specified in\n          prose at the end of the encodingDesc section of the TEI\n          header for any document including TIFF images. TIFF is owned by Aldus\n          Corporation. Documentation on TIFF is available from them at Craigcook\n          Castle, Craigcook Road, Edinburgh EH4 3UH, Scotland, or 411 First\n          Avenue South, Seattle, Washington 98104 USA.GIF: Graphics Interchange FormatRaster images are widely available in this form, which was created\n          by CompuServe Information Services, but has by now been implemented\n          for many other systems as well. Documentation on GIF is copyright by,\n          and is available from, CompuServe Incorporated, Graphics Technology\n          Department, 5000 Arlington Center Boulevard, Columbus, Ohio 43220 USA.PBM: Portable Bit MapPBM files are easy to process, eschewing all compression in favor\n          of transparency of file format. PBM files can, of course, be\n          compressed by generic file-compression tools for storage and transfer.\n          Public domain software exists which will convert many other formats to\n          and from PBM. Documentation on PBM is copyright by Jeff Poskanzer, and\n          is available widely on the Internet.PCX: IBM PC raster formatThis format is used by most IBM PC paint programs, and supports\n          both monochrome and polychromatic images. Documentation is available\n          from ZSoft Corporation, Technical Support Department, ATTN: Technical\n          Reference Manual, 450 Franklin Rd. Suite 100, Marietta, GA 30067 USA.BMP: Microsoft bitmap formatThis format is the standard raster format for computer using\n          Microsoft Windows™ or Presentation Manager™. Documentation is\n          available from Microsoft Corporation.\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FT#FT\">14 Tables, Formulæ, Graphics, and Notated Music</a><a class=\"breadcrumb\" href=\"p5.xml?id=FTGRNO#FTGRNO\">14.6 Graphic Image Formats</a><a class=\"breadcrumb\" href=\"p5.xml?id=FTGRAMPEG#FTGRAMPEG\">14.6.3 Photographic and Motion Video Formats</a>","content":"\n      14.6.3 Photographic and Motion Video Formats\n      JPEG: Joint Photographic Experts GroupThis standard is sponsored by CCITT and by ISO. It is ISO/IEC\n          Draft International Standard 10918-1, and CCITT T.81. It handles\n          monochrome and polychromatic images with a variety of compression\n          techniques. JPEG per se, like CCITT Group IV, must be encapsulated\n          before transmission; this can be done via TIFF, or via the JPEG File\n          Interchange Format (JFIF), as commonly done for Internet delivery.QuickTime: Apple real-time image systemQuickTime is a proprietary method introduced by Apple Computer\n          Company to synchronize the display of various data. The data can\n          include frames of video, sound, lighting control mechanisms, and other\n          things. Viewers for QuickTime productions are available for Apple and\n          other computers. Further information is available from Apple Computer\n          Incorporated, 10201 North de Anza Boulevard MS 23AQ, Cupertino,\n          California 95014 USA.Photo-CD: Kodak Photo Compact Disk formatThis format was introduced by Kodak for rasterizing photographs\n          and storing them on CD-ROMs (about one hundred 35mm file images fit on\n          one disk), for display on televisions or CD-I systems. Information on\n          Photo-CD is available from Kodak Limited, Research and Development,\n          Headstone Drive, Harrow, Middlesex HA1 4TY, UK.SMIL: Synchronized Multimedia Integration Language formatSMIL is a W3C Recommendation which supports the integration of\n          independent multimedia objects into a synchronized multimedia\n          presentation. It provides multimedia authors with easily-defined basic\n          timing relationships, fine-tuned synchronization, spatial layout,\n          direct inclusion of non-text and non-image media objects, hyperlink\n          support for time-based media, and adaptiveness to varying user and\n          system characteristics. SMIL 1.0 (https://www.w3.org/TR/REC-smil/) became a W3C\n          Recommendation on June 15, 1998, and was further developed in SMIL\n          2.0. SMIL 2.0 adds native support for transitions, animation,\n          event-based interaction, extended layout facilities, and more\n          sophisticated timing and synchronization primitives to the SMIL 1.0\n          language. It also allows reuse of SMIL syntax and semantics in other\n          XML-based languages, in particular those who need to represent timing\n          and synchronization. For example, SMIL 2.0 components are used for\n          integrating timing into XHTML Document Types and into SVG. SMIL 2.0\n          also provides recommendations for Document Types based on SMIL 2.0\n          Modules (https://www.w3.org/TR/2005/REC-SMIL2-20050107/smil-modules.html). One such Document Type is the SMIL 2.0 Language Profile (https://www.w3.org/TR/2005/REC-SMIL2-20050107/smil20-profile.html). It contains support for all of the major SMIL 2.0 features\n          including animation, content control, layout, linking, media object,\n          meta-information, structure, timing, and transition effects and is\n          designed for Web clients that support direct playback from SMIL 2.0\n          markup. SMIL 2.0 (https://www.w3.org/TR/2001/REC-smil20-20010807/) became a\n          W3C Recommendation on August 7, 2001, becoming the first vocabulary to\n          provide XML Schema support and to have reached such status.\n      As noted above, the reader will encounter many, many other graphics\n        formats. \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FT#FT\">14 Tables, Formulæ, Graphics, and Notated Music</a><span class=\"breadcrumb\">14.7 Module for Tables, Formulæ, Notated Music, and Graphics</span>","content":"\n    14.7 Module for Tables, Formulæ, Notated Music, and Graphics\n    The module described in this chapter provides the following features:\n    \n      Tables, Formulæ, Notated Music, Figures\n      Tables, formulæ, notated music, and figures\n      \n      \n      \n      \n      \n    \n    The selection and combination of modules to form a TEI\n    schema is described in 1.2 Defining a TEI Schema.\n    \n    \n    \n    \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CC#CC\">15 Language Corpora</a>","content":"15 Language Corpora\n\nThe term language corpus is used to mean a number of\nrather different things.  It may refer simply to any collection of\nlinguistic data (for example, written, spoken, signed, or multimodal), although\nmany practitioners prefer to reserve it for collections which have\nbeen organized or collected with a particular end in view, generally to\ncharacterize a particular state or variety of one or more languages.\nBecause opinions as to the best method of achieving this goal differ,\nvarious subcategories of corpora have also been identified.  For our\npurposes however, the distinguishing characteristic of a corpus is that\nits components have been selected or structured according to some\nconscious set of design criteria.\n \nThese design criteria may be very simple and undemanding, or very\nsophisticated.  A corpus may be intended to represent (in the\nstatistical sense) a particular linguistic variety or sublanguage, or\nit may be intended to represent all aspects of some assumed\ncore language.  A corpus may be made up of whole\ntexts or of fragments or text samples.  It may be a\nclosed corpus, or an open or\nmonitor corpus, the composition of which may\nchange over time.  However, since an open corpus is of necessity\nfinite at any particular point in time, the only likely effect of its\nexpansibility from the encoding point of view may be some increased\ndifficulty in maintaining consistent encoding practices (see further\nsection 15.5 Recommendations for the Encoding of Large Corpora). For simplicity, therefore, our\ndiscussion largely concerns ways of encoding closed corpora, regarded\nas single but composite texts.\n \nLanguage corpora are regarded by these Guidelines as\ncomposite texts rather than unitary texts\n(on this distinction, see chapter 4 Default Text Structure).  This is\nbecause although each discrete sample of language in a corpus clearly\nhas a claim to be considered as a text in its own right, it is also\nregarded as a subdivision of some larger object, if only for\nconvenience of analysis.  Corpora share a number of characteristics\nwith other types of composite texts, including anthologies and\ncollections.  Most notably, different components of composite texts\nmay exhibit different structural properties (for example, some may be\ncomposed of verse, and others of prose), thus potentially requiring\nelements from different TEI modules.\n \nAside from these high-level structural differences, and possibly\ndifferences of scale, the encoding of language corpora and the\nencoding of individual texts present identical sets of problems.  Any\nof the encoding techniques and elements presented in other chapters of\nthese Guidelines may therefore prove relevant to some aspect of corpus\nencoding and may be used in corpora.  Therefore, we do not repeat here\nthe discussion of such fundamental matters as the representation of\nmultiple character sets (see chapter 6 Languages and Character Sets); nor do we\nattempt to summarize the variety of elements provided for encoding\nbasic structural features such as quoted or highlighted phrases, \ncross-references, lists, notes, editorial changes and reference systems (see\nchapter 3 Elements Available in All TEI Documents).  In addition to these general purpose\nelements, these Guidelines offer a range of more specialized sets of\ntags which may be of use in certain specialized corpora, for example\nthose consisting primarily of verse (chapter 6 Verse),\ndrama (chapter 7 Performance Texts), transcriptions of spoken text\n(chapter 8 Transcriptions of Speech), etc.  Chapter 1 The TEI Infrastructure\nshould be reviewed for details of how these and other components of\nthese Guidelines should be tailored to create a TEI customization \nappropriate to a given application.  In sum, it should not be assumed \nthat only the matters specifically addressed in this chapter are of\nimportance for corpus creators.\n \nThis chapter does however include some other material\nrelevant to corpora and corpus-building, for which no other location\nappeared suitable.  It begins with a review of the distinction between\nunitary and composite texts, and of the different methods provided by\nthese Guidelines for representing composite texts of different kinds\n(section 15.1 Varieties of Composite Text).  Section 15.2 Contextual Information describes a\nset of additional header elements provided for the documentation of\ncontextual information, of importance largely though not exclusively to\nlanguage corpora.  This is the additional module for language corpora\nproper.  Section 15.3 Associating Contextual\nInformation with a Text discusses a mechanism by which\nindividual parts of the TEI header may be associated with different\nparts of a TEI-conformant text.  Section 15.4 Linguistic Annotation of Corpora reviews\nvarious methods of providing linguistic annotation in corpora, with some\nspecific examples of relevance to current practice in corpus\nlinguistics.  Finally, section 15.5 Recommendations for the Encoding of Large Corpora provides some general\nrecommendations about the use of these Guidelines in the building of\nlarge corpora.\n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CC#CC\">15 Language Corpora</a><a class=\"breadcrumb\" href=\"p5.xml?id=CCDEF#CCDEF\">15.1 Varieties of Composite Text</a>","content":"15.1 Varieties of Composite Text\n\nBoth unitary and composite texts may be encoded using these\nGuidelines; composite texts, including corpora, will typically make\nuse of the following tags for their top-level organization.\n<teiCorpus> contains the whole of a TEI encoded corpus, comprising a single corpus header and one or\n    more TEI elements, each containing a single text header and a text.<TEI> contains a single TEI-conformant document, combining\n    a single TEI header with one or more members of the model.resource class. Multiple TEI\n    elements may be combined within a TEI (or teiCorpus) element.<teiHeader> supplies descriptive and\n    declarative metadata associated with a digital resource or set of\n    resources.<text> contains a single text of any kind, whether unitary or composite, for example a poem or\n    drama, a collection of essays, a novel, a dictionary, or a corpus sample.<group> contains the body of a composite text, grouping together a sequence of distinct texts (or\n    groups of such texts) which are regarded as a unit for some purpose, for example the collected\n    works of an author, a sequence of prose essays, etc. Full descriptions of these may be found in\nchapter 2 The TEI Header (for teiHeader), and chapter 4 Default Text Structure (for teiCorpus, TEI, text, and\ngroup); this section discusses their application to composite\ntexts in particular.\n \nIn these Guidelines, the word text refers to any stretch\nof discourse, whether complete or incomplete, unitary or composite,\nwhich the encoder chooses (perhaps merely for purposes of analytic\nconvenience) to regard as a unit.  The term composite text\nrefers to texts within which other texts appear; the following common\ncases may be distinguished:\nlanguage corporacollections or anthologiespoem cycles and epistolary works (novels or essays written\nin the form of collections or series of letters)otherwise unitary texts, within which one or more subordinate\ntexts are embedded\nThe elements listed above may be combined to encode each of these\nvarieties of composite text in different ways.\n \nIn corpora, the component samples are clearly distinct texts, but the\nsystematic collection, standardized preparation, and common markup of\nthe corpus often make it useful to treat the entire corpus as a unit,\ntoo.  Some corpora may become so well established as to be regarded as\ntexts in their own right; the Brown and LOB corpora are now close to\nachieving this status.\n \nThe teiCorpus element is intended for the encoding of\nlanguage corpora, though it may also be useful in encoding newspapers,\nelectronic anthologies, and other disparate collections of material.\nThe TEI element may be used in the same manner itself; the\nteiCorpus element, however, makes explicit the multiplicity\nof the collection, whatever it may be. The individual samples in the\ncorpus are encoded as separate TEI elements, and the entire\ncorpus is enclosed in a TEI or teiCorpus element.\nEach sample has the usual structure for a TEI document,\ncomprising a teiHeader followed by one or more members of the\nmodel.resource class. The corpus, too,\nhas a corpus-level teiHeader element, in which the corpus as\na whole, and encoding practices common to multiple samples may be\ndescribed. The overall structure of a TEI-conformant corpus is thus:\n\n\nOr, alternatively:\n\nHeader information which relates to the whole corpus rather than to\nindividual components of it should be factored out and included in the\nteiHeader element prefixed to the whole.  This two-level\nstructure allows for contextual information to be specified at the\ncorpus level, at the individual text level, or at both.  Discussion of\nthe kinds of information which may thus be specified is provided\nbelow, in section 15.2 Contextual Information, as well as in chapter 2 The TEI Header.  Information of this type should in general be\nspecified only once: a variety of methods are provided for associating\nit with individual components of a corpus, as further described in\nsection 15.3 Associating Contextual\nInformation with a Text.\n \nIn some cases, the design of a corpus is reflected in its internal\nstructure.  For example, a corpus of newspaper extracts might be\narranged to combine all stories of one type (reportage, editorial,\nreviews, etc.) into some higher-level grouping, possibly with sub-groups\nfor date, region, etc.  The teiCorpus element provides no\ndirect support for reflecting such internal corpus structure in the\nmarkup:  it treats the corpus as an undifferentiated series of\ncomponents, each tagged TEI.\nIf it is essential to reflect a single permanent organization of a\ncorpus into sub- and sub-sub-corpora, then the corpus or the high-level\nsubcorpora may be encoded as composite texts, using the group\nelement described below and in section 4.3.1 Grouped Texts.  The\nmechanisms for corpus characterization described in this chapter,\nhowever, are designed to reduce the need to do this.  Useful groupings\nof components may easily be expressed using the text classification and\nidentification elements described in section 15.2.1 The Text Description,\nand those for associating declarations with corpus components described\nin section 15.3 Associating Contextual\nInformation with a Text.  These methods also allow several\ndifferent methods of text grouping to co-exist, each to be used as\nneeded at different times.  This helps minimize the danger of\ncross-classification and misclassification of samples, and helps\nimprove the flexibility with which parts of a corpus may be\ncharacterized for different applications.\n \nAnthologies and collections are often treated as texts in their own\nright, if only for historical reasons.  In conventional publishing, at\nleast, anthologies are published as units, with single editorial\nresponsibility and common front and back matter which may need to be\nincluded in their electronic encodings.  The texts collected in the\nanthology, of course, may also need to be identifiable as distinct\nindividual objects for study.\n \nPoem cycles, epistolary novels, and epistolary essays differ from\nanthologies in that they are often written as single works, by single\nauthors, for single occasions; nevertheless, it can be useful to treat\ntheir constituent parts as individual texts, as well as the cycle\nitself.  Structurally, therefore, they may be treated in the same way\nas anthologies: in both cases, the body of the text is composed\nlargely of other texts.\n \nThe group element is provided to simplify the encoding of\ncollections, anthologies, and cyclic works; as noted above, the\ngroup element can also be used to record the potentially\ncomplex internal structure of language corpora.  For a full description,\nsee chapter 4 Default Text Structure.\n \nSome composite texts, finally, are neither corpora, nor anthologies,\nnor cyclic works:  they are otherwise unitary texts within which other\ntexts are embedded.  In general, they may be treated in the same way as\nunitary texts, using the normal TEI and\nbody elements.  The embedded text itself may be encoded using\nthe text element.  For further discussion, see chapter 4 Default Text Structure.\n \nAll composite texts share the characteristic that their different\ncomponent texts may be of structurally similar or dissimilar types.  If\nall  component texts may all be encoded using the same  module,\nthen no problem arises. If however they require\ndifferent modules, then these must be included in the TEI customization. This\nprocess is described in more detail in section 1.1 TEI Modules.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CC#CC\">15 Language Corpora</a><a class=\"breadcrumb\" href=\"p5.xml?id=CCAH#CCAH\">15.2 Contextual Information</a>","content":"15.2 Contextual Information\nContextual information is of particular importance for collections\nor corpora composed of samples from a variety of different kinds of\ntext. Examples of such contextual information include:  the age, sex,\nand geographical origins of participants in a language interaction, or\ntheir socio-economic status; the cost and publication data of a\nnewspaper; the topic, register or factuality of an extract from a\ntextbook. Such information may be of the first importance, whether as\nan organizing principle in creating a corpus (for example, to ensure\nthat the range of values in such a parameter is evenly represented\nthroughout the corpus, or represented proportionately to the population\nbeing sampled), or as a selection criterion in analysing the corpus\n(for example, to investigate the language usage of some particular\nvector of social characteristics).\nSuch contextual information is potentially of equal importance for\nunitary texts, and these Guidelines accordingly make no particular\ndistinction between the kinds of information which should be gathered\nfor unitary and for composite texts.  In either case, the information\nshould be recorded in the appropriate section of a TEI header, as\ndescribed in chapter 2 The TEI Header.  In the case of language corpora,\nsuch information may be gathered together in the overall corpus header,\nor split across all the component texts of a corpus, in their individual\nheaders, or divided between the two.  The association between an\nindividual corpus text and the contextual information applicable to it\nmay be made in a number of ways, as further discussed in section 15.3 Associating Contextual\nInformation with a Text below.\nChapter 2 The TEI Header, which should be read in conjunction with\nthe present section, describes in full the range of elements available\nfor the encoding of information relating to the electronic file itself,\nfor example its bibliographic description and those of the source or\nsources from which it was derived (see section 2.2 The File Description);\ninformation about the encoding practices followed with the corpus, for\nexample its design principles, editorial practices, reference system,\netc.  (see section 2.3 The Encoding Description); more detailed descriptive\ninformation about the creation and content of the corpus, such as the\nlanguages used within it and any descriptive classification system used\n(see section 2.4 The Profile Description); and version information documenting any\nchanges made in the electronic text (see section 2.6 The Revision Description).\nIn addition to the elements defined by chapter 2 The TEI Header,\nseveral other elements can be used in the TEI header if the additional\nmodule defined by this chapter is invoked.  These additional tags make\nit possible to characterize the social or other situation within which a\nlanguage interaction takes place or is experienced, the physical setting\nof a language interaction, and the participants in it.  Though this\ninformation may be relevant to, and provided for, unitary texts as well\nas for collections or corpora, it is more often recorded for the\ncomponents of systematically developed corpora than for isolated texts,\nand thus this module is referred to as being for language\ncorpora.\n\nWhen the module defined in this chapter is included in a schema, a\nnumber of additional elements become available within the\nprofileDesc element of the TEI header (discussed in section\n2.4 The Profile Description).  <textDesc> provides a description of a text in terms of its\nsituational parameters.<particDesc> describes the identifiable speakers, voices, or\n        other participants in any kind of text or other persons named or otherwise referred to in a\n        text, edition, or metadata.<settingDesc> describes the setting or settings within which a\n        language interaction takes place, or other places otherwise referred to in a text, edition,\n        or metadata. These\nelements, members of the model.profileDescPart, are discussed in the\nremainder of the chapter.\n\n\n\n\n\n\t\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CC#CC\">15 Language Corpora</a><a class=\"breadcrumb\" href=\"p5.xml?id=CCAH#CCAH\">15.2 Contextual Information</a><a class=\"breadcrumb\" href=\"p5.xml?id=CCAHTD#CCAHTD\">15.2.1 The Text Description</a>","content":"15.2.1 The Text Description\nThe textDesc element provides a full description of the\nsituation within which a text was produced or experienced, and thus\ncharacterizes it in a way relatively independent of any a\npriori theory of text-types.  It is provided as an alternative\nor a supplement to the common use of descriptive taxonomies used to\ncategorize texts, which is fully described in section 2.4.3 The Text Classification, and section 2.3.7 The Classification Declaration.  The description is\norganized as a set of values and optional prose descriptions for the\nfollowing eight situational parameters, each represented by\none of the following eight elements:\n<channel> describes the medium or channel by which a text is delivered or\nexperienced. For a written text, this might be print, manuscript, email, etc.;\nfor a spoken one, radio, telephone, face-to-face, etc.<constitution> describes the internal composition of a text or text sample,\nfor example\nas fragmentary, complete, etc.<derivation> describes the nature and extent of originality of this text.<domain> describes the most important social context in which the text was\nrealized or for which it is intended, for example private vs. public,\neducation, religion, etc.<factuality> describes the extent to which the text may be regarded as\nimaginative or non-imaginative, that is, as describing a fictional\nor a non-fictional world.<interaction> describes the extent, cardinality and nature of any interaction\namong those producing and experiencing the text, for example in the\nform of response or interjection, commentary, etc.<preparedness> describes the extent to which a text may be regarded as\nprepared or spontaneous.<purpose> characterizes a single purpose or communicative function of the\ntext.\nThese elements constitute a model class called model.textDescPart; new parameters may be defined\nby defining new elements and adding them to that class, as further\ndescribed in 23.3 Customization.\n\nBy default, a text description will contain each of the above\nelements, supplied in the order specified. Except for the\npurpose element, which may be repeated to indicate multiple\npurposes, no element should appear more than once within a single text\ndescription.  Each element may be empty, or may contain a brief\nqualification or more detailed description of the value expressed by\nits attributes.  It should be noted that some texts, in particular\nliterary ones, may resist unambiguous classification in some of these\ndimensions; in such cases, the situational parameter in question\nshould be given the content not applicable or an equivalent\nphrase.\n\t\nTexts may be described along many dimensions, according to many\ndifferent taxonomies.  No generally accepted consensus as to how such\ntaxonomies should be defined has yet emerged, despite the best efforts\nof many corpus linguists, text linguists, sociolinguists,\nrhetoricians, and literary theorists over the years.  Rather than\nattempting the task of proposing a single taxonomy of\ntext-types (or the equally impossible one of enumerating\nall those which have been proposed previously), the closed set of\nsituational parameters described above can be used in\ncombination to supply useful distinguishing descriptive features of\nindividual texts, without insisting on a system of discrete high-level\ntext-types. Such text-types may however be used in combination with\nthe parameters proposed here, with the advantage that the internal\nstructure of each such text-type can be specified in terms of the\nparameters proposed.  This approach has the following analytical\nadvantages:1\n it enables a relatively continuous characterization of texts (in\ncontrast to discrete categories based on type or topic)it enables meaningful comparisons across corporait allows analysts to build and compare their own text-types\nbased on the particular parameters of interest to themit is equally applicable to spoken, written, or signed texts\nTwo alternative approaches to the use of these parameters are\nsupported by these Guidelines.  One is to use pre-existing taxonomies\nsuch as those used in subject classification or other types of text\ncategorization.\nSuch taxonomies may also be appropriate for the description of the\ntopics addressed by particular texts.  Elements for this purpose are\ndescribed in section 2.4.3 The Text Classification, and elements for defining or\ndeclaring such classification schemes in section 2.3.7 The Classification Declaration.  A\nsecond approach is to develop an application-specific set of\nfeature structures and an associated feature system\ndeclaration, as described in\nchapters 18 Feature Structures and 18.11 Feature System Declaration.\n\t\nWhere the organizing principles of a corpus or collection so permit,\nit may be convenient to regard a particular set of values for the\nsituational parameters listed in this section as forming a\ntext-type in its own right; this may also be useful where\nthe same set of values applies to several texts within a corpus.  In\nsuch a case, the set of text-types so defined should be regarded as a\ntaxonomy.  The mechanisms described in section 2.3.7 The Classification Declaration may be used to define hierarchic taxonomies of such\ntext-types, provided that the catDesc component of the\ncategory element contains a textDesc element rather\nthan a prose description.  Particular texts may then be associated with\nsuch definitions using the mechanisms described in sections 2.4.3 The Text Classification.\n\t\n\nUsing these situational parameters, an informal domestic\nconversation might be characterized as follows:\nbibliography\n\nThe following example demonstrates how the same situational\nparameters might be used to characterize a novel:\nbibliography\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CC#CC\">15 Language Corpora</a><a class=\"breadcrumb\" href=\"p5.xml?id=CCAH#CCAH\">15.2 Contextual Information</a><a class=\"breadcrumb\" href=\"p5.xml?id=CCAHPA#CCAHPA\">15.2.2 The Participant Description</a>","content":"15.2.2 The Participant Description\n\nThe particDesc element in the profileDesc element\nprovides additional information about the participants in a spoken\ntext or, where this is judged appropriate, the persons named or\ndepicted in a written text.  When the detailed elements provided by\nthe namesdates module described in 13 Names, Dates, People, and Places are included in a schema, this element can\ncontain detailed demographic or descriptive information about\nindividual speakers or groups of speakers, such as their names or\nother personal characteristics. Individually identified persons may\nalso identified by a code which can then be used elsewhere within the\nencoded text, for example as the value of a who\nattribute.\n\nIt should be noted that although the terms speaker or\nparticipant are used throughout this section, it is\nintended that the same mechanisms may be used to characterize fictional\npersonæ or voices within a written text, except\nwhere otherwise stated.  For the purposes of analysis of language usage,\nthe information specified here should be equally applicable to\nwritten, spoken, or signed texts.\nThe element particDesc contains a description of the\nparticipants in an interaction, which may be supplied as\nstraightforward prose, possibly containing a list of names, encoded\nusing the usual list and name elements, or\nalternatively using the more specific and detailed listPerson\nelement provided by the namesdates module\ndescribed in 13 Names, Dates, People, and Places.\n\nFor example, a  participant in a recorded conversation might be\ndescribed informally as follows:\nbibliography\n\nAlternatively, when the namesdates module\nis included in a schema, information about the same participant\ndescribed above might be provided in a more structured way as follows:\nbibliography\nAn identified character in a drama or a novel may also be regarded\nas a participant in this sense, and encoded using\nthe same techniques:2\nbibliography\nHere, the characters are simply listed without the detailed\nstructure which use of the listPerson element permits.\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CC#CC\">15 Language Corpora</a><a class=\"breadcrumb\" href=\"p5.xml?id=CCAH#CCAH\">15.2 Contextual Information</a><a class=\"breadcrumb\" href=\"p5.xml?id=CCAHSE#CCAHSE\">15.2.3 The Setting Description</a>","content":"\n15.2.3 The Setting Description \nThe settingDesc element is used to describe the setting or\nsettings in which language interaction takes place.  It may contain a\nprose description, analogous to a stage description at the start of a\nplay, stating in broad terms the locale, or a more detailed\ndescription of a series of such settings.  \nEach distinct setting is described by means of a setting\nelement. \n\n<setting> describes one particular setting in which a language\n  interaction takes place.\n\n\n\nIndividual settings may be associated with particular participants by\nmeans of the optional who attribute which this element\ninherits as a member of the att.ascribed\nif, for example, participants are in different places.  This attribute\nidentifies one or more individual participants or participant groups,\nas discussed earlier in section 15.2.2 The Participant Description.  If this\nattribute is not specified, the setting details provided are assumed\nto apply to all participants represented in the language\ninteraction. Note however that it is not possible to encode different\nsettings for the same participant: a participant is deemed to be a\nperson within a specific setting.\nThe setting element may contain either a prose description\nor a selection of elements from the classes model.nameLike.agent, model.dateLike, or\nmodel.settingPart. By default, when the\nmodule defined by this chapter is included in a schema, these classes thus\nprovide the following elements: \n\n<name> contains a proper noun or noun phrase.\n<date> contains a date in any format.\n<time> contains a phrase defining a time of day in any format.\n<locale> contains a brief informal description of the kind of\nplace concerned, for example: a room, a restaurant, a park bench, etc.\n<activity> contains a brief informal description of what a participant in a\nlanguage interaction is doing other than speaking, if anything.\n\nAdditional more specific naming elements such as orgName or\npersName may also be available if the\nnamesdates module is also included in the schema.\n\nThe following example demonstrates the kind of background information\noften required to support transcriptions of language interactions, first\nencoded as a simple prose narrative:\nbibliography\nThe same information might be represented more formally in the following\nway:\nbibliography\nAgain, a  more detailed encoding for  places is feasible if the\nnamesdates module is included in the\nschema. The above examples assume that only the\ngeneral purpose name element supplied in the core module is\navailable.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CC#CC\">15 Language Corpora</a><a class=\"breadcrumb\" href=\"p5.xml?id=CCAS#CCAS\">15.3 Associating Contextual\nInformation with a Text</a>","content":"15.3 Associating Contextual\nInformation with a Text\nThis section discusses the association of the contextual information\nheld in the header with the individual elements making up a TEI text or\ncorpus.  Contextual information is held in elements of various kinds\nwithin the TEI header, as discussed elsewhere in this section and in\nchapter 2 The TEI Header.  Here we consider what happens when different\nparts of a document need to be associated with different contextual\ninformation of the same type, for example when one part of a document\nuses a different encoding practice from another, or where one part\nrelates to a different setting from another.  In such situations, there\nwill be more than one instance of a header element of the relevant type.\n \nThe TEI scheme allow for the following possibilities:\nA given element may appear in the corpus header only, in the\nheader of one or more texts only, or in both placesThere may be multiple occurrences of certain elements in either\nthe corpus or a text header.\n \nTo simplify the exposition, we deal with these two possibilities\nseparately in what follows; however, they may be combined as\ndesired.\n \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CC#CC\">15 Language Corpora</a><a class=\"breadcrumb\" href=\"p5.xml?id=CCAS#CCAS\">15.3 Associating Contextual\nInformation with a Text</a><a class=\"breadcrumb\" href=\"p5.xml?id=CCAS1#CCAS1\">15.3.1 Combining Corpus and Text Headers</a>","content":"15.3.1 Combining Corpus and Text Headers\nA TEI-conformant document may have more than one header only in the\ncase of a TEI corpus, which must have a header in its own right, as well\nas the obligatory header for each text.  Every element specified in a\ncorpus-header is understood as if it appeared within every text header\nin the corpus.  An element specified in a text header but not in the\ncorpus header supplements the specification for that text alone.  If any\nelement is specified in both corpus and text headers, the corpus header\nelement is over-ridden for that text alone.\n \nThe titleStmt for a corpus text is understood to be\nprefixed by the titleStmt given in the corpus header.  All\nother optional elements of the fileDesc should be omitted from\nan individual corpus text header unless they  differ from those\nspecified in the corpus header.  All other header elements behave\nidentically, in the manner documented below.\nThis facility makes it possible to state once for all in the corpus\nheader each piece of contextual information which is common to the whole\nof the corpus, while still allowing for individual texts to vary from\nthis common denominator.\n \nFor example, the following schematic shows the structure of a corpus\ncomprising three texts, the first and last of which share the same\nencoding description. The second one has its own encoding description.\n\n "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CC#CC\">15 Language Corpora</a><a class=\"breadcrumb\" href=\"p5.xml?id=CCAS#CCAS\">15.3 Associating Contextual\nInformation with a Text</a><a class=\"breadcrumb\" href=\"p5.xml?id=CCAS2#CCAS2\">15.3.2 Declarable Elements</a>","content":"15.3.2 Declarable Elements\n\nCertain of the elements which can appear within a TEI header are\nknown as declarable elements. These elements have in\ncommon the fact that they may be linked explicitly with a particular\npart of a text header or the corpus header by means of a decls attribute on\nthat element. This linkage is used to over-ride the default\nassociation between declarations in the header and a corpus or corpus\ntext. The only header elements which may be associated in this way are\nthose which would not otherwise be meaningfully repeatable.  \nDeclarable elements are all members of the class att.declarable; the corresponding declaring\nelements are all members of the class att.declaring.\n\n<att.declarable> provides attributes for those elements in the TEI header which\n  may be independently selected by means of  the special purpose decls attribute.\n<att.declaring> provides attributes for elements which may be independently associated with a particular declarable element within the header, thus overriding the inherited default for that element.\n\n\nAn alphabetically ordered list of declarable elements follows:\n\n\n<availability> supplies information about the availability of a text, for example any restrictions on its\n  use or distribution, its copyright status, any licence applying to it, etc.\n<bibl> contains a loosely-structured bibliographic citation of which the sub-components may or may\n    not be explicitly tagged.\n<biblFull> contains a fully-structured bibliographic citation, in which all components of the TEI file\n    description are present.\n<biblStruct> contains a structured bibliographic citation, in which only bibliographic sub-elements\n    appear and in a specified order.\n<broadcast> describes a broadcast used as the source of a spoken text.\n<correction> states how and under what circumstances corrections have been made in the text.\n<correspDesc> contains a description\n    of the actions related to one act of correspondence.\n<editorialDecl> provides details of editorial principles and practices applied\nduring the encoding of a text.\n<equipment> provides technical details of the equipment and media used for\nan audio or video recording used as the source for a spoken text.\n<geoDecl> documents the notation and the datum used for geographic coordinates expressed as content of\n    the geo element elsewhere within the document.\n<hyphenation> summarizes the way in which hyphenation in a source text has been treated in an encoded\n    version of it.\n<interpretation> describes the scope of any analytic or interpretive information added to the text in\n    addition to the transcription.\n<langUsage> describes the languages, sublanguages, registers, dialects, etc.\nrepresented within a text.\n<listApp> contains a list of apparatus entries.\n<listBibl> contains a list of bibliographic citations of any kind.\n<listEvent> contains a list of descriptions, each of which provides information\n    about an identifiable event.\n<listNym> contains a list of nyms, that is, standardized names for any thing.\n<listObject> contains a list of descriptions, each of which provides information about an\n    identifiable physical object.\n<listOrg> contains a list of elements, each of which provides information about an identifiable\n        organization.\n<listPerson> contains a list of descriptions, each of which provides information about an identifiable\n    person or a group of people, for example the participants in a language interaction, or the\n    people referred to in a historical source.\n<listPlace> contains a list of places, optionally followed by a list of relationships (other than\n        containment) defined amongst them.\n<metDecl> documents the notation employed to represent a metrical pattern when this is specified as\n    the value of a met, real, or rhyme attribute on any structural\n    element of a metrical text (e.g. lg, l, or seg).\n<normalization> indicates the extent of normalization or regularization of the original source carried out\n    in converting it to electronic form.\n<particDesc> describes the identifiable speakers, voices, or\n        other participants in any kind of text or other persons named or otherwise referred to in a\n        text, edition, or metadata.\n<projectDesc> describes in detail the aim or purpose for which an electronic file was encoded, together\n    with any other relevant information concerning the process by which it was assembled or\n    collected.\n<punctuation> specifies editorial practice adopted with respect to punctuation marks in the original.\n<quotation> specifies editorial practice adopted with respect to quotation marks in the original.\n<recording> provides details of an audio or video recording event\nused as the source of a spoken text, either directly or from\na public broadcast.\n<refsDecl> specifies how canonical references are constructed for this\n  text.\n<samplingDecl> contains a prose description of the rationale and methods used in sampling texts in the\n    creation of a corpus or collection.\n<scriptStmt> contains a citation giving details of the script used for\na spoken text.\n<segmentation> describes the principles according to which the text has been segmented, for example into\n    sentences, tone-units, graphemic strata, etc.\n<settingDesc> describes the setting or settings within which a\n        language interaction takes place, or other places otherwise referred to in a text, edition,\n        or metadata.\n<sourceDesc> describes the source(s) from which an electronic text was derived or generated, typically a\n    bibliographic description in the case of a digitized text, or a phrase such as \"born digital\"\n    for a text which has no previous existence.\n<stdVals> specifies the format used when standardized date or number values are supplied.\n<styleDefDecl> specifies the name of the formal language in which style or\n  renditional information is supplied elsewhere in the document. The\n  specific version of the scheme may also be supplied.\n<textClass> groups information which describes the nature or topic of a text in terms of a standard\n    classification scheme, thesaurus, etc.\n<textDesc> provides a description of a text in terms of its\nsituational parameters.\n<xenoData> provides a container\n  element into which metadata in non-TEI formats may be\n  placed.\n\n\nEach of the above elements is repeatable within a single\nheader; that is, there may be more than one instance of any declarable\nelement type at a given level. When this occurs, the following rules\napply. For each different type of declarable element which occurs more\nthan once:\neach must bear a unique identifierwhen occurring within the same parent element, exactly one element must be\nspecified as the default, by having a default attribute with the value \"true\".\n\n \nIn the following example, an editorial declaration contains two\npossible correction policies, one identified as\nCorPol1 and the other as CorPol2.  Since there\nare two, one of them (in this case CorPol1) should be\nspecified as the default: bibliography For texts associated with the header in which\nthis declaration appears, correction method CorPol1 will be\nassumed, unless they explicitly state otherwise.  Here is the\nstructure of a text in which a division states otherwise:  In this case, the contents of the divisions D1 and D3\nwill both use correction policy CorPol1, and those of\ndivision D2 will use correction policy CorPol2.\n \nThe decls attribute is defined for any element which is a\nmember of the class declaring. This includes the major\nstructural elements text, group, and div, as\nwell as smaller structural units, down to the level of paragraphs in\nprose, individual utterances in spoken texts, and entries in\ndictionaries. However, TEI recommended practice is to limit the number\nof multiple declarable elements used by a document as far as possible,\nfor simplicity and ease of processing.\n \nThe identifier or identifiers to which the decls\nattribute points must follow two further restrictions:\nWhen decl references an element that itself contains multiple\nelements of the same type, only the children elements with default\nset to \"true\" are considered referenced.Each element specified, explicitly or implicitly, by the list of\nidentifiers must be of a different kind.\n \nTo demonstrate how these rules operate, we now expand our earlier\nexample slightly:\nbibliography\n \nThis encoding description now has two editorial declarations,\nidentified as ED1 (the default) and ED2.  For texts not specifying\notherwise, ED1 will apply.  If ED1 applies, correction method C1A and\nnormalization method N1 apply, since these are the specified defaults\nwithin ED1.  In the same way, for a text specifying decls as\n#ED2, correction C2A, \n and normalization N2B will\napply.\n \nA finer grained approach is also possible.  A text might specify\ntext decls='#C2B #N2A', \n to mix and match declarations as\nrequired.  A tag such as text decls='#ED1 #ED2' would\n(obviously) be illegal, since it includes two elements of the same type;\na tag such as text decls='#ED2 #C1A' is also illegal, since in\nthis context #ED2 is synonymous with the defaults for that\neditorial declaration, namely #C2A #N2B, resulting in a list\nthat identifies two correction elements (C1A and C2A).\n "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CC#CC\">15 Language Corpora</a><a class=\"breadcrumb\" href=\"p5.xml?id=CCAS#CCAS\">15.3 Associating Contextual\nInformation with a Text</a><a class=\"breadcrumb\" href=\"p5.xml?id=CCAS3#CCAS3\">15.3.3 Summary</a>","content":"15.3.3 Summary\nThe rules determining which of the declarable elements are applicable\nat any point may be summarized as follows:\n\nIf there is a single occurrence of a given declarable\nelement in a corpus header, then it applies by default to all elements\nwithin the corpus.\nIf there is a single occurrence of a given declarable\nelement in the text header, then it applies by default to all elements\nof that text irrespective of the contents of the corpus header.\nWhere there are multiple occurrences of declarable elements\n  within a text’s header or its corpus header,\neach must have a unique value specified as the value\nof its xml:id attribute;one and only one must bear a default attribute with\n  the value true (or 1).\nIt is a semantic error for an element to be associated\nwith more than one occurrence of any declarable element.\nSelecting an element which contains multiple occurrences of a\ngiven declarable element is semantically equivalent to selecting only\nthose contained elements which are specified as defaults.\nAn association made by one element applies by default\nto all of its descendants.\n\t\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CC#CC\">15 Language Corpora</a><a class=\"breadcrumb\" href=\"p5.xml?id=CCAN#CCAN\">15.4 Linguistic Annotation of Corpora</a>","content":"15.4 Linguistic Annotation of Corpora\nLanguage corpora often include analytic encodings or annotations,\ndesigned to support a variety of different views of language.  The\npresent Guidelines do not advocate any particular approach to linguistic\nannotation (or tagging); instead a number of\ngeneral analytic facilities are provided which support the\nrepresentation of most forms of annotation in a standard and\nself-documenting manner.  Analytic annotation is of importance in many\nfields, not only in corpus linguistics, and is therefore discussed in\ngeneral terms elsewhere in the\nGuidelines.3\nThe present section presents informally some particular applications of\nthese general mechanisms to the specific practice of corpus linguistics.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CC#CC\">15 Language Corpora</a><a class=\"breadcrumb\" href=\"p5.xml?id=CCAN#CCAN\">15.4 Linguistic Annotation of Corpora</a><a class=\"breadcrumb\" href=\"p5.xml?id=CCAN1#CCAN1\">15.4.1 Levels of Analysis</a>","content":"15.4.1 Levels of Analysis\nBy linguistic annotation we mean here any annotation\ndetermined by an analysis of linguistic features of the text, excluding\nas borderline cases both the formal structural properties of the text\n(e.g. its division into chapters or paragraphs) and descriptive\ninformation about its context (the circumstances of its production, its\ngenre, or medium).  The structural properties of any TEI-conformant text\nshould be represented using the structural elements discussed elsewhere\nin these Guidelines, for example in  chapters 3 Elements Available in All TEI Documents and\n4 Default Text Structure.\nThe contextual\nproperties of a TEI text are fully documented in the TEI header, which\nis discussed in chapter 2 The TEI Header, and in section 15.2 Contextual Information of the present chapter.\n \nOther forms of linguistic annotation may be applied at a number of\nlevels in a text.  A code (such as a word-class or part-of-speech\ncode) may be associated with each word or token, or with groups of such\ntokens, which may be continuous, discontinuous, or nested.  A code may\nalso be associated with relationships (such as cohesion) perceived as\nexisting between distinct parts of a text.  The codes themselves may\nstand for discrete non-decomposable categories, or they may represent\nhighly articulated bundles of textual features.  Their function may be\nto place the annotated part of the text somewhere within a narrowly\nlinguistic or discoursal domain of analysis, or within a more general\nsemantic field, or any combination drawn from these and other domains.\n \nThe manner by which such annotations are generated and attached to\nthe text may be entirely automatic, entirely manual, or a mixture.  The\nease and accuracy with which analysis may be automated may vary with the\nlevel at which the annotation is attached.  The method employed should\nbe documented in the interpretation element within the encoding\ndescription of the TEI header, as described in section 2.3.3 The Editorial Practices Declaration.  Where different parts of a corpus have used different\nannotation methods, the decls attribute should be used to\nindicate the fact, as further discussed in section 15.3 Associating Contextual\nInformation with a Text.\n \nAn extended example of one form of linguistic analysis commonly\npractised in corpus linguistics is given in section 17.4 Linguistic Annotation.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CC#CC\">15 Language Corpora</a><a class=\"breadcrumb\" href=\"p5.xml?id=CCREC#CCREC\">15.5 Recommendations for the Encoding of Large Corpora</a>","content":"15.5 Recommendations for the Encoding of Large Corpora\nThese Guidelines include proposals for the identification and\nencoding of a far greater variety of textual features and\ncharacteristics than is likely to be either feasible or desirable in\nany one language corpus, however large and ambitious.  The reasoning\nbehind this catholic approach is further discussed in chapter 4 About These Guidelines.  For most large-scale corpus projects, it will therefore\nbe necessary to determine a subset of TEI recommended elements\nappropriate to the anticipated needs of the project, as further\ndiscussed in chapter 23.3 Customization; these mechanisms include\nthe ability to exclude selected element types, add new element types,\nand change the names of existing elements.  A discussion of the\nimplications of such changes for TEI conformance is provided in\nchapter 23.4 Conformance.\n \nBecause of the high cost of identifying and encoding many textual\nfeatures, and the difficulty in ensuring consistent practice across very\nlarge corpora, encoders may find it convenient to divide the set of\nelements to be encoded into the following four categories:\nrequiredtexts included within the corpus will always\nencode textual features in this category, should they exist in the\ntextrecommendedtextual features in this category will be\nencoded wherever economically and practically feasible; where present\nbut not encoded, a note in the header should be made.optionaltextual features in this category may or may not\nbe encoded; no conclusion about the absence of such features can be\ninferred from the absence of the corresponding element in a given\ntext.proscribedtextual features in this category are deliberately not encoded; they may be\ntranscribed as unmarked up text, or represented as gap\nelements, or silently omitted, as appropriate.\n \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CC#CC\">15 Language Corpora</a><span class=\"breadcrumb\">15.6 Module for Language Corpora</span>","content":"\n  15.6 Module for Language Corpora\n  The module described in this chapter makes available the\n  following components:\n  \n    Metadata for Language Corpora\n    Corpus texts\n    \n    \n    \n    \n    \n  \n  \n  \n  The selection and combination of modules to form a TEI schema is\n  described in 1.2 Defining a TEI Schema.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a>","content":"\n  16 Linking, Segmentation, and Alignment\n  \nThis chapter discusses a number of ways in which encoders may\nrepresent analyses of the structure of a text which are not\nnecessarily linear or hierarchic. The module defined by this chapter\nprovides for the following common requirements:\n  to link disparate elements \n    using the xml:id attribute (section 16.1 Links);to link disparate elements without using the\n    xml:id attribute (sections 16.2.1 Pointing Elsewhere and 16.2.4 TEI XPointer Schemes);to segment text into elements convenient for\n    the encoder and to mark arbitrary points within documents (section\n    16.3 Blocks, Segments, and Anchors);to represent correspondence or\n    alignment among groups of text elements, both those\n    with content and those which are empty (section 16.5 Correspondence and Alignment);1to synchronize elements of a\n    text, that is to represent temporal correspondences and alignments\n    among text elements (section 16.4 Synchronization) and also to\n    align them with specific points in time (section 16.4.2 Placing Synchronous Events in Time);to specify that one text element is identical\n    to or a copy of another (section 16.6 Identical Elements and Virtual Copies);to aggregate possibly noncontiguous elements\n    (section 16.7 Aggregation);to specify that different elements are\n    alternatives to one another and to express\n    preferences among the alternatives (section 16.8 Alternation);to store markup separately from the data it describes\n    or is related to (section 16.9 Stand-off Markup);to associate segments of a text\n    with interpretations or analyses of their significance (section\n    16.12 Connecting Analytic and Textual Markup);to group together elements used to provide stand-off\n    annotation, including contextual information (section 16.10 The standOff Container).\nThese facilities all use the same set of techniques based on the\nW3C XPointer framework (1 ) This provides a\nvariety of schemes; the most convenient of\nwhich, and that recommended by these Guidelines, makes use of the\nglobal xml:id attribute, as defined in section 1.3.1.1 Global Attributes, and introduced in the section of 5 A Gentle Introduction to XML\ntitled 5.6.2 Identifiers and Indicators. When the linking module is included in a schema, the\nattribute class att.global is extended to\ninclude eight additional attributes to support the various kinds of\nlinking listed above. Each of these attributes is introduced in the\nappropriate section below. In addition, for many of the topics\ndiscussed, a choice of methods of encoding is offered, ranging from\nsimple but less general ones, which use attribute values only, to more\nelaborate and more general ones, which use specialized elements.\n  \n  \n  \n  \n    \n\n\n\n\n\n\n  \n  \n  \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAPT#SAPT\">16.1 Links</a>","content":"\n    16.1 Links\n    We say that one element points to\n    others if the first has an attribute whose value is a reference to\n    the others: such an element is called a pointer\n    element, or simply a pointer. Among the\n    pointers that have been introduced up to this point in these\n    Guidelines are note, ref, and ptr.\n    These elements all indicate an association between one place in\n    the document (the location of the pointer itself) and one or more\n    others (the elements whose identifiers are specified by the\n    pointer's target attribute). The module described in\n    this chapter introduces  a\n    variation on this basic kind of pointer, known as a\n    link,  which specifies both ends\n    of an association. In addition, we define a syntax for\n    representing locations in a document by a variety of means not\n    dependent on the use of xml:id attributes.\n    \n    \n    \n     \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAPT#SAPT\">16.1 Links</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAPTL#SAPTL\">16.1.1 Pointers and Links</a>","content":"\n16.1.1 Pointers and Links\nIn section 3.7 Simple Links and Cross-References we introduced the simplest\npointer elements, ptr and ref. Here we\nintroduce additionally the link element, which\nrepresents an association between two (or more) locations by\nspecifying each location explicitly. Its own location is\nirrelevant to the intended linkage. All three elements use the\nattribute target, provided by the att.pointing class as a means of indicating the\nlocation or locations referenced or pointed to. \n\n  <att.pointing> provides a set of attributes used by all elements which point\n  to other elements by means of one or more URI references.\n  <link> defines an association or hypertextual link among elements or passages, of some type not more precisely specifiable by other elements.\n\nThe ptr element may be called a pure\npointer, because its primary function is simply to point. A\npointer sets up a connection between an\nelement (which, in the case of a pure pointer, is\nsimply a location in a document), and one or more others, known\ncollectively as its target. The ptr and\nref elements  point, conceptually, at a single target, even\nif that target may be discontinuous in the document. The link\nelement  specifies at least two targets and represents an association\nbetween them, independent of its own location. \nThese three elements also share a common set of attributes, derived\nfrom the att.pointing and att.typed classes:\n\n  <att.pointing> provides a set of attributes used by all elements which point\n  to other elements by means of one or more URI references.\n  <att.typed> provides attributes that can be used to classify or subclassify elements in any way.\n\nDouble connection among elements could also be expressed by a\ncombination of pointer elements, for example, two ptr\nelements, or one ptr element and one note\nelement. All that is required is that the value of the\ntarget (or other pointing) attribute of the one be\nthe value of the xml:id attribute of the other. What\nthe link element accomplishes is the handling of double\nconnection by means of a single element. Thus, in the following\nencoding:\n\nsa-p1 points to sa-p2, and sa-p2\npoints to sa-p1. This is logically\nequivalent to the more compact encoding:\n  \nAs noted elsewhere, the target  attribute may take as value one or\nmore URI reference. In the simplest case, each such reference will\nindicate an element in the current document (or in some other\ndocument), for example by supplying the value used for its global\nxml:id attribute. It may however carry as value any form of\nURI, such as a URL pointing to some other document or location on the\nInternet. Pointing or linking to external documents and pointing and\nlinking where identifiers are not available is described below in\nsection 16.2 Pointing Mechanisms.\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAPT#SAPT\">16.1 Links</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAPTEG#SAPTEG\">16.1.2 Using Pointers and Links</a>","content":"\n16.1.2 Using Pointers and Links\nAs an example of the use of mechanisms which establish\nconnections among elements, consider the practice (common in\n18th century English verse and elsewhere) of providing footnotes\nciting parallel passages from classical authors. \nThe\nfigure shows the original page of Pope's Dunciad\nwhich is discussed in the text. Such\nfootnotes can of course simply be encoded using the\nnote element (see section 3.9 Notes, Annotation, and Indexing) without\na target attribute, placed adjacent to the passage to\nwhich the note refers:2\nbibliography\n\nThis use of the note element can be called\nimplicit pointing (or implicit\nlinking). It relies on the juxtaposition of the note to\nthe text being commented on for the connection to be understood.\nIf it is felt that the mere juxtaposition of the note to the\ntext does not make it sufficiently clear exactly what text\nsegment is being commented on (for example, is it the\nimmediately preceding line, or the immediately preceding two\nlines, or what?), or if it is decided to place the note at some\ndistance from the text, then the pointing or the linking must be\nmade explicit. We now consider various methods for doing\nthat.\nFirstly, a ptr element might be placed at an\nappropriate point within the text to link it with the\nannotation:\nbibliography\n\nThe note element has been given an arbitrary identifier\n(note3.284) to enable it to be specified\nas the target of the pointer element. Because there is nothing\nin the text to signal the existence of the annotation, the\nrend attribute has been given the value unmarked.\nSecondly, the target attribute of the\nnote element can be used to point at its associated\ntext, provided that an xml:id attribute has been\nsupplied for the associated text:\nbibliography\nGiven this encoding of the text itself, we can now link the various\nnotes to it. In this case, the note\nitself contains a pointer to the place in the text which it is\nannotating; this could be encoded using a ref\nelement, which bears a target attribute of its own\nand contains a (slightly misquoted) extract from the text marked\nas a quote element:\nbibliography\n\nCombining these two approaches gives us the following\nassociations:\na pointer within one line indicates the notethe note indicates the linea pointer within the note indicates the line\nNote that we do not have any way of pointing from the line itself to\nthe note: the association is implied by containment of the pointer. We\ndo not as yet have a true double link between text and note. To\nachieve that we will need to supply identifiers for the annotations as\nwell as for the verse lines, and use a link element to\nassociate the two. Note that the ptr element and the\ntarget attribute on the note may now be dispensed\nwith:\nbibliography\n\nThe target attribute of the link element\nhere bears the identifier of the note followed by that of the\nverse line.  We could also allocate an\nidentifier to the reference within the note and encode the\nassociation between it and the verse line in the same way:\nbibliography\n\nIndeed, the two links could be combined into one, as\nfollows:\n  \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAPT#SAPT\">16.1 Links</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAPTLG#SAPTLG\">16.1.3 Groups of Links</a>","content":"\n16.1.3 Groups of Links\nClearly, there are many reasons for which an encoder might\nwish to represent a link or association between different\nelements. For some of them, specific elements are provided in\nthese Guidelines; some of these are discussed elsewhere in the\npresent chapter. The link element is a general purpose\nelement which may be used for any kind of association. The\nelement linkGrp may be used to group links of a\nparticular type together in a single part of the document; such\na collection may be used to represent what is sometimes referred\nto in the literature of Hypertext as a web, a term\nintroduced by the Brown University FRESS project in 1969, and not to\nbe confused with the World Wide Web.\n<linkGrp> defines a collection of associations or hypertextual links.\nAs a member of the class att.pointing.group, this element shares the\nfollowing attributes with other members of that class:\n<att.pointing.group> provides a set of attributes common to all elements which\n  enclose groups of pointer elements.\nIt is also a member of the att.pointing\nand att.typed classes, and therefore also carries the attributes specified in\nsection 16.1.1 Pointers and Links above, in particular the\ntype attribute. \nThe linkGrp element provides a convenient way of\nestablishing a default for the type attribute on a\ngroup of links of the same type: by default, the type\nattribute on a link element has the same value as that\ngiven for type on the enclosing linkGrp.\nTypical software might hide a web entirely from the user, but\nuse it as a source of information about links, which are\ndisplayed independently at their referenced locations.\nAlternatively, software might provide a direct view of the link\ncollection, along with added functions for manipulating the\ncollection, as by filtering, sorting, and so on.\nTo continue our previous example, this text contains many other\nnotes of a kind similar to the one shown above. Here are a few\nmore of the lines to which annotations have to be attached,\nfollowed by the annotations themselves:\nbibliography\nTo avoid having\nto repeat the specification of type as imitation on each note,\nwe may specify it once for all on a linkGrp element\ncontaining all links of this type.\n  \nAdditional information for applications that use\nlinkGrp elements can be provided by means of special\nattributes. First, the domains attribute can be used\nto identify the text elements within which the individual\ntargets of the links are to be found. Suppose that the text\nunder discussion is organized into a body element,\ncontaining the text of the poem, and a back element\ncontaining the notes. Then the domains attribute can\nhave as its value the identifiers of the body and the\nback, to enable an application to verify that the link\ntargets are in fact contained by appropriate elements, or to\nlimit its search space:\n  \nNote that there must be a single parent element for each\ndomain; if some notes are contained by a\nsection with identifier dunnotes, and\nothers by a section with identifier dunimits,\nan intermediate pointer must be\nprovided (as described in section 16.1.4 Intermediate Pointers) within\nthe linkGrp and its identifier used instead.\nNext, the targFunc attribute can be used to\nprovide further information about the role or function of the\nvarious targets specified for each link in the group. The value\nof the targFunc attribute is a list of names\n(formally, name tokens), one for each of the targets in the\nlink; these names can be chosen freely by the encoder, but their\nsignificance should be documented in the encoding description in\nthe header.3 In the current\nexample, we might think of the note as containing the source of the imitation and the verse line\nas containing the goal of the\nimitation. Accordingly, we can specify the linkGrp in\nthe preceding example thus:\n\n\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAPT#SAPT\">16.1 Links</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAPTIP#SAPTIP\">16.1.4 Intermediate Pointers</a>","content":"\n16.1.4 Intermediate Pointers\nIn the preceding examples, we have shown various ways of\nlinking an annotation and a single verse line. However, the\nexample cited in fact requires us to encode an association\nbetween the note and a pair of verse lines (lines\n284 and 285); we call these two lines a span.\nThere are a number of possible ways of correcting this error: one\ncould use the target attribute to indicate one end of the\nspan and the special purpose targetEnd attribute on the\nnote element to point to the other. Another possibility might\nbe to create an element which represents the whole span itself and\nassign that an xml:id attribute, which can then be linked\nto the note and ref elements. This could be done\nusing for example the lg element defined in section 3.13.1 Core Tags for Verse or the virtual join\nelement discussed in section 16.7 Aggregation.\nA third possibility would be to use an\nintermediate pointer as follows:\n  \nWhen the target attribute of a ptr or\nref element specifies more than one element, the\nindicated elements are intended to be combined or aggregated in\nsome way to produce the object of the pointer. (Such aggregation\nis however the task of a processing application, and cannot be\ndefined simply by the markup). The xml:id attribute\nof the ptr then provides an identifier which can be linked to the\nnote and ref elements:\n\n\nThe all value of evaluate is used on the\nlink element to specify that any pointer encountered as\na target of that element is itself evaluated. If\nevaluate had the value none, the link target would be the pointer\nitself, rather than the objects it points to.\nWhere a linkGrp element is used to group a\ncollection of link elements, any intermediate pointer\nelements used by those link elements should be included\nwithin the linkGrp.\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAXP#SAXP\">16.2 Pointing Mechanisms</a>","content":"\n    16.2 Pointing Mechanisms\n    This section introduces more formally the pointing mechanisms\n    available in the TEI. In addition to those\n    discussed so far, the TEI provides methods of pointing:\n    into documents other than the current document;to a particular element in a document other than the\ncurrent document using its xml:id;to a particular element whether in the current document or\nnot, using its position in the XML element tree;at arbitrary content in any XML document using TEI-defined\nXPointer schemes.\n    \nAll TEI attributes used to point at something else are declared as\nhaving the datatype teidata.pointer, which\nis defined as a URI reference4; the\ncases so far discussed are all simple examples of a URI\nreference. Another familiar example is the mechanism used in XHTML to\ncreate represent hypertext links by means of the XHTML href attribute. A URI reference can reference the\nwhole of an\nXML resource such as a document or an XML element, or a\nsub-portion of such a resource, identified by means of an appropriate fragment\nidentifier. Technically speaking, the fragment\nidentifier is that portion of a URI reference following the\nfirst unescaped # character; in practice, it provides a means\nof accessing some part of the resource described by the URI which is\nless than the whole.  \n    The first three of the following subsections provide only a\n    brief overview and some examples of the W3C mechanisms\n    recommended. More detailed information on the use of these\n    mechanisms is readily available elsewhere.\n    \n    \n    \n    \n    \n\n\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAXP#SAXP\">16.2 Pointing Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAUR#SAUR\">16.2.1 Pointing Elsewhere</a>","content":"\n16.2.1 Pointing Elsewhere\nLike the ubiquitous if misnamed XHTML pointing attribute href, the TEI pointing attributes can point to a\ndocument that is not the current document (the one that contains the\npointing element) whether it is in the same local filesystem as the\ncurrent document, or on a different system entirely. In either case,\nthe pointing can be accomplished absolutely (using the entire address\nof the target document) or relatively (using an address relative to\nthe current base URI in force). The current base\nURI is defined according to Marsh\nand Tobin 2009. If there is none, the base URI is that of the current\ndocument.  In common practice the current base URI in force is likely\nto be the value of the xml:base attribute of the closest\nancestor that has one. However this may not be the case, since\nxml:base attributes are accumulated through the hierarchy\nby concatenation of path segments, beginning at the top of the\nhierarchy and proceeding down to the context node.\nThe following example demonstrates an absolute URI reference\nthat points to a remote document: \nbibliography\nThis example points explicitly to a location on the Web,\naccessible via HTTP. Suppose however that we wish\nto access a document stored locally in a file. Again we will\nsupply an absolute URI reference, but this time using a\ndifferent protocol:\nbibliography\nIn the  following example, we use a relative URI reference\nto point to a local document: \nbibliography \n\nSince no xml:base is specified here, the location of the resource\n  Images/compic.png is determined relative to the\nresource indicated by the current base URI, which is the current\ndocument.\n\n\n\nIn the following example, however, we first change the current base\nURI by setting a new value for xml:base. The resource\nrequired is then identified by means of a relative URI:\n\nbibliography\nAs noted above, the current base URI is found on the nearest\nancestor. It is technically possible to use xml:base as a means to shorten URIs, but\nthis usage is not recommended. Abbreviated pointers provide a more\nflexible and consistent method for creating shorthand links.\n\n\n\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAXP#SAXP\">16.2 Pointing Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=SABN#SABN\">16.2.2 Pointing Locally</a>","content":"\n16.2.2 Pointing Locally\nA shorthand pointer, in which the URI consists only of\n# followed by the value of an xml:id acts as a\npointer to the element in the current document with that xml:id, \nas in the following example.  bibliography\nThis method of pointing, by referring to the xml:id of the\ntarget element as a bare name only (e.g., #sect106) is \nthe simplest and often the best approach where it can be applied, i.e. where\nboth the source element and target element are in the same XML\ndocument, and where the target element carries an identifier. It\nis the method used extensively in previous sections of this\nchapter and elsewhere in these Guidelines. \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAXP#SAXP\">16.2 Pointing Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAPU#SAPU\">16.2.3 Using Abbreviated Pointers</a>","content":"\n      16.2.3 Using Abbreviated Pointers\n      \n      Even in the case of relative links on the local file system, ref or target attributes may become quite lengthy and make XML code difficult to read. To deal with this problem, the TEI provides a useful method of using abbreviated pointers and documenting a way to dereference them automatically.\n      \n      Imagine a project which has a large collection of XML documents organized like this:\n      \n      anthology\n          poetry\n              poem.xml\n            prose\n              novel.xml\n            \n        references\n          people\n              personography.xml\n            \n        \n      \n      \n      If you want to link a name in the novel.xml file to a person in the personography.xml file, the link will look like this:\n        \n        bibliography\n        \n        If there are many names to tag in a single paragraph, the XML encoding will be congested, and such lengthy links are prone to typographical error. In addition, if the project organization is changed, every relative link will have to be found and altered.\n      \n      One way to deal with this is to use what is often referred to as a \"magic token\". You could make such links using the key attribute:\n        bibliography\n        \n        and document the meaning of the key using (for instance) a taxonomy element in the TEI header, as described in 3.6.1 Referring Strings. However, such a link cannot be mechanically processed by an external system that does not know how to interpret it; a human will have to read the header explanation and write code explicitly to reconstruct the intended link.\n      \n      A more robust alternative is to use a private URI scheme. This is a method of constructing a simple, key-like token which functions as a teidata.pointer, and can therefore be used as the value of any attribute which has that datatype, such as ref and target. Such a scheme consists of a prefix with a colon, and then a value. You might, for example, use the prefix psn (for \"person\"), and structure your name tags like this:\n        \n        bibliography\n        \n        How is this different from a magic token? Essentially, it isn't, except that TEI provides a structured method of dereferencing it (turning it into a computable path, such as ../../references/people/personography.xml#fred) by means of a declaration inside encodingDesc in the TEI header, using the elements and attributes for prefix declaration: \n      \n        \n          <listPrefixDef> contains a list of definitions of prefixing schemes used in teidata.pointer values, showing how abbreviated URIs using each scheme may be expanded into full URIs.\n          <prefixDef> defines a prefixing scheme used in teidata.pointer values,\n  showing how abbreviated URIs using the scheme may be expanded into full URIs.\n          <att.patternReplacement> provides attributes for regular-expression matching and replacement.\n        \n        \n      \n        \n        \n        This is how you might document a private URI scheme using the psn: prefix:\n        \n        bibliography\n        \n        This specifies that where a teidata.pointer value is constructed with a psn: prefix, a regular-expression replace operation can be performed on it to construct the full or relative URI to the target document or fragment. listPrefixDef is a child of encodingDesc, and it contains any number of prefixDef elements. Each prefixDef element provides a method of dereferencing or expanding an abbreviated pointer, based on a regular expression. The ident attribute specifies the prefix to which the expansion applies (without the colon). The matchPattern attribute contains a regular expression which is matched against the component of the pointer following the first colon, and the replacementPattern provides the string which will be used as a replacement. In this example, using psn:fred, the value fred would be matched by the matchPattern, and also captured (through the parentheses in the regular expression); it would then be replaced by the value ../../references/people/personography.xml#fred (with the the $1 in the replacementPattern being replaced by the captured value). The p element inside the prefixDef can be used to provide a human-readable explanation of the usage of this prefix.\n      \n      Through this mechanism, any processor which encounters a teidata.pointer with a protocol unknown to it can check the listPrefixDef in the header to see if there is an available expansion for it, and if there is, it can automatically provide the expansion and generate a full or relative URI.\n      \n      For any given prefix, it may be useful to supply more than one expansion. For instance, in addition to pointing at the person element in the personography file, it might also be useful to point to an external source which is available on the network, representing the same information in a different way. So there might be a second prefixDef like this:\n        \n        bibliography\n        \n        Any number of prefixDef elements may be provided for the same prefix. A processor may decide to process one or all of them; if it processes only one, it should choose the first one with the correct ident value, so the primary or most important prefixDef for any given prefix should appear first in its parent listPrefixDef.\n      \n      When creating private URI schemes, it is recommended that you avoid using any existing registered prefix. A list of registered prefixes is maintained by IANA at http://www.iana.org/assignments/uri-schemes.html.\n      \n      Note that this mechanism can also be used to dereference other abbreviated pointing systems which are based on prefixes, such as Tag URIs.\n      \n      The matchPattern and replacementPattern attributes are also used in dereferencing canonical reference patterns, and further examples of the use of regular expressions are shown in 16.2.5 Canonical References.\n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAXP#SAXP\">16.2 Pointing Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=SATS#SATS\">16.2.4 TEI XPointer Schemes</a>","content":"\n16.2.4 TEI XPointer Schemes\n\nThe pointing schemes described in this chapter are part of a number of\nsuch schemes envisaged by the W3C, which together constitute a\nframework for addressing data within XML documents, known as the\nXPointer Framework (Grosso et al\n2003). This framework permits the definition of many other named\naddressing methods, each of which is known as an XPointer\nScheme. The W3C has predefined a set of such schemes, and\nmaintains a register for their expansion. \n\nOne important scheme, also defined by the W3C, and recommended\nby these Guidelines is the xpath() pointer\nscheme, which allows for any part of an XML structure to be selected\nusing the syntax defined by the XPath specification. This is further\ndiscussed below, 16.2.4.2 xpath(). These Guidelines also define\nsix other pointer schemes, which provide access to parts of an XML\ndocument such as points within  data content or stretches of data\ncontent. These additional TEI pointer schemes are defined in sections\n16.2.4.3 left() to 16.2.4.8 match() below. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAXP#SAXP\">16.2 Pointing Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=SATS#SATS\">16.2.4 TEI XPointer Schemes</a><a class=\"breadcrumb\" href=\"p5.xml?id=SATSin#SATSin\">16.2.4.1 Introduction to TEI Pointers</a>","content":"16.2.4.1 Introduction to TEI Pointers\n\nBefore discussing the TEI pointer schemes, we introduce slightly\nmore formally the terminology used to define them. So far, we have\ndiscussed only ways of pointing at components of the XML information\nset node such as elements and attributes. However, there is often a\nneed in text analysis to address additional types of location such as\nthe point locations between \nnodes, and sequences that \nmay arbitrarily cross the boundaries of nodes in a document.  The \ncontent of an XML document is organized sequentially as well as \nhierarchically, and it makes sense to consider ranges of characters \nwithin a document independently of the nodes to which they belong. \nFrom the perspective of most of the pointer schemes discussed below, \na TEI document is a tree structure superimposed upon a character stream. \nNodes are entities available only in the tree, while points are available \nonly in the stream. For this reason, the schemes below that rely upon \ncharacter positions (string-index(), \nstring-range(), and match()) cannot take nodes \ninto account. Conversely, XPath (disregarding functions that return atomic values) is a method for locating nodes in the \ntree and treats those nodes as indivisible units, meaning it is unable to address parts of nodes \nin their document context.\n\nThe TEI pointer scheme thus distinguishes the following\nkinds of object:\n\nNodeA node is an instance of one of the node kinds defined in\nthe XQuery \n1.0 and XPath 2.0 Data Model (Second Edition). It represents \na single item in the XML information \tset for a document. For pointing\npurposes, the only nodes that are of interest are Text Nodes,\nElement Nodes, and Attribute Nodes.SequenceA Sequence follows the definition in the XPath 2.0 Data \nModel, with one alteration. A Sequence is an ordered collection\nof zero or more items, where an item is either a node or a partial\ntext node. \nText StreamA Text Stream is the concatenation of the text nodes in a document\nand behaves as though all tags had been removed. A text stream begins\nat a reference node and encompasses all of the text inside that node (if any)\nand all the text following it in document order. In XPath terms, this would\nencompass all of the text nodes beginning at a particular node, and following \nit on the following axis.\nPointA Point represents a dimensionless point between nodes or characters in \na document. Every point is adjacent to either characters or elements, and\nnever to another point. Points can only be referenced in relation to an \nelement or text node in the document (i.e. something addressable by either \nan XPath or a fragment identifier). Points occur either immediately before \nor after an element, or at a numbered position inside a text stream. \nPosition zero in the stream would be immediately before the first character. \nNote that points within attribute values cannot mark the beginning or end of \na range extending beyond the attribute value, because points indicate a \nposition within a document. Since attribute nodes are by definition un-ordered, \nthey cannot be said to have a fixed position. \n\n\n\nThe TEI recommends the following seven pointer schemes:\nxpath()Addresses a node or node sequence using the XPath syntax. (16.2.4.2 xpath())left() and right()addresses the point before (left) or after (right) a node or node \nsequence (16.2.4.3 left() and 16.2.4.4 right())string-index()addresses a point inside a text node (16.2.4.5 string-index()range()addresses the range between two points (16.2.4.6 range())string-range()addresses a range of a specified length starting from a\nspecified point (16.2.4.7 string-range())match()addresses a range which matches a specified string within a node\n(16.2.4.8 match())\n\nThe xpath() scheme refers to the\nexisting XPath specification which is adopted with one modification:\nthe default namespace for any XPath used as a parameter to this \nscheme is assumed to be the TEI namespace http://www.tei-c.org/ns/1.0.\n\nThe other six schemes overlap in functionality with a W3C draft\nspecification known as the XPointer\nscheme draft, but are individually much simpler. At the time of\nthis writing, there is no current or scheduled activity at the W3C\ntowards revising this draft or issuing it as a recommendation. \n\nA note on namespaces: The W3C defines an \nxmlns() scheme (see \nXPointer xmlns() Scheme) \nwhich when prepended to a resolvable pointer allows for the definition of \nnamespace prefixes to be used in XPaths in subsequent pointers. TEI Pointer \nschemes assume that un-prefixed element names in TEI Pointer XPaths are in the \nTEI namespace, http://www.tei-c.org/ns/1.0. The use of \nxmlns() is thus optional, \nprovided no new prefixes need to be defined. If the schemes described here\nare used to address non-TEI elements, then any new prefixes to be used in \npointer XPaths may be defined using the  xmlns() \nscheme.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAXP#SAXP\">16.2 Pointing Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=SATS#SATS\">16.2.4 TEI XPointer Schemes</a><a class=\"breadcrumb\" href=\"p5.xml?id=SATSXP#SATSXP\">16.2.4.2 xpath()</a>","content":"\n16.2.4.2 xpath()\nSequence xpath(XPATH)\nThe xpath() scheme locates zero or more nodes within an XML\n  Information Set. The single argument XPATH is an XPath selection pattern, as\n  defined in XSLT\n    3.0, that returns a node or sequence of nodes. XPaths returning atomic values\n  (e.g. substring()) are illegal in the xpath()\n  scheme because they represent extracted values rather than locations in the source\n  document. Because the schemes below involve starting at a node and navigating from there,\n  and because attribute nodes have no intrinsic order, XPath expressions that address\n  attribute nodes should be avoided in schemes other than xpath(). \nThe example below, and all subsequent examples in this section refer \nto the following TEI fragment:\n\nbibliography\n\nA TEI Pointer that referenced the reg element in the \nchoice in line 1 of the example might look like:\n#xpath(//lb[@n='1']/following-sibling::choice[1]/reg). \n  Note that XPath values must be assumed to start from the document root. They cannot be relative \n  to the element bearing the attribute that uses the pointer because TEI Pointers are URIs. Care\n  should be taken to ensure that XPaths used in TEI Pointers match only a single node, unless\n  multiple matches are desired. The examples that follow are relatively simple because the\n  document they refer to is short and does not contain many elements.\nWhen an XPath is interpreted by a TEI processor, the\ninformation set of the referenced document is interpreted\nwithout any additional information supplied by any schema\nprocessing that may or may not be present. In particular this\nmeans that no whitespace normalization is applied to a\ndocument before the XPath is interpreted.\n\nThis pointer scheme allows easy, direct use of the most\nwidely-implemented XML query method. It is probably the most\nrobust pointing mechanism for the common situation of\nselecting an XML element or its contents where an\nxml:id is not present. The ability to use element\nnames and attribute names and\nvalues makes xpath() pointers more\nrobust than the other mechanisms discussed in this section \neven if the designated document changes. For durability in the\npresence of editing, use of xml:id is always\nrecommended when possible.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAXP#SAXP\">16.2 Pointing Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=SATS#SATS\">16.2.4 TEI XPointer Schemes</a><a class=\"breadcrumb\" href=\"p5.xml?id=SATSL#SATSL\">16.2.4.3 left()</a>","content":"\n16.2.4.3 left()\nPoint left( IDREF | XPATH )\nThe left() scheme locates the\npoint immediately preceding the node addressed by its argument,\nwhich is either an XPATH as defined above or an\nIDREF, the value of an xml:id\noccurring in the document addressed by the base URI in effect\nfor the pointer.\nExample: the pointer #left(//supplied[1])\nindicates the point between the first lb and the first\nsupplied in the example above.\nExample: #left(//gap[1]) indicates the point immediately before\nthe first gap element in line two and the string si.\nExample: #left(line1) indicates the point immediately before\nthe <lb n=\"1\"/> element."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAXP#SAXP\">16.2 Pointing Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=SATS#SATS\">16.2.4 TEI XPointer Schemes</a><a class=\"breadcrumb\" href=\"p5.xml?id=SATSR#SATSR\">16.2.4.4 right()</a>","content":"\n16.2.4.4 right()\nPoint right( IDREF | XPATH )\nThe right() scheme locates the\npoint immediately following the node addressed by its argument.\nExample: the pointer #right(//lb[@n='3']) \nindicates the point between the third lb and the \n<unclear>s</unclear> element\nin the example.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAXP#SAXP\">16.2 Pointing Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=SATS#SATS\">16.2.4 TEI XPointer Schemes</a><a class=\"breadcrumb\" href=\"p5.xml?id=SATSSI#SATSSI\">16.2.4.5 string-index()</a>","content":"\n16.2.4.5 string-index()\nPoint string-index( IDREF | XPATH, OFFSET )\nThe string-index() scheme locates a\n  point based on character positions in a text stream relative \n  to the node identified by the IDREF or XPATH parameter. The OFFSET\nparameter is a positive, negative, or zero integer which determines \nthe position of the point. An offset of 0 represents the \nposition immediately before the first character in either the first \ntext node descendant of the node addressed in the first parameter or the \nfirst following text node, if the addressed element contains \nno text node descendants.\nExample: #string-index(//lb[@n='2'],1) indicates the point\nbetween the s and the i in the word si in line 2.\nNote: The OFFSET parameter (and similarly the \nLENGTH parameter found below in the string-range()\nscheme) are measured in characters. What is considered a single character will\ndepend (assuming the document being evaluated is in Unicode) on the \nNormalization Form in use (see \nUNICODE NORMALIZATION \nFORMS). A letter followed by a combining diacritic counts as two \ncharacters, but the same diacritic precombined with a letter would count \nas a single character. Compare, for example, é (\\u0060 \nfollowed by \\u0301) and é (\\u00E9). These are \nequivalent, and a conversion between Normalization Forms C and D will \ntransform one into the other. This specification does not mandate a \nparticular Normalization Form (see 6.2.7.2 Precomposed and Combining Characters and\n   Normalization), but \nusers and implementers should be aware that it affects the character count \nand therefore the result of evaluating pointers that rely on character \ncounting.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAXP#SAXP\">16.2 Pointing Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=SATS#SATS\">16.2.4 TEI XPointer Schemes</a><a class=\"breadcrumb\" href=\"p5.xml?id=SATSRN#SATSRN\">16.2.4.6 range()</a>","content":"\n16.2.4.6 range()\nSequence range( POINTER, POINTER[, POINTER, POINTER ...])\nThe range() scheme takes as parameters one \nor more pairs of POINTERs, which are each members of the set IDREF,\nXPATH, left(), \nright(), or \nstring-index(). A \nrange() locates a (possibly non-contiguous) \nsequence beginning at the first POINTER parameter and ending at the \nlast. If the POINTER locates a node (i.e. is an XPATH or IDREF), then \nthat node is a member of the addressed sequence. If a sequence addressed\nby a range pointer overlaps, but does not wholly contain, an element\n(i.e. it contains only the start but not the end tag or vice-versa),\nthen that element is not part of the sequence.\nRange()s may address sequences of \nnon-contiguous nodes. For example, a range() might select text beginning \nbefore an app, encompassing the content of a single rdg \nand continuing after the app.\nExample: #range(left(//lb[@n='3']),left(//lb[@n='4'])) indicates \nthe whole of line 3 from the \n<lb n=\"3\"/> to the point right before the \nfollowing <lb n=\"4\"/>.\nExample: #range(right(//lb[@n='3']),string-index(//lb[@n='3'],15))\n  indicates the sequence <unclear>s</unclear>emp<unclear>er</unclear> in mente.\nExample: #range(string-index(//lb[@n='3'],7),string-index(//lb[@n='3'],10),string-index(//lb[@n='3'],15),string-index(//lb[@n='3'],21)) indicates\nthe non-contiguous sequence in mentem.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAXP#SAXP\">16.2 Pointing Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=SATS#SATS\">16.2.4 TEI XPointer Schemes</a><a class=\"breadcrumb\" href=\"p5.xml?id=SATSSR#SATSSR\">16.2.4.7 string-range()</a>","content":"\n16.2.4.7 string-range()\nSequence string-range(IDREF | XPATH, OFFSET, LENGTH[, OFFSET, LENGTH ...])\nThe string-range() scheme\nlocates a sequence based on character positions in a text stream relative \nto the node identified by the first parameter. The location of the \nbeginning of the addressed sequence is determined precisely\nas for string-index(). The OFFSET\nparameter is defined as above in string-index().\nThe LENGTH parameter is a positive integer that denotes\nthe length of the text stream captured by the sequence. As with \nrange(), the addressed sequence may \ncontain text nodes and/or elements. The \nstring-range() scheme can accept multiple \nOFFSET, LENGTH pairs to address a non-contiguous sequence in much the\nsame way that range() can accept multiple pairs of pointers. \nBecause string-range() addresses points in the text stream, tags are\ninvisible to it. For example, if an empty tag like lb is\nencountered while processing a string-range(), it will be included in\nthe resulting sequence, but the LENGTH count will not increment when\nit is captured.\nExample: #string-range(//lb[@n='5'],0,27) indicates \nthe whole of line 5 from the text immediately \nfollowing the lb to the point right before the closing \nab tag.\nExample: #string-range(//lb[@n='3'],7,8)\nindicates the sequence in mente.\nExample: #string-range(//lb[@n='3'],7,3,15,6) indicates\nthe non-contiguous sequence in mentem.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAXP#SAXP\">16.2 Pointing Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=SATS#SATS\">16.2.4 TEI XPointer Schemes</a><a class=\"breadcrumb\" href=\"p5.xml?id=SATSMA#SATSMA\">16.2.4.8 match()</a>","content":"\n16.2.4.8 match()\nSequence match(IDREF | XPATH, 'REGEX' [, INDEX])\nThe match scheme locates a sequence based on matching the REGEX parameter\nagainst a text stream relative to the reference node identified by the first \nparameter. REGEX is a regular expression as defined by \nXQuery \n1.0 and XPath 2.0 Functions and Operators (Second Edition), with some\nmodifications: \nBecause the regular expression is delimited by apostrophe \n    characters, any such characters (' or \\u0027) \n    occurring inside the expression must be escaped using the URI \n    percent-encoding scheme %27. Regular expressions in match() are assumed to\n    operate in single-line mode. The end of the string to be matched\n    against is either the end of the text contained by the element in the\n    first parameter or the end of the document, if that parameter\n    indicates an empty element. The meta-character ^\n    therefore matches the beginning of the text stream inside or following\n    the reference node, and the meta-character $ matches the\n    end of that stream.\n  \nThe optional INDEX parameter is an integer greater than 0 which specifies which \nmatch should be chosen when there is more than one possibility. If omitted, the \nfirst match in the text stream will be used.\nLike string-range(), match() may capture elements \nin the indicated sequence, even though they are ignored for purposes of evaluating \nthe match.\nExample: #match(//lb[@n='5'],'opto.*valeas') indicates the sequence\nopto u<unclear>t</unclear> bene valeas in \nline 5.\nExample: #match(//lb[@n='3'],'semper') would indicate the \nword semper, but would not capture the unclear elements\nin <unclear>s</unclear>emp<unclear>er</unclear>, just \ntheir text children.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAXP#SAXP\">16.2 Pointing Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=SACR#SACR\">16.2.5 Canonical References</a>","content":"\n16.2.5 Canonical References\n\nBy canonical reference we mean any means\nof pointing into documents, specific to a community or\ncorpus. For example, biblical scholars might understand Matt\n5:7 to mean the book called Matthew, chapter\n5, verse 7. They might then wish to translate the string\nMatt 5:7 into a pointer into a TEI-encoded document,\nselecting the element which corresponds to the seventh\ndiv element within the fifth div element\nwithin the div element with the n attribute\nvalued Matt.\nSeveral elements in the TEI scheme (gloss,\nptr, ref, and term) bear a special\nattribute, cRef, just for this purpose. Using the\nsystem described in this section, an encoder may specify\nreferences to canonical works in a discipline-familiar format,\nand expect software to derive a complete URI from it. The value\nof the cRef attribute is processed as described in\nthis section, and the resulting URI reference is treated as if\nit were the value of the target attribute. The\ncRef and target attributes are mutually\nexclusive: only one or the other may be specified on any given\noccurrence of an element.\nFor the cRef attribute to function as required, a mechanism is needed to define the\nmapping between (for example) the book called\nMatt and the part of the XML structure which\ncorresponds with it. This is provided by the  refsDecl element  in the TEI header,\nwhich contains an algorithm for translating a canonical reference string\n(like Matt 5:7) into a URI such as #xpath(//div[@n='Matt']/div[5]/div[7]). The\nrefsDecl element is described in section 2.3.6 The Reference System Declaration; the following example is discussed in more\n  detail below in section 16.2.5.1 Worked Example. An alternative and less verbose method is described in section 16.2.5.4 Citation Structures.\nbibliography\n\nWhen an application encounters a canonical reference as the\nvalue of cRef attribute, it might follow this sequence of\nspecific steps to transform it into a URI reference:\n\n  Ascertain the correct refsDecl\n  following the rules summarized in section 15.3.3 Summary.\n  For each cRefPattern element encountered in\n  the appropriate refsDecl, in the order encountered:\n  \n    match the value of the cRef attribute to the regular\n    expression found as the value of the matchPattern\n    attribute\n    if the value of the cRef attribute matches:\n      \n        take the value of the replacementPattern \n          attribute and substitute the back references ($1, $2, \n          etc.) with the corresponding matched substrings\n        the result is taken as if it were a relative or \n          absolute URI reference specified on the target \n          attribute; i.e., it should be used as is or combined with\n          the current xml:base attribute value as usual\n        no further processing of this value of the cRef \n          attribute against the refsDecl should take place\n      \n    \n    if, however, the value of the cRef attribute does not match\n    the regular expression specified in the value of the matchPattern attribute,\n    proceed to the next cRefPattern\n  \n  \n  If all the cRefPattern elements are\n  examined in turn and none matches, the pointer fails.\n\nThe regular expression language used as the value of the\nmatchPattern attribute is that used for the\npattern facet of the World Wide Web Consortium's\nXML Schema Language in an Appendix to\nXML Schema Part 2.5\nThe value of the replacementPattern attribute is simply a string,\nexcept that occurrences of $1 through $9 are\nreplaced by the corresponding substring match. Note that since a\nmaximum of nine substring matches are permitted, the string\n$18 means the value of the first matched substring\nfollowed by the character 8 as opposed to the\neighteenth matched substring. If there is a need for an\nactual string including a dollar sign followed by a digit that is\nnot supposed to be replaced, the dollar sign should be written\nas $$. Implementations must convert $$ \nto $ during processing.\n\n\n\n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAXP#SAXP\">16.2 Pointing Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=SACR#SACR\">16.2.5 Canonical References</a><a class=\"breadcrumb\" href=\"p5.xml?id=SACRWE#SACRWE\">16.2.5.1 Worked Example</a>","content":"\n  16.2.5.1 Worked Example\n  Let us presume that with the example refsDecl\n  above, an application comes across a cRef value of\n  Matt 5:7. The\n  application would first apply the regular expression\n  (.+) (.+):(.+) to Matt 5:7. This regular\n  expression would successfully match. The first matched\n  substring would be Matt, the second 5, and the\n  third 7. The application would then apply these\n  substrings to the pattern\n  #xpath(//div[@n='$1']/div[$2]/div[$3]), producing\n  #xpath(//div[@n='Matt']/div[5]/div[7]).\n  \n  If, however, the input string had been Matt 5, the\n  first regular expression would not have matched. The\n  application would have then tried the second, (.+)\n  (.+), producing a successful match, and the matched\n  substrings Matt and 5. It would then have\n  substituted those matched substrings into the pattern\n  #xpath(//div[@n='$1']/div[$2]) to produce a\n  fragment identifier indicating the referenced element.\n  If the input string had been Matt, neither the first\n    nor the second regular expressions would have successfully\n    matched. The application would have then tried the third,\n    (.+), producing the matched substring Matt,\n    and the URI Reference\n    #xpath(//div[@n='Matt']).\n  a cRefPattern should not reference more matched substrings. For example:\n    \n    is faulty, since only three matched\n    substrings would have been produced, but a fourth ($4) was\n    referenced.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAXP#SAXP\">16.2 Pointing Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=SACR#SACR\">16.2.5 Canonical References</a><a class=\"breadcrumb\" href=\"p5.xml?id=SACRex#SACRex\">16.2.5.2 Complete and Partial URI Examples</a>","content":"\n  16.2.5.2 Complete and Partial URI Examples\n  In the above example, the value of cRef was used\n  to generate a Fragment Identifier. An absolute URI could be generated\n  directly, as in the following example.\n    bibliography\n  \n  See 16.2.3 Using Abbreviated Pointers for another related use of the matchPattern and replacementPattern attributes.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAXP#SAXP\">16.2 Pointing Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=SACR#SACR\">16.2.5 Canonical References</a><a class=\"breadcrumb\" href=\"p5.xml?id=SACRmu#SACRmu\">16.2.5.3 Miscellaneous Usages</a>","content":"16.2.5.3 Miscellaneous Usages\nCanonical reference pointers are intended for use by TEI\n    encoders. However, this specification might be useful to the\n    development of a process for recognizing canonical\n    references in non-TEI documents (such as plain text\n    documents), possibly as part of their conversion to TEI.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAXP#SAXP\">16.2 Pointing Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=SACR#SACR\">16.2.5 Canonical References</a><a class=\"breadcrumb\" href=\"p5.xml?id=SACRCS#SACRCS\">16.2.5.4 Citation Structures</a>","content":"\n        16.2.5.4 Citation Structures\n        Citation structures provide a more thorough and concise mechanism for describing canonical references\n           and the ways those references map on to parts of a TEI document. A citeStructure element\n           describes a single step in a reference, such as Matt, and may nest to handle multi-part references.\n        \n        The equivalent structure to the set of cRefPatterns in 16.2.5.1 Worked Example would be:\n        bibliography\n        \n        An application wishing to resolve a canonical reference such as Matt 5:7 might follow this procedure:\n          \n            Ascertain the correct refsDecl\n              following the rules summarized in section 15.3.3 Summary.\n            Begin with the outer citeStructure. If it has a delim attribute \n              and the reference begins with the value of delim then take the portion of \n              the reference after the value of delim as input for the next child citeStructure.\n            For each nested citeStructure, if the input reference string contains the value \n              of the delim, then split the string on the value of the delim attribute. \n              If the input string does not contain delim, then stop. Take the portion of the input \n              string after the value of delim and use it as the input string for the child citeStructure. \n              After processing the outer citeStructure, the output will be ('Matt 5:7'), after \n              the second, ('Matt', '5:7'). The end result will be a \n              sequence like ('Matt','5','7').\n            For each item in the resulting sequence, resolve the matching node by evaluating \n              the XPath in match with the predicate found in use, using the \n              context of the previously matched node, if any. Start with the outer citeStructure \n              and move to the next child citeStructure for each step in the sequence. For \n              example, for the first citeStructure, we could construct an XPath \n              //div[@n='Matt']. The full XPath after the reference Matt 5:7 is resolved will be \n              //div[@n='Matt']/div[@n='5']/div[@n='7'].\n          \n          One advantage citeStructure has is that it can be used to generate canonical \n          references, using the declared citation structure to query the text structure. This means it is \n          possible to automatically produce a list of resolvable citations for a TEI document. It also \n          enables the automatic breaking of documents into smaller chunks for presentation and automated \n          generation of tables of contents.\n        Citation structures may in addition specify how informational properties are to be extracted from the\n          document sections they identify, using the citeData element. For example, if a TEI document \n          is divided into chapters with a div per chapter and those chapters have titles, contained in\n          head elements, then we might declare a citation structure for the document thus:\n          bibliography\n        \n        This specifies that chapter references are given in the form ch. n, where n\n          is the position of the div in the body of the document, and that we may obtain\n          the title of the chapter (identified by the Dublin Core property title) from the chapter\n          heading. This would, for example, enable the automated generation of a chapter listing for the document.\n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SASE#SASE\">16.3 Blocks, Segments, and Anchors</a>","content":"\n    16.3 Blocks, Segments, and Anchors\n\nIn this section, we discuss three general purposes elements which\nmay be used to mark and categorize both a span of text and a point\nwithin one. These elements have several uses, most notably to provide\nelements which can be given identifiers for use when aligning or\nlinking to parts of a document, as discussed elsewhere in this\nchapter. They also provide a convenient way of extending the semantics\nof the TEI markup scheme in a theory-neutral manner, by providing for\ntwo neutral or anonymous elements to which the\nencoder can add any meaning not supplied by other TEI defined\nelements.\n    \n<anchor> attaches an identifier to a point within a text, whether or not it corresponds with a textual element.\n<ab> contains any arbitrary component-level unit of text, acting as an anonymous container for phrase or inter level elements analogous to, but without the semantic baggage of, a paragraph.\n<seg> represents any segmentation of text below the chunk level.\n    \n    The elements anchor, ab, and seg are members of\n    the class att.typed, from which they\n    inherit the following attributes:\n    \n<att.typed> provides attributes that can be used to classify or subclassify elements in any way.\n    \nThe elements ab, and seg are members of\n    the class att.fragmentable, from which they\n    inherit the following attribute:\n    \n<att.fragmentable> provides attributes for representing\n    fragmentation of a structural element, typically as \n  a consequence of some overlapping hierarchy.\n\n    The seg element is also a member of the class att.segLike from which it inherits the\n    following attribute:\n    \n      <att.segLike> provides attributes for elements used for arbitrary segmentation.\n    \n\n    The anchor element may be thought of as an empty\n    seg, or as an artifice enabling an identifier to be\n    attached to any position in a text. Like the milestone\n    element discussed in section 3.11 Reference Systems, it is useful\n    where multiple views of a document are to be combined, for\n    example, when a logical view based on paragraphs or verse lines is\n    to be mapped on to a physical view based on manuscript lines. Like\n    those elements, it is a member of the class model.global and can therefore appear\n    anywhere within a document when the module defined by this chapter\n    is included in a schema. Unlike the other elements in its class,\n    the anchor element is primarily intended  to mark\n    an arbitrary point used for alignment, or as the target of a\n    spanning element such as those discussed in section 11.3.1.4 Additions and Deletions, rather than as a means of marking segment\n    boundaries for some arbitrary segmentation of a text.\n    For example, suppose that we wish to mark the end of the fifth\n    word following each occurrence of some term in a particular text,\n    perhaps to assist with some collocational analysis. This can most\n    easily be done with the help of the anchor element, as\n    follows:\n    \n    bibliography\n    In section 16.5.1 Correspondence we discuss ways in which these\n    anchor points might be used to represent an alignment\n    such as one might get in a keyword-in-context concordance.\n    The seg element may be used at the encoder's\n    discretion to mark almost any segment of the text of interest for\n    processing. One use of the element is to mark text features for\n    which no appropriate markup is otherwise defined, i.e. as a simple\n    extension mechanism. Another use is to provide an identifier for\n    some segment which is to be pointed at by some other element, i.e.\n    to provide a target, or a part of a target, for a ptr or\n    other similar element.\n    Several examples of uses for the seg element are\n    provided elsewhere in these Guidelines. For example:\n    as a means of marking segments significant in a metrical\nor rhyming analysis (see section 6.4 Rhyme and Metrical Analysis)as a means of marking typographic lines in drama (see\nsection 7.2 The Body of a Performance Text) or title pages (see section 4.6 Title Pages)as a means of marking prosody- or pause-defined units in\ntranscribed speech (see section 8.4.1 Segmentation)as a means of marking linguistic or other analyses in a\ntheory-neutral manner (see chapter 17 Simple Analytic Mechanisms\npassim)\n\nIn the following simple example, the seg element simply\ndelimits the extent of a stutter, a textual feature for which no\nelement is provided in these Guidelines.  bibliography\n\nThe seg element is particularly useful for the markup\nof linguistically significant constituents such as the phrases\nthat may be the output of an automatic parsing system. This\nexample also demonstrates the use of the xml:id\nattribute to carry an identifier which other parts of a document\nmay use to point to, or align with:\nbibliography\n\nAs the above example shows, seg elements may be\nnested directly within one another, to any degree of analysis\nconsidered appropriate. This is taken a little further in the\nfollowing example, where the type and\nsubtype attributes have been used to further\ncategorize each word of the sentence (the xml:id\nattributes have been removed to reduce the complexity of the\nexample):\nbibliography\n(The example values shown are chosen for simplicity of\ncomprehension, rather than verisimilitude). It should also be\nnoted that specialized segment elements are defined in section\n17.1 Linguistic Segment Categories to facilitate this particular kind of\nanalysis. These allow for the explicit markup of units called\ns-units, clauses,\nphrases, words, morphemes,\nand characters, which may be felt preferable to the\nmore generic approach typified by use of the seg\nelement. Using these, the first phrase above might be encoded\nsimply as\nbibliography\nNote the way in which the type attribute of these\nspecialized elements now carries the value carried by the\nsubtype attribute of the more general seg\nelement. For an analysis not using these traditional linguistic\ncategories however, the seg element provides a simple\nbut powerful mechanism.\nIn language corpora and similar material, the seg\nelement may be used to provide an end-to-end segmentation as an\nalternative to the more specific s element proposed in\nchapter 17.1 Linguistic Segment Categories for the markup of orthographic\nsentences, or s-units. However, it may be more\nuseful to use the s element for this purpose, since\nthis means that the seg element can then be used to\nmark both features within s-units and segments composed of\ns-units, as in the following example:6\nbibliography\nLike other elements, the seg tag must be properly\nenclosed within other elements. Thus, a single seg\nelement can be used to group together words in different\nsentences only if the sentences are not themselves tagged. The\nfirst of the following two encodings is legal, but the second is\nnot.\n\nbibliography\n\nThe part attribute may be used as one simple\nmethod of overcoming this restriction:\nbibliography\nAnother solution is to use the join element discussed\nin section 16.7 Aggregation; this requires that each of the\nseg elements be given an identifier. For further\ndiscussion of this generic encoding problem, see also chapter\n20 Non-hierarchical Structures.\nThe seg element has the same content as a paragraph\nin prose: it can therefore be used to group together consecutive\nsequences of model.inter class elements,\nsuch as lists, quotations, notes, stage directions, etc. as well\nas to contain sequences of phrase-level elements. It cannot\nhowever be used to group together sequences of paragraphs or\nsimilar text units such as verse lines; for this purpose, the\nencoder should use intermediate pointers, as described in\nsection 16.1.4 Intermediate Pointers or the methods described in\nsection 16.7 Aggregation. It is particularly important that\nthe encoder provide a clear description of the principles by\nwhich a text has been segmented, and the way in which that\nsegmentation is represented. This should include a description\nof the method used and the significance of any categorization\ncodes. The description should be provided as a series of\nparagraphs within the segmentation element of the\nencoding description in the TEI header, as described in section\n2.3.3 The Editorial Practices Declaration.\nThe seg element may also be used to encode\nsimultaneous or mutually exclusive variants of a text when the\nmore special purpose elements for simple editorial changes,\nabbreviation and expansion, addition and deletion, or for a\ncritical apparatus are not appropriate. In these circumstances,\none seg is encoded for each possible variant, and the\nset of them is enclosed in a choice element. \nFor example, if one were writing dual-platform instructions for\ninstallation of software, it might be useful to use seg\nto record platform-specific pieces of mutually exclusive text.\nbibliography\nElsewhere in this chapter we provide a number of examples\nwhere  the seg element is used simply to provide an\nelement to which an identifier may be attached, for example so\nthat another segment may be linked or related to it in some\nway.\nThe ab (anonymous block) element performs a similar\nfunction to that of the seg element, but is used for portions\nof the text which occur not within paragraphs or other component-level\nelements, but at the component level themselves. It is therefore a\nmember of the model.pLike class.\n\nThe ab element may be used, for\nexample, to tag the canonical verse divisions of Biblical texts:\nbibliography\n\nIn other cases, where the text clearly indicates paragraph\ndivisions containing one or more verses, the p element\nmay be used to tag the paragraphs, and the seg element\nused to subdivide them. The ab element is provided as\nan alternative to the p element; it may\nnot be used within paragraphs. The seg\nelement, by contrast, may appear only within and not between\nparagraphs (or anonymous block elements).\nbibliography\n\nThe ab element is also useful for marking dramatic\nspeeches when it is not clear whether the speech is to be\nregarded as prose or verse. If, for example, an encoder does not\nwish to express an opinion as to whether the opening lines of\nShakespeare's The Tempest are to be regarded as\nprose or as verse, they might be tagged as follows: bibliography\nSee further 3.13.2 Core Tags for Drama and 7.2.5 Speech Contents.\n\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SASY#SASY\">16.4 Synchronization</a>","content":"\n16.4 Synchronization\nIn the previous section we discussed two particular kinds of\nalignment: alignment of parallel texts in different languages; and\nalignment of texts and portions of an image. In this section we address\nanother specialized form of alignment: synchronization. The need to\nmark the relative positions of text components with respect to time\narises most naturally and frequently in transcribed spoken texts, but it\nmay arise in any text in which quoted speech occurs, or events are\ndescribed within a time frame. The methods described here are also\ngeneralizable for other kinds of alignment (for example, alignment of\ntext elements with respect to space).\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SASY#SASY\">16.4 Synchronization</a><a class=\"breadcrumb\" href=\"p5.xml?id=SASYNC#SASYNC\">16.4.1 Aligning Synchronous Events</a>","content":"\n16.4.1 Aligning Synchronous Events\n\nProvided that explicit elements are available to represent the\nparts or places to be synchronized, then the global linking attribute\nsynch may be used to encode such synchronization, once it\nhas been identified.\n  \n    <att.global.linking> provides a set of attributes for hypertextual linking.\n  \n  This is another of the attributes made globally available by\n  the mechanism described in the introduction to this chapter.\n  Alternatively, the link and linkGrp elements\n  may be used to make explicit the fact that the synchronous\n  elements are aligned.\nTo illustrate the use of these mechanisms for marking synchrony,\nconsider the following representation of a spoken text:\n\n\nThis representation uses numbers in brackets to mark the points at\nwhich speakers overlap each other. For example, the [1]\nin A's first speech is to be understood as coinciding with the\n[1] in B's second speech.7\nTo encode this we use the  spoken texts module, described\nin chapter 8 Transcriptions of Speech, together with the module\ndescribed in the present chapter. First, we transcribe this text,\nmarking the synchronous points with anchor elements, and\nproviding a synch attribute on one of each of the pairs of\nsynchronous anchors. As noted in the example given above (section 16.5.2 Alignment of Parallel Texts), correspondence, and hence synchrony, is a\nsymmetric relation; therefore the attribute need only be specified on\none of the pairs of synchronous anchors.\nbibliography\nWe can encode this same example using link and\nlinkGrp elements to make the temporal alignment explicit. A back\nelement has been used to enclose the linkGrp element, but the links\nmay be located anywhere the encoder finds convenient:\n\nThe\nxml:id attributes are provided for the link and\nlinkGrp elements here for reasons discussed  in the next\nsection, 16.4.2 Placing Synchronous Events in Time. \n\nAs with other forms of alignment, synchronization may be expressed\nbetween stretches of speech as well as between points. When complete\nutterances are synchronous, for example, if one person says\nWhat? and another No! at the same time,\nthat can be represented without anchor elements as follows.\nbibliography\nA simple way of expressing overlap (where one speaker\nstarts speaking before another has finished) is thus to use the\nseg element to encode the overlapping portions of speech. For\nexample,\nbibliography\nNote in this encoding how synchronization has been effected between an\nempty unclear element and the content of a seg element, and between the\ncontent of a\nu element and that of another seg, using the synch\nattribute. Alternatively, a linkGrp could be used in the same\nway as above."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SASY#SASY\">16.4 Synchronization</a><a class=\"breadcrumb\" href=\"p5.xml?id=SASYMP#SASYMP\">16.4.2 Placing Synchronous Events in Time</a>","content":"\n16.4.2 Placing Synchronous Events in Time\nA synchronous alignment specifies which points in a spoken text occur\nat the same time, and the order in which they occur, but does not say at\nwhat time those points actually occur. If that information is available\nto the encoder it can be represented by means of the when and\ntimeline elements, whose description and attributes are the\nfollowing:\n<when> indicates a point in time either relative to other elements in the same timeline tag, or absolutely.<timeline> provides a set of ordered points in time which can be linked to elements of a spoken text to create a temporal alignment of that text.\nEach when element indicates a point in time, either directly\nby means of the absolute attribute, whose value is a string\nwhich specifies a particular time, or indirectly by means of the\nsince attribute, which points to another when. If\nthe since is used, then the interval and\nunit attributes should also be used to indicate the amount of\ntime that has elapsed since the time specified by the element pointed to\nby the since attribute; the value -1\ncan be given to indicate that the interval is unknown.\nIf the when elements are uniformly spaced in time, then the\ninterval and unit values need be given once in the\ntimeline, and not repeated in any of the when\nelements. If the intervals vary, but the units are all the same, then\nthe unit attribute alone can be given in the\ntimeline element, and the interval attribute given\nin the when element.\nThe origin attribute in the timeline element\npoints to a when element which specifies the reference or\norigin for the timings within the timeline; this must, of\ncourse, specify its position in time absolutely. If the origin of a\ntimeline is unknown, then this attribute may be omitted.\nThe following timeline might be used to accompany the marked\nup conversation shown in the preceding section:\n\nThe information in this timeline could now be linked to the\ninformation in the linkGrp which provides the temporal\nalignment (synchronization) for the text, as follows:\n\nTo avoid the need for two distinct link groups (one marking the\nsynchronization of anchors with each other, and the other marking their\nalignment with points on the time line) it would be better to link the\nwhen elements with the synchronous points directly:\n\n\n\nFinally, suppose that a digitized audio recording is also\navailable, and an XML file that assigns identifiers to the various\ntemporal spans of sound is available. For example, the following\nSynchronized Multimedia Integration Language (SMIL, pronounced\n\"smile\") fragment:\n\nURIs pointing to the audio elements could also\nbe included as a fourth component in each of the above link\nelements, thus providing a synchronized audio track to complement the\ntranscribed text.\nFor further discussion of this and related aspects of encoding\ntranscribed speech, refer to chapter 8 Transcriptions of Speech.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SACS#SACS\">16.5 Correspondence and Alignment</a>","content":"\n\n16.5 Correspondence and Alignment\nIn this section we introduce the notions of\ncorrespondence, expressed by the corresp\nattribute, and of alignment, which is a special\nkind of correspondence involving an ordered set of\ncorrespondences. Both cases may be represented using the\nlink and linkGrp elements introduced in\nsection 16.1 Links. We also discuss the special case\nof alignment in time or synchronization, for which\nspecial purpose elements are proposed in section 16.4 Synchronization.\n\n  \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SACS#SACS\">16.5 Correspondence and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SACS1#SACS1\">16.5.1 Correspondence</a>","content":"\n  16.5.1 Correspondence\n  A common requirement in text analysis is to represent\n  correspondences between two or more parts of a single\n  document, or between places in different documents. Provided\n  that explicit elements are available to represent the parts or\n  places to be linked, then the global linking attribute\n  corresp may be used to encode such correspondence,\n  once it has been identified.\n  \n    <att.global.linking> provides a set of attributes for hypertextual linking.\n  \n  This is one of the attributes made available by the mechanism\n  described in the introduction to this chapter (16 Linking, Segmentation, and Alignment). Correspondence can also be expressed by means\n  of the link element introduced in section 16.1 Links.\n  Where the correspondence is between spans, the\n  seg element should be used, if no other element is\n  available. Where the correspondence is between\n  points, the anchor element should be\n  used, if no other element is available.\n  The use of the corresp attribute with spans of\n  content is illustrated by the following example:\nbibliography\n\n  \n  \n  Here the anaphoric phrases the network\n  and the show have been associated\n  directly with the elements to which they refer by means of\n  corresp attributes. This mechanism is simple to\n  apply, but has the drawback that it is not possible to specify\n  more exactly what kind of correspondence is intended. Where\n  this attribute is used, therefore, encoders are encouraged to\n  specify their intent in the associated encoding description\n  in the TEI header.\n  Essentially, what the corresp attribute does is\n  to specify that elements  bearing this attribute and those\nto which the attribute points are doubly linked. In the example above,\nthe use of the corresp attribute indicates that the seg element containing the show and the \ntitle element containing Shirley correspond to each\nother: the correspondence relationship is not from\none to the other, but between the two\nobjects. It is thus different from the target  attribute,\nand provides functionality more similar to that of the  link and linkGrp elements defined in\n  section 16.1 Links, although it lacks the ability to\n  indicate more precisely what kind of correspondence is\n  intended as in the following retagging of the preceding\n  example.\nbibliography\nIn the following example, we use the same mechanism to\nexpress a correspondence amongst the anchors introduced following the\nfifth word after English in a text:\nbibliography"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SACS#SACS\">16.5 Correspondence and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SACSAL#SACSAL\">16.5.2 Alignment of Parallel Texts</a>","content":"\n    16.5.2 Alignment of Parallel Texts\n    One very important application area for the alignment of\n    parallel texts is multilingual corpora. Consider, for\n    example, the need to align translation\n    pairs of sentences drawn from a corpus such as\n    the Canadian Hansard, in which each sentence is given in\n    both English and French. Concerning this problem, Gale and\n    Church write: Most English sentences match\n    exactly one French sentence, but it is possible for an\n    English sentence to match two or more French sentences. The\n    first two English sentences [in the example below]\n    illustrate a particularly hard case where two English\n    sentences align to two French sentences. No smaller\n    alignments are possible because the clause\n    ...sales...were higher... in the first English\n    sentence corresponds to (part of) the second French\n    sentence. The next two alignments ... illustrate the more\n    typical case where one English sentence aligns with exactly\n    one French sentence. The final alignment matches two English\n    sentences to a single French sentence. These alignments\n    [which were produced by a computer program] agreed with the\n    results produced by a human judge.8\n    The alignment produced by Gale and Church's program can\n    be expressed in four different ways. The encoder must first\n    decide whether to represent the alignment in terms of points\n    within each text (using the anchor element) or in\n    terms of whole stretches of text, using the seg\n    element. To some extent the choice will depend on the\n    process by which the software works out where alignment\n    occurs, and the intention of the encoder. Secondly, the\n    encoder may elect to represent the actual encoding using\n    either corresp attributes attached to the\n    individual anchor or seg elements, or\n    using a free-standing linkGrp element.\n    We present first a solution using anchor\n    elements bearing only corresp attributes:\nbibliography\n  There is no requirement that the corresp\n  attribute be specified in both English and French texts, since\n  (as noted above) this attribute is defined as representing a\n  mutual association. However, it may simplify processing to do\n  so, and also avoids giving the impression that the English is\n  translating the French, or vice versa. More seriously, this\n  encoding does not make explicit that it is in fact\n  the entire stretch of text between the anchors which is being\n  aligned, not simply the points themselves. If for example one\n  text contained material omitted from the other, this approach\n  would not be appropriate.\n  We now present the same passage using the alternative\n  linkGrp mechanism and marking explicitly the segments\n  which have been aligned:\nbibliography\nNote that use of the ab element allows us to mark up the\northographic sentences in both languages independently of the alignment:\nthe first translation pair in this example might be marked up as\nfollows:\nbibliography\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SACS#SACS\">16.5 Correspondence and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SACSXA#SACSXA\">16.5.3 A Three-way Alignment</a>","content":"\n16.5.3 A Three-way Alignment\nThe preceding encoding of the alignment of parallel passages from\ntwo texts requires that those texts and the alignment all be part of\nthe same document. If the texts are in separate documents, then\ncomplete URIs, whether absolute or relative (section 16 Linking, Segmentation, and Alignment), will be required. These external pointers may appear\nanywhere within the document, but if they are created solely for use\nin encoding links, they may for convenience be grouped within the\nlinkGrp (or other grouping element that uses them for\nlinking).\nTo demonstrate this facility, we consider how we might encode the\nalignments in an extract from Comenius' Orbis Sensualium\nPictus, in the\nEnglish translation of Charles Hoole (1659).\n\n\n\n\nEach topic covered in this work has three parts: a\npicture, a prose text in Latin describing the topic, and a\ncarefully-aligned translation of the Latin into English, German, or some\nother vernacular. Key terms in the two texts are typographically\ndistinct, and are linked to the picture by numbers, which appear in the\ntwo texts and within the picture as well.\nFirst, we consider the text portions. The English and Latin portions\nhave been encoded as distinct div elements. Identifiers have\nbeen attached to each typographic line, but no other encoding added, to\nsimplify the example.\n\nbibliography\n\nNext we consider the non-textual parts of the page. Encoding this\nrequires providing two distinct components: firstly a digitized rendering of the\npage itself, and secondly a representation of the areas within that image\nwhich are to be aligned. In section 11.1 Digital Facsimiles we present a\nsimple way of doing this using the TEI-defined markup for alignment of\nfacsimiles. In the present chapter we demonstrate a more powerful\nmeans of aligning arbitrary polygons and points, which uses the XML notation SVG (see SVG). This provides appropriate facilities for both these\nrequirements:\n\nThis example of SVG defines two rectangles \nat the locations with the specified x and y coordinates. A view is\ndefined on these, enabling them to be \nmapped by an SVG processor to the image found at the URL specified\n(p1764.png). It also defines unique identifiers for\nthe whole image, and the two views of it, which we will use within our\nalignment, as shown next (for further discussion of the handling of\n images and graphics, see section 14.4 Specific Elements for Graphic Images; for further\n discussion of using non-TEI XML vocabularies such as SVG within a TEI\n document, see section 22.8.2 Combining TEI and Non-TEI Modules).\n\nAs printed, the Comenius text exhibits three kinds of alignment.\n \n   The English and Latin portions are printed in two\n   parallel columns, with corresponding phrases, (represented above by\n   seg elements), more or less next to each other.\n   Particular words or phrases are marked as terms in the\n   two languages by a change of rendition: the English text, which\n   otherwise uses black letter type throughout, has the words\n   The Study, a Student,\n   Studies, and Books in\n   a roman font; in the Latin text, which is printed in roman, the\n   corresponding words (Museum,\n   Studiosus, Studiis,\n   and Libros) are all in italic.\n   Numbered labels appear within the text portions,\n   linking keywords to each other and to sections of the picture.\n   These labels, which have been left out of the above encoding, are\n   attached to the first, third, and last segments in each language\n   quoted below, and also appear (rather indistinctly) within the\n   picture itself. Thus, the images of the study, the student, and his\n   books are each aligned with the correct term for them in the two\n   languages. \n   \nThe first kind of alignment might be represented by using the\ncorresp attribute on the seg element. The second\nkind might be represented by using the gloss and term\nmechanism described in section 3.4.1 Terms and Glosses. The third kind of\nalignment might be represented using pointers embedded within the\ntexts, for example:\nbibliography\n\nWe choose however to use\nthe link element, since this provides a more efficient way of\nrepresenting the three-way alignment between English, Latin, and picture\nwithout redundancy.\n  \nThis map, of course, only aligns whole segments and image portions,\nsince these are the only parts of our encoding which bear identifiers\nand can therefore be pointed to. To add to it the alignment between\nthe typographically distinct words mentioned above, new elements must\nbe defined, either within the text itself or externally by using stand\noff techniques. Encoding these word pairs as term\nand gloss, although intuitively obvious, requires a\nnon-trivial decision as to whether the Latin text is glossing the\nEnglish, or vice versa. Tagging all the marked words as term\navoids the difficult decision, but might be thought by some encoders\nto convey the wrong information about the words in question. Simply\ntagging them as additional embedded seg elements with\nidentifiers that can be aligned like the others is also a possibility.\n\nThese solutions all require the addition of further markup to the text. This\nmay pose no problems, or it may be infeasible, for example because the text is\nheld on a read-only medium. If it is not feasible to add more markup\nto the original text, some form of stand-off markup will be\nneeded. Any item within the text that can be pointed to using the\nvarious pointer schemes discussed in this chapter may be used, not\nsimply those which rely on the existence of an xml:id\nattribute. Suppose our example had been\nmore lightly tagged, as follows:\n  bibliography\nTo express the same alignment mentioned above, we could use an\nXPath expression to identify the required ab elements:\n  \nIn the absence of any markup around individual substrings of\nthe element content, the string-range pointer scheme discussed in 16.2.4.7 string-range() may also be helpful: for example, to indicate that the words\nStudies and Studiis\ncorrespond, we might express the link between them as follows:\n  \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAIE#SAIE\">16.6 Identical Elements and Virtual Copies</a>","content":"\n16.6 Identical Elements and Virtual Copies\nThis section introduces the notion of a virtual element,\nthat is, an element which is not explicitly present in a text, but the\npresence of which an application can infer from the encoding supplied.\nIn this section, we are concerned with virtual elements made by simply\ncloning existing elements. In the next section (16.7 Aggregation), we\ndiscuss virtual elements made by aggregating existing elements. \nProvided\n  that explicit elements are available to represent the parts or\n  places to be linked, then the global linking attributes\n  sameAs and copyOf may be used to encode \nthis kind of equivalence:\n  \n    <att.global.linking> provides a set of attributes for hypertextual linking.\n  \n\nIt is useful to be able to represent the fact that one element of\ntext is identical to others, for analytical purposes, or (especially if\nthe elements have lengthy content) to obviate the need to repeat the\ncontent. For example, consider the repetition of the date\nelement in the following material:\nbibliography\nSuppose now that we wish to encode the fact that the second\ndate element above has identical content to the first. The\nsameAs attribute is provided for this purpose. Using it, we\ncould recode the last line of the above example as follows:\nbibliography\nThe sameAs attribute may be used to document the fact\nthat two elements have identical content. It may be regarded as a\nspecial kind of link. It should only be attached to an element with\nidentical content to that which it targets, or to one the content of which\nclearly designates it as a repetition, such as the word\nrepeat or bis in the\nrepresentation of the chorus of a song, the second time it is to be\nsung. The relation specified by the sameAs attribute is\nsymmetric: if a chorus is repeated three times and each repetition\nbears a sameAs attribute indicating the first occurrence of\nthe element concerned, it is implied that each chorus is identical,\nand there is no need for the first occurrence to specify any of its\ncopies.\nThe copyOf attribute is used in a similar way to\nindicate that the content of the element bearing it is identical to\nthat of another. The difference is that the content is not itself\nrepeated. The effect of this attribute is thus to create a\nvirtual copy of the element indicated. Using this\nattribute, the repeated date in the first example above could be\nrecoded as follows:\n  \nAn application program should replace whatever is the actual content\nof an element bearing a copyOf attribute with the content of\nthe element specified by it. If the content of the element specified\nincludes other elements, these will become embedded within the element\nbearing the attribute. Care must be taken to ensure that the document\nis valid both before and after this embedding takes\nplace. If, for example, the element bearing a copyOf\nattribute requires a mandatory sub-component, then this component must\nbe present (though possibly empty), even though it will be replaced by\nthe content of the targetted element.\nThe following example demonstrates how the copyOf\nattribute may be used in conjunction with the seg element to\nhighlight the differences between almost identical repetitions:\n\nbibliography\n\nFor further examples of the use of this attribute, see 16.8 Alternation and 19.3 Another Tree Notation."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAAG#SAAG\">16.7 Aggregation</a>","content":"\n16.7 Aggregation\nBecause of the strict hierarchical organization of elements, or for\nother reasons, it may not always be possible or desirable to include\nall the parts of a possibly fragmented text segment within a single\nelement. In section 16.1.4 Intermediate Pointers we introduced the notion of\nan intermediate pointer as a way of pointing to discontinuous segments\nof this kind. In this section we first describe another way of linking\nthe parts of a discontinuous whole, using a set of linking attributes,\nwhich are made available for any tag by following the procedure\ndescribed at the beginning of this chapter. We then describe how the\nlink element may be used to aggregate such segments, and\nfinally introduce the join element, which is a\nspecial-purpose linking element specifically for representing the\naggregation of parts, and the joinGrp for grouping\njoin elements.\nThe linking attributes for aggregation are next and\nprev; each of these attributes has a single identifier as its\nvalue:\n<att.global.linking> provides a set of attributes for hypertextual linking.\nIt is recommended that the elements indicated by these attributes be of the same type as the element bearing them.\n  \nThe join element is also a member of the class of att.pointing elements, and so may carry any of the\nattributes of that class; for the list, see section 16.1 Links.\nHere is the material on which we base our first illustration of the\nuse of these mechanisms. Our problem is to represent the s-units\nidentified below as qs3 and qs4 as a single (but discontinuous) whole:\nbibliography\n\n\nUsing the prev and next attributes, we can\nlink the s-units with identifiers qs3 and qs4, either singly or doubly as follows:\n\n\n\nDouble linking of the two s-units, as illustrated by the last of these\nencodings, is equivalent to specifying a link element:\n  \nSuch a link element must carry a type\nattribute with a value of join to specify that the link is\nto be understood as joining its targets into a single aggregate.\nThe join element is equivalent to a link element of\ntype join.\n\nUnlike the link element, the join element can\nadditionally specify information about the virtual element which it\nrepresents, by means of its result attribute. And finally,\nunlike the link element, the position of a join\nelement within a text is significant: it must be supplied at a position\nwhere the element indicated by its result attribute would be\ncontextually legal.\n<join> identifies a possibly fragmented segment of text, by pointing at the possibly discontiguous elements which compose it.<joinGrp> groups a collection of join elements and possibly pointers.\nTo conclude the above example, we now use a join element to\nrepresent the virtual sentence formed by the aggregation of s1 and s2:\n  \nAs a further example, consider the following list of authors' names.\nThe object of the join element here is to provide another\nlist, composed of those authors from the larger list who happen to\ncome from Heidelberg:\nbibliography\nThe following example shows how join can be used to\nreconstruct a text cited in fragments presented out of order. The poem\nbeing remembered (an unusual translation of a well-known poem by Basho)\nruns When the old pond / gets a new frog, / it's a new pond.\nbibliography\nAs with other forms of link, a grouping element joinGrp\nis available for use when a number of join elements of the\nsame kind co-occur. This avoids the need to specify the\nresult attribute for each join if they are all of\nthe same type, and also allows us to restrict the domain within which\ntheir target elements are to be found, in the same way as for\nlinkGrp elements (see 16.1.3 Groups of Links). Like a\njoin, a joinGrp may appear only where the elements\nrepresented by its contents are legal. Thus if we had created many\njoin tags of the sort just described, we could group them\ntogether, and require that their components are all contained by an\nelement with the identifier MFKFhungry as\nfollows:\n  \n\nThe join element is useful as a means of representing\nnon-hierarchic structures (as further discussed in chapter 20 Non-hierarchical Structures). It may also be used as a convenient way of representing a\nvariety of analytic units, like the span and interp\nelements discussed in chapter 17 Simple Analytic Mechanisms. As an example, consider\nthe following famous Zen koan:\n\nZui-Gan called out to himself every day, Master.\nThen he answered himself, Yes, sir.\nAnd then he added, Become sober.\nAgain he answered, Yes, sir.\nAnd after that, he continued, do not be deceived by\nothers.\nYes, sir; yes, sir, he replied.\nSuppose now that we wish to represent an interpretation of the above\npassage in which we distinguish between the various\nvoices adopted by Zui-Gan. In the\nfollowing encoding, the who attribute has been used for this\npurpose; its value on each occasion supplies a pointer to the\nvoice to which each speech is attributed. (For convenience in\nthis example, we use simply the first occurrence of the names used for\neach voice as the target for these pointers.) Note also that we add\nxml:id attributes to each distinct speech fragment, which\nwe can then use to link the material\nspoken by each voice:\nbibliography\nHowever, by using the join element, we can directly\nrepresent the complete speech attributed to each voice:\nbibliography\nNote the use of the desc child element within the two\njoins making up the q element here. These enable us\nto  document the speakers of the two virtual q elements\nrepresented by the join elements; this is necessary because the\nthere is no  way of specifying the attributes\nto be associated with a virtual element, in particular there is no way\nto specify a\nwho value for them.\nSuppose now that xml:id attributes, for whatever\nreasons, are not available. Then ptr elements may be created\nusing any of the methods described in section 16.2.4 TEI XPointer Schemes. \nThe xml:id attributes of\nthese elements may now be specified by the\ntarget attribute on the join elements.\nbibliography\n The extended pointer with identifier\nrzuiq2, for example, may be read as the first\nq in the first p, within the sixth div1\nelement of the current document.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAAT#SAAT\">16.8 Alternation</a>","content":"\n16.8 Alternation\nThis section proposes elements for the representation of alternation.\nWe say that two or more elements are in exclusive\nalternation if any of those elements could be present in a text,\nbut one and only one of them is; in addition, we say that those elements\nare mutually exclusive. We say that the elements are in\ninclusive alternation if at least one (and possibly more)\nof them is present. The elements that are in alternation may also be\ncalled alternants.\nThe need to mark exclusive alternation arises frequently in text\nencoding. A common situation is one in which it can be determined that\nexactly one of several different words appears in a given location, but\nit cannot be determined which one. One way to mark such an exclusive\nalternation is to use the linking attribute exclude. Having\nmarked an exclusive alternation, it can sometimes later be determined\nwhich of the alternants actually appears in the given location. To\npreserve the fact that an alternation was posited, one can add the\nlinking attribute select to a tag which hierarchically\nencompasses the alternants, which points to the one which actually\nappears. To assign responsibility and degree of certainty to the\nchoice, one can use the certainty tag described in\nchapter 21 Certainty, Precision, and Responsibility. Also see that chapter for further discussion of\ncertainty in general.\nThe exclude and select attributes may be used\nwith any element assuming that they have been declared following the\nprocedure discussed in the introduction to this chapter.\n \n   <att.global.linking> provides a set of attributes for hypertextual linking.\n\nA more general way to mark alternation, encompassing both exclusive\nand inclusive alternation, is to use the linking element alt.\nThe description and attributes of this tag and of the associated\ngrouping tag altGrp are as follows. These elements are also\nmembers of the att.pointing class and therefore\nhave all the attributes associated with that class.\n<alt> identifies an alternation or a set of choices among elements or passages.<altGrp> groups a collection of alt elements and possibly pointers.\nTo take a simple hypothetical example, suppose in transcribing a\nspoken text, we encounter an utterance that we can understand either as\nWe had fun at the beach today. or as We had sun at\nthe beach today. We can represent the exclusive alternation of\nthese two possibilities by means of the exclude attribute as\nfollows.\nbibliography\nIf it is then determined that the speaker said fun,\nnot sun, the encoder could amend the text by deleting the\nalternant containing sun and the exclude\nattribute on the remaining alternant. Alternatively, the encoder could\npreserve the fact that there was uncertainty in the original\ntranscription by retaining the alternants, and assigning the\nwe.fun value to the select attribute value on the div element that\nencompasses the alternants, as in:\nbibliography\nThe above alternation (including the select attribute)\ncould be recoded by assigning the exclude attributes to tags\nthat enclose just the words or even the characters that are mutually\nexclusive, as in:9\nbibliography\nbibliography\nNow suppose that the transcriber is uncertain whether the first word\nin the utterance is We or Lee, but is\ncertain that if it is Lee, then the other uncertain word\nis definitely fun and not sun. The three\nutterances that are in mutual exclusion can be encoded as follows.\nbibliography\nThe preceding example can also be encoded with exclude\nattributes on the word segments We, Lee,\nfun, and sun:\nbibliography\nThe value of the select attribute is defined as a list of\nidentifiers; hence it can also be used to\nnarrow down the range of alternants, as in:\nbibliography\nThis is interpreted to mean that either the first or the third\nu element tag appears, and is thus equivalent to just the alternation\nof those two tags:\nbibliography\nThe exclude attribute can also be used in case there is\nuncertainty about the tag that appears in a certain position. For\nexample, the occurrence of the word May in the s-unit\nLet's go to May can be interpreted, in the absence of\nother information, either as a person's name or as a date. The\nuncertainty can be rendered as follows, using the exclude\nattribute.\nbibliography\nNote the use of the copyOf attribute discussed in\nsection 16.6 Identical Elements and Virtual Copies; this avoids having to repeat the content of the\nelement whose correct tagging is in doubt.\nThe copyOf and the exclude attributes also\nprovide for a simple way of indicating uncertainty about exactly where a\nparticular element occurs in a document.10\n\nFor example suppose that a particular div2\nelement appears either as the third and last of the div2\nelements within the first div1 element in the body of a\ndocument, or as the first div2 of the second div1.\nOne solution would be to record the div2 in its entirety in the\nfirst of these positions, and a virtual copy of it in the second, and\nmark them as excluding each other as follows:\n  \nIn this case, the select attribute, if used, would appear on\nthe body element.\nMutual exclusion can also be expressed using a link; the\nfirst example in this section can be recoded by removing the\nexclude attributes from the u elements, and adding a\nlink element as follows:11\nbibliography\nNow we define the specialized linking element alt, making\nit a member of the class att.pointing, and\nassigning it a mode attribute, which can have either of the\nvalues excl (for exclusive) or incl (for\ninclusive). Then the following equivalence holds:\n = \n\nThe preceding link element may therefore be recoded as the\n  following alt element. \nAnother attribute that is defined specifically for the alt\nelement is weights, which is to be used if one wishes to assign\nprobabilistic weights to the targets (alternants). Its\nvalue is a list of numbers, corresponding to the targets, expressing the\nprobability that each target appears.  If the alternants are mutually exclusive, then\nthe weights must sum to 1.0.\nSuppose in the preceding example that it is equiprobable whether\nfun or sun appears. Then\nthe alt element that represents the alternation may be stated\nas follows: \nThe assignment of a weight of 1.0 to one target (and weights of 0\nto all the others) is equivalent to selecting that target. Thus the\nfollowing encoding is equivalent to the second example at the beginning\nof this section.\nbibliography\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \nThe sum of the weights for alt mode=\"incl\" tags ranges from 0% to\n(100 × k)%, where k is the number of targets. If the sum is 0%, then\nthe alternation is equivalent to exclusive alternation; if the sum is\n(100 x k)%, then all of the alternants must appear, and the situation is\nbetter encoded without an alt tag.\n\nIf it is desired, alt elements may be grouped together in\nan altGrp element, and attribute values shared by the\nindividual alt elements may be identified on the\naltGrp element. The targFunc attribute defaults to\nthe value first.alternant next.alternant. \n\nTo illustrate, consider again the example of a transcribed\nutterance, in which it is uncertain whether the first word is\nWe or Lee, whether the\nthird word is fun or\nsun, but that if the first word is\nLee, then the third word is\nfun. Now suppose we have the following\nadditional information: if we occurs, then the\nprobability that fun occurs is 50% and that\nsun occurs is 50%; if\nfun occurs, then the probability that\nwe occurs is 40% and that\nLee occurs is 60%. This situation can be\nencoded as follows.\n\nbibliography\nAs noted above, when the mode attribute on an\nalt has the value incl, then each weight states\nthe probability that the corresponding alternative occurs,  given that at least one of the other alternatives occurs.\n\nFrom the information in this encoding, we can determine that the\nprobability is about 28.5% that the utterance is We had fun at the\nbeach today, 28.5% that it is We had sun at the beach\ntoday, and 43% that it is Lee had fun at the beach\ntoday.\nAnother very similar example is the following regarding the text of a\nBroadway song. In three different versions of the song, the same line\nreads Her skin is tender as a leather glove,  Her skin is\ntender as a baseball glove, and Her skin is tender as Dimaggio's\nglove.12\nIf we wish to express this textual variation using the alt\nelement, we can record our relative confidence in the readings\nDimaggio's (with probability 50%), a\nleather (25%), and a baseball (25%).\nLet us extend the example with a further (imaginary) variation,\nsupposing for the sake of the argument that the next line is variously\ngiven as and she bats from right to left (with\nprobability 50%) or now ain't that too damn bad (with\nprobability 50%). Using the alt element, we can express the\nconviction that if the first choice for the second line is correct, then\nthe probability that the first line contains Dimaggio's\nis 90%, and each of the others 5%; whereas if the second choice for the\nsecond line is correct, then the probability that the first line\ncontains Dimaggio's is 10%, and each of the others is\n45%. This can be encoded, with an altGrp element containing a\ncombination of exclusive and inclusive alt elements, as follows.\n\nbibliography\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SASO#SASO\">16.9 Stand-off Markup</a>","content":"\n16.9 Stand-off Markup\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SASO#SASO\">16.9 Stand-off Markup</a><a class=\"breadcrumb\" href=\"p5.xml?id=SASOin#SASOin\">16.9.1 Introduction</a>","content":"\n\t16.9.1 Introduction\n\n    Most of the mechanisms defined in this chapter rely to a\n    greater or lesser extent on the fact that tags in a marked-up\n    document can both assert a property for a span of text which they\n    enclose, and assert the existence of an association between\n    themselves and some other span of text elsewhere. In stand-off\n    markup, there is a clear separation of these two behaviours: the\n    markup does not directly contain any part of the text, but\n    instead includes it by reference. One specific mechanism\n    recommended by these Guidelines for this purpose is the standard\n    XInclude mechanism defined by the W3C; another is to use pointers\n    as demonstrated elsewhere in this chapter. \n\n\tThere are many reasons for using stand-off markup: the source\n\t  text might be read-only so that additional markup cannot be added,\n    or a single text may need to be marked up\n    according to several hierarchically incompatible schemes, or a single\n    scheme may need to accommodate multiple hierarchical ambiguities, so that\n    a single markup tree is not the most faithful representation of the\n    source material.\n\tThis section describes a generic mechanism for expressing\n\tall kinds of markup externally as stand-off tags,\n\tfor use whenever it is appropriate; and a place in the TEI\n\tstructure (standOff) to contain certain common kinds\n\tof stand-off markup.\n\t\n\tThroughout this section the following terms will be systematically used in\n\tspecific senses.\n\t\n\t    source document\n\t  a document to which the stand-off markup refers (a source document can be either XML or\n\t  plain text); there may be more than one source document.\n\t    internal markup\n\t  markup that is already present in an XML source document\n\t    stand-off markup\n\t  markup that is either outside of the source document\n\t  and points in to it to the data it describes, or is pointed\n\t  at by the data that refers to it; or alternatively is in\n\t  another part of the source document and points elsewhere\n\t  within the document to the data it describes, or is pointed\n\t  at by data elsewhere that refers to it.\n\t    external document\n\ta document that contains stand-off markup that points to a different, source document\n\t  internalize\n\tthe action of creating a new XML document with external markup and data integrated with the\n\tsource document data, and possibly some source document markup as well\n\t  externalize\n\ta process applied to markup from a pre-existing XML\n\tdocument, which splits it into two documents, an XML\n\t(external) document containing some of the markup of the\n\toriginal document, and another (source) XML document\n\tcontaining whatever text content and markup has not been\n\textracted into the stand-off document; if all markup has been\n\texternalized from a document, the new source may be a plain\n\ttext document\n\t\n\tThe three major requirements satisfied by this scheme for stand-off markup are:\n\t\n\t  any valid TEI markup can be either internal or\n\t  external,\n\t  external markup can be internalized by\n\t  applying it to the document content by either\n\t  substituting the existing markup or adding to it,\n\t  to form a valid TEI document, and\n\t  the external markup itself specifies whether\n\tan internalized document is to be created by substituting\n\tthe existing internal markup or by adding to\n\tit.\n\t\n\t\n\t\n\t\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SASO#SASO\">16.9 Stand-off Markup</a><a class=\"breadcrumb\" href=\"p5.xml?id=SASOov#SASOov\">16.9.2 Overview of XInclude </a>","content":"\n  16.9.2 Overview of XInclude \n   Stand-off markup which relies on the inclusion of virtual\n   content is adequately supported by the W3C XInclude recommendation,\n   which is also recommended for use by these Guidelines.13 XInclude defines a namespace\n   (http://www.w3.org/2001/XInclude), which in\n   these Guidelines will be associated with the prefix\n   xi:, and exactly two elements,\n   xi:include and xi:fallback. XInclude relies on\n   the XPointer\n   framework discussed elsewhere in this chapter to point to the\n   actual fragments of text to be internalized. Although XInclude only\n   requires support for the element()\n   scheme of XPointer, these Guidelines permit the use of any of the\n   pointing schemes discussed in section 16.2 Pointing Mechanisms.\n \n\tXInclude is a W3C recommendation which specifies a syntax for the\n\t  inclusion within an XML document of data fragments placed in\n\t  different resources. Included resources can be either plain\n\t  text or XML. XInclude instructions within an XML document\n\t  are meant to be replaced by a resource targetted by a\n\t  URI, possibly augmented by an XPointer that identifies the\n\t  exact subresource to be included. \n\n\t  The xi:include element uses the href attribute to specify the location of\n\t  the resource to be included; its value is an URI containing,\n\t  if necessary, an XPointer. Additionally, it uses the parse attribute (whose only valid values\n\t  are text and xml) to specify whether\n\t  the included content is plain text or an XML fragment, and\n\t  the encoding attribute to provide a hint, when\n\t  the included fragment is text, of the character encoding of\n\t  the fragment. An optional xi:fallback element is\n\t  also permitted within an xi:include; it specifies\n\t  alternative content to be used when the external resource\n\t  cannot be fetched for some reason. Its use is not however\n\t  recommended for stand-off markup.\n\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SASO#SASO\">16.9 Stand-off Markup</a><a class=\"breadcrumb\" href=\"p5.xml?id=SASOso#SASOso\">16.9.3 Stand-off Markup in TEI</a>","content":"\n\n\t16.9.3 Stand-off Markup in TEI\n\n     The operations of internalizing and externalizing markup are\n     very useful and practically important. XInclude processing as\n     defined by the W3C is internalization of one or more\n     source documents' content into a stand-off document. TEI use of\n     XInclude for stand-off markup enables use of XInclude-conformant\n     software to perform this useful operation. However,\n     internalization is not clearly defined for all stand-off files,\n     because the structure of the internal and external markup trees\n     may overlap. In particular, when an external markup document\n     selects a range that overlaps partial elements in the source\n     document, it is not clear how the semantics of internalization\n     (inclusion) should work, since partial elements are not XML\n     objects.14 XInclude defines a semantics\n     for this case that involves only complete elements.\n\nWhen a range selection partially overlaps a number of elements in a\nsource document, XInclude specifies that the partially overlapping\nelements should be included as well as all completely overlapping\nelements and characters (partially overlapping characters are not\npossible). The effect of this is that elements that straddle the start\nor end of a selected range will be included as wrappers for those of\ntheir children that are completely or partially selected by the\nrange. For example, given the following source document:\n \nbibliography\n  and the following external document:\n\n  the resulting document after XInclude processing of this external document\n  would be:\n\n  The result of the inclusion is two paragraph elements, while\n  the original range designated in the source document\n  overlapped two paragraph fragments. \n\n\nThe semantics of XInclude require the creation of well-formed XML results even though\n  the  pointing mechanisms it uses do not necessarily\n  respect the hierarchical structure of XML documents, as in\n\tthis case. While\n  this is a good way to ensure that internalization is always\n  possible, it has implications for the use of XInclude as a\n  notation for the description of overlapping\n  markup structures.\n  \n  \n  When overlapping hierarchies need to be represented\n  for a single document, each hierarchy must be represented by a\n  separate set of XInclude tags pointing to a common source\n  document. This sort of structure corresponds to common\n  practice in work with linguistic text corpora. In such corpora, each\n  potentially overlapping hierarchy of elements for the text is\n  represented as a separate stream of stand-off\n  markup. Generally the source text contains markup for\n the smallest significant units of analysis in the corpus,\n  such as words or morphemes, this information and its markup\n  representing a layer of common information that is shared by\n  all the various hierarchies. As a way of organizing the\n  representation of complex data, this technique generally\n  allows a large number of xml:id attributes to be\n  attached to the shared elements, providing robust anchors for\n  links and facilitating adjustments to the source document\n  without breaking external documents that reference it.\n  \n\t\n\n  Any tag can be externalized by\n\n\t  removing its content and replacing it with an \n\t  xi:include element that contains an XPointer\n\t  pointing to the desired content.\n\tFor instance the following portion of a TEI document:\nbibliography\n\t  can be externalized by placing the actual text in a separate\n\t  document, and providing exactly the same markup with the\n\t  xi:include elements:\n\t  \t\n\t Source.xml\n\t\n\t  \t\n\t  External.xml\n\t\n\n\n\n\tPlease note that this specification requires that the\n\tXInclude namespace declaration is present in all cases. The\n\txi:fallback element contains text or XML fragments to\n\tbe placed in the document if the inclusion fails for any\n\treason (for instance due to inaccessibility of an external\n\tresource). The xi:fallback element is optional; if it\n\tis not present an XInclude processor must signal a fatal error\n\twhen a resource is not found. This is the preferred behaviour\n\tfor use with stand-off markup. These Guidelines recommend\n\tagainst the use of xi:fallback for stand-off\n\tmarkup.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SASO#SASO\">16.9 Stand-off Markup</a><a class=\"breadcrumb\" href=\"p5.xml?id=SASOva#SASOva\">16.9.4 Well-formedness and Validity of Stand-off Markup</a>","content":"\n\t16.9.4 Well-formedness and Validity of Stand-off Markup\n\tThe whole source fragment\n\t  identified by an XInclude element, as well as any markup\n\t  therein contained is inserted in the position specified, and\n\t  an XInclude processor is required to ensure that the resulting\n\t  internalized document is\n\t  well-formed. This has obvious implications when the external\n\t  document contains XML markup. A plain text source document\n\t  will always create a well-formed\n\t  internalized document. \n\tWhile a TEI customization may permit\n xi:include elements in various places in a TEI document\n instance, in general these Guidelines suggest that validity be\n verified after the resolution of all the xi:include\n elements.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SASO#SASO\">16.9 Stand-off Markup</a><a class=\"breadcrumb\" href=\"p5.xml?id=SASOfr#SASOfr\">16.9.5 Including Text or XML Fragments</a>","content":"\n\t16.9.5 Including Text or XML Fragments\n\tWhen the source text is plain text the overall form of the\n\t  XPointer pointing to it is of minimal importance. The form\n\t  of the XPointer matters considerably, on the other hand,\n\t  when the source document is XML.\n\tIn this case, it is rather important to distinguish whether\n\t  we intend to substitute the source XML with the new one, or\n\t  just to add new markup to it. The XPointers used in the\n\t  references can express both cases.\n\tA simple way is to make sure to select only textual data in\n\t  the XPointer. For instance, given the following\n\t  document:\n\t  \t\n\t  Source.xhtml\nbibliography\t  \nthe expression\nrange(element(/1/2/1.0),element(/1/2/11.1)) will select\nthe whole poem, text content and div elements\nand hypertext links (NB: in XPointer whitespace-only text\nnodes count).\nOn the contrary, the expressions\nxpointer(//text()/range-to(.)) and\nxpointer(string-range(//text(),\"To\")/range-to(//text(),\"few.\")\nwill only select the text of the poem, with no markup inside.\n\tThus, the following could be a valid stand-off document for\n\t  the Source.xhtml document:\n\t  \t\n\t  External2.xml\n\t  \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SASOstdf#SASOstdf\">16.10 The standOff Container</a>","content":"\n    \n    16.10 The standOff Container\n    The standOff element is intended to hold content that does not fit well in the\n        text (e.g. because it is not transcribed from the source), nor in the\n        teiHeader (e.g. because it is not metadata about the source or transcription).\n      Examples include contextual information about named entities (typically encoded using\n        listBibl, listOrg, listNym, listPerson, or\n        listPlace), annotations indicating the morphosyntactic features of a text, and\n      annotations commenting on or associating parts of a text with additional information. \n        <standOff> Functions as a\n  container element for linked data, contextual information, and\n  stand-off annotations embedded in a TEI document.\n      \n    \n\n    As a member of model.resource, standOff may occur as a\n      child of TEI (or teiCorpus). If the metadata that describes the\n        standOff is largely the same as the metadata that describes the associated resource\n      (e.g., the transcribed text in text), then the standOff and the encoded\n      associated resource may appear as children of the same TEI element. The example below\n      has a transcription with placename elements in the text linked to a list of place elements in the\n      standOff section.\n      bibliography\n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SASOann#SASOann\">16.11 Annotations</a>","content":"\n    16.11 Annotations\n    The annotation element's structure is based on the Web\n        Annotation Data Model (WADM). A Web Annotation may have one or more targets, which are\n      URIs, and zero or more bodies, which may be either URIs or embedded text. A Web Annotation may\n      also contain metadata about the annotation, such as the creator, creation and modification\n      dates, and license information. The annotation element implements a subset of WADM,\n      using TEI elements and attributes to encode the same information, with a focus on annotating\n      TEI documents. Targets are represented using the target attribute on\n        annotation. URI bodies are represented using ref or ptr and\n      embedded text bodies using note. Lifecycle and license information may be given using\n        respStmt, revisionDesc, and licence. \n        <listAnnotation> contains a list of annotations, typically encoded as\n      annotation, annotationBlock, or note, possibly organized with\n    nested listAnnotation elements.\n        <annotation> represents an annotation following the Web\n      Annotation Data Model.\n      \n\n    TEI annotations are, in general, intended to capture the output of processes that annotate\n      TEI texts without altering the text and markup in the text. They allow this kind of\n      output to be represented directly in TEI, and thus to be processed using the same toolchains\n      as the texts they annotate. A named entity recognition workflow might use annotation,\n      for example to associate names in the text with person elements instead of attempting\n      to rewrite the TEI text using inline persName. Projects may wish to use this\n      mechanism to layer information onto a TEI text in case where using inline elements might\n      result in complicated markup.\n\n    The example below illustrates how stand-off annotations can be used to connect words in a\n      text with place elements in a list. The words Gallia and Galliae in the\n      edition are connected by an annotation in the standOff section which points to them\n      using string-range() pointers and references the definition of the place (also in\n      the standOff section). If the set of annotations were created in a process separate\n      from the creation of the transcription and then imported into the transcription document, then\n      wrapping them in a TEI element with its own teiHeader providing metadata for\n      the annotations might be advisable. bibliography\n    \n\n    \n  Functions as a\n  container element for linked data, contextual information, and\n  stand-off annotations embedded in a TEI document.\n  \n  \n  Schematron\n    \n      <sch:assert xmlns:sch=\"http://purl.oclc.org/dsdl/schematron\" test=\"@type or not(ancestor::tei:standOff)\">This\n      <sch:name/> element must have a @type attribute, since it is\n      nested inside a <sch:name/>\n</sch:assert>\n    \n  \n  \n    This example shows an encoding of morphosyntactic features similar to the encoding\n    system used by ISO 24611 (MAF).\n    \n  \n  \n    This example shows an encoding of contextual\n    information which is referred to from the main text.\n    bibliography\n  \n  \n    16.10 The standOff Container\n  \n\n    \n  contains a list of annotations, typically encoded as\n      annotation, annotationBlock, or note, possibly organized with\n    nested listAnnotation elements.\n  \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    The enclosed annotations may use the general-purpose note element; or, for\n      annotations pertaining to transcriptions of speech, the special-purpose\n        annotationBlock element; or the annotation element, which is intended to\n      map cleanly onto the Web Annotation Data Model.\n  \n  \n    16.10 The standOff Container\n  \n\n    \n  represents an annotation following the Web\n      Annotation Data Model.\n  \n  \n  \n    \n    \n    \n  \n  \n    bibliography\n  \n  \n    bibliography\n  \n  \n    16.10 The standOff Container\n  \n\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAAN#SAAN\">16.12 Connecting Analytic and Textual Markup</a>","content":"\n16.12 Connecting Analytic and Textual Markup\nIn chapters 17 Simple Analytic Mechanisms and 18 Feature Structures and elsewhere,\nprovision is made for analytic and interpretive markup to be represented\noutside of textual markup, either in the same document or in a different\ndocument. The elements in these separate domains can be connected,\neither with the pointing attributes ana (for\nanalysis) and inst (for\ninstance), or by means of link and\nlinkGrp elements. Numerous examples are given in these\nchapters.\n  Another more specific form of annotation is available through the TEI ruby element and its\n    children, described in detail in 3.4.2 Ruby Annotations.\n  \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=SA#SA\">16 Linking, Segmentation, and Alignment</a><a class=\"breadcrumb\" href=\"p5.xml?id=SAref#SAref\">16.13 Module for Linking, Segmentation, and Alignment</a>","content":"\n  16.13 Module for Linking, Segmentation, and Alignment\n  The module described in this chapter makes available the\n  following components:\n  \n    Linking, Segmentation, and Alignment\n    Linking, segmentation, and alignment\n    \n    \n    \n    \n    \n  \n  The selection and combination of modules to form a TEI schema is\n  described in 1.2 Defining a TEI Schema.\n  \n  \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AI#AI\">17 Simple Analytic Mechanisms</a>","content":"17 Simple Analytic Mechanisms\n\nThis chapter describes a module for associating simple analyses and\ninterpretations with text elements.  We use the term\nanalysis here to refer to any kind of semantic or\nsyntactic interpretation which an encoder wishes to attach to all or\npart of a text. Examples discussed in this chapter include familiar\nlinguistic categorizations (such as clause, morpheme,\npart-of-speech etc.) and  characterizations of narrative\nstructure (such as theme, reconciliation etc.). The\nmechanisms presented in this chapter are simpler but less powerful\nthan those described in chapter 18 Feature Structures.\n\t\nSection 17.1 Linguistic Segment Categories introduces elements which can be used\nto  characterize\ntext segments according to the familiar linguistic categories of\nsentence or s-unit, clause,\nphrase, word, morpheme,\ncharacter, and punctuation mark. These elements represent special cases of the\ngeneric seg element described in section 16.3 Blocks, Segments, and Anchors.\nSection 17.2 Global Attributes for Simple Analyses introduces an additional global\nattribute which allows passages of text to be associated with\nspecialized elements representing their interpretation. \nThese interpretative elements (span and\ninterp) are described in detail in section 17.3 Spans and Interpretations.\nThey allow the encoder to specify an analysis as a series of names and\nassociated values,1 each such pair\nbeing linked to one or more stretches of text, either directly, in the\ncase of spans, or indirectly, in the case of interpretations.\nFinally section 17.4 Linguistic Annotation revisits the topic of linguistic\nanalysis, and illustrates how these interpretative mechanisms may be\nused to associate simple linguistic analysis with text segments.\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AI#AI\">17 Simple Analytic Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=AILC#AILC\">17.1 Linguistic Segment Categories</a>","content":"17.1 Linguistic Segment Categories\nIn this section we introduce specialized linguistic segment\ncategory elements which may be used to represent the segmentation of\na text into the traditional linguistic categories of\nsentence, clause, phrase,\nword, morpheme, \ncharacters, and punctuation marks.\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AI#AI\">17 Simple Analytic Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=AILC#AILC\">17.1 Linguistic Segment Categories</a><a class=\"breadcrumb\" href=\"p5.xml?id=AILCW#AILCW\">17.1.1 Words and Above</a>","content":"17.1.1 Words and Above\nAlthough different languages have very different rules about what\nconstitutes a word or a\nsentence, these remain generally useful concepts.\nIn this section we discuss elements provided for marking up linguistic\nunits down to the word level, however defined. \n<s> contains a sentence-like division of a text.<cl> represents a grammatical clause.<phr> represents a grammatical phrase.<w> represents a grammatical (not necessarily orthographic) word.\n\n \nAs members of the att.segLike class, these\nelements all share the following attribute:\n<att.segLike> provides attributes for elements used for arbitrary segmentation.\nThey also share attributes from att.typed:\n<att.typed> provides attributes that can be used to classify or subclassify elements in any way.\n\nThese elements are also all members of the model.segLike class, which is a subclass of\nmodel.phrase. They may thus appear anywhere\nthat text is permitted within a document, when the module defined by\nthis chapter is included in a schema.\n\nThe w and pc elements belong to the att.linguistic class, which supplies \nattributes that may be used for lightweight linguistic annotation (see section 17.4.2 Lightweight Linguistic Annotation below): \n<att.linguistic> provides a set of attributes concerning linguistic features of tokens, for usage within token-level elements, specifically w and pc in the analysis module.\nAdditionally, these elements also have access to the att.lexicographic.normalized class, \nwhich supplies the attributes norm and orig: the former for handling \nnormalization/regularization at the word level, the latter providing the original form if the element \ncontent is modernized or regularized. Note that these attributes are a local (word-level) alternative \nto the robust mechanism that uses the choice, orig, and reg elements, \ndiscussed in section 3.5.2 Regularization and\nNormalization and in chapter 12 Critical Apparatus. The choice-based\nmechanism is the default descriptive device, while the norm and orig attributes are used to\nhandle a subset of normalizations in linguistic contexts where a single sequence of tokens is a priority, for example \nin historical corpora subject to linguistic analysis. It needs to be stressed that the simplified attribute-based \nmechanism is not meant to be used for editorial interventions.\n2 \n\nThe s element may be used simply to segment a text\nend-to-end  into a series of non-overlapping segments, referred to here\nand elsewhere as s-units, or sentences.\nbibliography\n\nThe s element is more restricted both in its content and its\nusage than the generic seg element. The seg unit may\ncontain anything which can appear within a paragraph: thus it may be\nused to enclose members of the model.inter\nclass (such as bibl or list) as well as other phrase\nelements; the s unit may only contain phrase-level elements\nor text. Also, unlike seg elements, s elements\nshould not be nested within each other.3 The seg element is intended for\nuse as a generic segmentation element, the specific function of which\nmay be indicated by its type attribute; the other members\nof the class are more specialized. Thus, the s, cl, and\nphr elements may be thought of as equivalent to seg\ntype=\"s-unit\", seg\ntype=\"clause\" and seg type=\"phrase\", respectively,\nbut with the above-mentioned restrictions.\n\nThe s element may be further subdivided into\nclauses, marked with the cl element,\nas in the following example:\nbibliography\n\nClauses may be further divided into phr elements in the same\nway. A text may be segmented directly into clauses, or into\nphrases, with no need to include segmentation at a higher level as well.\n \nFor verse texts, the overlapping of metrical and syntactic structure\nrequires that special care be given to representing both using an\nelement hierarchy. One simple approach is to split the syntactic phrases\ninto fragments when they cross verse boundaries, reuniting them \nwith the part attribute:\nbibliography\n\nAnother approach is to use the next and prev\nattributes defined in the additional module for linking (chapter 16 Linking, Segmentation, and Alignment):\nbibliography\nOther methods are also possible; for discussion, see chapter 20 Non-hierarchical Structures.\n \nThe type attribute on linguistic segment categories can\nbe used to provide additional interpretative information about the\ncategory. The function attribute on the cl and\nphr elements can be used to provide additional information\nabout the function of the category. Legal values for these\ntwo attributes are not defined by these Guidelines, but should be\ndocumented in the segmentation element of the\nencodingDesc element within the document's header. \nA general approach to the encoding of linguistic categories for \nparts of a text is discussed in section 17.4 Linguistic Annotation below.\n\nUsing traditional terminology, these attributes provide a convenient\nway of specifying, for example, that the clause from whence it\ncame is a relative clause modifying another, or that  the\nphrase by the U.S. Supreme Court is a prepositional\npost-modifier:\nbibliography\nbibliography\n \nSegmentation into clauses and phrases can, of course, be combined.\nSuch detailed encodings as the following may require careful\nformatting if they are to be easily readable however.\nbibliography\nThis style of markup may introduce spurious new lines and blanks\ninto the text. If the original layout is important, it should be\nexplicitly encoded, using such facilities as the lb element,\nthe global rend or rendition attributes, etc.\n\n\nThe w, m, and c elements are identical\nin meaning to the seg element with a type\nattribute of w, m, or c respectively, and may\noccur wherever seg is permitted to occur. However, their\ncontent is more constrained than seg: for example,\nthe w element should only contain w, m,\nc elements or pc elements, or plain text; the m element should\ncontain only c or pc elements or plain text; both\nthe c and pc elements\nshould contain only plain text, most often only a single character or\na sequence of graphemes to be treated as a single\ncharacter. Consequently, while these more specific elements can be\ntranslated directly into typed seg elements, the reverse is\nnot necessarily the case.\n \nThe restriction on the content of the w element in\nparticular requires that a certain care must be exercised when using it,\nespecially in relation to the use of other tags that one may think of as\nword level, but which are in fact defined as phrase\nlevel. Consider the problem of segmenting an occurrence of the\nmentioned element as a word.\nbibliography\nThe first of the following two encodings is legitimate; the second is\nnot, since the mentioned element is not part of the content\nmodel of the w element:\nbibliography\nbibliography\nOn the other hand, both of the following encodings are\nlegitimate:\nbibliography\nbibliography\nThe first encoding describes the citing of a phrase. The second\ndescribes a phrase which consists of something mentioned.\n\n\nThe w element  carries additional attributes\nwhich may be of use in many indexing or analytic applications. The \nlemma attribute may be used to specify  the\nlemma, that is the head- or uninflected form of an\ninflected verb or noun, for example:\nbibliography\n\nIn some situations it may be more convenient to use the\nlemmaRef pointer attribute than to supply an explicit\nuninflected form. This attribute assumes the existence of a list of\nuninflected forms, for example in an online lexicon, with which\nindividual w entries can be associated using the usual TEI\npointer mechanisms. Assuming that a\nstandardized lexicon for Latin is available at the location\nhttp://lexicon.org/latin.xml, we might for example revise the above\nexample as:\nbibliography\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AI#AI\">17 Simple Analytic Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=AILC#AILC\">17.1 Linguistic Segment Categories</a><a class=\"breadcrumb\" href=\"p5.xml?id=AIPC#AIPC\">17.1.2 Below the Word Level</a>","content":"17.1.2 Below the Word Level\nIt is sometimes helpful to markup explicitly sub-word components\nsuch as morphemes, characters, or punctuation.\n<m> represents a grammatical morpheme.<c> represents a character.<pc> contains a character or string of characters regarded as constituting a\n  single punctuation mark.\n\n \n\nThe m element is used to mark up morphologically\nidentified segmentation below the word level. Analogous to the\nlemma attribute for w, there is a\nbaseForm attribute for the m element, \nwhich may be used to indicate the base form of\nan inflected morpheme; where appropriate, m elements may also\nbe organized hierarchically:\nbibliography\n\nThe distinction between m and w is provided as a\nconvenience only; it may not be appropriate for all linguistic\ntheories, nor is it meaningful in all languages. The intention is to\nprovide a means for those cases where it is considered helpful to distinguish\nlexical from sub-lexical tokens, to complement the more general\nmechanism already provided by the seg element, using which\nthe above example could alternatively be marked up as follows:\nbibliography\nSee section 17.4.2 Lightweight Linguistic Annotation for an alternative to using type in such contexts.\n\n\nThere is a substantial\nlinguistic difference between characters like letters or diacritics\nand punctuation marks. The former are used to\nconstruct meaningful units like morphemes or words. The latter are\nfunctionally independent units acting at the level of syntactic\nunits. A word may consist of a single letter (for example I in English),\nbut this  does not mean that we should use c instead of w\nto mark it up. \n\nThe c (character) element should be used to mark up any non-lexical\ncharacter, whether this appears within a word, or outside it. In the\nfollowing example, the encoder wishes to indicate that the letters are\nnot to be regarded as words:\n\n    bibliography\n\nThe c element may be used for\nindividual characters occurring within a w or m\nelement which it is desired to distinguish for some reason, as in the\nfollowing examples:\n    bibliography\nThis encoding represents the constituents of a common abbreviation,\nbut does not indicate that it is in fact an abbreviation; the\nam element (11.3.1.2 Abbreviation and Expansion) may be preferred for the\nlatter purpose.  Generally speaking, the use of c use to mark\nnon-lexical punctuation marks is deprecated, since the pc\nelement is provided specifically to distinguish these.\n\n\nThe pc (punctuation character) element should be used to mark up\ncharacters which are specifically regarded as providing punctuation,\nrather than constituting parts of a word. It may be particularly\nuseful when transcribing older written materials, in which an encoding\nof the original punctuation may be useful for interpretive or analytic\npurposes, in much the same way as an encoding of the original\northography may be. For example, in the following extract from\na Bodleian Library musical manuscript\n\n\n\ntwo different punctuation marks are used to distinguish kinds of pause\nin the text. The punctus elevatus (which resembles an inverted\nsemicolon) is not a Unicode character, but may still be encoded using\nthe g element. As further described in chapter 5 Characters, Glyphs, and Writing Modes, this element points to a definition for the intended\ncharacter which may be stored either locally or elsewhere.\n    bibliography\n\nThe pc element carries special attributes to record\nanalyses of the functional behaviour or classification of the\npunctuation mark it contains. The unit attribute may be\nused, as on the milestone element to name the kind of unit\nwhich the punctuation mark delimits, for example a paragraph or\nsection. The pre attribute may be used to indicate whether\nthe punctuation precedes or follows the unit it delimits. The\nforce attribute indicates the strength of the association\nbetween the punctuation mark and its adjacent word. \nIn the following example, the paragraph marker (¶) has been tagged\nas a strong punctuation mark, preceding the unit it marks, which is\nnamed para:\n    bibliography\n\n\nA similar encoding can be used for hyphenation:\n  \nbibliography\n  \n    Refer to 3.2.2 Hyphenation for a discussion of the motivations for \n  explicitely recording the presence of hyphens.\n\n\nThe w, m, c, and pc elements can be used\ntogether to give a fairly detailed low-level grammatical analysis of\ntext. For example, consider the following segmentation of the English\nS-unit I didn't do it.\nbibliography\n\n \nThis segmentation, crude as it is, succeeds in representing the idea\nthat did occurring  as a morphological\ncomponent of  the word\ndidn't has something in common with the word do. A further advantage of segmenting the text down\nto this level is that it becomes relatively simple to associate each\nsuch segment with a more detailed formal analysis, for example by\nproviding a baseform, or morphological analysis at whichever level is appropriate. \nThis matter is taken up in detail in section 17.4 Linguistic Annotation. \n \n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AI#AI\">17 Simple Analytic Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=AIATTS#AIATTS\">17.2 Global Attributes for Simple Analyses</a>","content":"17.2 Global Attributes for Simple Analyses\nWhen the module described by this chapter is selected, an\nadditional attribute is defined for all elements:\n<att.global.analytic> provides additional global attributes for associating specific analyses or\ninterpretations with appropriate portions of a text.\nThe ana attribute may be specified for any element.\nIts effect is to associate the element with one or more others\nrepresenting an analysis or interpretation of it. Its target should be\none of the elements described in the section 17.3 Spans and Interpretations below,\nor some other interpretative element such as note, on which \nsee section 3.9 Notes, Annotation, and Indexing or fs,\non which see chapter 18 Feature Structures. If a hierarchical form of classification \nis desired then it may point to category element at a suitable level in a\ntaxonomy see 2.3.7 The Classification Declaration.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AI#AI\">17 Simple Analytic Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=AISP#AISP\">17.3 Spans and Interpretations</a>","content":"17.3 Spans and Interpretations\nThe simplest mechanisms for attaching analytic notes in some\nstructured vocabulary to particular passages of text are provided by the\nspan and interp elements, and their associated\ngrouping elements spanGrp and interpGrp.\n<span> associates an interpretative annotation directly with a span of text.<spanGrp> collects together span tags.<interp> summarizes a specific\n  interpretative annotation which can be linked to a span of\n  text.<interpGrp> collects together a set of related interpretations which share responsibility or type.\n\nThese elements are all members of the class att.interpLike, and thus share the following attribute:\n<att.interpLike> provides attributes for elements which represent a formal analysis or interpretation.\n  They also inherit the following attributes from att.global.responsibility:\n  \n<att.global.responsibility> provides attributes indicating the agent\n    responsible for some aspect of the text, the markup or \n    something asserted by the markup, and the degree of certainty \n    associated with it.\n\nThe type  attribute of the\nspan and interp elements may be used to indicate\nthat the annotations are of specific types, for example thematic or\nstructural. The annotation itself is supplied as the content of the\nspan or interp element. \nIn the case of the span element, the span of text being\nannotated is indicated by values of the from,\nto or target attributes, used in combination as\nfollows. If only the from attribute is supplied, then the\nspan is coterminous with the element indicated by its value; if both\nfrom and to are supplied, the span runs from the\nstart of the element indicated by the from attribute up to\nthe end of the element indicated by the to attribute; if\nthe target attribute is used, the span is defined by\naggregating the contents of the (possibly non-contiguous) elements pointed to by its values. It\nis an error to supply only the to attribute; to supply more\nthan one pointer value for either to or from\nattributes; or to supply either of these in conjunction with the\ntarget attribute. \nIn the case of interp (see below), the span is indicated by a\npointer from a link element or some similar mechanism.  The\nresp attribute indicates the annotator responsible for this annotation.\n\nThe span element provides a simple way of indicating such\nfeatures as phrasal verbs in a linguistic analysis, as in this\nexample:\nbibliography\nHere the two components of the span follow each other, so the\nto and from attributes may be used. The\nsame effect could however be achieved by using the target\nattribute:\nbibliography\nThis second approach might be cumbersome if the number of components\nto be combined is very large. It is however essential if the \ncomponents do not follow each other, as in this example:\nbibliography\n\nThe span element can be used for any kind of\nannotation. In this example it is used in a narratological analysis:\nbibliography\n \nThe span element may, as in this example, be placed in the\ntext near the textual span it is associated with. Alternatively, it  may be placed\nelsewhere in the same or a different document. Where several\nspan or interp elements share the same attributes,\nfor example having the same responsibility or type, it may be\nconvenient to group them within a spanGrp or interpGrp element as follows:\nbibliography\n \nSpans may also be used to represent structural divisions within \na narrative, particularly when these do not coincide with the\nstructure implied by the element structure. Consider the following narrative:\n\nSigmund, the son of Volsung, was a king in Frankish country.\nSinfiotli was the eldest of his sons, the second was Helgi, the\nthird Hamund.\nBorghild, Sigmund's wife, had a brother named —\nBut Sinfiotli, her stepson, and — both wooed the same woman\nand Sinfiotli killed him over it.4\nAnd when he came home, Borghild asked him to go away,\nbut Sigmund offered her weregild, and she was obliged to accept it.\nAt the funeral feast Borghild was serving beer.  She took poison, a big\ndrinking horn full, and brought it to Sinfiotli.  When Sinfiotli looked\ninto the horn, he saw that poison was in it, and said to Sigmund This\ndrink is cloudy, old man. Sigmund took the horn and drank it off.\nIt is said that Sigmund was hardy and that poison did him no harm,\ninside or out.  And all his sons could tolerate poison on their skin.\nBorghild brought another horn to Sinfiotli, and asked him to drink, and\neverything happened as before.  And a third time she brought him a horn,\nand reproachful words as well, if he didn't drink from it.  He spoke\nagain to Sigmund as before.  He said Filter it through your mustache,\nson! Sinfiotli drank it off and at once fell dead.\n\nSigmund carried him a long way in his arms and came to a long,\nnarrow fjord, and there was a small boat there and a man in it.  He\noffered to ferry Sigmund over the fjord.  But when Sigmund carried the\nbody out to the boat, it was fully laden.  The man said Sigmund should\ngo around the fjord inland.  The man pushed the boat out and then\nsuddenly vanished.\n\nKing Sigmund lived a long time in Denmark in the kingdom of\nBorghild, after he married her.  Then he went south to Frankish lands,\nto the kingdom he had there.  Then he married Hiordis, the daughter of\nKing Eylimi.  Their son was Sigurd.  King Sigmund fell in a battle with\nthe sons of Hunding.  And then Hiordis married Alf, the son of King\nHialprec.  Sigurd grew up there as a boy.\n\nSigmund and all his sons were tall and outstanding in their\nstrength, their growth, their intelligence, and their accomplishments.\nBut Sigurd was the most outstanding of all, and everyone who knows about\nthe old days says he was the most outstanding of men and the noblest of\nall the warrior kings.\n \nA structural analysis of this text, dividing it into narrative units\nin a pattern shared with other texts from the same literature, might\nlook like this:\nbibliography\n\nNote the use of an empty anchor element to provide a target for\nthe reconciliation unit which is normally part of\nthe narrative pattern but which is not realized in the text shown.\n \n\nThe same analysis may be expressed with the interp element\ninstead of the span element; this element provides attributes\nfor recording an interpretive category and its value, as well as the\nidentity of the interpreter, but does not itself indicate which passage\nof text is being interpreted; the same interpretive structures can thus\nbe associated with many passages of the text.  The association between\ntext passages and interp elements should be made either by\npointing from the text to the interp element with the\nana attribute defined in section 17.2 Global Attributes for Simple Analyses, or by\npointing at both text and interpretation from a link element,\n\nas described in chapter 16 Linking, Segmentation, and Alignment.\n \nTo encode the first example above using interp, it is\nnecessary to create a text element which contains—or corresponds to—the third, fourth, and fifth orthographic sentences (S-units) in\nthe paragraph.  This can be done either with the seg element,\ndescribed in 16.3 Blocks, Segments, and Anchors, or the join\nelement, described in 16.7 Aggregation.  The resulting\nelement can then be associated with the interp element using the\nana attribute described in section 17.2 Global Attributes for Simple Analyses.  We illustrate using the seg element.\nbibliography\n \nThe second example above can be recoded using interp and\ninterpGrp tags in a similar manner. The interpretation\nitself can be expressed in an interpGrp element, which would\nreplace the spanGrp in the example shown above:\nbibliography\n \nAny of these interp elements may be linked to the text either\nby means of the ana attribute, or by means of link\nelements.  Using the ana attribute (on seg elements\nintroduced specifically for this purpose), the text would be encoded as\nfollows:\nbibliography\n \nThe linkage may also be accomplished using a linkGrp element,\nwhose content is a set of link elements which point to each\ninterpretive element and its corresponding text unit.  This method does\nnot require the use of the ana attribute on the text\nunits.\n\n \nOne obvious advantage of using interp rather than\nspan elements for the Sigmund text is that the interp\nelements can be reused for marking up other texts in the same document,\nwhereas the span elements cannot.  On\nthe other hand, the use of interp elements may require the\ncreation of special text elements not otherwise needed (e.g. the\nseg and the join in the revised encoding of the text),\nwhereas the use of span elements does not.\n \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AI#AI\">17 Simple Analytic Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=AILA#AILA\">17.4 Linguistic Annotation</a>","content":"17.4 Linguistic Annotation\nBy linguistic annotation we mean here any annotation\ndetermined by an analysis of linguistic features of the text, excluding\nas borderline cases both the formal structural properties of the text\n(e.g. its division into chapters or paragraphs) and descriptive\ninformation about its context (the circumstances of its production, its\ngenre or medium).  The structural properties of any TEI-conformant text\nshould be represented using the structural elements discussed elsewhere\nin this chapter and in chapters 3 Elements Available in All TEI Documents, 4 Default Text Structure, \n6 Verse, 7 Performance Texts, 8 Transcriptions of Speech, 9 Dictionaries, \nand 15 Language Corpora. The contextual\nproperties of a TEI text are fully documented in the TEI header, which\nis discussed in chapter 2 The TEI Header, and in section 15.2 Contextual Information.\n \nOther forms of linguistic annotation may be applied at a number of\nlevels in a text.  A code (such as a word-class or part-of-speech\ncode) may be associated with each word or token, or with groups of such\ntokens, which may be continuous, discontinuous, or nested.  A code may\nalso be associated with relationships (such as cohesion) perceived as\nexisting between distinct parts of a text.  The codes themselves may\nstand for discrete and non-decomposable categories, or they may represent\nhighly articulated bundles of textual features.  Their function may be\nto place the annotated part of the text somewhere within a narrowly\nlinguistic or discoursal domain of analysis, or within a more general\nsemantic field, or any combination drawn from these and other domains.\n \nThe manner by which such annotations are generated and attached to\nthe text may be entirely automatic, entirely manual or a mixture.  The\nease and accuracy with which analysis may be automated may vary with the\nlevel at which the annotation is attached.  The method employed should\nbe documented in the interpretation element within the encoding\ndescription of the TEI header, as described in section 2.3.3 The Editorial Practices Declaration.\nWhere different parts of a language corpus have used\ndifferent annotation methods, the decls\nattribute may be used to indicate the fact, as further\ndiscussed in section 15.3 Associating Contextual\nInformation with a Text.\n\n  \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AI#AI\">17 Simple Analytic Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=AILA#AILA\">17.4 Linguistic Annotation</a><a class=\"breadcrumb\" href=\"p5.xml?id=AILAGD#AILAGD\">17.4.1 Linguistic Annotation by Means of Generic TEI Devices</a>","content":"17.4.1 Linguistic Annotation by Means of Generic TEI Devices\nAs one example of such types of analysis, consider the following\nsentence, taken from the Lancaster/IBM Treebank\nProject (1 ).\n The victim's friends told police that Kruger drove\ninto the quarry and never surfaced.  Our discussion focuses\non the way that this sentence might be analysed using the CLAWS system\ndeveloped at the University of Lancaster but exactly the same\nprinciples may be applied to a wide variety of other systems.5\nOutput from the system consists of a segmented and tokenized version\nof the text, in which word class codes have been associated with each\ntoken. CLAWS offers outputs in a variety of non-XML and XML formats:\nfor example, the simplest format for the sample sentence would be:\n\nThis may be easily transformed into an equivalent TEI XML representation:\n\nbibliography \n\nAlthough the names used for the attribute values here may have some\nsignificance for the human reader (AT0 for\narticle, NN1 for singular noun,\nNN2 for plural noun, etc.) they are\narbitrary codes, used in this case as pointers to other elements which\ndefine their significance more precisely.  If the codes are considered\nto be atomic, then the interp element described\nin section 17.3 Spans and Interpretations might be used to supply brief definitions\nin the header:\nbibliography \n\nIf the codes are considered to\nbe compositional (for example that NN1 and NN2\nhave something in common, namely their noun-ness, which\nthey do not share with, say, VVD), then this\ncompositionality may be most clearly expressed using a mechanism based\non the fs element defined in chapter 18 Feature Structures.\n\nThis approach requires the text to be fully segmented, using the\nlinguistic segment elements described in section 17.1 Linguistic Segment Categories, so that the scope of the ana attribute\nused to point to each interpretation is clearly defined. A further\nanalysis into phrase and clause elements can be superimposed on the\nword and morpheme tagging in the preceding illustration. For example,\nCLAWS provides the following constituent analysis of the sample\nsentence (the word class codes have been deleted):\n\nTreating the labels on the brackets as phrase or clause\ninterpretations, this analysis of the structure of the example sentence\ncan be combined with the word class analysis and represented as follows\n(the symbol V&\"/> representing the first part of a coordinate\nphrase, has been replaced by V1, and V+, representing the\nsecond part, has been replaced by V2).\nbibliography\n \nThis approach requires the definition of further interp\n(or fs) elements to provide targets for the pointers used to\nrepresent the constituent analysis:\nbibliography\n\nAlternatively, a stand-off representation for\nthese analyses might be created using the linkGrp element.\nIn this case, each linguistic segment to be annotated must be supplied with its own\nxml:id attribute:\n\nbibliography \n\nEach segment-interpretation pair may now be represented by means of a\nlink element inside an appropriate linkGrp element:\n\n\nEach linguistic segment so far discussed has been well-behaved with\nrespect to the basic document hierarchy, having only a single parent.\nMoreover, the segmentation has been complete, in that each part of the\ntext is accounted for by some segment at each level of analysis, without\ndiscontinuities or overlap.  This state of affairs does not of\ncourse apply in all types of analysis, and these Guidelines provide a\nnumber of mechanisms to support the representation of discontinuities or\nmultiple analyses.  A brief overview of these facilities is provided in\nchapter 20 Non-hierarchical Structures; also see 16 Linking, Segmentation, and Alignment.  These mechanisms\nall depend to a greater or lesser degree on the use of pointing\nelements of various kinds.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AI#AI\">17 Simple Analytic Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=AILA#AILA\">17.4 Linguistic Annotation</a><a class=\"breadcrumb\" href=\"p5.xml?id=AILALW#AILALW\">17.4.2 Lightweight Linguistic Annotation</a>","content":"17.4.2 Lightweight Linguistic Annotation\nWhile these Guidelines offer a variety of means to add linguistic information to textual\nunits and much of that has been presented above, two kinds of use cases and two groups of\nusers call for a dedicated set of specialized attributes to carry linguistic\ninformation. One relevant use case is where basic linguistic information gets added to an\nexisting resource, in which generic attributes such as type or ana\nhave already been used to encode other categorizations and analyses. The other group of\nusers and use cases involves corpus linguists and resources built from scratch as lightly\nannotated language corpora. In the latter kind of projects, energy and person-hours are not\ndevoted to careful literary analysis and hand-encoding of the relevant phenomena, but rather\nto the analysis of the completed resources, and therefore the phase of resource-building must be\nquick and relatively effortless, requiring minimal structural markup, well-established\ncontainers for grammatical information, and a standardized way of filling them in.\n\nThe aims defined above can be realized by means of lightweight linguistic annotation using\nattributes that belong to the att.linguistic class: \n<att.linguistic> provides a set of attributes concerning linguistic features of tokens, for usage within token-level elements, specifically w and pc in the analysis module.\n\n    \nThe essence of lightweight linguistic annotation is that the basic grammatical information\nis encapsulated at the word level, together with the orthographic shape of the word. This\nhas clear advantages for automatic processing but, on the other hand, this form of data\nencapsulation also imposes restrictions on the extent of information that can be encoded,\nessentially limiting it to a single tokenization and lemmatization schema, a single tagset,\nand a subset of the possible analyses (out from potentially many guesses at the\npart-of-speech or morphosyntactic descriptions, single values have to fit into the existing\nattributes). Another important principle that this kind of annotation is sensitive to is the\nneed for (near) homomorphism between the assumed tokenization (division of the text stream\ninto minimal units) and the division into minimal syntactic units (word forms,\nin the terminology of ISO Morpho-Syntactic Framework, ISO 246116), because it is the former that results\nfrom the process of tokenization, but the latter that can be lemmatized and meaningfully\ndescribed by means of grammatical features. Where tokens are only minimally mismatched with\nword forms, various repair strategies can be used (e.g., recursing w to capture\nmulti-token compounds or using att.fragmentable to point at\ndisjoint tokens). Beyond that, more robust TEI mechanisms, based on standoff principles and\nfeature structures, should replace lightweight annotation.\n    \n\nThe basic grammatical information encoded by means of \natt.linguistic is sufficient for the purpose of enhancing queries or improving\nthe analysis of search results by, for example, making it possible to distinguish between\nthe noun cut and the identically spelled verb\ncut in English, and further between e.g. the present-tense form of\ncut and its past-tense or past-participial forms. For the former\ncontrast, the part-of-speech (pos) attribute should be used, whereas the latter\nmay use pos and/or msd attributes, depending on the annotation\nvocabulary adopted for the project in question. The various grammatical realizations of a\nsingle dictionary word can be captured by means of the attribute lemma, which\nprovides a common label for them. For example, English verbs are typically lemmatized as the\nbase form (also called bare infinitive), so the value of lemma for\nthe verbal forms write, writes,\nwrote, written, and\nwriting is typically write.\n    \nTogether with the span-delimiting elements mentioned in this section, such as s,\ncl, or phr, lightweight grammatical annotation may be used to build\nbasic syntactic constituency structures, where hierarchical information is expressed through\nspan containment rather than by relations among tree nodes. This is however the limit of\nthis kind of annotation: for the purpose of describing true constituency or dependency\nsyntactic structures, one needs to turn to more robust mechanisms offered by the TEI, which\nmay involve graph description (see chapter 19 Graphs, Networks, and Trees) or standoff techniques (see\nsection 16.9 Stand-off Markup), and where grammatical labels may need to be annotated by\nmeans of feature structures (see chapter 18 Feature Structures).\n    \nSome of the above-mentioned robust methods will also prove handy in cases where more than one tagset \n(label inventory) is used to label the words, or where automatic morphological analysis yields multiple \npossibilities (for example, the form cutting is morphologically ambiguous between \nverbal, adjectival, and nominal) and needs to be followed by (often also automatic) disambiguation in \nmorphosyntactic contexts, with varying probabilities that may also need to be recorded together with their \ncorresponding part-of-speech and morphosyntactic values.\n    \nIt should be borne in mind that tokenization, lemmatization, part-of-speech identification, and \nmorphosyntactic labelling, especially when performed automatically, should in most cases be seen as \ninvolving pragmatic decisions, dictated by concrete practical goals, economy of description, or the \ndemands of particular analytic and/or visualization tools. It comes therefore as no surprise that \nnumerous alternative (and often conflicting) lemmatization strategies and tagsets exist, in use by \nvarious communities and various tools, and that they change with time (a case in point is the CLAWS \ntagset for English, with several versions that merge the part-of-speech and morphosyntactic information \nto various degrees).\n7 The nature and description of these systems is outside the scope of these \nGuidelines, but it has to be stressed that all the strategies adopted for linguistic annotation, \neven at the lightweight level of complexity, must be documented in the header of the \ngiven electronic resource, not only for the purpose of guaranteeing successful data interpretation and exchange, but \nalso for the sake of sustainability of the results of the given project.\n    \nThe last of the att.linguistic attributes, join, has the most text-technological\nflavour. It can be used to amend the loss of whitespace-related information in non-inline\nmarkup. \nCompare the following two listings. The first difference between them is in the\ntagset used (CLAWS-5 vs. CLAWS-7) and only serves to exemplify the need to document the\nchoice of descriptive vocabulary in the header, lest the encoded information is unreadable or\nconfusing. The second difference is the difference in the treatment of inter-token\nwhitespace, and it is here that the join attribute proves indispensable.\n    \nThe first example listing uses CLAWS-5 and inline annotation, where whitespace serves as\npart of the markup:\nbibliography\n    \nIn the second example, the attribute join is the only way to encode whether two\ntokens are adjacent or not: \nbibliography\nNote that projects will need to decide whether they want to redundantly encode full\ninformation on the adjacency of each token (in which case, the above listing should also\nhave join with the value right on the tokens\nvictim and surfaced, or whether information\non a single direction of adjacency is enough. Strategies vary, and it is important to\ndocument them in the TEI header.\nThe following example shows a German sentence Wir fahren in den\nUrlaub (We're going on vacation) annotated with all the attributes discussed\nabove.8\nbibliography\n\nThe final examples lay out a strategy for dealing with e.g. historical corpora where it is on\nthe one hand important to maintain a steady stream of token-level elements (w and\npc) for efficient processing, but, on the other hand, it is also important to\neither record the original spelling (when the corpus text is normalized) or to record the\nnormalized variants (when the element content of the corpus preserves the original\nspelling). The attribute class att.lexicographic.normalized can be used for that purpose:\n<att.lexicographic.normalized> provides attributes for usage within word-level elements in the analysis module and within lexicographic microstructure in the dictionaries module.\nThe first fragment below comes from \"Gottfried, Newe Welt Vnd Americanische Historien. Frankfurt/M., 1631\" \nencoded in the Deutsches Textarchiv and records normalized forms in the norm attribute.\n  bibliography  \nThe following example comes from the EarlyPrint project and uses the attribute orig to \nrecord the original spelling (note that the xml:id attributes have been removed for the \nsake of readability).\n  bibliography\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AI#AI\">17 Simple Analytic Mechanisms</a><a class=\"breadcrumb\" href=\"p5.xml?id=AILA#AILA\">17.4 Linguistic Annotation</a><a class=\"breadcrumb\" href=\"p5.xml?id=AILASP#AILASP\">17.4.3 Spoken Text</a>","content":"17.4.3 Spoken Text\nThe mechanisms proposed in this chapter may also be used to encode\nanalyses of an entirely different kind, for example discourse function.\nHere is an application of the span technique to record details of a sales\ntransaction in a spoken text.\nbibliography\nFor further discussion of the u (utterance) element and other\nelements recommended for transcriptions of spoken language,\nsee chapter 8 Transcriptions of Speech.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=AI#AI\">17 Simple Analytic Mechanisms</a><span class=\"breadcrumb\">17.5 Module for Analysis and Interpretation</span>","content":"\n  17.5 Module for Analysis and Interpretation\n  The module described in this chapter makes available the\n  following components:\n  \n    Analysis and Interpretation\n    Simple analytic mechanisms\n    \n    \n    \n    \n    \n  \n  The selection and combination of modules to form a TEI schema is\n  described in 1.2 Defining a TEI Schema.\n  \n  \n  \n  \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a>","content":"18 Feature Structures\n\nA feature structure is a general purpose data\nstructure which identifies and groups together individual\nfeatures, each of which associates a name with one or\nmore values.  Because of the generality of feature structures, they\ncan be used to represent many different kinds of information, but they\nare of particular usefulness in the representation of linguistic\nanalyses, especially where such analyses are partial, or\nunderspecified. Feature structures represent the\ninterrelations among various pieces of information, and their\ninstantiation in markup provides a metalanguage for the\ngeneric representation of analyses and interpretations.  Moreover,\nthis instantiation allows feature values to be of specific\ntypes, and for restrictions to be placed on the values\nfor particular features, by means of feature system\ndeclarations.1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FSor#FSor\">18.1 Organization of this Chapter</a>","content":"18.1 Organization of this Chapter\nThis chapter is organized as\nfollows.  Following this introduction, section 18.2 Elementary Feature Structures and the Binary\nFeature Value\nintroduces the elements fs and f, used to represent\nfeature structures and features respectively, together with the\nelementary binary feature value.  Section 18.3 Other Atomic Feature Values introduces elements for representing other kinds of\natomic feature values such as symbolic,\nnumeric, and string values.  Section 18.4 Feature Libraries and Feature-Value Libraries introduces the notion of predefined\nlibraries or groups of features or feature values along\nwith methods for referencing their components.  Section 18.5 Feature Structures as Complex Feature Values introduces complex values, in particular\nfeature-structures as values, thus enabling feature structures to be\nrecursively defined.  Section 18.7 Collections as Complex Feature Values discusses other\ncomplex values, in particular values which are collections, organized\nas sets, bags, and\nlists. Section 18.8 Feature Value Expressions discusses how the\noperations of alternation, negation, and collection of feature values\nmay be represented.  Section 18.9 Default Values discusses ways of\nrepresenting underspecified, default, or uncertain values.  Section\n18.10 Linking Text and Analysis discusses how analyses may be linked to other\nparts of an encoded text.  Section 18.11 Feature System Declaration describes the\nfeature system declaration, a construct which provides\nfor the validation of typed feature structures.\n\nFormal definitions for\nall the elements introduced in this chapter are provided in section\n18.12 Formal Definition and Implementation. \n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FSBI#FSBI\">18.2 Elementary Feature Structures and the Binary\nFeature Value</a>","content":"18.2 Elementary Feature Structures and the Binary\nFeature Value\nThe fundamental elements used to represent a feature structure\nanalysis are f (for feature), which represents a\nfeature-value pair, and fs (for feature\nstructure), which represents a structure made up of such\nfeature-value pairs.  The fs element has an optional\ntype attribute which may be used to represent typed feature\nstructures, and may contain any number of f elements.  An\nf element has a required name attribute and an\nassociated value. The value may be simple: that is, a\nsingle binary, numeric, symbolic (i.e. taken from a restricted set of\nlegal values), or string value, or a collection of such values,\norganized in various ways, for example, as a list; or it may be\ncomplex, that is, it may itself be a feature structure, thus providing\na degree of recursion. Values may be under-specified or defaulted in\nvarious ways.  These possibilities are all described in more detail in\nthis and the following sections.\n \nFeature and feature-value representations (including feature\nstructure representations) may be embedded directly at any point in an\nXML document, or they may be collected together in special-purpose\nfeature or feature-value libraries. The components of\nsuch libraries may then be referenced from other feature or\nfeature-value representations, using the feats or\nfVal attribute as appropriate. \nWe begin by considering the simple case of a feature structure\nwhich  contains binary-valued features only. The following three XML elements  are\nneeded to  represent such a feature structure: \n\n<fs> represents a feature structure, that is, a\n  collection of feature-value pairs organized as a\nstructural unit.\n<f> represents a feature value specification, that\n  is, the association of a name with a value of any of several different types.\n<binary> represents the value part of a feature-value specification which can contain either\n  of exactly two possible values.\n\nThe attributes feats and the fVal are not\ndiscussed in this section: they provide an alternative way of\nindicating the content of an element, as further discussed in  section\n18.4 Feature Libraries and Feature-Value Libraries. \n \nAn fs element containing f elements with binary\nvalues can be straightforwardly used to encode the matrices\nof feature-value specifications for phonetic segments, such as the\nfollowing for the English segment [s].\n \n \nThis representation may be encoded in XML as follows:\n\nNote that fs elements may have an optional type\nattribute to indicate the kind of feature structure in question,\nwhereas f elements must have a name attribute to\nindicate the name of the feature. Feature structures need not be\ntyped, but features must be named.\n\n\nSimilarly, the fs element\nmay be empty, but the f element must specify its value either\ndirectly as content, by means of the fVal attribute, or\nimplicitly by reference to a feature system declaration.\nThe restriction of specific features to specific types of values\n(e.g.  the restriction of the feature strident\nto a binary value) requires additional validation, as does any\nrestriction on the features available within a feature structure of a\nparticular type (e.g. whether a feature structure of type\nphonological segment necessarily contains a\nfeature voiced). Such validation may be carried\nout at the document level, using special purpose processing, at the\nschema level using additional validation rules, or at the declarative\nlevel, using an additional mechanism such as the feature-system\ndeclaration discussed in 18.11 Feature System Declaration.\nAlthough we have used the term binary for this kind\nof value, and its representation in XML uses values such as\ntrue and false (or, equivalently,\n1 and 0), it should be noted that such\nvalues are not restricted to propositional assertions. As this example\nshows, this kind of value is intended for use with any binary-valued\nfeature. \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FSSY#FSSY\">18.3 Other Atomic Feature Values</a>","content":"18.3 Other Atomic Feature Values\nFeatures may take other kinds of atomic value. In this section, we\ndefine elements which may be used to represent: symbolic\nvalues, numeric values, and string\nvalues. The module defined by this chapter allows for the\nspecification of additional datatypes if necessary, by extending the\nunderlying class model.featureVal.single. If this is done, it\nis recommended that only the basic W3C datatypes should be used; more\ncomplex datatyping should be represented as feature structures.\n\n<symbol> represents the value part of a feature-value specification\n  which contains one of a finite list of symbols.\n<numeric> represents the value part of a feature-value specification\n  which contains a numeric value or range.\n<string> represents the value part of a feature-value specification\n  which contains a string.\n \nThe symbol element is used for the value of a feature when\nthat feature can have any of a small, finite set of possible values,\nrepresentable as character strings.  For example, the following might\nbe used to represent the claim that the Latin noun form\nmensas\n(tables) has accusative case, feminine gender, and\nplural number:\n \nMore formally, this representation shows a structure in which three\nfeatures (case, gender, and\nnumber) are used to define morpho-syntactic properties of\na word. Each of these features can take one of a small number of\nvalues (for example, case can be nominative,\ngenitive, dative, accusative,\netc.)  and it is therefore appropriate to represent the values taken\nin this instance as symbol elements.  Note that, instead of\nusing a symbolic value for grammatical number, one could have named\nthe feature singular or plural and given it\nan appropriate binary value, as in the following example: \nWhether one uses a binary or symbolic value in situations like this is\nlargely a matter of taste. \nThe string element is used for the value of a\nfeature when that value is a string drawn from a very large or potentially\nunbounded set of possible strings of characters, so that it would be\nimpractical or impossible to use the symbol element.  The string\nvalue is expressed as the content of the string element,\nrather  than as an attribute value.  For example, one might encode a\nstreet address as follows:\n bibliography \nThe numeric element is used when the value of a feature is a\nnumeric value, or a range of such values.  For example, one might wish\nto regard the house number and the street\nname as different features, using an encoding like the following:\n bibliography \nIf the numeric value to be represented falls within a specific\nrange (for example an address that spans several numbers), the\nmax attribute may be used to supply an upper limit:\n bibliography \nIt is also possible to specify that the numeric value (or values)\nrepresented should (or should not) be truncated. For example, assuming\nthat the daily rainfall in mm is a feature of interest for some\naddress, one might represent this by an encoding like the following:\n  This  represents any of the infinite\nnumber of numeric values falling between 0 and 1.3; by contrast\n  represents only two possible values: 0 and 1.\n\nSome communities of practice, notably those with a strong computer-science \nbias, prefer to dissociate the information on the value of the given \nfeature from the specification of the data type that this value represents. \nIn such cases, feature values can be provided directly as textual content \nof f, with the assumption that the data type is specified by the \nschema. The following is an example taken from ISO 24612, presenting the \nsymbolic values for Active Voice and Simple Present Tense in the untyped \nform:bibliography\nAs noted above, additional processing is necessary to ensure that\nappropriate values are supplied for particular features, for example\nto ensure that the feature singular is not given a value\nsuch as symbol value=\"feminine\"/.  There are two\nways of attempting to ensure that only certain combinations of feature\nnames and values are used.  First, if the total number of legal\ncombinations is relatively small, one can predefine all of them in a\nconstruct known as a feature library, and then reference\nthe combination required using the feats attribute in the\nenclosing fs element, rather than give it explicitly.  This\nmethod is suitable in the situation described above, since it requires\nspecifying a total of only ten (5 + 3 + 2) combinations of features\nand values.  Similarly, to ensure that only feature structures\ncontaining valid combinations of feature values are used, one can put\ndefinitions for all valid feature structures inside a feature\nvalue library (so called, since a feature structure may be the\nvalue of a feature).  A total of 30 feature structures (5 × 3\n× 2) is required to enumerate all the possible combinations of\nindividual case, gender and number values in the preceding\nillustration.  We discuss the use of such libraries and their\nrepresentation in XML further in section 18.4 Feature Libraries and Feature-Value Libraries below.\n \nHowever, the most general method of attempting to ensure that only legal\ncombinations of feature names and values are used is to provide a\nfeature-system declaration discussed in 18.11 Feature System Declaration.\nWhether at the level of feature-system declarations, feature- and\nfeature-value libraries, or individual features, it is possible to\nalign both feature names and their values with standardized external\ndata category repositories such as ISOcat. 2 In the following example, both\nthe feature part_of_speech and its value\n#commonNoun are aligned with the respective definitions\nprovided by ISO DCR (Data Category\nRegistry), as implemented by ISOcat.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FSFL#FSFL\">18.4 Feature Libraries and Feature-Value Libraries</a>","content":"18.4 Feature Libraries and Feature-Value Libraries\nAs the examples in the preceding section suggest, the direct\nencoding of feature structures can be verbose.  Moreover, it is often\nthe case that particular feature-value combinations, or feature\nstructures composed of them, are re-used in different analyses. To reduce\nthe size and complexity of the task of encoding feature structures, one\nmay use the feats attribute of the fs element to point\nto one or more of the feature-value specifications for that element.   This indirect method of\nencoding feature structures presumes that the f elements are\nassigned unique xml:id values, and are collected together in\nfLib elements (feature libraries).  In the same way, feature\nvalues of whatever type can be collected together in fvLib elements\n(feature-value libraries). If a feature has as its\nvalue a feature structure or other value which is predefined in this way, the\nfVal attribute may be used to point to it, as discussed in\nthe next section. The following elements  are used for representing feature libraries and feature-value libraries:\n\n<fLib> assembles a library of f (feature) elements.\n<fvLib> assembles a library of reusable feature value elements\n  (including complete feature structures).\n \nFor example, suppose a feature library for phonological feature\nspecifications is set up as follows.\n\n \nThen the feature structures that represent the analysis of the\nphonological segments (phonemes) /t/, /d/,\n/s/, and /z/ may be defined as follows.\n   \n \nThe preceding are but four of the 128 logically possible fully\nspecified phonological segments using the seven binary features listed in\nthe feature library.  Presumably not all combinations of features\ncorrespond to phonological segments (there are no strident vowels, for\nexample).  The legal combinations, however, can be collected together,\neach one represented as an identifiable fs element within a\nfeature-value library, as in the following example:\n\n \nOnce defined, these feature structure values can also be reused.\nOther f elements may invoke them by reference, using the\nfVal attribute; for example, one might use them in a\nfeature value pair such as:  rather than expanding the hierarchy of the\ncomponent phonological features explicitly.  \nFeature structures stored in this way  may also be associated with\nthe text which they are intended to annotate, either by a link from the text\n(for example, using the TEI global ana attribute), or\nby means of stand-off annotation techniques (for example, using the TEI\nlink element): see further section 18.10 Linking Text and Analysis\nbelow.\n\nNote that when features or feature structures are linked to in this\nway, the result is effectively a copy of the item linked to into the\nplace from which it is linked. This form of linking should be distinguished from\nthe phenomenon of structure-sharing, where it is desired\nto indicate that some part of an annotation structure appears\nsimultaneously in two or more places within the structure. This kind\nof annotation should be represented using the vLabel element, as\ndiscussed in 18.6 Re-entrant Feature Structures below. \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FSST#FSST\">18.5 Feature Structures as Complex Feature Values</a>","content":"18.5 Feature Structures as Complex Feature Values\nFeatures may have complex values as well as atomic ones; the\nsimplest such complex value is represented by supplying an fs\nelement as the content of an f element, or (equivalently) by\nsupplying the identifier of an fs element as the value for\nthe fVal attribute on the f\nelement. Structures may be nested as deeply as appropriate, using this\nmechanism.  For example, an fs element may contain or point\nto an f element, which may contain or point to an fs\nelement, which may contain or point to an f element, and so\non.\nTo illustrate the use of complex values, consider the following\nsimple model of a word, as a structure combining surface form\ninformation, a syntactic category, and semantic information. Each word\nanalysis is represented as a fs type='word' element,\ncontaining three features named surface,\nsyntax, and semantics. The first of these\nhas an atomic string value, but the other two have complex values,\nrepresented as nested feature structures of types\ncategory and act respectively:\nbibliography\nThis analysis does not tell us much about the meaning of the\nsymbols verb or transitive. It might be\npreferable to replace these atomic feature values by feature\nstructures.  Suppose therefore that we maintain a feature-value\nlibrary for each of the major syntactic categories (N, V, ADJ, PREP):\n\n\nThis library allows us to use shortcut codes (N,\nV, etc.) to reference a complete definition for the\ncorresponding feature structure. Each definition may be explicitly\ncontained within the fs element, as a number of f\nelements. Alternatively, the relevant features may be referenced by\ntheir identifiers, supplied as the value of the feats\nattribute, as in these examples:\nbibliography\n\nThis ability to re-use feature definitions within multiple feature\nstructure definitions is an essential simplification in any realistic\nexample.  In this case, we assume the existence of a feature library\ncontaining specifications for the basic feature categories like the following:\n\n\nWith such libraries in place, and assuming the availability of\nsimilarly predefined feature structures for transitivity and\nsemantics, the preceding example could be considerably simplified:\nbibliography\nAlthough in principle the fVal attribute could  point to\nany kind of feature value, its use is not recommended for simple\natomic values. \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FSVAR#FSVAR\">18.6 Re-entrant Feature Structures</a>","content":"18.6 Re-entrant Feature Structures\nSometimes the same feature value is required at multiple places\nwithin a feature structure, in particular where the value is only\npartially specified at one or more places. The vLabel element is\nprovided as a means of labelling each such re-entrancy point:\n\n<vLabel> represents the value part of a feature-value specification\n  which appears at more than one point in a feature structure.\n\n\nFor example, suppose one wishes to represent noun-verb agreement as\na single feature structure. Within the representation, the feature\nindicating (say) number appears more than once. To represent the fact\nthat each occurrence is another appearance of the same feature (rather\nthan a copy) one could use an encoding like the following:\n\n\nIn the above encoding, the features named vb-num and\nnm-num exhibit structure sharing. Their values, given as\nvLabel elements, are understood to be references to the same\npoint in the feature structure, which is labelled by their\nname attribute. \nThe scope of the names used to label re-entrancy points is that of the\noutermost fs element in which they appear. When a feature\nstructure is imported from a feature value library, or referenced from\nelsewhere (for example by using the fVal attribute) the\nnames of any\nsharing points it may contain are implicitly prefixed by the identifier used\nfor the imported feature structure, to avoid name clashes. Thus, if\nsome other feature structure were to reference the fs element\n   given in the example above, for example in this way:  then\nthe labelled points in the example would be interpreted as if they had the\nname NVAL1. \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FSSS#FSSS\">18.7 Collections as Complex Feature Values</a>","content":"18.7 Collections as Complex Feature Values\nComplex feature values need not always be represented as feature\nstructures. Multiple values may also be organized as sets, bags or\nmultisets, or lists of atomic values of any type. The vColl\nelement is provided to represent such cases:\n\n<vColl> represents the value part of a feature-value specification\n  which contains multiple values organized as a set, bag, or list.\n\n\nA feature whose value is regarded  as a set, bag, or list may have\nany positive number of values as its content, or none at\nall, (thus allowing for representation of the empty set, bag, or list).\nThe items in a list are ordered, and need not be distinct. The items\nin a set are not ordered, and must be distinct. The items in a bag are\nneither ordered nor distinct. Sets and bags are thus distinguished\nfrom lists in that the order in which the values are specified does\nnot matter for the former, but does matter for the latter, while sets\nare distinguished from bags and lists in that repetitions of values do\nnot count for the former but do count for the latter.  \n\nIf no value is specified for the org attribute, the\nassumption is that the vColl defines a list of values. If the\nvColl element is empty, the assumption is that it represents\nthe null list, set, or bag. \nTo illustrate the use of the org attribute, suppose that\na feature structure analysis is used to represent a genealogical tree,\nwith the information about each individual treated as a single feature\nstructure, like this: \nbibliography\n \nIn this example, the vColl element is first used to supply\na list of name feature values, which together\nconstitute the forenames feature. Other features\nare defined by reference to values which we assume are held in some\nexternal feature value library (not shown here). For example, the\nvColl element is used a second time to indicate that the\npersons's siblings should be regarded as constituting a set rather\nthan a list. Each sibling is represented by a feature structure: in\nthis example, each feature structure is a copy of one specified in the\nfeature value library. \nIf a specific feature contains only a single feature structure as\nits value, the component features of which are organized as a set, bag,\nor list, it may be more convenient to represent the value as a\nvColl rather than as an fs. For example, consider the\nfollowing encoding of the English verb form\nsinks, which contains an\nagreement feature whose value is a feature\nstructure which contains person and\nnumber features with symbolic values.\n\n \nIf the names of the features contained within\nthe agreement feature structure are\nof no particular significance, the following simpler representation\nmay be used:\n\n \nThe vColl element is also useful in cases where an analysis\nhas several components. In the following example, the French\nword auxquels has a two-part analysis,\nrepresented as a list of two values. The first specifies that the word contains a\npreposition; the second that it contains a masculine plural relative\npronoun: \n\n\nThe set, bag, or list which has no members is known as the null (or\nempty) set, bag, or list.  A vColl element with no content and\nwith no value for its feats attribute is interpreted as\nreferring to the null set, bag, or list, depending on the value of its\norg attribute.\nIf, for example, the individual described by the\nfeature structure with identifier p027 (above) had no siblings, we might specify the\nsiblings feature as follows.\n\n \nA vColl element may also collect together one or more other\nvColl elements, if, for example one of the members of a set is\nitself a set, or if two lists are concatenated together. Note that\nsuch collections pay no attention to the contents of the nested\nvColl elements: if it is desired to produce the union of two\nsets, the vMerge element discussed below should be used to\nmake a new collection from the two sets.  \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FVE#FVE\">18.8 Feature Value Expressions</a>","content":"18.8 Feature Value Expressions\nIt is sometimes desirable to express the value of a feature as the\nresult of an operation over some other value (for example, as\nnot green, or as male or\nfemale, or as the concatenation of two collections).  Three\nspecial purpose elements are provided to represent disjunctive\nalternation, negation, and collection of values:\n\n  <vAlt> represents the value part of a feature-value specification\n  which contains a set of values, only one of which can be valid.\n  <vNot> represents a feature value which is the negation of its content.\n  <vMerge> represents a feature value which is the result of merging\n  together the feature values contained by its children, using the organization\n  specified by the org attribute.\n\n \n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FVE#FVE\">18.8 Feature Value Expressions</a><a class=\"breadcrumb\" href=\"p5.xml?id=FVALT#FVALT\">18.8.1 Alternation</a>","content":"18.8.1 Alternation\nThe vAlt element can be used wherever a feature value can\nappear. It contains two or more feature values, any one of which is to\nbe understood as the value required. Suppose, for example, that we are\nusing a feature system to describe residential property, using such\nfeatures as number.of.bathrooms. In a\nparticular case, we might wish to represent uncertainty as to whether\na house has two or three bathrooms. As we have already shown, one\nsimple way to represent this would be with a numeric maximum:\n\n \nA  more general way would be to represent the\nalternation explicitly, in this way:\n\n \nThe vAlt element represents alternation over feature\nvalues, not feature-value pairs. If therefore the uncertainty relates\nto two or more feature value specifications, each  must be represented\nas a feature structure, since a feature structure can always appear\nwhere a value is required. For example, suppose that it is uncertain\nas to whether the house being described has two bathrooms or two\nbedrooms, a structure like the following may be used:\n\n \nNote that alternation is always regarded as exclusive:\nin the case above, the implication is that  having two bathrooms\nexcludes the possibility of having two bedrooms and vice versa. If\ninclusive alternation is required, a vColl element may be\nincluded in the alternation as follows:\n\nThis analysis indicates that the property may have two bathrooms, two\nbedrooms, or both two bathrooms and two bedrooms.\n\nAs the previous example shows, the vAlt element can also\nbe used to indicate alternations among values of features organized as\nsets, bags or lists.  Suppose we use a feature\nselling.points to describe items that are mentioned to\nenhance a property's sales value, such as whether it has a pool or a\ngood view.  Now suppose for a particular listing, the selling points include\nan alarm system and a good view, and either a pool or a jacuzzi (but\nnot both).  This situation could be represented, using the\nvAlt element, as follows.\nbibliography\n \nNow suppose the situation is like the preceding except that one is\nalso uncertain whether the property has an alarm system or a good\nview.  This can be represented as follows.\nbibliography\n \nIf a large number of ambiguities or uncertainties need to be\nrepresented, involving a relatively small number of features and\nvalues, it is recommended that a stand-off technique, for example\nusing the general-purpose alt element discussed in\nsection 16.8 Alternation  be used, rather than the\nspecial-purpose vAlt element.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FVE#FVE\">18.8 Feature Value Expressions</a><a class=\"breadcrumb\" href=\"p5.xml?id=FVNOT#FVNOT\">18.8.2 Negation</a>","content":"18.8.2 Negation\nThe vNot element can be used wherever a feature value can\nappear. It contains any feature value and returns the complement of\nits contents. For example, the feature\nnumber.of.bathrooms in the following example\nhas any whole numeric value other than 2:\n\n \nStrictly speaking, the effect of the vNot element is to\nprovide the complement of the feature values it contains, rather than\ntheir negation. If a feature system declaration is available which defines the\npossible values for the associated feature, then it is possible to say\nmore about the negated value. For example, suppose that the\navailable values for the feature case are declared to be\nnominative, genitive, dative, or accusative, whether in a TEI feature\nsystem declaration or\nby some other means. Then the following two specifications are equivalent:\nbibliography\n\nIf however no such system declaration is available, all that one\ncan say about a feature specified via negation is that its value is\nsomething other than the negated value. \nNegation is always applied to a feature value, rather than to a\nfeature-value pair. The negation of an atomic value is the set of all\nother values which are possible for the feature. \nAny kind of value can be negated, including collections\n(represented by a vColl elements) or feature structures\n(represented by fs elements). The negation of any complex\nvalue is understood to be the set of values  which\ncannot be unified with it. Thus, for example, the negation of the\nfeature structure F is understood to be the set of feature structures\nwhich are not unifiable with F. In the absence of a constraint\nmechanism such as the Feature System Declaration, the negation of a\ncollection is anything that is not unifiable with it, including\ncollections of different types and atomic values. It will generally be\nmore useful to require that the organization of the negated value be\nthe same as that of the original value, for example that a negated set\nis understood to mean the set which is a complement of the set, but\nsuch a requirement cannot be enforced in the absence of a constraint\nmechanism. \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FVE#FVE\">18.8 Feature Value Expressions</a><a class=\"breadcrumb\" href=\"p5.xml?id=FVCOLL#FVCOLL\">18.8.3 Collection of Values</a>","content":"18.8.3 Collection of Values\nThe vMerge element can be used wherever a feature value can\nappear. It contains two or more feature values, all of which are to be\ncollected together. The organization of the resulting collection is\nspecified by the value of the org attribute, which need\nnot necessarily be the same as that of its constituent values if these\nare collections. For example, one can change a list to a set, or vice versa.\nAs an example, suppose that we wish to represent the range of\npossible values for a feature genders used to\ndescribe some language. It would be natural to represent the possible\nvalues  as a set, using the vColl element as in the following\nexample:\n\n\nSuppose however that we discover for some language it is necessary\nto add a new possible value, and to treat the value of the\nfeature as a list rather than as a set. The vMerge element can\nbe used to achieve this:\n\n \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FSBO#FSBO\">18.9 Default Values</a>","content":"18.9 Default Values\nThe value of a feature may be underspecified in a number of\ndifferent ways. It may be null, unknown, or uncertain with respect to\na range of known possibilities, as well as being defined as a negation\nor an alternation. As previously noted, the specification of the range\nof known possibilities for a given feature is not part of the current\nspecification: in the TEI scheme, this information is conveyed by the\nfeature system declaration. Using this, or some other\nsystem, we might specify (for example) that the range of values\nfor an element includes symbols for masculine, feminine, and neuter,\nand that the default value is neuter. With such definitions available\nto us, it becomes possible to say that some feature takes the default\nvalue, or some unspecified value from the list. The following special\nelement is provided for this purpose:\n\n<default> represents the value part of a feature-value specification\n  which contains a defaulted value.\n\n \nThe value of an empty f element which also lacks an fVal\nattribute is understood to be the most general\ncase, i.e. any of the available values. Thus, assuming the feature\nsystem defined above, the following two representations are equivalent. \n\n \nIf, however, the value is explicitly stated to be the default one,\nusing the default element, then the  following two representations\nare equivalent: \n\n\n \nSimilarly, if the value is stated to be the negation of the\ndefault, then the following two representations are equivalent:\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FSLINK#FSLINK\">18.10 Linking Text and Analysis</a>","content":"18.10 Linking Text and Analysis\nText elements can be linked with feature structures using any of\nthe linking methods discussed elsewhere in these Guidelines (see for\nexample sections 17.2 Global Attributes for Simple Analyses and 17.4 Linguistic Annotation).\nIn the simplest case, the ana attribute may be used\nto point from any element to an annotation of it, as in the following\nexample:\nbibliography\n \nThe values specified for the ana attribute reference\ncomponents of a feature-structure library, which represents all of the\ngrammatical structures used by this encoding scheme. (For illustrative\npurposes, we cite here only the structures needed for the first six\nwords of the sample sentence):\n\nThe components of each feature structure in the library are \nreferenced in much the same way, using the\nfeats attribute to  identify one or more f\nelements in the following feature library (again, only a few of the\navailable features are quoted here):\n\n \nAlternatively, a stand-off technique may be used, as in the following\nexample, where a linkGrp element is used to link selected\ncharacters in the text Caesar seized control with \ntheir phonological representations.\nbibliography\n \nAs this example shows, a stand-off solution requires that every\ncomponent to be linked to must be addressable in some way, by means of\nan XPointer. To handle the\nPOS tagging example above, for example, each annotated element might be\ngiven an identifier of some sort, as follows:\nbibliography\nIt would then be possible to link each word to its intended\nannotation in the feature library quoted above, as follows:\n   \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FD#FD\">18.11 Feature System Declaration</a>","content":"\n18.11 Feature System Declaration\nThe Feature System Declaration (FSD) is intended for use in conjunction with a\n TEI-conforming text that makes use of fs (that is, feature structure) elements.\n      The FSD serves three purposes: the encoder can list all of the feature names and feature values and give a prose\n            description as to what each represents.the encoder can define what it means to be a well-formed feature structure, and\n            define constraints which may be used to determine whether a particular feature\n            structure is valid relative to a given theory stated in typed feature\n            logic. These may involve constraints on the range of a feature value,\n            constraints on what features are valid within certain types of feature structures, or\n            constraints that prevent the co-occurrence of certain feature-value pairs.the encoder can define the intended interpretation of underspecified feature\n            structures. This involves defining default values (whether literal or computed) for\n            missing features.\nThe scheme described in this chapter may be used to document any\nfeature structure system, but is primarily intended for use with the\nfeature structure representation defined by the ISO 24610-1:2006\nstandard, which corresponds with the recommendations presented in\nthese Guidelines, 18 Feature Structures. This chapter relies upon, but\ndoes not reproduce, formal definitions and descriptions presented more\nthoroughly in the ISO standard, which should be consulted in case of\nambiguity or uncertainty. \n\nThe FSD serves an important function in documenting precisely what\nthe encoder intended by the system of feature structure markup used in\nan XML-encoded text.  The FSD is also an important resource which\nstandardizes the rules of inference used by software to validate the\nfeature structure markup in a text, and to infer the full\ninterpretation of underspecified feature structures.\n\nThe reader should be aware the terminology used in this document\ndoes not always closely follow conventional practice in formal logic,\nand may also diverge from practice in some linguistic applications of\ntyped feature structures.  In particular, the term\ninterpretation when applied to a feature\nstructure is not an interpretation in the model-theoretic sense, but\nis instead a minimally informative (or equivalently, most general)\nextension  of that feature\nstructure that is consistent with a set of constraints declared by an\nFSD.  In linguistic application, such a system of constraints is the\nprincipal means by which the grammar of some natural language is\nexpressed.  There is a great deal of disagreement as to what, if any,\nmodel-theoretic interpretation feature structures have in such\napplications, but the status of this formal kind of interpretation is\nnot germane to the present document.  Similarly, the term\nvalid is used here as elsewhere in these\nGuidelines to identify the syntactic state of well-formedness in the\nsense defined by the logic of typed feature structures itself, as\ndistinct from and in addition to the\nwell-formedness that pertains at the level of\nthis encoding standard. No appeal to any notion from formal semantics\nshould be inferred. \n\nWe begin by describing how an encoded text is associated with one\nor more feature system declarations.  The second, third, and fourth\nsections describe the overall structure of a feature system\ndeclaration and give details of how to encode its components.  The final\nsection offers a full example; fuller discussion\nof the reasoning behind FSDs and another complete example are provided\nin 1 .\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FD#FD\">18.11 Feature System Declaration</a><a class=\"breadcrumb\" href=\"p5.xml?id=FDLK#FDLK\">18.11.1 Linking a TEI Text to Feature System Declarations</a>","content":"\n18.11.1 Linking a TEI Text to Feature System Declarations\nIn order for application software to use feature system\ndeclarations to aid in the automatic interpretation of encoded texts,\nor even for human readers to find the appropriate declarations which\ndocument the feature system used in markup, there must be a formal\nlink from the encoded texts to the declarations. However, the\nschema  which declares the syntax of the Feature System itself\nshould  be kept distinct from the feature structure schema, which is an\napplication of that system. \n\nA document containing typed feature structures may simply include a\nfeature system declaration documenting those feature structures.  A\nmore usual scenario, however, is that the same feature system\ndeclaration (or parts of it) will be shared by many documents.  In\neither case, an fsDecl element for each distinct type of\nfeature structure used must be provided and associated with the type,\nwhich is the value used within each feature structure for its\ntype attribute.\n\nWhen the module defined in this chapter is included in an XML\nschema, the following elements become available via the \nmodel.fsdDeclPart class:\n\n\n<fsdDecl> provides a feature system declaration comprising one or more\n  feature structure declarations or feature structure declaration links.\n<model.fsdDeclPart> \n\n\nThe fsdDecl element serves as a wrapper for declaring feature \nsystems and may be supplied either within the header\nof a standard TEI document, or as a standalone document in its own\nright. It contains one or more fsdLink or fsDecl\nelements and may hold several fLib or fvLib as well.\n\n\n\nFor example, suppose that a document doc.xml\ncontains feature structures of two types: gpsg and\nlex. We might simply embed an fsDecl element for\neach within the header attached to the document as follows:\n\n\n\nIn this case there is an implicit link between the fs\nelement and the corresponding fsDecl element because they\nshare the same value for their type attribute and appear\nwithin the same document. This is a short cut for the more general\ncase which requires a more explicit link provided by means of the\nfsdLink element, as demonstrated below.\n\nNow suppose that we wish to create a second document which includes\nfeature structures of the same type. Rather than duplicate the\ncorresponding declarations, we will need to provide a means of\npointing to them from this second document.  The easiest3\nway of accomplishing this is to add an XML identifier to each\nfsDecl element in example.xml:\n\n(Although in this case the XML identifier is simply an uppercase\nversion of the type name, there is no necessary connection between the\ntwo names. The only requirement is that the XML identifier conform to\nthe standards required for identifiers, and that it be unique within\nthe document containing it.)\nIn the fsdDecl for the second document, we can now include\npointers to the fsDecl elements in the first:\n\nNote that in doc2.xml there is no requirement for the local\nname for a given type of feature structures to be the same as that\nused by example.xml. We assume in this encoding that the type\ncalled lexx in doc2.xml is declared as\nhaving identical constraints and other properties to those declared\nfor the type called lex in example.xml.\n\nAn fsdDecl may be given, as above, within the encoding\ndescription of the teiHeader element of a TEI document\ncontaining typed feature structures. Alternatively, it may appear\nindependently of any feature structures, as a document in its own\nright with its own teiHeader. These options are both possible\nbecause the element is a member of both the model.encodingDescPart class and the model.resource class.\n\nThe current recommendations provide no way of enforcing uniqueness\nof the type values among fsdDecl elements, nor of\nrequiring that every type value specified on an fs\nelement be also declared on an fsdDecl element. Encoders\nrequiring such constraints (which might have some obvious utility in\nassisting the consistency and accuracy of tagging) are recommended to\ndevelop tools to enforce them, using such mechanisms as Schematron\nassertions. \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FD#FD\">18.11 Feature System Declaration</a><a class=\"breadcrumb\" href=\"p5.xml?id=FDOV#FDOV\">18.11.2 The Overall Structure of a Feature System Declaration</a>","content":"18.11.2 The Overall Structure of a Feature System Declaration\nA feature system declaration contains one or more feature\nstructure declarations, each of which has up to three parts: an optional description\n(which gives a prose comment on what that type of feature structure\nencodes), an obligatory set of feature declarations (which specify\nrange constraints and default values for the features in that type of\nstructure), and optional feature structure constraints (which specify\nco-occurrence restrictions on feature values). \n\n<fsDescr> describes in prose what is represented by the type of feature\nstructure declared in the enclosing fsDecl.\n<fDecl> declares a single feature, specifying its name, organization,\nrange of allowed values, and optionally its default value.\n<fsConstraints> specifies constraints on the content of valid feature\nstructures.\nFeature declarations and feature structure constraints are\ndescribed in the next two sections.  Note that the specification of\nsimilar fsDecl elements can be simplified by devising an\ninheritance hierarchy for the feature structure types.  Each\nfsDecl element may name one or more\nbasetypes from which it inherits feature\ndeclarations and constraints (these are often called\nsupertypes). For instance, suppose that\nfsDecl type=\"Basic\" contains fDecl name=\"One\"\nand fDecl name=\"Two\", and that fsDecl type=\"Derived\"\nbaseTypes=\"Basic\" contains just fDecl name=\"Three\".\nThen any instance of fs type=\"Derived\" must include all\nthree features.  This is because fsDecl type=\"Derived\"\ninherits the two feature declarations from fsDecl\ntype=\"Basic\" when it specifies a base type of\nBasic.\nThe following sample shows the overall structure of a complete\nfeature structure declaration:\n bibliography\n\nThe attribute baseTypes gives the name of one or more\ntypes from which this type inherits feature specifications and\nconstraints; if this type includes a feature specification with the\nsame name as one inherited from any of the types specified by this\nattribute, or if more than one specification of the same name is\ninherited, then the possible values of that feature is determined by\nunification. Similarly, the set of constraints applicable is derived\nby conjoining those specified explicitly within this element with\nthose implied by the baseTypes attribute. When no base type\nis specified, no feature specification or constraint is inherited.\nAlthough the present standard does provide for default feature values,\nfeature inheritance is defined to be monotonic.\n\nThe process of combining constraints may result in a contradiction,\nfor example if two specifications for the same feature specify\ndisjoint ranges of values, and at least one such specification is\nmandatory. In such a case, there is no valid feature structure of the\ntype being defined.\n\nEvery type specified by baseTypes must be a single word which\nis a legal XML name; for example, they cannot include whitespace or\nbegin with digits.  Multiple base types are separated with spaces,\ne.g. fsDecl type=\"Sub\" baseTypes=\"Super1 Super2\".\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FD#FD\">18.11 Feature System Declaration</a><a class=\"breadcrumb\" href=\"p5.xml?id=FDFD#FDFD\">18.11.3 Feature Declarations</a>","content":"18.11.3 Feature Declarations\nEach feature is declared in an fDecl element whose\nname attribute identifies the feature being declared; this\nmatches the name attribute of the f elements it\ndeclares.  \n\n\nAn fDecl has three parts: an optional\nprose description (which should explain what the feature and its\nvalues represent), an obligatory range specification (which declares\nwhat values the feature is allowed to have), and an optional default\nspecification (which declares what default value should be supplied\nwhen the named feature does not appear in an fs). \nIf, in a feature\nstructure, a feature:\n is not optional (i.e., is obligatory), has no value provided, or the value default is\nprovided (see ISO 24610-1, Subclause 5.10, Default Values, and either has no default specified, or has conditional defaults,\nnone of the conditions on which is met,\nthen the value of this feature in the feature structure's most\ngeneral valid extension is the most general value provided in its\nvRange, in the case of a unit organization, or the\nsingleton set, bag, or list containing that element, in the case of a\ncomplex organization.  If the feature:\n is optional, has no value provided, or the value default is\nprovided, and either has a default specified, or has conditional defaults,\none of the conditions on which is met,\nthen this feature does have a value in the feature structure's most\ngeneral valid extension when it exists, namely the default value that\npertains.\n\nIt is possible that a feature structure will not have a valid\nextension because the default value that pertains to a feature is not\nconsistent with that feature's declared range.  Additional tools\nare required for the enforcement of such criteria.\n\n\nThe following elements are  used in feature system declarations:\n\n<fDecl> declares a single feature, specifying its name, organization,\nrange of allowed values, and optionally its default value.\n<fDescr> describes in prose what is represented by the feature being\ndeclared and its values.\n<vRange> defines the range of allowed values for a feature, in the form of\nan fs, vAlt, or primitive value;\nfor the value of an f to be valid, it must be\nsubsumed by the specified range; if the f\ncontains multiple values (as sanctioned by the org attribute),\nthen each value must be subsumed by the vRange.\n<vDefault> declares the default value to be supplied when a feature structure\ndoes not contain an instance of f for this name; if\nunconditional, it is specified as one (or, depending on the value of\nthe org attribute of the enclosing fDecl) more\nfs elements or primitive values;\nif conditional, it is specified as\none or more if elements; if no default is specified, or no\ncondition matches, the value none is assumed.\n<if> defines a conditional default value for a feature; the condition\nis specified as a feature structure, and is met if it\nsubsumes the feature structure in the text for which a\ndefault value is sought.\n<then> separates the condition from the default in an if, or\nthe antecedent and the consequent in a cond element.\nThe logic for validating feature values and for matching the\nconditions for supplying default values is based on the operation of\nsubsumption.  Subsumption is a standard operation in\nfeature-structure-based formalisms.  Informally, a feature structure\nFS subsumes all feature structures that are at least as\ninformative as itself; that is, all feature structures that\nspecify all of the feature values that FS does with values that are\nsubsumed by the values that FS has, and that have all of the\nre-entrancies (see 18.6 Re-entrant Feature Structures) that FS does. (\n        \n          \n            Bob\n            Carpenter\n          \n           The logic of typed feature structures\n          \n            Cambridge\n            Cambridge University Press\n            1992\n          \n        \n        \n          Cambridge Tracts in Theoretical Computer Science\n          32\n        \n      1 ;\nsee also \n        \n          \n            Fernando\n            C.\n            N.\n            Pereira\n          \n           Grammars and logics of partial information\n          \n            Menlo Park, CA\n            SRI International\n            1987\n          \n        \n        \n          SRI International Technical Note\n          420\n        \n      1  and \n        \n          \n            Stuart\n            Shieber\n          \n          An Introduction to Unification-based Approaches to Grammar\n          CSLI Lecture Notes 4\n          \n            Center for the Study of Language and Information\n            Palo Alto, CA\n            1986\n          \n        \n      1 )\nA more formal definition is provided in ISO 24610-1:2006 . \n\n\nFollowing the spirit of the informal definition above, we can extend\nsubsumption in a straightforward way to cover alternation, negation,\nspecial primitive values, and the use of attributes in the markup.\nFor instance, a vAlt containing the value v subsumes v.  The negation\nof a value v (represented by means of the\nvNot element discussed in section 18.8.2 Negation)\nsubsumes any value that is not v; for\nexample <vNot><numeric value='0'/></vNot> subsumes any\nnumeric value other than zero.\n The value fs\ntype=\"X\"/ subsumes any feature structure of type X,\neven if it is not valid.\n\n\nAs an example of feature declarations, consider the following extract\nfrom Gazdar et al.'s Generalized Phrase Structure\n     Grammar. In the appendix to their book, they\npropose a feature system for English of which this is just a sampling:\nbibliography\nbibliography\nThe INV feature, which encodes whether or not a sentence is inverted,\nallows only the values plus (+) and minus (-).  If the feature is not\nspecified, then the default rule (FSD 1 above) says that a value of\nminus is always assumed.  The feature declaration for this feature would\nbe encoded as follows:\nbibliography\nThe value range is specified as an alternation (more precisely, an\nexclusive disjunction), which can be represented by  the\nbinary feature value.   That is,\nthe value must be either true or false, but cannot be both or neither.\nThe CONJ feature indicates the surface form of the conjunction used\nin a construction.  The ~ in the default rule (see FSD 2 above)\nrepresents negation.  This means that by default the feature is not\napplicable, in other words, no conjunction is taking place.  Note that\nCONJ not being present  is distinct from CONJ being present but having the NIL value allowed in\nthe value range.  In their analysis, NIL means that the phenomenon of\nconjunction is taking place but there is no explicit conjunction in the\nsurface form of the sentence.  The feature declaration for this feature\nwould be encoded as follows:\nbibliography\n \nNote that the vDefault is not strictly necessary in this case,\nsince the binary value of false only serves to convey the\ninformation that the feature has no other legitimate value.\n\n\nThe COMP feature indicates the surface form of the complementizer\nused in a construction.  In value range, it is analogous to CONJ.\nHowever, its default rule (see FSD 9 above) is conditional.  It says\nthat if the verb form is infinitival (the VFORM feature is not\nmentioned in the rule since it is the only feature that can take INF\nas a value), and the construction has a subject, then a\nfor complement must be used.  For instance, to\nmake John the subject of the infinitive in It is necessary\nto go, a for complement must be\nused; that is, It is necessary for John to go.\nThe feature declaration for this feature would be encoded as follows:\n\nbibliography\nThe AGR feature stores the features relevant to subject-verb\nagreement.  Gazdar et al. specify the range of this feature as CAT.\nThis means that the value is a category, which\nis their term for a feature structure.  This is actually too weak a\nstatement.  Not just any feature structure is allowable here; it must be\na feature structure for agreement (which is defined in the complete\nexample at the end of the chapter to contain the features of person and\nnumber).  The following feature declaration encodes this constraint on\nthe value range:\nbibliography\nThat is, the value must be a feature structure of type Agreement.  The complete example at the end of this\nchapter includes the fsDecl type=\"Agreement\" which includes\nfDecl name=\"PERS\" and fDecl name=\"NUM\".\nThe PFORM feature indicates the surface form of the preposition used\nin a construction.  Since PFORM is specified above as an open set,\nstring is used in the range specification below rather than\nsymbol.\nbibliography\nThis example makes use of a negated value:    <vNot><string/></vNot>\nsubsumes any string that is not the empty\nstring.\nNote that\nthe class model.featureVal includes all possible\nsingle feature values, including  feature structures, alternations\n(vAlt) and complex collections (vColl).\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FD#FD\">18.11 Feature System Declaration</a><a class=\"breadcrumb\" href=\"p5.xml?id=FDFS#FDFS\">18.11.4 Feature Structure Constraints</a>","content":"18.11.4 Feature Structure Constraints\nEnsuring the validity of feature structures may require much more\nthan simply specifying the range of allowed values for each feature.\nThere may be constraints on the co-occurrence of one feature value with\nthe value of another feature in the same feature structure or in an\nembedded feature structure.\nSuch constraints on valid feature structures are expressed as a\nseries of conditional and biconditional tests in the\nfsConstraints part of an fsDecl.  A particular feature\nstructure is valid only if it meets all the constraints.  The\ncond element encodes the conventional if-then conditional of\nboolean logic which succeeds when both the antecedent and consequent are\ntrue, or whenever the antecedent is false.  The bicond element\nencodes the biconditional (if and only if) operation of boolean logic.\nIt succeeds only when the corresponding\nif-then conditionals in both directions are true.  In feature structure constraints the antecedent and\nconsequent are expressed as feature structures; they are considered true\nif they subsume\n(see section 18.11.3 Feature Declarations) the feature structure in question, but in the\ncase of consequents, this truth is asserted rather than simply\ntested.  That is to say, a conditional is enforced by determining that\nthe antecedent does not (and will never) subsume the given feature\nstructure, or by determining that the antecedent does subsume the\ngiven feature structure, and then unifying the consequent with it (the\nresult of which, if successful, will be subsumed by the consequent).\nIn practice, the enforcement of such constraints can result in\nperiods in which the truth of a constraint with respect to a given\nfeature structure is simply not known; in this case, the constraint\nmust be persistently monitored as the feature structure becomes more\ninformative until either its truth value is determined or computation\nfails for some other reason.\n The\nfollowing elements make up the fsConstraints part of an FSD:\n<fsConstraints> specifies constraints on the content of valid feature\nstructures.<cond> defines a conditional feature-structure constraint; the consequent\nand the antecedent are specified as feature structures or\nfeature-structure collections; the constraint is satisfied if both the\nantecedent and the consequent subsume a given feature\nstructure, or if the antecedent does not.<bicond> defines a biconditional feature-structure constraint; both\nconsequent and antecedent are specified as feature structures or groups\nof feature structures; the constraint is satisfied if both\nsubsume a given feature structure, or if both do not.<then> separates the condition from the default in an if, or\nthe antecedent and the consequent in a cond element.<iff> separates the condition from the consequence in a bicond\nelement.\nFor an example of feature structure constraints, consider the\nfollowing feature co-occurrence restrictions\nextracted from the feature system for English proposed by Gazdar, et al. (1985:246–247):\n\n\n\nThe first constraint says that if a construction is inverted, it must\nalso have an auxiliary and a finite verb form.  That is,\n   \nThe second constraint says that if a construction has a BAR value of\nzero (i.e., it is a sentence), then it must have a value for the\nfeatures N, V, and SUBCAT.  By the same token, because it is a\nbiconditional, if it has values for N, V, and SUBCAT, it must have\nBAR='0'.  That is,\n   \n\nThe final constraint says that if a construction has a BAR value of 1\n(i.e., it is a phrase), then the SUBCAT feature should be absent (~).\nThis is not biconditional, since there are other instances under which\nthe SUBCAT feature is inappropriate.  That is,\n   \n\n\nNote that cond and bicond use the empty tags\nthen and iff, respectively, to separate the antecedent\nand consequent.  These are primarily for the sake of enhancing human\nreadability.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FD#FD\">18.11 Feature System Declaration</a><a class=\"breadcrumb\" href=\"p5.xml?id=FDEG#FDEG\">18.11.5 A Complete Example</a>","content":"18.11.5 A Complete Example\nTo summarize this chapter, the complete FSD for the example that has\nrun through the chapter is reproduced below:\nbibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=FS#FS\">18 Feature Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=FSDEF#FSDEF\">18.12 Formal Definition and Implementation</a>","content":"\n  18.12 Formal Definition and Implementation\n  This elements discussed in this chapter constitute a module of the\n  TEI scheme which is formally defined as follows:\n  \n    Feature Structures\n    Feature structures\n    \n    \n    \n    \n    \n  \n\n  \n  The selection and combination of modules to form a TEI schema is\n  described in 1.2 Defining a TEI Schema.\n  \n  \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=GD#GD\">19 Graphs, Networks, and Trees</a>","content":"19 Graphs, Networks, and Trees\n\t\tGraphical representations are widely used for displaying relations\namong informational units because they help readers to visualize those\nrelations and hence to understand them better.  Two general types of\ngraphical representations may be distinguished.\nGraphs, in the strictly mathematical sense, consist\nof points, often called nodes or\nvertices, and connections among them, called\narcs, or under certain conditions,\nedges.  Among the various types of graphs are\nnetworks and trees.  Graphs\ngenerally and networks in particular are dealt with\ndirectly below.  Trees are dealt with separately in\nsections 19.2 Trees and\n19.3 Another Tree Notation.1Charts, which typically plot data in two or more\ndimensions, including plots with orthogonal or radial axes, bar charts,\npie charts, and the like.  These can be described using the elements\ndefined in the module for figures and graphics; see\nchapter 14 Tables, Formulæ, Graphics, and Notated Music.\n\n\nAmong the types of qualitative relations often represented by graphs\nare organizational hierarchies, flow charts, genealogies, semantic\nnetworks, transition networks, grammatical relations, tournament\nschedules, seating plans, and directions to people's houses.  In\ndeveloping recommendations for the encoding of graphs of various types,\nwe have relied on their formal mathematical definitions and on the most\ncommon conventions for representing them visually.  However, it must be\nemphasized that these recommendations do not provide for the full range\nof possible graphical representations, and deal only partially with\nquestions of design, layout, and placement.\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=GD#GD\">19 Graphs, Networks, and Trees</a><a class=\"breadcrumb\" href=\"p5.xml?id=GDGR#GDGR\">19.1 Graphs and Digraphs</a>","content":"19.1 Graphs and Digraphs\nBroadly speaking, graphs can be divided into two types:\nundirected and directed.  An undirected graph\nis a set of nodes (or vertices) together with\na set of pairs of those vertices, called arcs or\nedges.  Each node in an arc of an undirected graph is said\nto be incident with that arc, and the two vertices (nodes) which\nmake up an arc are said to be adjacent.  An directed graph\nis like an undirected graph except that the arcs are ordered\npairs of nodes.  In the case of directed graphs, the term\nedge is not used; moreover, each arc in a directed graph\nis said to be adjacent from the node from which the arc\nemanates, and adjacent to  the node to which the arc is\ndirected.  We use the element graph to encode graphs as a\nwhole, node to encode nodes or vertices, and arc to\nencode arcs or edges; arcs can also be encoded by attributes on the\nnode element.  These elements have the following descriptions\nand attributes:\n\n<graph> encodes a graph, which is a collection of nodes, and arcs which\nconnect the nodes.\n<node> encodes a node, a possibly labeled point in a graph.\n<arc> encodes an arc, the connection from one node to another in a graph.\nBefore proceeding, some additional terminology may be helpful.  We\ndefine a path in a graph as a sequence of nodes n1, ..., nk\nsuch that there is an arc from each ni to ni+1 in the sequence.  A\ncyclic path, or cycle is a path leading from a\nparticular node back to itself.  A graph that contains at least one\ncycle is said to be cyclic; otherwise it is\nacyclic.  We say, finally, that a graph is\nconnected if there is a path from some node to every other\nnode in the graph; any graph that is not connected is said to be\ndisconnected.\nHere is an example of an undirected, cyclic disconnected graph, in\nwhich the nodes are annotated with three-letter codes for airports, and\nthe arcs connecting the nodes are represented by horizontal and vertical\nlines, with 90 degree bends used simply to avoid having to draw diagonal\nlines.\n\n\t\n\t\n\t\n\t\n\n\nNext is a markup of the graph, using arc elements to encode\nthe arcs.\nbibliography\n\nThe first child element of graph may be a label to record a\nlabel for the graph; similarly, the label child of each\nnode element records the labels of that node. The\norder and size attributes on the graph\nelement record the number of nodes and number of arcs in the graph\nrespectively; these values are optional (since they can be computed\nfrom the rest of the graph), but if they are supplied, they must be\nconsistent with the rest of the encoding. They can thus be used to\nhelp check that the graph has been encoded and transmitted correctly.\nThe degree attribute on the node elements record\nthe number of arcs that are incident with that node. It is optional\n(because redundant), but can be used to help in validity checking: if\na value is given, it must be consistent with the rest of the\ninformation in the graph. Finally, the from and\nto attributes on the arc elements provide pointers\nto the nodes connected by those arcs. Since the graph is undirected,\nno directionality is implied by the use of the from and\nto attributes; the values of these attributes could be\ninterchanged in each arc without changing the graph.\nThe adj, adjFrom, and adjTo\nattributes of the node element provide an alternative method of\nrepresenting unlabeled arcs, their values being pointers to the nodes\nwhich are adjacent to or from that node.  The adj attribute\nis to be used for undirected graphs, and the adjFrom and\nadjTo attributes for directed graphs.  It is a semantic error\nfor the directed adjacency attributes to be used in an undirected graph,\nand vice versa.  Here is a markup of the preceding graph, using the\nadj attribute to represent the arcs.\nbibliography\nNote that each arc is represented twice in this encoding of the\ngraph.  For example, the existence of the arc from LAX to LVG can be\ninferred from each of the first two node elements in the graph.\nThis redundancy, however, is not required:  it suffices to describe an\narc in any one of the three places it can be described (either adjacent\nnode, or in a separate arc element).  Here is a less redundant\nrepresentation of the same graph.\nbibliography\nAlthough in many cases the arc element is redundant (since\narcs can be described using the adjacency attributes of their adjacent\nnodes), it has nevertheless been included in this module, in order to\nallow the convenient specification of identifiers, display or\nrendition information, and labels for each arc (using the attributes\nxml:id, rend, and a child label element).\nNext, let us modify the preceding graph by adding directionality to\nthe arcs. Specifically, we now think of the arcs as specifying selected\nroutes from one airport to another, as indicated by the direction of the\narrowheads in the following diagram.\n\nHere is an encoding of this graph, using the arc element to\ndesignate the arcs.\nbibliography\nThe attributes inDegree and outDegree indicate\nthe number of nodes which are adjacent to and from the node concerned\nrespectively. \n\nHere is another encoding of the graph, using the adjTo and\nadjFrom attributes on nodes to designate the arcs.\nbibliography\nIf we wish to label the arcs, say with flight numbers, then\narc elements must be used to hold the label\nelements, as in the following example.\nbibliography\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=GD#GD\">19 Graphs, Networks, and Trees</a><a class=\"breadcrumb\" href=\"p5.xml?id=GDGR#GDGR\">19.1 Graphs and Digraphs</a><a class=\"breadcrumb\" href=\"p5.xml?id=GDTN#GDTN\">19.1.1 Transition Networks</a>","content":"19.1.1 Transition Networks\nFor encoding transition networks and other kinds of directed graphs\nin which distinctions among types of nodes must be made, the\ntype attribute is provided for node elements.  In\nthe following example, the initial and final\nnodes (or states) of the network are distinguished.  It can\nbe understood as accepting the set of strings obtained by traversing it\nfrom its initial node to its final node, and concatenating the labels.\n\n\nbibliography\nA finite state transducer has two labels on each arc, and can be\nthought of as representing a mapping from one sequence of labels to\nthe other.  The following example represents a transducer for\ntranslating the English strings accepted by the network in the\npreceding example into French.  The nodes have been annotated with\nnumbers, for convenience.\n\nbibliography"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=GD#GD\">19 Graphs, Networks, and Trees</a><a class=\"breadcrumb\" href=\"p5.xml?id=GDGR#GDGR\">19.1 Graphs and Digraphs</a><a class=\"breadcrumb\" href=\"p5.xml?id=GDFT#GDFT\">19.1.2 Family Trees</a>","content":"19.1.2 Family Trees\nThe next example provides an encoding a portion of a\nfamily tree2 in which nodes are used to represent\nindividuals and parents of individuals, and arcs are used to\nrepresent common parentage and descent links.  Let us suppose,\nfurther, that information about individuals is contained in feature\nstructures, which are contained in feature-structure libraries\nelsewhere (see 18.4 Feature Libraries and Feature-Value Libraries).  We can use the\nvalue attribute on node elements to point to those\nfeature structures.  In this particular representation of\nthe graph, nodes representing females are framed by ovals, nodes\nrepresenting males are framed by boxes, and nodes representing parents\nare framed by diamonds.\n\n\n  bibliography\n\n\t\n\t"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=GD#GD\">19 Graphs, Networks, and Trees</a><a class=\"breadcrumb\" href=\"p5.xml?id=GDGR#GDGR\">19.1 Graphs and Digraphs</a><a class=\"breadcrumb\" href=\"p5.xml?id=GDHI#GDHI\">19.1.3 Historical Interpretation</a>","content":"19.1.3 Historical Interpretation\nFor our final example, we represent graphically the relationships\namong various geographic areas mentioned in a\nseventeenth-century Scottish document.  The document itself is\na sasine, which records a grant of land\nfrom the earl of Argyll to one Donald McNeill, and reads in part\nas follows (abbreviations have been expanded silently,\nand [...] marks illegible passages):\n\nItem instrument of Sasine given the said Hector\nMcneil confirmed and dated 28 May 1632\n[...] at Edinburgh upon the 15 June 1632\nItem ane charter granted by Archibald late earl\nof Argyle and Donald McNeill of Gallachalzie wh\nmakes mention that ...\nthe said late Earl yields and grants\nto the said Donald MacNeill ...\nAll and hail the two merk land of old extent\nof Gallachalzie with the pertinents by and in\nthe lordship of Knapdale within the sherrifdome\nof Argyll\n[description of other lands granted follows ...]\nThis Charter is dated at Inverary the 15th May 1669\nIn this example, we are concerned with the land and pertinents (i.e.\naccompanying sources of revenue) described as the two merk land of\nold extent of Gallachalzie with the pertinents by and in the lordship of\nKnapdale within the sherrifdom of Argyll.\nThe passage concerns the following pieces of land:\nthe Earl of Argyll's land (i.e. the lands granted by this clause\nof the sasine)two mark of land in Gallachalziethe pertinents for this landthe Lordship of Knapdalethe sherrifdom of Argyll\nWe will represent these geographic entities as nodes in a graph.\nArcs in the graph will represent the following relationships among\nthem:\ncontainment (INCLUDE)location within (IN)contiguity (BY)constituency (PART OF)\nNote that these relationships are logically related: include\nand in, for example, are inverses of each other: the Earl of\nArgyll's land includes the parcel in Gallachalzie, and the parcel is\ntherefore in the Earl of Argyll's land.  Given an explicit set of\ninference rules, an appropriate application could use the graph we are\nconstructing to infer the logical consequences of the relationships we\nidentify.\nLet us assume that feature-structure analyses are available which\ndescribe Gallachalzie, Knapdale, and Argyll.  We will link to those\nfeature structures using the value attribute on the nodes\nrepresenting those places.  However, there may be some uncertainty as to\nwhich noun phrase is modified by the phrase within the sheriffdome of\nArgyll:  perhaps the entire lands (land and pertinents) are in\nArgyll, perhaps just the pertinents are, or perhaps only Knapdale is\n(together with the portion of the pertinents which is in Knapdale).  We\nwill represent all three of these interpretations in the graph; they\nare, however, mutually exclusive, which we represent using the\nexclude attribute defined in\nchapter 16 Linking, Segmentation, and Alignment.3\nWe represent the graph and its encoding as follows, where\nthe dotted lines in the graph indicate the mutually exclusive arcs; in\nthe encoding, we use the exclude attribute to indicate those\narcs.\n\n\nThe graph formalizes the following relationships:\nthe Earl of Argyll's land includes (the parcel of\nland in) Gallachalziethe Earl of Argyll's land includes the pertinents of that parcelthe pertinents are (in part) by the Lordship of Knapdalethe pertinents are (in part) part of the Lordship of Knapdalethe Earl of Argyll's land, or the pertinents, or\nthe Lordship of Knapdale, is in the Sherrifdom of Argyll\nWe encode the graph thus:\nbibliography"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=GD#GD\">19 Graphs, Networks, and Trees</a><a class=\"breadcrumb\" href=\"p5.xml?id=GDTR#GDTR\">19.2 Trees</a>","content":"19.2 Trees\nA tree is a connected acyclic graph.  That is, it is\npossible in a tree graph to follow a path from any vertex to any other\nvertex, but there are no paths that lead from any vertex to itself.  A\nrooted tree is a directed graph based on a tree; that is, the arcs in\nthe graph correspond to the arcs of a tree such that there is exactly\none node, called the root, for which there is a path from\nthat node to all other nodes in the graph.  For our purposes, we may\nignore all trees except for rooted trees, and hence we shall use the\ntree element for rooted trees, and the root element\nfor its root.  The nodes adjacent to a given node are called its\nchildren, and the node adjacent from a given node is called\nits parent.  Nodes with both a parent and children are\ncalled internal nodes, for which we use the iNode\nelement.  A node with no children is tagged as a leaf.  If the\nchildren of a node are ordered from left to right, then we say that that\nnode is ordered.  If all the nodes of a tree are ordered,\nthen we say that the tree is an ordered tree.  If some of\nthe nodes of a tree are ordered and others are not, then the tree is a\npartially ordered tree.  The ordering of nodes and trees\nmay be specified by an attribute; we take the default ordering for trees\nto be ordered, that roots inherit their ordering from the trees in which\nthey occur, and internal nodes inherit their ordering from their\nparents.  Finally, we permit a node to be specified as following other\nnodes, which (when its parent is ordered) it would be assumed to\nprecede, giving rise to crossing arcs.  \nThe elements used for the\nencoding of trees have the following descriptions and attributes.\n\n<tree> encodes a tree, which is made up of a root, internal nodes,\nleaves, and arcs from root to leaves.\n<root> represents the root node of a tree.\n<iNode> represents an intermediate (or internal) node of a tree.\n<leaf> encodes the leaves (terminal nodes) of a tree.\nHere is an example of a tree.  It represents the order in which the\noperators of addition (symbolized by +), exponentiation\n(symbolized by **) and division (symbolized by /) are\napplied in evaluating the arithmetic formula \n((a**2)+(b**2))/((a+b)**2).\nIn drawing the graph, the root is placed on the far right, and\ndirectionality is presumed to be to the left.\n\n\n  bibliography\nIn this encoding, the arity attribute represents the\narity of the tree, which is the greatest value of the\noutDegree attribute for any of the nodes in the tree.  If, as\nin this case, arity is 2, we say that the tree is a\nbinary tree.\nSince the left-to-right (or top-to-bottom!) order of the children of\nthe two + nodes does not affect the arithmetic result in this\ncase, we could represent in this tree all of the arithmetically\nequivalent formulas involving its leaves, by specifying the attribute\nord as false on those two iNode elements, the attribute\nord as true on the root and other iNode\nelements, and the attribute ord as partial on the tree\nelement, as follows.\n  bibliography\nThis encoding represents all of the following:\n((a**2)+(b**2))/((a+b)**2)((b**2)+(a**2))/((a+b)**2)((a**2)+(b**2))/((b+a)**2)((b**2)+(a**2))/((a+b)**2)\n\nLinguistic phrase structure is very commonly represented by trees.\nHere is an example of phrase structure represented by an ordered tree\nwith its root at the top, and a possible encoding.\n\n\n\t  bibliography\nFinally, here is an example of an ordered tree, in which a particular\nnode which ordinarily would precede another is specified as following\nit.  In the drawing, the xxx symbol indicates that the arc from\nVB to PT crosses the arc from VP to PN.\n\n\n  bibliography\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=GD#GD\">19 Graphs, Networks, and Trees</a><a class=\"breadcrumb\" href=\"p5.xml?id=GDAT#GDAT\">19.3 Another Tree Notation</a>","content":"19.3 Another Tree Notation\nIn this section, we present an alternative to the method of\nrepresenting the structure of ordered rooted trees given in\nsection 19.2 Trees, which is based on the observation\nthat any node of such a tree can be thought of as the root of the\nsubtree that it dominates.  Thus subtrees can be thought of as the same\ntype as the trees they are embedded in, hence the designation\neTree, for embedding tree.  Whereas in a\ntree the relationship among the parts is indicated by the\nchildren attribute, and by the names of the elements\nroot, iNode, and leaf, the relationship among\nthe parts of an eTree is indicated simply by the arrangement of\ntheir content.  However, we have chosen to enable encoders to\ndistinguish the terminal elements of an eTree by means of the\nempty eLeaf element, though its use is not required; the\neTree element can also be used to identify the terminal nodes\nof eTree elements.  We also provide a triangle\nelement, which can be thought of as an underspecified\neTree, i.e. an eTree in which certain information\nhas been left out.  In addition, we provide a forest element,\nwhich consists of one or more tree, eTree, or\ntriangle elements, and a listForest element, which\nconsists of one or more forest elements.  The elements used for\nthe encoding of embedding trees and the units containing them have the\nfollowing descriptions and attributes.\n\n<eTree> provides an alternative to the tree element for representing ordered rooted tree structures.\n<triangle> provides for an underspecified eTree, that is, an eTree with\n  information left out.\n<eLeaf> provides explicitly for a leaf of an embedding tree, which may also\nbe encoded with the eTree element.\n<forest> provides for groups of rooted trees.\n<listForest> provides for lists of forests.\n\nLike the root, iNode, and leaf of a\ntree, the eTree, triangle and\neLeaf elements may also have \nvalue attributes and label children.\nTo illustrate the use of the eTree and eLeaf\nelements, here is an encoding of the second example in section 19.2 Trees, repeated here for convenience.\n\n\nbibliography\nNext, we provide an encoding, using the triangle element, in\nwhich the internal structure of the eTree labeled NP is\nomitted.\n\n\nbibliography\n\nAmbiguity involving alternative tree structures associated with the\nsame terminal sequence can be encoded relatively conveniently using a\ncombination of the exclude and copyOf attributes\ndescribed in sections 16.8 Alternation and 16.6 Identical Elements and Virtual Copies.  In\nthe simplest case, an eTree may be part of the content of\nexactly one of two different eTree elements.  To mark it up,\nthe embedded eTree may be fully specified within one of the\nembedding eTree elements to which it may belong, and a\nvirtual copy, specified by the copyOf attribute, may appear\non the other.  In addition, each of the embedded elements in question\nis specified as excluding the other, using the exclude\nattribute.  To illustrate, consider the English phrase see the\nvessel with the periscope, which may be considered to be\nstructurally ambiguous, depending on whether the phrase with\nthe periscope is a modifier of the phrase the\nvessel or a modifier of the phrase see the\nvessel.  This ambiguity is indicated in the sketch of the\nambiguous tree by means of the dotted-line arcs.  The markup using the\ncopyOf and exclude attributes follows the\nsketch.\n\n\nbibliography\nTo indicate that one of the alternatives is selected, one may specify\nthe select attribute on the highest eTree as\neither #GD-PPA or #GD-PPB; see section\n16.8 Alternation. \nDepending on the grammar one uses to associate structures with\nexamples like see the man with the periscope, the\nrepresentations may be more complicated than this.  For example,\nadopting a version of the X-bar theory of phrase structure\noriginated by Jackendoff,4 the\nattachment of a modifier may require the creation of an intermediate\nnode which is not required when the attachment is not made, as shown in\nthe following diagram.  A possible encoding of this ambiguous structure\nimmediately follows the diagram.\n\n\nbibliography\n\nA derivation in a generative grammar is often thought\nof as a set of trees.  To encode such a derivation, one may use the\nforest element, in which the trees may be marked up using the\ntree, the eTree, or the triangle element.\nThe type attribute may be used to specify what kind of\nderivation it is.  Here is an example of a two-tree forest, involving\napplication of the wh-movement transformation in\nthe derivation of what you do (as in this is\nwhat you do) from the underlying you do\nwhat.5\n\n\nbibliography\nIn this markup, we have used copyOf attributes to provide\nvirtual copies of elements in the tree representing the second stage of\nthe derivation that also occur in the first stage, and the\ncorresp attribute (see section 16.5 Correspondence and Alignment) to link\nthose elements in the second stage with corresponding elements in the\nfirst stage that are not copies of them.\nIf a group of forests (e.g. a full grammatical derivation including\nsyntactic, semantic, and phonological subderivations) is to be\narticulated, the grouping element listForest may be used.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=GD#GD\">19 Graphs, Networks, and Trees</a><a class=\"breadcrumb\" href=\"p5.xml?id=GDstem#GDstem\">19.4 Representing Textual Transmission</a>","content":"19.4 Representing Textual Transmission\n\nA stemma codicum (sometimes called just\nstemma) is a tree-like graphic structure that has become\ntraditional in manuscript studies for representing textual\ntransmission. Consider the following hypothetical stemma:\n\n\n            \nThe nodes in this stemma represent manuscripts; each has a label (a\nletter) which identifies it and also distinguishes whether the\nmanuscript is extant, lost, or hypothetical.  Extant manuscripts are\nidentified by uppercase Latin letters or words beginning with\nuppercase Latin letters, e.g., L, shown as aqua in this example;\nmanuscripts no longer existing, but providing readings which are\nattested e.g. by note or copy made before their disappearance, are\nidentified by lowercase Latin letters, e.g., t, shown as magenta in\nthis example; hypothetical stages in the textual transmission, which\ndo not necessarily correspond to real manuscripts, are given\nlowercase Greek letters, e.g., α and shown as gold in this example.\nThe stemma shown above thus suggests that (on the basis of\nsimilarities in the readings of the extant and lost manuscripts) L\nand t share textual material that is not shared with other\nmanuscripts (represented in this case by δ) even though no physical\nmanuscript attesting this stage in the textual transmission has ever\nbeen identified.\n\nManuscripts are copied from other manuscripts. The preceding\nstemma represents the hypothesis that all manuscripts go back to a common\nancestor (α), that the tradition split after that stage into two\n(β and γ), etc. Descent by copying is indicated with a solid line.\nAccording to this model, α is the earliest common hypothetical stage\nthat can be reconstructed, and all nodes below α have a single\nparent, that is, were copied from a single other stage in the\ntradition.\n\nThis familiar tree model is complicated because manuscripts\nsometimes show the influence of more than one ancestor. They may have\nbeen produced by a scribe who checked the text in one\nmanuscript of the same work whilst copying from another, or perhaps\nmade changes from his memory of a slightly different version of the\ntext that he had read elsewhere. Alternatively, perhaps scribe A\ncopied a manuscript from one source, scribe B made changes in it in\nthe margins or between the lines (either by consulting another source\ndirectly or from memory), and another scribe then copied that\nmanuscript, incorporating the changes into the body.  Whatever the\nspecific scenario, it is not uncommon for a\nmanuscript to be based primarily on one source, but to incorporate\nfeatures of another branch of the tradition. This mixed result is\ncalled contamination, and it is reflected in a stemma by a\ndotted line. Thus, the example above asserts that A is copied within\nthe ε tradition, but is also contaminated from the γ\ntradition.\n            \nThe utility of a stemma as a visualization tool is inversely\nproportional to the degree of contamination in the manuscript\ntradition. A tradition completely without contamination (called a\nclosed tradition) yields a classic tree,  easily\nrepresented graphically by a stemma. An open tradition, with\nsubstantial contamination, yields a spaghetti-like stemma\ncharacterized by crossing dotted lines, which is both difficult to\nread and not very informative.\n\nThe eTree element introduced in this chapter can be used\nto represent a closed tradition in a straightforward manner. Each\nnon-terminal node is represented by a typed eTree element and\neach terminal node by an eLeaf. A label element\nprovides a way of identifying each node, complementary to the global\nattributes n and xml:id attributes. For example,\nthe closed part of the tradition headed by the label δ may be encoded\nas follows:\nbibliography\nTo complete this representation, we need to show that the node\nlabelled A is not derived solely from its parent node (labelled ε)\nbut also demonstrates contamination from the node labelled γ. The\neasiest way to accomplish this is to include an appropriately-typed\nptr element within the node in question, the\ntarget of which points to the node labelled γ. This\nrequires that this latter node be supplied with a value for its\nxml:id attribute. The complete representation is thus:\nbibliography\n\nIn any substantial codicological project, it is likely that\nsignificantly more data will be required about the individual\nwitnesses than indicated in the simple structures above. These\nGuidelines provide a rich variety of additional elements for\nrepresenting such information: see in particular chapters 10 Manuscript Description, 11 Representation of Primary Sources, and 12 Critical Apparatus.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=GD#GD\">19 Graphs, Networks, and Trees</a><span class=\"breadcrumb\">19.5 Module for Graphs, Networks, and Trees</span>","content":"\n  19.5 Module for Graphs, Networks, and Trees\n  The module described in this chapter makes available the\n  following components:\n  \n    Graphs, networks, and trees\n    Graphs, networks, and trees\n    \n    \n    \n    \n    \n  \n\n  The selection and combination of modules to form a TEI schema is\n  described in 1.2 Defining a TEI Schema.\n  \n  \n  \n  \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=NH#NH\">20 Non-hierarchical Structures</a>","content":"\n    20 Non-hierarchical Structures\n    XML employs a strongly hierarchical document model. At various\n    points, these Guidelines discuss problems that arise when using\n    XML to encode textual features that either do not naturally lend\n    themselves to representation in a strictly hierarchical form or\n    conflict with other hierarchies represented in the\n    markup. Examples of such situations include: \n                Conflict between the hierarchy established by the\n                physical structure of a document (e.g., volume, page,\n                column, line) and its rhetorical or linguistic\n                structure (e.g., chapters, paragraphs, sentences,\n                acts, scenes, etc.)\n            \n                Conflict between a verse text's metrical structure\n                (e.g., its arrangement in stanzas and metrical lines)\n                and its rhetorical or linguistic structure (e.g.,\n                phrases, sentences, and, for plays, acts, scenes, and\n                speeches).\n            \n                Conflict between metrical, rhetorical, or\n                linguistic structure and the representation of direct\n                speech, especially if the quoted speech is interrupted\n                by other elements (e.g., What, she asked,\n                was that all about) or crosses metrical,\n                rhetorical, or linguistic boundaries.\n            \n                Conflict between different analytical views or\n                descriptions of a text or document, e.g., markup\n                intended to encode diplomatic information about a\n                word's appearance in a manuscript with markup intended\n                to describe its morphology or pronunciation.\n            \n    \n    Non-nesting information poses fundamental problems for any\n    XML-based encoding scheme, and it must be stated at the outset\n    that no current solution combines all the desirable attributes of\n    formal simplicity, capacity to represent all occurring or\n    imaginable kinds of structures, suitability for formal or\n    mechanical validation. The representation of non-hierarchical\n    information is thus necessarily a matter of trade-offs among\n    various sets of advantages and disadvantages.\n    These Guidelines support several methods for handling\n    non-hierarchical information: \n                redundant encoding of information in multiple forms\n                (discussed in 20.1 Multiple Encodings of the Same Information)\n            \n                the use of empty elements to delimit the boundaries\n                of a non-nesting structure (discussed in 20.2 Boundary Marking with Empty Elements)\n            \n                the division of a logically single non-nesting\n                element into segments that nest properly in their\n                immediate hierarchical context but can also be\n                reconstituted virtually across these hierarchical\n                boundaries (discussed 20.3 Fragmentation and Reconstitution of Virtual Elements)\n            \n                stand-off markup: the annotation of information by\n                pointing at it, rather than by placing XML tags within\n                it (discussed in 20.4 Stand-off Markup)\n             Some of these methods can be used in TEI-conformant documents. Others\n        require extension. \n    In the sections which follow these techniques are described and their advantages and\n        disadvantages are briefly discussed. The various solutions to the problem will be\n        exemplified using extracts from two poems. The first is the opening quatrain from William\n        Wordsworth's Scorn not the sonnet: \n            \n            \n            \n            \n         The second example is the third stanza from the fourth section of Robert Pinsky's\n            Essay on Psychiatrists: \n            \n         These two texts can be analysed in various ways. The first, which we might describe\n        as the Metrical View, encodes the text according to its metrical\n        features: line divisions (as here), stanzas or cantos in larger poems, and perhaps prosodic\n        features like stress or syllable patterns, alliteration, or rhyme. A second view, which we\n        might describe as the Grammatical, encodes linguistic and rhetorical\n        features: phonemes, morphemes, words, phrases, clauses, and sentences. A third view, the\n            Dialogic, might concentrate on narrative voice: distinguishing\n        between the narrator and their interlocutors and identifying individual segments as direct\n        quotations. In our examples, we will restrict ourselves to relatively simple conflicts: for\n        the Metrical View we will encode only metrical lines and line groups; for the\n            Grammatical View we will restrict ourselves to encoding sentences; and for\n        the Dialogic View, we only will distinguish direct quotation from other\n        narration.\n    \n    \n    \n    \n    \n    \n    \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=NH#NH\">20 Non-hierarchical Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=NHME#NHME\">20.1 Multiple Encodings of the Same Information</a>","content":"\n        20.1 Multiple Encodings of the Same Information\n        Conceptually, the simplest method of disentangling two (or\n        more) conflicting hierarchical views of the same information\n        is to encode it twice (or more), each time capturing a single\n        view.\n        Thus, for example, the Metrical View of Scorn not the\n                sonnet might be encoded as follows, using the l element to encode\n            each metrical line: bibliography\n        The Grammatical View would be encoded by\n        taking the same text and replacing the metrical markup with\n        information about its sentence structure: bibliography\n        Likewise, the more complex passage from Pinsky could be\n        encoded in three different ways to reflect the different\n        metrical, grammatical, and dialogic views of its text: bibliography\n\nbibliography\n\nbibliography\n\n        \n        This method is TEI-conformant. Its advantages are that each\n        way of looking at the information is explicitly represented in\n        the data and that the individual views are simple to\n        process. The disadvantages are that the method requires the\n        maintenance of multiple copies of identical textual content\n        (an invitation to inconsistency) and that there is no explicit\n        indication that the various views, which might be in separate\n        files, are related to each other: it might prove difficult to\n        combine the views or access information from one view while\n        processing the file that contains the encoding of\n        another.1\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=NH#NH\">20 Non-hierarchical Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=NHBM#NHBM\">20.2 Boundary Marking with Empty Elements</a>","content":"\n        20.2 Boundary Marking with Empty Elements\n        A second method for accommodating non-hierarchical objects\n        in an XML document involves marking the start and end points\n        of the non-nesting material. This prevents textual features\n        that fall outside the privileged hierarchy from invalidating\n        the document while identifying their beginnings and ends for\n        further processing. The disadvantage of this method is that no\n        single XML element represents the non-nesting material and, as\n        a result, processing with XML technologies is significantly\n        more difficult.\n        The empty elements used at each end are called\n        segment-boundary elements or\n        segment-boundary delimiters. There are several\n        variations on this method of encoding.\n\n        For some common structural features, the TEI provides\n        milestone elements that can be used to mark the beginning of a\n        textual feature. These include lb, pb,\n        cb, handShift, and the generic\n        milestone. Using lb, for example, it is\n        possible to indicate both the physical lineation of a poem on\n        the page and its grammatical division into sentences:\nbibliography\n\t\n\tThe use of these elements is by definition TEI-conformant. \n\t  Care should be taken, however, that the meaning of\n\tthe milestone elements is preserved: semantically, for\n\texample, lb is used to mark the start of a new\n\t(typographical) line. While in much modern poetry,\n\ttypographical and metrical line divisions correspond,\n\tlb does not itself make a metrical claim: in encoding\n\tverse from sources, such as Old English manuscripts, where\n\tphysical line breaks are not used to indicate metrical\n\tlineation, the correspondence would break down entirely.\n\n\n        The segment boundaries also may be delimited by the generic\n        anchor element.  Attributes can then be used to\n        indicate the type of feature being delimited and whether a\n        given instance opens or closes the feature. bibliography\n        \n        This method is TEI-conformant.\n\n\n        Another approach is to design custom elements that provide\n        richer information about the feature being delimited or its\n        boundaries. This information can be included as attribute\n        values or as part of the element name itself: e.g.,\n        boundaryStart\n        element=\"sentence\"/... boundaryEnd\n        element=\"sentence\"/, sentenceBoundary\n        position=\"start\"/... sentenceBoundary\n        position=\"end\"/, or sentenceBoundaryStart/...\n        sentenceBoundaryEnd/:\n\nbibliography\n        \n        If the custom elements can be replaced by TEI elements and\n        attributes without loss of information, this method is TEI-conformant\n        (see 23.4 Conformance); if the custom elements\n        introduce information or distinctions that cannot be captured\n        using standard TEI elements, the method is an extension.\n\n\n        Finally, elements that are normally used to encode nesting\n        textual features (e.g., said, seg,\n        l, etc.) can be adapted so that they serve as empty\n        segment boundary delimiters when the features they encode\n        cross-hierarchical boundaries.  Additional attributes (sID and eID in\n        the example below) are added to these elements in order to\n        allow the unambiguous correlation of start and end\n        points. This method has been introduced in the markup\n        literature under various names, including Trojan milestones,\n        HORSE markup, CLIX, and COLT. It is described in detail by\n        \n        \n          \n            Steven\n            DeRose\n          \n          Markup overlap: a review and a horse\n          http://www.mulberrytech.com/Extreme/Proceedings/html/2004/DeRose01/EML2004DeRose01.html\n        \n        \n          Proceedings of Extreme Markup Languages 2004\n          \n            2004\n          \n        \n      1 ): bibliography Depending on how the modifications are carried out, \n          this method may be TEI-conformant, may represent an extension of the \n          TEI, or may produce a non-conformant document. The method is TEI-conformant if the modified\n                elements and attributes can be mapped without loss of\n                information to existing TEI markup structures such as\n                milestone or anchor elements automatically (see 23.4 Conformance).The method represents an Extension if the\n                modified elements are placed in a distinct, non-TEI\n                namespace (see 23.4 Conformance).The method is non-conformant—and indeed strongly\n                deprecated—if the modified elements and attributes are\n                not placed in a distinct, non-TEI namespace (see 23.4.3 Conformance to the TEI Abstract Model).\n\n\n\n        In each of the above examples (except the last), the relationship between the start and\n            end delimiters (where these exist) of a given feature is implicit: it is assumed that\n            \"end\" delimiters close the nearest preceding \"start\" delimiter, or, in the case of\n            milestones, that the milestone marks both the end of the preceding example and the\n            beginning of the next. Complications arise, however, when the non-nesting text overlaps\n            with other non-nesting text of the same type, as, for example, in a grammatical analysis\n            of the various possible interpretations of the  noun phrase\n            fast trains and planes. In this case, the adjective fast\n            can be understood as either modifying trains and planes or just\n                trains: \n        In order to encode the possible analyses of this phrase, an\n        unambiguous method of associating opening and closing segment\n        boundary delimiters is required: bibliography\n        \n        In this encoding, the first interpretation, in which\n        fast modifies the NP trains\n        and planes, the NP trains and\n        planes is opened using an anchor tag with\n        the xml:id value\n        NPInterpretationA and closed with an\n        anchor with the same value on corresp; in\n        the second interpretation, in which\n        fast forms a NP with\n        trains, the NP fast\n        cars is opened using an anchor tag with\n        the xml:id value\n        NPInterpretationB and closed with an\n        anchor tag that has the same value on\n        corresp.\n        Despite their advantages, segment boundary delimiters incur\n        the disadvantage of cumbersome processing: since the elements\n        of the analysis (e.g., the sentences in the poems, or phrases\n        in the above example) are not uniformly represented by nodes\n        in the document tree, they must be reconstituted by software\n        in an ad hoc fashion, which is likely to be difficult and may\n        be error prone.\n        Most important for some encoders, the method also disguises\n        the relationship between the beginning and the ending of each\n        logical element. This makes it impossible for standard\n        validation software to provide the same kind of validation\n        possible elsewhere in the encoding. When using grammar-based\n        schema languages it is not possible to define a content model\n        for the range limited by empty elements.2\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=NH#NH\">20 Non-hierarchical Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=NHVE#NHVE\">20.3 Fragmentation and Reconstitution of Virtual Elements</a>","content":"\n        20.3 Fragmentation and Reconstitution of Virtual Elements\n        A third method involves breaking what might be considered a\n        single logical (but non-nesting) element into multiple smaller\n        structural elements that fit within the dominant hierarchy but\n        can be reconstituted virtually. For example, if a passage of\n        direct discourse begins in the middle of one paragraph and\n        continues for several more paragraphs, one could encode the\n        passage as a series of said elements, each fitting\n        within a p element. The resulting encoding is valid\n        XML, but the text in each said element represents\n        only a portion of the complete passage of direct\n        discourse. For this reason these elements are sometimes called\n        partial elements.\n        In the case of our selection from Pinsky's poem, for\n        example, the second passage of direct quotation, which crosses\n        a line boundary and is broken up by a She\n        said in the narrator's voice, can be made to fit\n        within the hierarchy established by the metrical lineation by\n        using two said elements:\n\nbibliography\n\n\tSimilarly, the sentences in our example from Wordsworth\n\tcould be encoded:\nbibliography\n        There are two main problems with this type of encoding. The\n        first is that it invariably means that the encoding will have\n        more elements claiming to represent a feature than there are\n        actual instances of that feature in the text. Thus, for\n        example, the passage from Scorn not the\n        sonnet marks seven spans of text using seg,\n        even though there are only four linguistic sentences in the\n        passage.\n        The second problem is that it can be semantically\n        misleading. Although they are tagged using the element for\n        sentence, for example, very few of the textual\n        features encoded using seg in this example represent\n        actual linguistic sentences: with this\n        key, for example, is a prepositional phrase, not a\n        sentence; Of this small lute gave ease to\n        Petrarch's wound is a string corresponding to no\n        single grammatical category.\n        Taken together, these problems can make automatic analysis\n        of the fragmented features difficult. An analysis that\n        intended to count the number of sentences in Wordsworth's\n        poem, for example, would arrive at an inflated figure if it\n        understood the seg elements to represent complete\n        rhetorical sentences; if it wanted to do an analysis of his\n        syntax, it would not be able to assume that seg\n        delimited linguistic sentences.\n        The technique of fragmentation is often complemented by the\n        technique of virtual joins.  Virtual joins may be used to\n        combine objects in the text to a new hierarchy. Here is Scorn not the sonnet again; this time the\n        relationship between the parts of the fragmented sentences is\n        indicated explicitly using the next and\n        prev attributes described in 16.7 Aggregation.\n\t\nbibliography This method of virtually joining partial elements is sometimes called\n                chaining. \n        For fragments encoded using ab, l,\n        lg, div, or elements that belong to the\n        att.segLike class, an even simpler\n        mechanism for virtually joining fragments exists: the use of\n        the part attribute with the value\n        I (Initial), M\n        (Medial), or F (Final) as described in\n        16.3 Blocks, Segments, and Anchors.  Here is the above example recoded to\n        reflect this method: bibliography\n        This method is TEI-conformant and simple to use. Its\n        disadvantage is that it does not work well for cases of\n        self-overlap, or if there are nested occurrences of the same\n        element type, as it can become difficult to ascertain which\n        initial, medial, or final partial element should be combined\n        with which others or in which order. This problem becomes\n        evident if we attempt to combine a detailed Grammatical view\n        of the Pinsky example with its metrical encoding:\nbibliography\n\n\tA third method for aggregating fragmented partial elements\n\tinvolves using markup that is not directly part of the\n\tencoding, e.g., the join element. In this method, a\n\tjoin element is used elsewhere in the document to\n\tindicate explicitly the members of the virtual element:\n\nbibliography\n\t\n        This use of join is TEI-conformant.\n        The major advantage of fragmentation and virtual joins is\n        that it allows all the hierarchies in the text to be handled\n        explicitly: both the privileged one directly represented and\n        the alternate hierarchy that has been split up and\n        rejoined. The major disadvantages are that (like most of the\n        other methods described here) it privileges one hierarchy over\n        the others, requires special processing to reconstitute the\n        elements of the other hierarchies, and, except in the case of\n        join, can be semantically misleading.\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=NH#NH\">20 Non-hierarchical Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=NHSO#NHSO\">20.4 Stand-off Markup</a>","content":"\n        20.4 Stand-off Markup\n        Most markup is characterized by the embedding of elements\n        in the text. An alternative approach separates the text and\n        the elements used to describe it. This approach is known as\n        stand-off markup (see section 16.9 Stand-off Markup). It\n        establishes a new hierarchy by building a new tree whose nodes\n        are XML elements that do not contain textual content, but\n        rather links to another layer: a node in\n        another XML document or a span of text. This approach\n        can be subdivided according to different criteria. A first\n        distinction concerns the link base, i.e. the content to which\n        annotations are to be applied. Sometimes the link target\n        contains markup that can be referred to explicitly, as in the\n        following example where the offset markup uses the\n        xml:id values on w to provide targets for\n        xi:include3: bibliography\n\n  Note that the layer that uses XInclude to build another hierarchy\n  might well be in another document, in which case the value of href of xi:xinclude would need to be\n  the URL of the document that contains the base layer, in this case\n  the w elements.\n        \n\n        This is very similar to the use of join discussed\n        above. The main advantages of the stand-off method are that it\n        is possible to specify attributes on the aggregate\n        seg elements, and that there exists off-the-shelf\n        software that will perform appropriate processing. Stand-off\n        markup may be used even when the base text being annotated is\n        plain text, i.e. does not have any XML encoding. In this case,\n        the range of text to be marked up is indicated by character\n        offsets (see 16.2.4 TEI XPointer Schemes, in particular 16.2.4.7 string-range()). Another distinction concerns the number\n        of files which can serve as link targets. Often, one\n        (dedicated) annotation is used as the link target of all the\n        other annotations. It is also possible to freely interlink\n        several layers.\n        It has been noted that stand-off markup has several\n        advantages over embedded annotations.  In particular, it is\n        possible to produce annotations of a text even when the source\n        document is read-only. Furthermore, annotation files can be\n        distributed without distributing the source text. Further\n        advantages mentioned in the literature are that discontinuous\n        segments of text can be combined in a single annotation, that\n        independent parallel coders can produce independent\n        annotations, and that different annotation files can contain\n        different layers of information. Lastly, it has also been\n        noted that this approach is elegant.\n        But there are also several drawbacks. First, new stand-off\n        annotated layers require a separate interpretation, and the\n        layers—although separate—depend on each other. Moreover,\n        although all of the information of the multiple hierarchies is\n        included, the information may be difficult to access using\n        generic methods.\n        Inasmuch as it uses elements not included in the TEI\n        namespace, stand-off markup involves an extension of the\n        TEI.\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=NH#NH\">20 Non-hierarchical Structures</a><a class=\"breadcrumb\" href=\"p5.xml?id=NHNX#NHNX\">20.5 Non-XML-based Approaches</a>","content":"\n        20.5 Non-XML-based Approaches\n        There exist many non-XML methods of encoding a text that\n        either solve or do not suffer the problem of the inability to\n        encode overlapping hierarchies. These include, but are not\n        limited to, the following proposals.\n        Applying the notion of concurrent markup to XML\n            (\n        \n          \n            Mirco\n            Hilbert\n          \n          \n            Oliver\n            Schonefeld\n          \n          \n            Andreas\n            Witt\n          \n          Making CONCUR work\n          http://www.mulberrytech.com/Extreme/Proceedings/html/2005/Witt01/EML2005Witt01.xml\n        \n        \n          Proceedings of Extreme Markup Languages 2005\n          \n            2005\n          \n        \n      1 ). This reintroduces\n            the CONCUR feature of SGML, which was omitted from the XML\n            specification.Designing a form of document representation in which\n            several trees share all or part of the same frontier, and\n            in which each individual view of the document has the form\n            of a tree (see \n        \n          \n            Alex\n            Dekhtyar\n          \n          \n            Ionut\n            E.\n            Iacob\n          \n          A framework for management of concurrent XML markup\n          \n          \n          http://digitalcommons.calpoly.edu/cgi/viewcontent.cgi?article=1104&context=csse_fac\n          \n            2005\n          \n        \n      1 ).The colored XML proposal (\n        \n          \n            H.\n            V.\n            Jagadish\n          \n          \n            Laks\n            V.\n            S.\n            Lakshmanan\n          \n          \n            Monica\n            Scannapieco\n          \n          \n            Divesh\n            Srivastava\n          \n          \n            Nuwee\n            Wiwatwattana\n          \n          Colorful XML: one hierarchy isn't enough\n          \n          \n          \n          \n          http://web.archive.org/web/20150706093254/http://www2.research.att.com/~divesh/papers/jlssw2004-mct.pdf\n          \n            2004\n          \n        \n      1 ), which stores a body of\n            information as a set of intertwined XML trees. This\n            approach eliminates unnecessary redundancy and makes the\n            database readily updatable, while allowing the user to\n            exploit different hierarchical access paths.The MultiX proposal (\n        \n          \n            Noureddine\n            Chatti\n          \n          \n            Suha\n            Kaouk\n          \n          \n            Sylvie\n            Calabretto\n          \n          \n            Jean\n            Marie\n            Pinon\n          \n          MultiX: an XML based formalism to encode multistructured\n            documents\n          \n          \n          http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.115.1525&rep=rep1&type=pdf\n        \n        \n          Proceedings of Extreme Markup Languages 2007\n          \n            2007\n          \n        \n      1 ) , which represents documents as directed\n            graphs. Because XML is used to represent the graph, the\n            document is, at least in principle, manipulable with\n            standard XML tools.The Just-In-Time-Trees proposal (\n        \n          \n            Patrick\n            Durusau\n          \n          \n            Matthew\n            Brook\n            O'Donnell\n          \n          Coming down from the trees: next step in the evolution of markup?\n        \n        \n          Proceedings of Extreme Markup Languages 2002\n          \n            2002\n          \n        \n      1 ), which stores documents\n            using XML, but processes the XML representation in\n            non-standard ways and allows it to be mapped onto data\n            structures that are different from those known from\n            XML.The Layered Markup and Annotation\n                    Language\n                    proposal. This offers alternatives to the basic\n                    XML linear form as well as its data and processing\n                    models. It uses an alternative notation to XML and\n                    a data structure based on Core Range Algebra (\n        \n          \n            Jeni\n            Tennison\n          \n          \n            Wendell\n            Piez\n          \n          The layered markup and annotation language\n        \n        \n          Proceedings of Extreme Markup Languages Conference\n          \n            2002\n          \n        \n      1 ).Markup Languages for Complex Documents. This provides a\n                    notation (TexMECS) and a data structure (Goddag)\n                    as well as a draft constraint language for the\n                    representation of non-hierarchical structures; see\n                    \n        \n          \n            Claus\n            Huitfeldt\n          \n          \n            C.\n            Michael\n            Sperberg-McQueen\n          \n          TexMECS: An experimental markup meta-language for complex\n            documents\n          http://mlcd.blackmesatech.com/mlcd/2003/Papers/texmecs.html\n          \n            2001\n          \n        \n      1 .\n        These approaches are based either on non-standard XML\n        processing or data models, or not based on XML at all. Since\n        TEI is currently based on XML they are not described any\n        further in these Guidelines. Use of these methods with the TEI\n        will certainly involve extensions; in most cases the documents\n        will also be non-conformant.\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CE#CE\">21 Certainty, Precision, and Responsibility</a>","content":"21 Certainty, Precision, and Responsibility\nEncoders of text often find it useful to indicate that some aspects\nof the encoded text are problematic or uncertain, and to indicate who is\nresponsible for various aspects of the markup of the electronic text.\nThese Guidelines provide several methods of recording uncertainty about the\ntext or its markup:\nthe note element defined in section 3.9 Notes, Annotation, and Indexing may\nbe used with a value of certainty for its type\nattribute.the certainty element defined in this chapter may be used\nto record the nature and degree of the uncertainty in a more structured\nway.the precision element defined in this chapter may be\nused to record the accuracy with which some numerical value (such as a\ndate or quantity) is provided by some other element or attribute.the alt element defined in the module for\nlinking and segmentation may be used to provide alternative encodings\nfor parts of a text, as described in section 16.8 Alternation.\nThere are three methods of indicating responsibility for different\naspects of the electronic text:\nthe TEI header records who is responsible for an electronic text\nby means of the respStmt element and other more specific elements\n(author, sponsor, funder, principal,\netc.) used within the titleStmt, editionStmt, and\nrevisionDesc elements.the note element may be used with a value of resp\nor responsibility in its type attribute.the respons element defined in this chapter may be used\nto record fine-grained structured information about responsibility for\nindividual tags in the text.\nNo special steps are needed to use the note and respStmt elements, since they are defined in the core module and header\nrespectively.  The alt element is only available when the\nmodule for linking has been selected, as described in\nchapter 16 Linking, Segmentation, and Alignment. To use the certainty, precision or\nrespons elements, the module for certainty and\nresponsibility should be selected.  \n\n\nThese three elements are all members of an attribute class called\natt.scoping from which they inherit the\nfollowing attributes:\n\n\n<att.scoping> provides attributes for selecting particular elements\n    within a document.\n\n\nThese attributes enable statements about certainty, precision, or\nresponsibility to be made with respect to the whole of a document, or\nany part or parts of it which can be identified using standard XML\nlocation methods. Several examples are given in the discussion of the\ncertainty element below; the same mechanisms are available\nfor all three elements discussed in this chapter.\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CE#CE\">21 Certainty, Precision, and Responsibility</a><a class=\"breadcrumb\" href=\"p5.xml?id=CECERT#CECERT\">21.1 Levels of Certainty</a>","content":"21.1 Levels of Certainty\nMany types of uncertainty may be distinguished.  The\ncertainty element is designed to encode the following sorts:\na given tag may or may not correctly apply (e.g. a given word may\nbe a personal name, or perhaps not)the precise point at which an element begins or ends is\nuncertainthe value given for an attribute is uncertainthe content given for an element is unreliable for any reason.\nThe following types of uncertainty are not indicated\nwith the certainty element:\nthe numerical precision associated with a number or date (for\nthis use the precision element discussed in 21.2 Indications of Precision)\nthe content of the document being transcribed is identifiable,\nbut may be read or understood in different ways\n(for this use the transcriptional elements such as unclear,\ndiscussed in chapter 11 Representation of Primary Sources)a transcriber, editor, or author wishes to indicate a level of\nconfidence in a factual assertion made in the text (for this use the\ninterpretative mechanisms discussed in 17 Simple Analytic Mechanisms and 18 Feature Structures)\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CE#CE\">21 Certainty, Precision, and Responsibility</a><a class=\"breadcrumb\" href=\"p5.xml?id=CECERT#CECERT\">21.1 Levels of Certainty</a><a class=\"breadcrumb\" href=\"p5.xml?id=CECENO#CECENO\">21.1.1 Using Notes to Record Uncertainty</a>","content":"21.1.1 Using Notes to Record Uncertainty\nThe simplest way of recording uncertainty about markup is to attach a\nnote to the element or location about which one is unsure.  In the\nfollowing (invented) paragraph, for example, an encoder might be\nuncertain whether to mark Essex as a place name or a personal\nname, since both might be plausible in the given context:\nElizabeth went to Essex. She had always liked Essex.\nUsing note, the uncertainty here may be recorded quite simply:\nbibliography\nUsing the normal mechanisms, the note may be associated\nunambiguously with specific elements of the text, thus:\nbibliography\nThe advantage of this technique is its relative simplicity. Its\ndisadvantage is that the nature and degree of uncertainty are not\nconveyed in any systematic way and thus are not susceptible to any sort\nof automatic processing."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CE#CE\">21 Certainty, Precision, and Responsibility</a><a class=\"breadcrumb\" href=\"p5.xml?id=CECERT#CECERT\">21.1 Levels of Certainty</a><a class=\"breadcrumb\" href=\"p5.xml?id=CECECE#CECECE\">21.1.2 Structured Indications of Uncertainty</a>","content":"21.1.2 Structured Indications of Uncertainty\nTo record uncertainty in a more structured way, susceptible of at\nleast simple automatic processing, the certainty element may be\nused:\n<certainty> indicates the degree of certainty associated\n  with some aspect of the text markup.\nReturning to the example, the certainty element may be used to record doubts about\nthe proper encoding of Essex in several ways of varying\nprecision.  To record merely that we are not certain that Essex\nis in fact a place name, as it is tagged, we use the target\nattribute to identify the element in question, and the locus\nattribute to indicate which aspect of the markup we are uncertain about\n(in this case, whether we have used the correct name for the\nelement used to mark it):\nbibliography\nThere are no particular constraints as to where the \ncertainty element is placed in a document; it may be placed adjacent to the target\nelement, or elsewhere in the same or another document.  Its position\nis however significant when the target attribute is not specified\nas further discussed below.\n\nWe may wish to record the probability, assessed in some subjective\nway, that Essex really is  a place name here. The\ndegree attribute is used to indicate the degree of\nconfidence associated with the certainty element, expressed as a\nnumber between 0 and 1:\n\nThis expresses the point of view that there is a 60 percent chance of Essex\nbeing a place name here, and hence a 40 percent chance of its being a\npersonal name. We can use two certainty elements to indicate the\ntwo probabilities independently. Both elements indicate the same location in the\ntext, but the second provides an alternative choice of name\nidentifier (in this case persName), which is given as the\nvalue of the assertedValue attribute:\nbibliography\n\nIn the simplest case, it is also possible to place the\ncertainty element within the element concerned:\n\nbibliography\nWhen  no  target  is specified, by default the proposed\ncertainty applies to its parent element, in this case the\nplaceName element. The match attribute discussed\nbelow may be used to further vary this behaviour.\n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CE#CE\">21 Certainty, Precision, and Responsibility</a><a class=\"breadcrumb\" href=\"p5.xml?id=CECERT#CECERT\">21.1 Levels of Certainty</a><a class=\"breadcrumb\" href=\"p5.xml?id=CECECE#CECECE\">21.1.2 Structured Indications of Uncertainty</a><a class=\"breadcrumb\" href=\"p5.xml?id=CEconcon#CEconcon\">21.1.2.1 Contingent Conditions</a>","content":"21.1.2.1 Contingent Conditions\n\nFinally, we may wish to make our probability estimates contingent\non some condition.  In the passage Elizabeth went to Essex; she had\nalways liked Essex, for example, we may feel there is a 60 percent chance\nthat the county is meant, and a 40 percent chance that the earl is meant.  But\nthe two occurrences of the word are not independent:  there is (we may\nfeel) no chance at all that the first occurrence refers to the county\nand the second\nto the earl.  We can express this by using the given\nattribute to list the identifiers of certainty elements.\nbibliography\nWhen given conditions are listed, the certainty\nelement is interpreted as claiming a given degree of confidence in a\nparticular markup given the assertional content of the\ncertainty elements indicated. That is, a conjectural\nassertion is being made solely on the assumption that the\ninterpretation indicated by the element named by the given\nattribute is actually correct.\n\nConditional confidence may be less than 100 percent:  given the sentence\nErnest went to old Saybrook, we may interpret Saybrook as\na personal name or a place name, assigning a 60 percent probability to the\nformer. If it is a place name, there may be a 50 percent chance that the\nplace name actually in question is Old Saybrook rather than\nSaybrook, while if it is correctly tagged as a personal name, it\nis much more likely (say, 90 percent certain) that the name is Saybrook.\nHence there is uncertainty about the correct location for the markup\nas well as about which markup to use.  This state of affairs can be expressed using the certainty element thus:\nbibliography\n\nNote the use of the assertedValue on certainty\nelements cert3 and cert4 to reference\nthe anchor element placed at the alternative starting\npoint for the element.\n\nMultiplying the numeric values out, this markup may be interpreted as\nassigning specific probabilities to three different ways of\nmarking up the sentence:\nbibliography\nThe probabilities do not add up to 1.00 because the markup indicates\nthat if Saybrook is (part of) a personal name, there is a\n10 percent likelihood that the element should start somewhere other than the\nplace indicated, without however giving an alternative location; there\nis thus a 6 percent chance (0.1 × 0.6) that none of the alternatives given is\ncorrect.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CE#CE\">21 Certainty, Precision, and Responsibility</a><a class=\"breadcrumb\" href=\"p5.xml?id=CECERT#CECERT\">21.1 Levels of Certainty</a><a class=\"breadcrumb\" href=\"p5.xml?id=CECECE#CECECE\">21.1.2 Structured Indications of Uncertainty</a><span class=\"breadcrumb\">21.1.2.2 Pervasive Conditions</span>","content":"21.1.2.2 Pervasive Conditions\nWe may also wish to indicate confidence in some aspect\nof the tagging throughout a document, rather than (as discussed so far) in one\nparticular instance. The match attribute may be used to\nsupply a pattern identifying the portion of a document\nconcerning which certainty is being expressed. The value of the\nmatch attribute is an XSLT selection pattern\nusing the syntax defined in 1 . In the following\nexample, we wish to indicate a low degree of confidence\nthat the persName elements used throughout the whole document\nhave been correctly applied:\n\n\n\nNo target has been supplied here, and so by default the\ncertainty expressed would therefore apply to the parent\nelement. However, in this case the XPath supplied as the value for\nmatch returns a set of all the persName elements\nin the document, independent of the current context. By contrast, in\nthe following example\nbibliography\nonly the persName elements within the second div\nelement are in question.\nSimilarly, we may indicate that we have more\nconfidence in the persName tagging within those div\nelements which have a type value of checked:\n\n\n\nIf an element in a document is matched by more than one match\nexpression, then the most specific pattern applies. 1 As a\nsimple case, if both the preceding certainty elements were\npresent in the same document, a persName occurring within a\ndiv type=\"checked\" element would potentially match both\npattern expressions. However because the second pattern is more\nspecific than the former, in fact this is the only one that would\napply. If multiple patterns match and have the same priority, then the\nfirst one (in document order) is applied. Only those statements of certainty\nwhich have matched in this sense are available for conditional\napplication using the given attribute mentioned above.\n\nWhen the match attribute is processed, the namespace bindings in\nforce are those in effect at that point in the document. \nFor example, \n\nmight be used to indicate a high degree of certainty about the content\nof any elements taken the namespace associated with the prefix\nmy. This namespace prefix must be associated with an\nappropriate namespace definition, either on the certainty\nelement itself, or on one of its ancestor elements.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CE#CE\">21 Certainty, Precision, and Responsibility</a><a class=\"breadcrumb\" href=\"p5.xml?id=CECERT#CECERT\">21.1 Levels of Certainty</a><a class=\"breadcrumb\" href=\"p5.xml?id=CECECE#CECECE\">21.1.2 Structured Indications of Uncertainty</a><span class=\"breadcrumb\">21.1.2.3 Content Uncertainty</span>","content":"21.1.2.3 Content Uncertainty\n\nDoubts about whether the content of an element is correct may also be expressed\nby assigning to locus the value\nvalue.  For example, if the source is\nhard to read and so the transcription is uncertain:\nbibliography\nDegrees of confidence in the proper expansion of abbreviations may\nalso be expressed, as in the following example:bibliography\nThe assertedValue attribute should be used to provide an\nalternative value for whatever aspect of the markup is in doubt:  an\nalternative name, or the identifier of an alternative starting or\nending point, as already shown, an alternative attribute value, or\nalternative element content, as in this example:\nbibliography\n  Since attribute values have no internal substructure, the\n  assertedValue attribute is not generally useful for\n  specifying alternative transcriptions; it cannot for example be used\n  if the alternative reading contains markup of any kind.  More robust\n  methods of handling uncertainties of transcription are the\n  unclear element and the app and rdg\n  elements described in chapter 12 Critical Apparatus.  The\n  certainty element allows for indications of uncertainty to\n  be structured with at least as much detail and clarity as appears to\n  be currently required in most ongoing text projects.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CE#CE\">21 Certainty, Precision, and Responsibility</a><a class=\"breadcrumb\" href=\"p5.xml?id=CECERT#CECERT\">21.1 Levels of Certainty</a><a class=\"breadcrumb\" href=\"p5.xml?id=CECECE#CECECE\">21.1.2 Structured Indications of Uncertainty</a><span class=\"breadcrumb\">21.1.2.4 Target or Match?</span>","content":"21.1.2.4 Target or Match?\n\nAs noted in 16 Linking, Segmentation, and Alignment, the target attribute\nmay take any general teidata.pointer as values and may thus\nalso contain an XPath expression of arbitrary complexity. Because full\nsupport for XPath is not provided by current processors, it is not\ngenerally recommended TEI practice. There are however some simple\ncases in which XPath syntax is to be preferred, notably those in which\nthe xml:id attribute is used to identify a single element\noccurrence. The usage #A (to indicate the element whose\nxml:id attribute has the value A) is\nsyntactically much simpler than the equivalent xpath2 expression\n//*[@xml:id='A'] and is hence preferred throughout these\nguidelines.\n\nFor similar reasons, the certainty element may specify\nboth a target value (expressed as an URI) and a\nmatch value  (expressed as an XPath). The former defines\nthe context within which the latter is to be evaluated. As previously\nnoted, if no value is supplied for target, the context\nwithin which the value of match should be evaluated is the\nparent element of the certainty element itself. \n\nA typical case where it may be convenient to specify both\ntarget and match is that where we wish to\nindicate that the value of  an attribute on some specific element  is\nuncertain. In this case, the locus attribute\ntakes the value value. For example, supposing there is only a 50 percent chance that the question was spoken by\nparticipant A:\nbibliography or, equivalently and without the\nneed to define a target,\nbibliography \n\n\n\nThe match and target attributes together\nprovide a powerful mechanism which can be used to indicate precision for a\nlarge number of assertions throughout an encoded document in an\neconomical way. Some further\nexamples follow:\n\nThis encoding indicates that there is only a 0.2 certainty that the\nboundaries of all p elements in the document have been correctly\nidentified.\n\n\nThis encoding indicates that there is only a 0.2 certainty that the\nboundaries of the p elements contained by the element with\nxml:id value a101 have been correctly\nidentified.\n\n\nbibliography\nThis encoding indicates that there is only a 0.2 certainty that the\nvalue for the resp attribute on the given persName\nelement\nis correct.\n\n\nThis encoding indicates that there is only a 0.2 certainty that any\nvalue for the resp attribute is correct, wherever it\nappears in the document.\n\n\nThis encoding indicates that there is only a 0.2 certainty that the\nvalue for the resp attribute of the element indicated by\nthe pointer #dd001 is correct\n\n\nThis encoding indicates that there is only a 0.2 certainty that the\ncontent of any element the resp attribute of which has the\nvalue #LB is correct, wherever it\nappears in the document.\n\nThe certainty element and the other TEI mechanisms for\nindicating uncertainty provide a range of methods of graduated\ncomplexity.  Simple expressions of uncertainty may be made by using\nthe note element.  This is simple and convenient, and can\naccommodate either a discursive and unstructured indication of\nuncertainty, or a complex and structured but probably project-specific\nexpression of uncertainty.  In general, however, unless special steps\nare taken, the note element does not provide as much\nexpressive power as the certainty element, and in cases where\nhighly structured certainty information are needed, it is\nrecommended that the certainty element be preferred.\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CE#CE\">21 Certainty, Precision, and Responsibility</a><a class=\"breadcrumb\" href=\"p5.xml?id=CEPREC#CEPREC\">21.2 Indications of Precision</a>","content":"21.2 Indications of Precision\nAs noted above, certainty about the accuracy of an encoding or its\ncontent is not the same thing as the precision with which\na value is specified. In the case of a date or a quantity, for example, we might be\ncertain that the value given is imprecise, or  uncertain\nabout whether or not the value given is correct. The latter\npossibility would be represented by the certainty element\ndiscussed in the previous section; the former by the\nprecision element discussed in this section.\nThe elements concerning which statements of precision are to be\nmade are identified using the same target and\nmatch attributes inherited from the\natt.scoping class discussed in the\nprevious section and in the same way. Other aspects are provided by\nother attributes as further discussed below.\n\n<precision> indicates the numerical accuracy or precision  associated\n  with some aspect of the text markup.\n\n\nIn 3.6.3 Numbers and\nMeasures several ways of indicating ranges of\nvalues were introduced. For example, if we know that a date falls between\n1930 and 1935, without being certain exactly where, this fact may be\nencoded using attributes notBefore and\nnotAfter, as in the following example:\nbibliography\nEqually, if we know that every page of a\nmanuscript has a width of at least 10 cm but no more than 30, we can\nuse the attributes atLeast and atMost, as in the\nfollowing examples:\n\n\nSuppose however that the precision with which the value\nof such an attribute can be specified is variable. For example,\nsuppose an event is dated about fifty years after the death of\nAugustus. In this case, the precision of one end of the range (the\ndeath of Augustus) is higher than the other, assuming we know when\nAugustus died. We can say that the latest possible date is probably 50\nyears after that, but with less confidence than we can attach to the\nearliest possible date.\nThe precision element allows us to indicate the two\nattributes concerned and attach different levels of precision to them,\nusing a similar mechanism as that provided for the certainty\nelement:\nbibliography\nIn much the same way, we may wish to indicate different levels of\nprecision about the dating of either end of a historical period. For example,\n the elements defined for encoding personal data all bear a similar\n set of attributes to indicate normalized values for earliest or\n latest dates, etc. (see section\n 13.1.2 Dating Attributes); the precision of these attribute values\n may be indicated in exactly the same way. For example, \nbibliography\n\nIt may also be useful to indicate that the precisions given for \nminimum and maximum quanta differ. For example, to indicate that all\npages measure at least 10 cm wide, and at most about 30:\n\n\nThe \nstdDeviation attribute may be used to indicate the\nstandard deviation for a range of values. The generic dim\nelement introduced in 10.3.4 Dimensions might be used to record the average\nnumber of characters per line in a typescript. If in addition we wish\nto record the standard deviation for the values summarized by that\naverage, this would require an additional precision element,\nas in the following example:\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CE#CE\">21 Certainty, Precision, and Responsibility</a><a class=\"breadcrumb\" href=\"p5.xml?id=CERESP#CERESP\">21.3 Attribution of Responsibility</a>","content":"21.3 Attribution of Responsibility\nIn general, attribution of responsibility for the transcription and\nmarkup of an electronic text is made by respStmt elements\nwithin the header: specifically, within the title statement, the\nedition statement(s), and the revision history.\nIn some cases, however, more detailed element-by-element information\nmay be desired. For example, an encoder may wish to distinguish between the\nindividuals responsible for transcribing the content and those\nresponsible for determining that a given word or phrase constitutes a\nproper noun.  Where such fine-grained attribution of responsibility is\nrequired, the respons element can be used. \n<respons> identifies the individual(s) responsible for some aspect of the content or\nmarkup of particular element(s).\nThis element allows one or more aspects of the markup to be\nattributed to a given individual.  This element inherits the\ntarget and match attributes from the\natt.scoping class, in the same way as the\ncertainty and precision elements. Its \nlocus attribute functions in the same way as that on the\ncertainty element (see 21.1 Levels of Certainty). It inherits the resp and cert\nattributes from the att.global.responsibility class.\n\nFor example,  the following encoding\nindicates that RC is responsible for transcribing an\nillegible word, and that PMWR is responsible for identifying that word\nas a proper noun, i.e. deciding to mark it with the persName\nelement at the location indicated:\nbibliography\nSimilarly, in the following example, we indicate that RC is\nresponsible for proposing the value of the rend attribute:  \n    \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=CE#CE\">21 Certainty, Precision, and Responsibility</a><span class=\"breadcrumb\">21.4 The Certainty Module</span>","content":"21.4 The Certainty Module\nThe module described in this chapter makes available the following\nadditional elements:\n\n\n  Certainty and Uncertainty\n  Certainty, Precision, and Responsibility\n  \n  \n  \n  \n  \n\n\n\nThe selection and combination of modules to form a TEI schema is described in\n1.2 Defining a TEI Schema.\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a>","content":"\n  22 Documentation Elements\n  This chapter describes a module which may be used for the documentation of the XML elements and element\n    classes which make up any markup scheme, in particular that described by the TEI Guidelines, and also for\n    the automatic generation of schemas or DTDs conforming to that documentation. It should be used also by\n    those wishing to customize or modify these Guidelines in a conformant manner, as further described in\n    chapters 23.3 Customization and 23.4 Conformance and may also be useful in the documentation of any\n    other comparable encoding scheme, even though it contains some aspects which are specific to the TEI and\n    may not be generally applicable.\n  An overview of the kind of processing environment envisaged for the module described by this chapter may\n    be helpful. In the remainder of this chapter we refer to software which provides such a processing\n    environment as an ODD processor.1 Like any other piece of XML software, an ODD processor may be instantiated in many ways: the\n    current system uses a number of XSLT stylesheets which are freely available from the TEI, but this\n    specification makes no particular assumptions about the tools which will be used to provide an ODD\n    processing environment.\n  As the name suggests, an ODD processor uses a single XML document to generate multiple outputs. These\n    outputs will include: formal reference documentation for elements, attributes, element classes, patterns, etc. such as\n        those provided in 3 Elements below;detailed descriptive documentation, embedding some parts of the formal reference documentation,\n        such as the tag description lists provided in this and other chapters of these Guidelines;declarative code for one or more XML schema languages, such as RELAX NG, W3C Schema, ISO\n        Schematron, or DTD.\n  \n  The input required to generate these outputs consists of running prose, and special purpose elements\n    documenting the components (elements, classes, etc.) which are to be declared in the chosen schema\n    language. All of this input is encoded in XML using elements defined in this chapter. In order to support\n    more than one schema language, these elements constitute a comparatively high-level model which can then\n    be mapped by an ODD processor to the specific constructs appropriate for the schema language in use.\n    Although some modern schema languages such as RELAX NG or W3C Schema natively support self-documentary\n    features of this kind, we have chosen to retain the ODD model, if only for reasons of compatibility with\n    earlier versions of these Guidelines. For reasons of backwards compatibility, the ISO standard XML schema\n    language RELAX NG (http://www.relaxng.org) may be used as a means of declaring content\n    models and datatypes, but it is also possible to express content models using native TEI XML constructs.\n    We also use the ISO Schematron language to define additional constraints beyond those expressed in the\n    content model, as further discussed in 22.5.2 Additional Constraints below.\n  In the TEI system, a schema is built by combining element and attribute declarations, more\n    or less as required. Each element is documented by an appropriate specification element and\n    has an identifier unique across the whole TEI scheme. For convenience, these specifications are grouped\n    into a number of discrete modules, which can also be combined more or less as required. Each\n    major chapter of these Guidelines defines a distinct module. Each module declares a number of\n      elements specific to that module, and may also populate particular classes.\n    All classes are available globally, irrespective of the module in which they are declared; particular\n    modules extend the meaning of a class by adding elements or attributes to it. Wherever possible, element\n    content models are defined in terms of classes rather than in terms of specific elements. Modules can also\n    declare particular patterns, which act as short-cuts for commonly used content models or\n    class references.\n  In the present chapter, we discuss the components needed to support this system. In addition, section\n      22.1 Phrase Level Documentary Elements discusses some general purpose elements which may be useful in any kind of\n    technical documentation, wherever there is need to talk about technical features of an XML encoding such\n    as element names and attributes. Section 22.2 Modules and Schemas discusses the elements which are used\n    to document XML modules and their high-level components. Section 22.3 Specification Elements\n    discusses the elements which document XML elements and their attributes, element classes, and generic\n    patterns or macros. Finally, section 22.9 Module for Documentation Elements provides a summary overview of the elements\n    provided by this module.\n  \n  \n  \n  \n  \n  \n  \n  \n  \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDphrase#TDphrase\">22.1 Phrase Level Documentary Elements</a>","content":"\n    22.1 Phrase Level Documentary Elements\n    \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDphrase#TDphrase\">22.1 Phrase Level Documentary Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDphraseTE#TDphraseTE\">22.1.1 Phrase Level Terms</a>","content":"\n      22.1.1 Phrase Level Terms\n      In any kind of technical documentation, the following phrase-level elements may be found useful for\n        marking up strings of text which need to be distinguished from the running text because they come from\n        some formal language: \n          <code> contains literal code from some formal language such as a\nprogramming language.\n          <ident> contains an identifier or name for an object of some kind in a formal language. ident is used for tokens such as variable names, class names, type names, function names etc. in formal programming languages.\n         Like other phrase-level elements used to indicate the semantics of a typographically\n        distinct string, these are members of the model.emphLike class. They are\n        available anywhere that running prose is permitted when the module defined by this chapter is included\n        in a schema.\n      The code and ident elements are intended for use when citing brief passages in some\n        formal language such as a programming language, as in the following example:\n        \n      \n      If the cited phrase is a mathematical or chemical formula, the more specific formula element\n        defined by the figures module (14.2 Formulæ and Mathematical Expressions) may be more\n        appropriate. \n      A further group of similar phrase-level elements is also defined for the special case of representing\n        parts of an XML document: \n          <att> \n          <gi> contains the name (generic identifier) of an element.\n          <tag> contains text of a complete start- or end-tag, possibly including attribute specifications,\n    but excluding the opening and closing markup delimiter characters.\n          <val> contains a single attribute value.\n         These elements constitute the model.phrase.xml class, which is\n        also a subclass of model.phrase. They are also available anywhere that\n        running prose is permitted when the module defined by this chapter is included in a schema. \n      As an example of the recommended use of these elements, we quote from an imaginary TEI working paper:\n        \n      \n      Within technical documentation, it is also often necessary to provide more extended examples of usage\n        or to present passages of markup for discussion. The following special elements are provided for these\n        purposes: \n          <eg> contains any kind of illustrative example.\n          <egXML> a single XML fragment demonstrating the use of some XML, such as \n    elements, attributes, or processing instructions, etc., in which the egXML element functions as the \n    root element.\n        \n      \n      Like the code element, the egXML element is used to mark strings of formal code, or\n        passages of XML markup. The eg element may be used to enclose any kind of example, which will\n        typically be rendered as a distinct block, possibly using particular formatting conventions, when the\n        document is processed. It is a specialized form of the more general q element provided by the\n        TEI core module. In documents containing examples of XML markup, the egXML element should be\n        used for preference, as further discussed below in 22.4.2 Exemplification of Components, since the content of this\n        element can be checked for well-formedness. \n      These elements are added to the class model.egLike when this module is\n        included in a schema. That class is a part of the general model.inter\n        class, thus permitting eg or egXML elements to appear either within or between\n        paragraph-like elements. \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDphrase#TDphrase\">22.1 Phrase Level Documentary Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDphraseEA#TDphraseEA\">22.1.2 Element and Attribute Descriptions</a>","content":"\n      22.1.2 Element and Attribute Descriptions\n      Within the body of a document using this module, the following elements may be used to reference\n        parts of the specification elements discussed in section 22.3 Specification Elements, in particular\n        the brief prose descriptions these provide for elements and attributes. \n          <specList> marks where a list of descriptions is to be inserted into the prose documentation.\n          <specDesc> indicates that a description of the specified element, class, or macro should be included at this\n    point within a document.\n        \n      \n      TEI practice recommends that a specList listing the elements under discussion introduce each\n        subsection of a module's documentation. The source for the present section, for example, begins as\n        follows:\n        bibliography\n      \n      When formatting the ptr element in this example, an ODD processor might simply generate the\n        section number and title of the section referred to, perhaps additionally inserting a link to the\n        section. In a similar way, when processing the specDesc elements, an ODD processor may\n        recover relevant details of the elements being specified (specList and specDesc in\n        this case) from their associated declaration elements: typically, the details recovered will include a\n        brief description of the element and its attributes. These, and other data, will be stored in a\n        specification element elsewhere within the current document, or they may be supplied by the ODD\n        processor in some other way, for example from a database. For this reason, the link to the required\n        specification element is always made using a TEI-defined key rather than an XML IDREF value. The ODD\n        processor uses this key as a means of accessing the specification element required. There is no\n        requirement that this be performed using the XML ID/IDREF mechanism, but there is an assumption that\n        the identifier be unique.\n      A specDesc generates in the documentation the identifier, and also the contents of the\n          desc child of whatever specification element is indicated by its key attribute,\n        as in the example above. Documentation for any attributes specified by the atts attribute\n        will also be generated as an associated attribute list.\n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDmodules#TDmodules\">22.2 Modules and Schemas</a>","content":"\n    22.2 Modules and Schemas\n    As mentioned above, the primary purpose of this module is to facilitate the documentation and creation\n      of an XML schema derived from the TEI Guidelines. The following elements are provided for this purpose: \n        <schemaSpec> generates a TEI-conformant schema and documentation for it.\n        <moduleSpec> documents the structure, content, and purpose of a single\nmodule, i.e. a named and externally visible group of declarations.\n        <moduleRef> references a module which is to be incorporated into a schema.\n        <specGrp> contains any convenient grouping of specifications for use within\n  the current module.\n        <specGrpRef> indicates that the declarations contained by the specGrp referenced should be\n    inserted at this point.\n        <attRef> \n        <elementRef> points to the specification for some element which is to be included in a schema\n      \n       A module is a convenient way of grouping together element and\n      other declarations, and of associating an externally-visible name with the resulting group. A\n        specification group performs essentially the same function, but the resulting group is\n      not accessible outside the scope of the ODD document in which it is defined, whereas a module can be\n      accessed by name from any TEI schema specification. Elements, and their attributes, element classes, and\n      patterns are all individually documented using further elements described in section 22.3 Specification Elements below; part of that specification includes the name of the module to which the\n      component belongs. \n    An ODD processor generating XML DTD or schema fragments from a document marked up according to the\n      recommendations of this chapter will generate such fragments for each moduleSpec element found.\n      For example, the chapter documenting the TEI module for names and dates contains a module specification\n      like the following:\n      bibliography\n       together with specifications for all the elements, classes, and patterns which make up that module,\n      expressed using elementSpec, classSpec, or macroSpec elements as appropriate.\n      (These elements are discussed in section 22.3 Specification Elements below.) Each of those\n      specifications carries a module attribute, the value of which is namesdates. An\n      ODD processor encountering the moduleSpec element above can thus generate a schema fragment for\n      the TEI namesdates module that includes declarations for all the elements\n      (etc.) which reference it.\n    In most realistic applications, it will be desirable to combine more than one module together to form a\n      complete schema. A schema consists of references to one or more modules or specification\n      groups, and may also contain explicit declarations or redeclarations of elements (see further 22.8.1 TEI customizations). Any combination of modules can be used to create a schema 2\n    \n    A schema can combine references to TEI modules with references to other (non-TEI) modules using\n      different namespaces, for example to include mathematical markup expressed using MathML in a TEI\n      document. By default, the effect of combining modules is to allow all of the components declared by the\n      constituent modules to coexist (where this is syntactically possible: where it is not—for example,\n      because of name clashes—a schema cannot be generated). It is also possible to over-ride declarations\n      contained by a module, as further discussed in section 22.8.1 TEI customizations\n    It is often convenient to describe and operate on sets of declarations smaller than the whole, and to\n      document them in a specific order: such collections are called specGrps (specification\n      groups). Individual specGrp elements are identified using the global xml:id\n      attribute, and may then be referenced from any point in an ODD document using the specGrpRef\n      element. This is useful if, for example, it is desired to describe particular groups of elements in a\n      specific sequence. Note however that the order in which element declarations appear within the schema\n      code generated from an ODD file element is not in general affected by the order of declarations within a\n        specGrp. \n    An ODD processor will generate a piece of schema code corresponding with the declarations contained by\n      a specGrp element in the documentation being output, and a cross-reference to such a piece of\n      schema code when processing a specGrpRef. For example, if the input text reads\n      \n       then the output documentation will replace the two specGrp elements above with a\n      representation of the schema code declaring the elements beetroot, east, and rose and that declaring the elements sky and bayou respectively. Similarly, if the\n      input text contains elsewhere a passage such as\n      \n       then the specGrpRef elements may be replaced by an appropriate piece of reference text such as\n        The RED elements were declared in section 4.2 above, or even by a copy of the relevant\n      declarations. As stated above, the order of declarations within the imaginary module described above\n      will not be affected in any way. Indeed, it is possible that the imaginary module will contain\n      declarations not present in any specification group, or that the specification groups will refer to\n      elements that come from different modules. Specification groups are always local to the document in\n      which they are defined, and cannot be referenced externally (unlike modules). \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDcrystals#TDcrystals\">22.3 Specification Elements</a>","content":"\n    22.3 Specification Elements\n    The following elements are used to specify elements, classes, patterns, and datatypes: \n        <elementSpec> documents the structure, content, and purpose of a\n  single element type.\n        <classSpec> contains reference information for a TEI element class; \nthat is a group of \n  elements which appear together in  content models, or \n  which share some common attribute, or both.\n        <macroSpec> documents the function and implementation of a pattern.\n        <dataSpec> documents a datatype.\n      \n    \n    Unlike most elements in the TEI scheme, each of these specification elements has a\n      fairly rigid internal structure consisting of a large number of child elements which are always\n      presented in the same\n      order.\n      Furthermore, since these elements all describe markup objects in broadly similar ways, they have several\n      child elements in common. In the remainder of this chapter, we discuss first the elements which are\n      common to all the specification elements, and then those which are specific to a particular type. \n    Specification elements may appear at any point in an ODD document, both between and within paragraphs\n      as well as inside a specGrp element, but the specification element for any particular component\n      may only appear once (except in the case where a modification is being defined; see further 22.8.1 TEI customizations). The order in which they appear will not affect the order in which they are\n      presented within any schema module generated from the document. In documentation mode, however, an ODD\n      processor will output the schema declarations corresponding with a specification element at the point in\n      the text where they are encountered, provided that they are contained by a specGrp element,\n      \n      as discussed in the previous section. An ODD processor will also associate all declarations found with\n      the nominated module, thus including them within the schema code generated for that module, and it will\n      also generate a full reference description for the object concerned in a catalogue of markup objects.\n      These latter two actions always occur irrespective of whether or not the declaration is included in a\n        specGrp. \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDcrystalsCE#TDcrystalsCE\">22.4 Common Elements</a>","content":"\n    22.4 Common Elements\n    This section discusses the child elements common to all of the specification elements; some of these\n      are defined in the core module (3.4.1 Terms and Glosses). These child elements are used to specify the\n      naming, description, exemplification, and classification of the specification elements.\n    \n    \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDcrystalsCE#TDcrystalsCE\">22.4 Common Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDcrystalsCEdc#TDcrystalsCEdc\">22.4.1 Description of Components</a>","content":"\n      22.4.1 Description of Components\n      \n        \n          <gloss> identifies a phrase or word used to provide a gloss or definition for some other word or\n    phrase.\n          <desc> contains a short description of the purpose, function, or\n    use of its parent element,\n    or when the parent is a documentation element, describes or defines the object being documented. \n   \n  \n          <equiv> specifies a component which is considered equivalent to the parent element, either by\n    co-reference, or by external link.\n          <altIdent> supplies the recommended XML name for an element, class,\n  attribute, etc. in some language.\n          <listRef> supplies a list of significant references in the current document or elsewhere.\n          <remarks> contains any commentary or discussion about the usage of an element, attribute, class, or\n    entity not otherwise documented within the containing element.\n        \n      \n      The gloss element may be used to provide a brief explanation for the name of the object if\n        this is not self-explanatory. For example, the specification for the element ab used to mark\n        arbitrary blocks of text begins as follows:\n        bibliography\n         A gloss may also be supplied for an attribute name or an attribute value in similar\n        circumstances:\n        bibliography\n      \n      Note that the gloss element is needed to explain the significance of the identifier for an\n        item only when this is not apparent, for example because it is abbreviated, as in the above example.\n        It should not be used to provide a full description of the intended meaning (this is the function of\n        the desc element), nor to comment on equivalent values in other schemes (this is the purpose\n        of the equiv element), nor to provide alternative versions of the ident attribute\n        value in other languages (this is the purpose of the altIdent element). \n      The contents of the desc element provide a brief characterization of the intended function\n        of the object being documented in a form that permits its quotation out of context, as in the\n        following example:\n        bibliography\n         By convention, a desc element begins with a verb such as contains,\n          indicates, specifies, etc. and contains a single\n        clause.\n\tBoth the gloss and desc elements (in\n\taddition to exemplum, remarks, and\n\tvalDesc) are members of att.translatable, and thus carry the\n\tversionDate attributre. Where specifications are\n\tsupplied in multiple languages, these elements may be repeated\n\tas often as needed. Each such element should carry both an\n\txml:lang and a versionDate attribute to\n\tindicate the language used and the date on which the\n\ttranslated text was last checked against its source.\n\t\n  provides attributes used to  indicate the status of a translatable\nportion of an ODD document.\n  \n  \n  \n  \n  \n  \n  \n    \n  \n\n      The equiv element is used to document equivalencies between the concept represented by this\n        object and the same concept as described in other schemes or ontologies. The uri attribute\n        is used to supply a pointer to some location where such external concepts are defined. For example, to\n        indicate that the TEI death element corresponds to the concept defined by the CIDOC CRM\n        category E69, the declaration for the former might begin as follows:\n        \n      \n      The equiv element may also be used to map newly-defined elements onto existing constructs in\n        the TEI, using the filter and name attributes to point to an implementation of\n        the mapping. This is useful when a TEI customization (see 23.3 Customization) defines\n          shortcuts for convenience of data entry or markup readability. For example,\n        suppose that in some TEI customization an element bo has been defined\n        which is conceptually equivalent to the standard markup construct hi rend='bold'. The\n        following declarations would additionally indicate that instances of the bo element can be converted to canonical TEI by obtaining a filter from the URI specified, and\n        running the procedure with the name bold. The mimeType attribute specifies\n        the language (in this case XSL) in which the filter is written:\n        bibliography\n      \n      The altIdent element is used to provide an alternative name for an object, for example using\n        a different natural language. Thus, the following might be used to indicate that the abbr\n        element should be identified using the German word Abkürzung:\n        bibliography\n         In the same way, the following specification for the graphic element indicates that the\n        attribute url may also be referred to using the alternate identifier href:\n        bibliography\n      \n      By default, the altIdent of a component is identical to the value of its ident\n        attribute. \n      The remarks element contains any additional commentary about how the item concerned may be\n        used, details of implementation-related issues, suggestions for other ways of treating related\n        information etc., as in the following example:\n        bibliography\n      \n       A specification element will usually conclude with a list of references, each tagged using the\n        standard ptr element, and grouped together into a listRef element: in the case of\n        the foreign element discussed above, the list is as follows:\n        \n         where the value COHQF is the identifier of the section in these Guidelines where this\n        element is fully documented. \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDcrystalsCE#TDcrystalsCE\">22.4 Common Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDeg#TDeg\">22.4.2 Exemplification of Components</a>","content":"\n      22.4.2 Exemplification of Components\n      \n        \n          <exemplum> groups an example demonstrating the use of an element along with optional paragraphs of\n    commentary.\n          <eg> contains any kind of illustrative example.\n          <egXML> a single XML fragment demonstrating the use of some XML, such as \n    elements, attributes, or processing instructions, etc., in which the egXML element functions as the \n    root element.\n        \n      \n      The exemplum element is used to combine a single illustrative example with an optional\n        paragraph of commentary following or preceding it. The illustrative example itself may be marked up\n        using either the eg or the egXML element.\n      The source attribute may be used on either element to indicate the source from which an\n        example is taken, typically by means of a pointer to an entry in an associated bibliography, as in the\n        following example:\n        bibliography\n      \n      When, as here, an example contains valid XML markup, the egXML element should be used. In\n        such a case, it will clearly be necessary to distinguish the markup within the example from the markup\n        of the document itself. In an XML environment, this is easily done by using a different name space for\n        the content of the egXML element. For example:\n        \n      \n      \n      Alternatively, the XML tagging within an example may be escaped, either by using\n        entity references to represent the opening angle bracket, or by wrapping the whole example in a CDATA\n        marked section:  or, equivalently:\n        \n        However, escaping the markup in this way will make it impossible to validate, and should therefore\n        generally be avoided. \n      If the XML contained in an example is not well-formed then it must either be enclosed in a CDATA\n        marked section, or escaped as above: this applies whether the eg or\n          egXML is used. The valid attribute on egXML may be used to indicate the\n        XML validity of the example with respect to some schema, as being valid, invalid, or feasibly valid. \n      The egXML element should not be used to tag non-XML examples: the general purpose\n          eg or q elements should be used for such purposes.\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDcrystalsCE#TDcrystalsCE\">22.4 Common Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDcrystalsCEcl#TDcrystalsCEcl\">22.4.3 Classification of Components</a>","content":"\n      22.4.3 Classification of Components\n      In the TEI scheme elements are assigned to one or more classes, which may themselves\n        have subclasses. The following elements are used to indicate class membership: \n          <classes> specifies all the classes of which the documented element or\nclass is a member or subclass.\n          <memberOf> specifies class membership of the documented element or class.\n        \n      \n      The classes element appears within either the elementSpec or classSpec\n        element. It specifies the classes of which the element or class concerned is a member by means of one\n        or more memberOf child elements. Each such element references a class by means of its\n          key attribute. Classes themselves are defined by the classSpec element described\n        in section 22.6 Class Specifications below.\n      For example, to show that the element gi is a member of the class model.phrase.xml, the elementSpec which documents this element contains the\n        following classes element:\n        \n      \n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAG#TDTAG\">22.5 Element Specifications</a>","content":"\n    22.5 Element Specifications\n    The elementSpec element is used to document an element\n    type, together with its associated attributes. In addition to the\n    elements listed above, it may contain the following subcomponents:\n    \n        <content> contains a declaration of the intended content model for the element (or other construct) being specified.\n        <constraintSpec> contains a formal constraint, typically expressed in a rule-based schema language, to which a construct must conform in order to be considered valid\n        <attList> \n        <model> \n      \n    \n    These subcomponents are discussed in the following sections.\n    \n    \n    \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAG#TDTAG\">22.5 Element Specifications</a><a class=\"breadcrumb\" href=\"p5.xml?id=DEFCON#DEFCON\">22.5.1 Defining Content Models</a>","content":"\n      22.5.1 Defining Content Models\n      As described in 5.3.2 Content Models: an Example and 5.4.1.2 Content Model, the content of the element being\n      defined — that is, what elements are allowed inside it, and in\n      what order they are permitted — is described by its\n      content model. The content model is defined by the\n      content child of elementSpec. There are three\n      distinctly different ways of specifying a content model:\n      The content model can be described using TEI elements\n\tdefined by this chapter, as discussed in 22.5.1.1 Defining Content Models: TEI immediately below. Two such TEI elements\n\tthat may be used to define a content model are\n\tdataRef and valList. But because these are\n\tmost often used to define attribute values, they are discussed\n\tseparately near the beginning and towards the end of 22.5.3.2 Value Specification, respectively.Alternatively, and primarily for backwards\n\tcompatibility, the content model may be expressed using a\n\tRELAX NG pattern. This is discussed in 22.5.1.2 Defining Content Models: RELAX NG, below.Lastly, content models may be expressed using a schema\n\tlanguage other than TEI or RELAX NG, but no further\n\trecommendations on doing so are provided by these\n\tGuidelines.\n      \n    \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAG#TDTAG\">22.5 Element Specifications</a><a class=\"breadcrumb\" href=\"p5.xml?id=DEFCON#DEFCON\">22.5.1 Defining Content Models</a><a class=\"breadcrumb\" href=\"p5.xml?id=DEFCONTEI#DEFCONTEI\">22.5.1.1 Defining Content Models: TEI</a>","content":"\n\t22.5.1.1 Defining Content Models: TEI\n\tIn the simplest case, the content model of an element may\n\tbe expressed using a single empty element as the only\n\tchild of content. This describes the element being\n\tdefined as empty, meaning a valid instance of\n\tsaid element can not have any content.3\n\t\n\t  <empty> indicates the presence of an empty node within a\n    content model\n\t\n      \n      More commonly, one or more of the following elements are used\n      to define a content model:\n      \n\t<elementRef> points to the specification for some element which is to be included in a schema\n\t<anyElement> indicates the presence\n   of any elements in a content model\n\t<classRef> points to the specification for an attribute or model class which is to be included in a schema\n\t<macroRef> points to the specification for some pattern which is to be included in a schema\n      \n      \n      An elementRef provides the name of an element which\n      may appear at a certain point in a content model. An\n      anyElement also asserts that an element may appear at a\n      certain point in a content model, but rather than providing the\n      name of a particular element type that may appear, any element\n      regardless of its name may appear (and may have any attributes).\n      A classRef provides the name of a model class, members\n      of which may appear at a certain point in content model.4 A macroRef provides the name\n      of a predefined macro, the expansion of which is to be inserted\n      at a certain point in a content model.\n      These three elements are all members of an attribute class\n      which provides attributes that further modify their significance\n      as follows:\n      \n\t<att.repeatable> provides attributes for the elements which define\n  component parts of a content model.\n      \n      \n      Additionally, two wrapper elements are provided to indicate\n      whether the components listed as their children form a sequence\n      or an alternation:\n      \n\t<sequence> indicates that the constructs referenced by its children form a sequence\n\t<alternate> indicates that the constructs referenced by its children form an alternation\n      \n      These two wrapper elements are also members of att.repeatable. References listed as\n      children of sequence must appear in the order and\n      cardinality specified. Only one of the references listed as\n      children of alternate may appear, although the\n      cardinality of the alternate itself applies. Thus the\n      following fanciful content model permits either any number of\n      ptr elements (except zero) or any number of\n      ref elements (except zero); at least one element must\n      be present, but having both a ptr and a ref would be\n      invalid.\n      \n      However, the following content model permits any number of\n      either ptr or ref elements (except zero); one\n      element must be present, and having both ptr elements\n      and ref elements (even intermixed) would be valid.\n      \n      \n      The sequence and alternate elements may be\n      used in combination with great expressive power. For example, in\n      the following example, which might be imagined as a clean\n      replacement for the content of the choice element, one\n      and only one of the element pairs sic and\n      corr, orig and reg, or\n      abbr and expan is allowed.\n      \n      In the following example, which might be imagined as a clean\n      replacement for the content of the address element, the\n      encoder is given a choice of either:\n      a single street followed by a single\n\tplaceName followed by a single postCode\n\tfollowed by an optional country, or2, 3, or 4\n\taddrLine elements.\n      \n      \n      In addition to expressing where certain elements, members of\n      a class of elements, or constructs matching a predefined macro\n      may occur inside an element, a content model may permit a string\n      of zero or more Unicode characters to occur at a certain point\n      in the content model. This is indicated by supplying the element\n      textNode within the content element.\n      \n\t<textNode> indicates the presence\n   of a text node in a content model\n      \n      If nothing but a textNode element is present inside a\n      content element, valid instances of the element being\n      defined may contain a sequence of zero or more Unicode\n      characters, but may not contain any elements.5\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAG#TDTAG\">22.5 Element Specifications</a><a class=\"breadcrumb\" href=\"p5.xml?id=DEFCON#DEFCON\">22.5.1 Defining Content Models</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAGCONT#TDTAGCONT\">22.5.1.2 Defining Content Models: RELAX NG</a>","content":"\n      22.5.1.2 Defining Content Models: RELAX NG\n      Element content models may also be defined using RELAX NG\n      patterns. Here is a very simple example\n      \n      The element within whose specification element this\n      content element appears will have a content model which\n      is expressed in RELAX NG as text, using the RELAX\n      NG namespace. This model will be copied unchanged to the output\n      when RELAX NG schemas are being generated. When an XML DTD is\n      being generated, an equivalent declaration (in this case\n      (#PCDATA)) will be output.\n      Here is a more complex example:\n        \n         This is the content model for the teiHeader element, expressed in the RELAX NG syntax, which\n        again is copied unchanged to the output during schema generation. The equivalent DTD notation\n        generated from this is (fileDesc, (%model.teiHeaderPart;)*, revisionDesc?). \n      The RELAX NG language does not formally distinguish element names, attribute names, class names, or\n        macro names: all names are patterns which are handled in the same way, as the above example shows.\n        Within the TEI scheme, however, different naming conventions are used to distinguish amongst the\n        objects being named. Unqualified names (fileDesc, revisionDesc) are always\n        element names. Names prefixed with model. or att. (e.g. model.teiHeaderPart and att.typed) are always class names. In\n        DTD language, classes are represented by parameter entities (%model.teiHeaderPart; in the\n        above example); see further 1 The TEI Infrastructure.\n      The RELAX NG pattern names generated by an ODD processor by default include a special prefix, the\n        default value for which is set using the prefix attribute on schemaSpec.\n         The purpose of this is to ensure that the pattern name\n        generated is uniquely identified as belonging to a particular schema, and thus avoid name clashes. For\n        example, in a RELAX NG schema combining the TEI element ident with another element called\n          ident from some other vocabulary, the former will be defined by a pattern called\n          TEI_ident rather than simply ident. Most of the time, this behaviour is\n        entirely transparent to the user; the one occasion when it is not will be where a content model\n        (expressed using RELAX NG syntax) needs explicitly to reference either the TEI ident or the\n        other one. In such a situation, the autoPrefix attribute on content may be used.\n        For example, suppose that we wish to define a content model for term which permits either a\n        TEI ident or the ident defined by some other vocabulary. A suitable content model\n        would be generated from the following content element:\n        \n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAG#TDTAG\">22.5 Element Specifications</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAGCONS#TDTAGCONS\">22.5.2 Additional Constraints</a>","content":"\n      22.5.2 Additional Constraints\n      In addition to the content element, a set of general constraintSpec elements can be\n        used to express rules about the validity of an element. Like some other specification elements, they\n        are identifiable (using the ident attribute) in order that a TEI customization may\n        override, delete, or change them individually. Each constraintSpec can be expressed in any\n        notation which is found useful; the notation used must be recorded using the scheme\n        attribute.\n      Schematron is an ISO standard (ISO/IEC 19757-3:2006) which defines a\n        simple XML vocabulary for an assertion language, together with a RELAX NG schema\n        to validate it. The Schematron assertion language provides a powerful way of expressing constraints on\n        the content of any XML document in addition to those provided by other schema languages. Such\n        constraints can be embedded within a TEI schema specification using the methods exemplified in this\n        chapter. An ODD processor will typically process any constraintSpec elements in a TEI\n        specification whose scheme attribute indicates that they are expressed in Schematron to\n        create an ISO-conformant Schematron schema which may be used to validate document instances. \n      The TEI Guidelines include some additional constraints which are expressed using the ISO Schematron\n        language. A conformant TEI document should respect these constraints, although automatic validation of\n        them may not be possible for all processors. A TEI customization may likewise specify additional\n        constraints using this mechanism. Some examples of what is possible using the Schematron language are\n        given below. \n      Constraints are generally used to model local rules which may be outside the scope of the target\n        schema language. For example, in earlier versions of these Guidelines several constraints on the usage\n        of the attributes of the TEI element relation were expressed informally as follows: only\n          one of the attributes active and mutual may be supplied; the attribute\n            passive may be supplied only if the attribute active is supplied.. In the current version of the\n        Guidelines, constraint specifications expressed as Schematron rules have been added, as follows:\n        bibliography\n      \n      The constraints in the preceding example all related to attributes in the empty namespace, and the\n        Schematron rules did not therefore need to define a TEI namespace prefix. The Schematron language ns element should be used to do this when a constraint needs to refer to a\n        TEI element, as in the following example, which models the constraint that a TEI div must\n        contain either no subdivisions or at least two of them:\n        bibliography\n         Schematron rules are also useful where an application needs to enforce rules on attribute values, as\n        in the following examples which check that various types of title are provided:\n        bibliography\n      \n      As a further example, Schematron may be used to enforce rules applicable to a TEI document which is\n        going to be rendered into accessible HTML, for example to check that some sort of content is available\n        from which the alt attribute of an HTML img can be\n        created:\n        bibliography\n         Schematron rules can also be used to enforce other HTML accessibility rules about tables; note here\n        the use of a report and an assertion within one pattern:\n        bibliography\n      \n      Constraints can be expressed using any convenient language.\n      The following example uses a pattern matching language called\n      SPITBOL to express the requirement that title and author should\n      be different. \n        bibliography\n\tNote that the value of scheme is\n\tSPITBOL. In order to properly constrain and\n\tdocument the values of scheme used in their\n\tcustomization file, a project may wish to create a\n\tcustomization that (among other things) adds and explains this\n\tvalue for use in validating their customization file. Thus\n\tusing schemes other than those provided for by the TEI\n\t(currently schematron and isoschematron)\n\tmay require somewhat more effort when creating a customization\n\tfile. Such private schemes will generally be even more\n\tproblematic on implementation of the constraints themselves,\n\tas it may require siginficant programming work. The TEI only\n\tprovides this capability for the suggested values.\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAG#TDTAG\">22.5 Element Specifications</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDATT#TDATT\">22.5.3 Attribute List Specification</a>","content":"\n      22.5.3 Attribute List Specification\n      The attList element is used to document information about a collection of attributes, either\n        within an elementSpec, or within a classSpec. An attribute list can be organized\n        either as a group of attribute definitions, all of which are understood to be available, or as a\n        choice of attribute definitions, of which only one is understood to be available. An attribute list\n        may thus contain nested attribute lists. \n      The attribute org is used to indicate whether its child attDef elements are all\n        to be made available, or whether only one of them may be used. For example, the attribute list for the\n        element moduleRef contains a nested attribute list to indicate that either the\n          include or the except attribute may be supplied, but not both:\n        \n      \n      The attDef element is used to document a single attribute, using an appropriate selection\n        from the common elements already mentioned and the following : \n          <attDef> \n          <datatype> specifies the declared value for an attribute, by referring to\n  any datatype defined by the chosen schema language.\n          <dataRef> identifies the datatype of an attribute value, either by referencing an item in an externally defined datatype library, or by\n    pointing to a TEI-defined data specification\n          <defaultVal> specifies the default declared value for an attribute.\n          <valDesc> specifies any semantic or syntactic constraint on the value that\nan attribute may take, additional to the information carried by the\ndatatype element.\n          <valList> contains one or more valItem elements defining possible values.\n          <valItem> documents a single value in a predefined list of values.\n        \n      \n      The attList within an elementSpec is used to specify only the attributes which are\n        specific to that particular element. Instances of the element may carry other attributes which are\n        declared by the classes of which the element is a member. These extra attributes, which are shared by\n        other elements, or by all elements, are specified by an attList contained within a\n          classSpec element, as described in section 22.6 Class Specifications below. \n      \n      \n      \n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAG#TDTAG\">22.5 Element Specifications</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDATT#TDATT\">22.5.3 Attribute List Specification</a><a class=\"breadcrumb\" href=\"p5.xml?id=TD-datatypes#TD-datatypes\">22.5.3.1 Datatypes</a>","content":"\n        22.5.3.1 Datatypes\n        The datatype (i.e. the kind of value) for an attribute may be specified using\n          the elements datatype and dataRef. A datatype may be defined in any of the\n          following three ways: by reference to an existing TEI datatype definition; by use of its name in the widely used schema datatype library maintained by the W3C as part\n              of the definition of its schema language; by referencing its URI within some other datatype library.The TEI defines a number of datatypes, each with an identifier beginning\n            teidata., which are used in preference to the datatypes available natively from a\n          target schema such as RELAX NG or W3C Schema since the facilities provided by different schema\n          languages vary so widely. The TEI datatypes available are described in section 1.4.2 Datatype Specifications above. Note that each is, of necessity, mapped eventually to an externally defined datatype such\n          as W3C Schema's text or name, possibly combined to give more\n          expressivity, or constrained to a particular defined usage. \n        It is possible to reference a W3C schema datatype directly using name. In this case, \n          the child dataFacet can be used instead of restriction to set W3C schema compliant \n          restrictions on the datatype. A dataFacet is particularly useful for restrictions that can be difficult to impose and to read as a \n          regular expression pattern. \n             \n        Note that restrictions are either expressed with restriction or dataFacet, never both.\n        Attributes minOccurs and maxOccurs are available for the case where an\n          attribute may take more than one value of the type specified. For example, the target\n          attribute provided by the att.pointing class has the following\n          declaration:\n          bibliography\n           indicating that the target attribute may take any number of values, each being of the\n          same datatype, namely the TEI data specification teidata.pointer. As is usual in XML,\n          multiple values for a single attribute are separated by one or more white space characters. Hence,\n          values such as #a #b #c or http://example.org\n            http://www.tei-c.org/index.xml may be supplied.\n          \n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAG#TDTAG\">22.5 Element Specifications</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDATT#TDATT\">22.5.3 Attribute List Specification</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDATTvs#TDATTvs\">22.5.3.2 Value Specification</a>","content":"\n        22.5.3.2 Value Specification\n        The valDesc element may be used to describe constraints on data content in an informal\n          way: for example\n          bibliography\n          bibliography\n          bibliography\n        \n        Constraints expressed in this way are purely documentary; to enforce them, the\n            constraintSpec element described in section 22.5.2 Additional Constraints must be used. For\n          example, to specify that an imaginary attribute ageAtDeath must take\n          positive integer values less than 150, the datatype teidata.numeric\n          might be used in combination with a constraintSpec such as the following:\n          bibliography\n        \n        The elements altIdent, equiv, gloss and desc may all be used in\n          the same way as they are elsewhere to describe fully the meaning of a coded value, as in the\n          following example:\n          bibliography\n        \n        Where all the possible values for an attribute can be enumerated, the datatype\n            teidata.enumerated should be used, together with a valList element\n          specifying the values and their significance, as in the following example:\n          bibliography\n           Note the use of the gloss element here to explain the otherwise less than obvious meaning\n          of the codes used for these values. Since this value list specifies that it is of type\n            closed, only the values enumerated are legal, and an ODD processor will typically\n          enforce these constraints in the schema fragment generated. \n        The valList element can also be used to provide illustrative examples of the kinds of\n          values expected without listing all of them. In such cases the type attribute will have\n          the value open, as in the following example:\n          bibliography\n           The datatype will be teidata.enumerated in either case.\n        The valList or dataRef elements may also be used (as a child of the\n            content element) to put constraints on the permitted content of an element, as noted at\n            22.5.1.2 Defining Content Models: RELAX NG. This use is not however supported by all schema languages, and is\n          therefore not recommended if support for non-RELAX NG systems is a consideration.\n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAG#TDTAG\">22.5 Element Specifications</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDPM#TDPM\">22.5.4 Processing Models</a>","content":"\n      22.5.4 Processing Models\n      As far as possible, the TEI defines elements and their attributes in a way which is entirely\n        independent of their subsequent processing, since its intention is to maximize the reusability of\n        encoded documents and their use in multiple contexts. Nevertheless, it can be very useful to specify\n        one or more possible models for such processing, both to clarify the intentions of the encoder, and to\n        provide default behaviours for a software engineer to implement when documents conforming to a\n        particular TEI customization are processed. To that end, the following elements may be used to\n        document one or more processing models for a given element. \n          <model> \n          <modelGrp> \n          <modelSequence> \n        \n      \n      One or more of these elements may appear directly within an element specification to define the\n        processing anticipated for that element, more specifically how it should be processed to produce the\n        kind of output indicated by the output attribute. Where multiple such elements appear\n        directly within an elementSpec, they are understood to document mutually exclusive processing\n        models, possibly for different outputs or applicable in different contexts. Alternatively, the\n          modelGrp element may be used to group alternative model elements intended for a\n        single kind of output. The modelSequence element is provided for the case where a sequence of\n        models is to be processed, functioning as a single unit. \n      A processing model suggests how a given element may be transformed to produce one or more outputs.\n        The model is expressed in terms of behaviours and parameters, using\n        high-level formatting concepts familiar to software engineers and web designers, such as\n          block or inline. As such, it has a different purpose from\n        existing TEI mechanisms for documenting the appearance of source materials, such as the global\n        attributes rend, rendition and style, described in sections 2.3.4.1 Rendition and 3.3.1 What Is Highlighting?. It does not necessarily describe anything present in\n        the original source, nor does it necessarily represent its original structure or semantics. A\n        processing model is a template description, which may be used to simplify the task of producing or\n        customizing the stylesheets needed by a formatting engine or any other form of processor. \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAG#TDTAG\">22.5 Element Specifications</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDPM#TDPM\">22.5.4 Processing Models</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDPMPM#TDPMPM\">22.5.4.1 The TEI processing model</a>","content":"\n        22.5.4.1 The TEI processing model\n        The model element is used to document the processing model intended for a particular\n          element in an abstract manner, independently of its implementation in whatever processing language\n          is chosen. This is achieved by means of the following attributes and elements: \n            <model> \n            <outputRendition> \n    describes the rendering or\n    appearance intended for all occurrences of an element in a specified\n    context for a specified type of output.\n           The mandatory behaviour attribute defines in broad terms how an element\n          should be processed, for example as a block or as an inline element. The optional\n            predicate attribute may be used to specify a subset of contexts in which this model\n          should be applicable: for example, an element might be treated as a block element in some contexts,\n          but not in others. The output attribute supplies a name for the output for which this\n          model is intended, for example for screen display, for a printed reading copy, for a scholarly\n          publication, etc. The way in which an element should be rendered is declared independently of its\n          behaviour, using either the attribute useSourceRendition or the element\n            outputRendition. These Guidelines recommend that outputRendition be expressed\n          using the W3C Cascading Stylesheet Language (CSS), but other possibilities are not excluded. The\n          particular language used may be documented by means of the styleDefDecl element described\n          in 2.3.5 The Default Style Definition Language Declaration. \n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAG#TDTAG\">22.5 Element Specifications</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDPM#TDPM\">22.5.4 Processing Models</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDPMOR#TDPMOR\">22.5.4.2 Output Rendition </a>","content":"\n        22.5.4.2 Output Rendition \n        Here is a simple example of a processing model which might be included in the specification for an\n          element such as hi or foreign. The intent is that these elements should be\n          presented inline using an italic font.\n          bibliography\n           If the rendition element, or the attributes style, rend, or\n            rendition have already been used in the source document to indicate elements that were\n          originally rendered in italic, and we wish simply to follow this in our processing, then there is no\n          need to include an outputRendition element, and the attribute useSourceRendition\n          could be used as follows:\n          \n           Any rendition information present in the source document will be ignored unless the\n            useSourceRendition attribute has the value true. If that is the case, then\n          such information will be combined with any rendition information supplied by the\n            outputRendition element. For example, using CSS, an element which appears in the source\n          as follows\n          bibliography\n           would appear in bold and italic if processed by the following model\n          bibliography\n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAG#TDTAG\">22.5 Element Specifications</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDPM#TDPM\">22.5.4 Processing Models</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDPMCC#TDPMCC\">22.5.4.3 CSS Class</a>","content":"\n        22.5.4.3 CSS Class\n        In a typical workflow processing TEI documents for display on the web, a system designer will often\n          wish to use an externally defined CSS stylesheet. The cssClass attribute simplifies the\n          task of maintaining compatibility amongst the possibly many applications using such a stylesheet and\n          also enables a TEI application to specify the names of classes to be used for particular processing\n          models. For example, supposing that the associated CSS stylesheet includes a CSS class called\n            labeled-list, the following processing model might be used to request it be used\n          for list elements containing a child label element:\n          \n        \n        In the following example, a table will be formatted using renditional information provided in the\n          source if that is available, or by an external stylesheet, using one of the CSS classes specified,\n          if it is not:\n          \n        \n        As discussed further below, the input data available to a processing model is by default the\n          content of the element being processed, together with its child nodes. \n        \n        \n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAG#TDTAG\">22.5 Element Specifications</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDPM#TDPM\">22.5.4 Processing Models</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDPMMC#TDPMMC\">22.5.4.4 Model Contexts and Outputs</a>","content":"\n        22.5.4.4 Model Contexts and Outputs\n        Sometimes different processing models are required for the same element in different contexts. For\n          example, we may wish to process the quote element as an inline italic element when it\n          appears inside a p element, but as an indented block when it appears elsewhere. To achieve\n          this, we need to change the specification for the quote element to include two\n            model elements as follows:\n          bibliography\n           As noted above, these two models are mutually exclusive. The first processing model will be used\n          only for quote elements which match the XPath expression given as value for the\n            predicate attribute. All other element occurrences will use the second processing\n          model. \n        When, as here, multiple behaviours are required for the same element, it will often be the case\n          that the appropriate processing will depend on the context. It may however be the case that the\n          choice of an appropriate model will be made on the basis of the intended output. For example, we\n          might wish to define quite different behaviours when a document is to be displayed on a mobile\n          device and when it is to be displayed on a desktop screen. Different behaviours again might be\n          specified for a print version intended for the general reader, and for a print version aimed at the\n          technical specialist.\n        The modelGrp element can be used to group together all the processing models which have in\n          common a particular intended output, as in the following example:\n          bibliography\n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAG#TDTAG\">22.5 Element Specifications</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDPM#TDPM\">22.5.4 Processing Models</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDPMMB#TDPMMB\">22.5.4.5 Behaviours and their parameters</a>","content":"\n        22.5.4.5 Behaviours and their parameters\n        In the examples above we have used without explanation or definition two simple\n            behaviours: inline and block, but many other behaviours\n          are possible. A list of recommended behaviour names forms part of the specification for the element\n            model. A processing model can specify any named behaviour, some of which have additional\n            parameters. The parameters of a behaviour resemble the\n          arguments of a function in many programming languages: they provide names which can be used to\n          distinguish particular parts of the input data available to the process used to implement the\n          behaviour in question. \n        The following elements are used to represent and to define parameters: \n            <param> provides a parameter for a model behaviour by\n    supplying its name and an XPath expression identifying the location of its content.\n            <paramList> list of parameter specifications\n            <paramSpec> supplies specification for one parameter of a model\n    behaviour\n          \n        By default, a processor implementing the TEI processing model for a particular element has\n          available to it as input data the content of the element itself, and all of its children. One or\n          more param elements may be supplied within a model element to specify\n            parameters which modify this, either by selecting particular parts of the default\n          input data, or by selecting data which would not otherwise be available. In either case, the value\n          supplied for the parameter is given as an XPath expression, evaluated with respect to the element\n          node being processed. An arbitrary name (defined in the corresponding paramSpec) is also\n          supplied to a processor to identify each parameter. \n        For example, an element such as the TEI ref element will probably be associated with a\n          processing model which treats it as a hyperlink. But a hyperlink (in most implementations) often has\n          two associated pieces of information: the address indicated, and some textual content serving to\n          label the link . In HTML, the former is provided as value of the href\n          element, and the latter by the content of an a element. In the following\n          processing model we define a behaviour called link, which will use whatever is\n          indicated by the parameter called uri\n          \n          to provide the former, while the latter is provided by the content of the ref element itself:\n          \n           The value attribute of a param element supplies an XPath expression that\n          indicates where the required value may be found. The context for this XPath is the element which is\n          being processed; hence in this example, the uri parameter takes the value of the\n            target attribute on the ref element being processed. The content\n          parameter indicates that the content of that ref element should be provided as its value. (This parameter is not\n          strictly necessary, since by default the whole content of the element being processed is always available to a processor, but\n          supplying it in this way makes the procedure more explicit).\n       \n        All the parameters available for a given behaviour are defined as a part of the definition of the\n          behaviour itself, as further discussed in section 22.5.4.8 Defining a processing model below. \n        As a further example, the TEI choice element requires a different behaviour for which the\n          name alternate is proposed as in the following example:\n          \n         The processing model shown here will be selected for processing a choice element which has both sic and corr child elements.\n          The names default and alternate here are provided for convenience.\n          The  default parameter provides the value of the child corr element, and the alternate \n            parameter will provide that of the child sic elements. If neither param element was supplied, both elements would\n            still be available to an application, but the application would need to distinguish them for itself.\n        \n        A choice element might contain multiple corrections, each with differing values for their\n            cert attribute. In the following processing model, we will accept as value of the default attribute only\n            those child corr elements which have a value high for that attribute:\n          \n        \n        A choice element might contain several different pairs of alternate elements (abbr\n          and expan, orig and reg, etc.) We might wish to group together a set of\n          processing models for these, for example to determine which of the possible alternatives is\n          displayed by default whenever a choice element is processed for output to the web:\n          \n        \n        If nothing matches the XPath defining the value of a particular parameter (e.g. if in the above\n          example there is no correction with cert=high) then the default\n          parameter has no value. It is left to implementors to determine how null-valued parameters should be\n          processed. \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAG#TDTAG\">22.5 Element Specifications</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDPM#TDPM\">22.5.4 Processing Models</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDPMOU#TDPMOU\">22.5.4.6 Outputs</a>","content":"\n        22.5.4.6 Outputs\n        As noted above, the output attribute is used to associate particular processing models\n          with a specific type of output. The following example documents a range of processing intentions for\n          the date element, intended to cope with at least the following three situations: \n        there is text inside the element, and the output is print; there is no text inside the element but there is a when attribute, and the output\n            is print; there is a when attribute, there is text inside the element, and the output is\n            web\n        \n        For output to print we supply two processing models, one for the simplest case where the content of\n          the date is to be treated as an inline element, and the other for the case where there is\n          no content and the value of the when attribute is to be used in its place. This is\n          specified by a parameter, called content in this example. For output to web, we use\n          the alternate behaviour discussed in the previous section to indicate that by default\n          the content of the element will be used, while retaining access to the value of the when\n          attribute, this time via a parameter called alternate. \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAG#TDTAG\">22.5 Element Specifications</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDPM#TDPM\">22.5.4 Processing Models</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDPMMS#TDPMMS\">22.5.4.7 Model sequence</a>","content":"\n        22.5.4.7 Model sequence\n         As well as being combined to form model groups, several models may be combined to form a\n            model sequence. All of the individual components of a model sequence are understood\n          to be applied, rather than considered to be mutually exclusive alternatives. For example, we might\n          wish to define two different behaviours for a note element: the inline behaviour should be\n          used to display the value of the note number (given by its n attribute), while a\n          different behaviour (here called footnote) should be used to display the content of\n          the element at a specified place, given by the parameter place. Because both of these\n          actions are required, the two models are grouped by a modelSequence element:\n          \n        \n        The value of the parameter called place above is an XPath expression supplying an\n          arbitrary string (foot), which is therefore quoted. It is left to implementors to validate or\n          constrain the possible values for such expressions. \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAG#TDTAG\">22.5 Element Specifications</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDPM#TDPM\">22.5.4 Processing Models</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDPMDEF#TDPMDEF\">22.5.4.8 Defining a processing model</a>","content":"\n        22.5.4.8 Defining a processing model\n        The processing model for an element is defined using some combination of model,\n            modelSequence, or modelGrp elements within the elementSpec element containing its specification.\n          The processing to be carried out is defined by means of the behaviour specified for each\n            model element, possibly supplying specified values for a number of named parameters. The\n          parameters available for a given behaviour are specified using a number of param elements\n          grouped together in a paramList element. This paramList is supplied within the\n            valItem used to document and name the behaviour. Here for example is the valItem\n          which defines the link behaviour presented above:\n          bibliography\n        \n        Similarly the valItem which defines the behaviour named alternate includes specifications for two\n          parameters: one also called alternate and the other called default\n          bibliography\n        \n        The suggested behaviours provided by the model element are informally defined using\n          commonly understood terminology, but specific details of how they should be implemented are left to\n          the implementor. Such decisions may vary greatly depending on the kind of processing environment,\n          the kind of output envisaged, etc. The intention is to reduce as far as possible any requirement for\n          the implementor to be aware of TEI-specific rules, and to maximize the ability of the ODD to express\n          processing intentions without fully specifying an implementation. \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDTAG#TDTAG\">22.5 Element Specifications</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDPM#TDPM\">22.5.4 Processing Models</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDPMIP#TDPMIP\">22.5.4.9 Implementation of Processing Models</a>","content":"\n        22.5.4.9 Implementation of Processing Models\n        As elsewhere in these Guidelines, the recommendations of this section are intended to be\n          implementation-agnostic, not favouring any particular implementation method or technology. An\n          implementor may choose, for example, whether to pre-process processing model specifications into a\n          free standing pipeline, or to extract and process them dynamically during\n          document processing. However, although implementors are generally free to interpret the processing\n          model documentation according to their own requirements, some general assumptions underlie the\n          recommendations made here: If a model element has no child param elements, the action specified by\n              its behaviour should be applied to the whole element node concerned, including its child nodes\n              of whatever type. If that behaviour requires distinguishing particular parts of the input, an\n              implementation may choose either to make those distinctions itself, or to raise an error.If a model element has no predicate or output attribute then\n              it is assumed to apply to all instances of the element defined in its parent\n                elementSpec for all outputs. Otherwise its applicability depends on these\n              attributes.Only one of the models is to be applied for a particular instance of the element, except when they appear\n              within a modelSequence\n            A matching model is one where the element to be processed satisfies the XPath in the \n              predicate attribute of the model or modelSequence and the current \n              output method matches the method specified in the output attribute of the model, \n              modelSequence, or a containing modelGrp. A model or modelSequence \n              without a predicate always matches the element to be processed. A model, \n              modelGrp, or modelSequence without an output attribute matches any output method.Processing Model implementations must execute only the first matching model or \n              modelSequence in document order.If there are two or more model elements provided for an elementSpec but\n              they have different output attributes then the implementation should choose the\n                model appropriate to the desired output. If there are two or more model elements provided for an elementSpec but\n              they have different predicate attributes then the implementation should choose the\n                model whose predicate provides the most specific context (where\n                specific is understood in the same way as in XSLT) \n             In the following example, which shows part of the element specification for the head\n          element, there are two model elements, one with and one without a predicate\n          attribute:\n          bibliography\n          In this example, an implementation should use the first processing model only for head\n          elements with a list element as parent; for all other head elements, the second\n          processing model should be used. \n        \n        \n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDCLA#TDCLA\">22.6 Class Specifications</a>","content":"\n    22.6 Class Specifications\n    The element classSpec is used to document either an attribute class or a\n        model class, as defined in section 1.3 The TEI Class System. A corresponding\n        classRef element may be used to select a specific named class from those available. \n        <classSpec> contains reference information for a TEI element class; \nthat is a group of \n  elements which appear together in  content models, or \n  which share some common attribute, or both.\n        <classRef> points to the specification for an attribute or model class which is to be included in a schema\n        <attList> \n      \n    \n    A model class specification does not list all of its members. Instead, its members declare that they\n      belong to it by means of a classes element contained within the relevant elementSpec.\n      This will contain a memberOf element for each class of which the relevant element is a member,\n      supplying the name of the relevant class. For example, the elementSpec for the element\n        hi contains the following:\n      \n       This indicates that the hi element is a member of the class with identifier model.hiLike. The classSpec element that documents this class contains\n      the following declarations:\n      bibliography\n       which indicate that the class model.hiLike is actually a member (or\n      subclass) of the class model.highlighted. \n    The function of a model class declaration is to provide another way of referring to a group of\n      elements. It does not confer any other properties on the elements which constitute its membership. \n    The attribute type is used to distinguish between model and\n        attribute classes. In the case of attribute classes, the attributes provided by\n      membership in the class are documented by an attList element contained within the\n        classSpec. In the case of model classes, no further information is needed to define the class\n      beyond its description, its identifier, and optionally any classes of which it is a member. \n    When a model class is referenced in the content model of an element (i.e. by means of a\n        classRef element within the content of an elementSpec), its meaning will\n      depend on the value of its expand attribute. \n    If this attribute is not specified, the classRef is interpreted to mean an alternated list of\n      all the current members of the class named. For example, suppose that the members of the class model.hiLike are elements hi, it, and bo. Then a content model such as\n      \n      would be equivalent to the explicit content model:\n      \n      (or, to use RELAX NG compact syntax,\n      ( hi | it | bo )).\n      However, a content model of <classRef\n      expand=\"sequence\"/> would be equivalent to the\n      following explicit content model:\n      \n      (or, in RELAX NG compact syntax,\n    ( hi, it, bo )). \n    \n    An attribute class (a classSpec of type\n      atts) contains an attList element which lists the attributes that all the members of\n      that class inherit from it. For example, the class att.interpLike defines a\n      small set of attributes common to all elements which are members of that class: those attributes are\n      listed by the attList element contained by the classSpec for att.interpLike. When processing the documentation elements for elements which are members of\n      that class, an ODD processor is required to extend the attList (or equivalent) for such\n      elements to include any attributes defined by the classSpec elements concerned. There is a\n      single global attribute class, att.global, to which some modules contribute\n      additional attributes when they are included in a schema. \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDENT#TDENT\">22.7 Macro Specifications</a>","content":"\n    22.7 Macro Specifications\n    The macroSpec element is used to declare and document predefined strings or patterns not\n      otherwise documented by the elements described in this section. A corresponding macroRef\n      element may be used to select a specific named pattern from those available. Patterns are used as a\n      shorthand chiefly to describe common content models and datatypes, but may be used for any purpose. The\n      following elements are used to represent patterns: \n        <macroSpec> documents the function and implementation of a pattern.\n        <macroRef> points to the specification for some pattern which is to be included in a schema\n      \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDB1#TDB1\">22.8 Building a TEI Schema</a>","content":"\n    22.8 Building a TEI Schema\n    \n    The specification elements, and some of their children, are all members of the att.identified class, from which they inherit the following attributes: \n        <att.identified> provides identifying attributes for elements which can be\n  subsequently referenced by means of a key\n  attribute.\n       This attribute class is a subclass of the att.combinable class\n      from which it (and some other elements) inherits the following attribute: \n        <att.combinable> provides attributes indicating how multiple\n    references to the same object in a schema should be combined\n       This attribute class, in turn, is a subclass of the att.deprecated class, from which it inherits the following attribute: \n        <att.deprecated> provides attributes indicating how a deprecated feature will be treated in future releases.\n       The validUntil attribute may be used to signal an intent to remove a construct\n      from future versions of the schema being specified.\n    \n  provides attributes indicating how multiple\n    references to the same object in a schema should be combined\n      \n  \n  \n    \n  \n  \n    An ODD processor should handle the values for mode as follows: addthe object should be created (processing any children in add mode); raise an error if the object has an identifier and \n        an object with the same identifier (and namespace in the case of an element or attribute) already exists.replaceuse this object in preference to any existing object with the same identifier (and namespace in the case of an element or attribute), \n        and ignore any children of that object; process any new children in replace modedeletedo not process this object or any existing object with the same identifier (and namespace in the case of an element or attribute); \n        the element carrying this attribute must be empty: raise an error if there are any childrenchangeprocess this object and its children, replacing only those components of an existing object of the same type with the \n        same identifier (and namespace in case of an element or attribute) that are explicitly specified. This will change only \n        those existing attribute values and child elements that appear both in the original specification and in the new specification. \n        Other children from the original specification will be preserved.\n    \n  \n  \n    Un processore ODD dovrebbe considerare i valori dell'attributo mode in questo modo:\n      addl'oggetto dovrebbe essere creato, trattando tutti gli elementi figlio che hanno anch'essi il valore add.\n          Se esistesse un oggetto con lo stesso nome (e namespace nel caso di un elemento o attributo) bisognerà dare un errore.\n        replaceutilizzare questo oggetto al posto di qualsiasi atro oggetto esistente con lo stesso nome (e namespace nel caso di un elemento o attributo),\n          e ignorare gli elementi figlio di quell'oggetto; trattare tutti gli elementi che hanno anch'essi il valore replace.\n        deletenon trattare questo oggetto o qualsiasi altro oggetto con lo stesso nome (e namespace nel caso di un elemento o attributo);\n          l'elemento con questo valore deve essere vuoto: dare un error nel caso in cui contenesse elementi figlio.\n        changetrattare questo oggetto e tutti i suoi elementi figlio, sustituendo solo i componenti di un oggetto già esistente e \n          direttamente specificato dello stesso tipo e con lo stesso nome (e namespace nel caso di un elemento o attributo).\n          Questa operazione cambierà solamente i valori di attributi già esistenti ed elementi figlio che sono presenti sia nella specificazione originale\n          che nella nuova specificazione. Gli altri elementi filgio che fanno parte della specificazione originale verranno mantenuti.\n    \n  \n  \n    La signification informelle des valeurs de l'attribut mode est la suivante :addl'objet doit être créé (traitement de tout enfant dans le mode add) ;\n          générer une erreur si un objet avec le même identifiant existe déjà.replaceutiliser cet objet de préférence à tout autre portant le même identifiant et ignorer\n          tout enfant de cet objet ; traiter tout nouvel enfant dans le mode replace. deletene pas traiter cet objet ou aucun autre portant le même identifiant ; générer une\n          erreur si de nouveaux enfants sont fournis.changetraiter cet objet, et ses enfants, et ceux de n'importe quel objet portant le même\n          identifiant, dans le mode change. \n    \n  \n  \n    ODDプロセッサはmode属性値を次のように扱うべきである: addオブジェクトを生成すべきである（子をすべてaddモードで処理する）。同一の識別子を持つオブジェクトがすでに存在するばあいはエラーを発生させる。replace同一の識別子を持つ先んじて存在するすべてのオブジェクトよりも当該のオブジェクトを優先して使用し、それらのオブジェクトの子を無視する。新しい子はすべてreplaceモードで処理する。delete当該の、あるいは先んじて存在するすべてのオブジェクトを処理してはならない。子が与えられたときはエラーを発生させる。change当該のオブジェクトと子、また先んじて存在するすべてのオブジェクトの子をchangeモードで処理する。\n  \n\n    \n  provides identifying attributes for elements which can be\n  subsequently referenced by means of a key\n  attribute.\n  \n  \n  \n  \n  \n  \n  \n  Schematron\n    \n      <rule xmlns=\"http://purl.oclc.org/dsdl/schematron\" context=\"tei:elementSpec[@module]|tei:classSpec[@module]|tei:macroSpec[@module]\">\n        <assert test=\"(not(ancestor::tei:schemaSpec | ancestor::tei:TEI | ancestor::tei:teiCorpus)) or (not(@module) or (not(//tei:moduleSpec) and not(//tei:moduleRef)) or (//tei:moduleSpec[@ident = current()/@module]) or (//tei:moduleRef[@key = current()/@module]))\">\n        Specification <value-of select=\"@ident\"/>: the value of the module attribute (\"<value-of select=\"@module\"/>\") \nshould correspond to an existing module, via a moduleSpec or\n      moduleRef</assert>\n      </rule>\n    \n  \n  \n    \n    \n    \n  \n\n    \n  provides attributes indicating how a deprecated feature will be treated in future releases.\n  \n  \n    \n  \n\n    The elementSpec, attDef and schemaSpec specification elements also have an\n      attribute which determines which namespace to which the object being created will belong. In the case of\n        schemaSpec, this namespace is inherited by all the elements created in the schema, unless\n      they have their own ns. \n        <att.namespaceable> provides attributes indicating the target namespace for an\n  object being created\n      \n    \n    \n  provides attributes indicating the target namespace for an\n  object being created\n  \n    \n  \n\n    These attributes are used by an ODD processor to determine how declarations are to be combined to form\n      a schema or DTD, as further discussed in this section.\n    \n    \n    \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDB1#TDB1\">22.8 Building a TEI Schema</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDbuild#TDbuild\">22.8.1 TEI customizations</a>","content":"\n      22.8.1 TEI customizations\n      As noted above, a TEI schema is defined by a schemaSpec element containing an arbitrary\n        mixture of explicit declarations for objects (i.e. elements, classes, patterns, or macro\n        specifications) and references to other objects containing such declarations (i.e. references to\n        specification groups, or to modules). A major purpose of this mechanism is to simplify the process of\n        defining user customizations, by providing a formal method for the user to combine new declarations\n        with existing ones, or to modify particular parts of existing declarations.\n      In the simplest case, a user-defined schema might just combine all the declarations from two\n        nominated modules:\n        \n         An ODD processor, given such a document, should combine the declarations which belong to the named\n        modules, and deliver the result as a schema of the requested type. It may also generate documentation\n        for the elements declared by those modules. No source is specified for the modules, and the schema\n        will therefore combine the declarations found in the most recent release version of the TEI Guidelines\n        known to the ODD processor in use. \n      The value specified for the source attribute, when it is supplied as a URL, specifies any\n        convenient location from which the relevant ODD files may be obtained. For the current release of the\n        TEI Guidelines, a URL in the form\n          http://www.tei-c.org/Vault/P5/x.y.z/xml/tei/odd/p5subset.xml may be used, where\n          x.y.z represents the P5 version number, e.g. 1.3.0. Alternatively, if the\n        ODD files are locally installed, it may be more convenient to supply a value such as\n          ../ODDs/p5subset.xml\".\n        \n      The value for the source attribute may be any form of URI. A set of TEI-conformant\n        specifications in a form directly usable by an ODD processor must be available at the location\n        indicated. When no source value is supplied, an ODD processor may either raise an error or\n        assume that the location of the current release of the TEI Guidelines is intended.\n      If the source is specified in the form of a private URI, the form recommended is\n          aaa:x.y.z, where aaa is a prefix indicating the markup language in use,\n        and x.y.z indicates the version number. For example, tei:1.2.1 should be\n        used to reference release 1.2.1 of the current TEI Guidelines. When such a URI is used, it will\n        usually be necessary to translate it before such a file can be used in blind interchange. \n      The effect of a moduleRef element is to include in the schema all declarations provided by\n        that module. This may be modified by means of the attributes include and except\n        which allow the encoder to supply an explicit lists of elements from the stated module which are to be\n        included or excluded respectively. For example:\n        \n         The schema specified here will include all the elements supplied by the core module except for\n          add, del, orig, and reg. It will also include only the\n          linkGroup and link elements from the linking module. \n      Alternatively, the element elementRef may be used to indicate explicitly which elements are\n        to be included in a schema. The same effect as the preceding example might thus be achieved by the\n        following:\n        \n         Note that in this last case, there is no need to specify the name of the module from which the two\n        element declarations are to be found; in the TEI scheme, element names are unique across all modules.\n        The module is simply a convenient way of grouping together a number of related declarations. \n      In the same way, a schema may select a subset of the attributes available in a specific class, \n      using the classRef element to point to an attribute class:\n        \n        Here, only the corresp attribute is included; the other attributes in the class\n        are not available. The same effect can be achieved using except:\n        \n      \n      A schema may also include declarations for new elements, as in the following example:\n        \n         A declaration for the element soundClip, which is not defined in the TEI\n        scheme, will be added to the output schema. This element will also be added to the existing TEI class\n          model.pPart.data, and will thus be available in TEI conformant\n        documents. Attributes from existing TEI classes could be added to the new element using attRef:\n        \n        This will provide the source attribute from the att.global.source class on the new \n        soundClip element.\n      \n      A schema might also include re-declarations of existing elements, as in the following example:\n        \n         The effect of this is to redefine the content model for the element head as plain text, by\n        over-riding the content child of the selected elementSpec. The attribute\n        specification mode=\"change\" has the effect of over-riding only those children elements of\n        the elementSpec which appear both in the original specification and in the new specification\n        supplied above: content in this example. Note that if the value for mode were\n          replace, the effect would be to replace all children elements of the original\n        specification with the the children elements of the new specification, and thus (in this example) to\n        delete all of them except content. \n      A schema may not contain more than two declarations for any given component. The value of the\n          mode attribute is used to determine exactly how the second declaration (and its\n        constituents) should be combined with the first. The following table summarizes how a processor should\n        resolve duplicate declarations; the term identifiable refers to those elements which can\n        have a mode attribute: \n          \n            mode value\n            existing declaration\n            effect\n          \n          \n            add\n            no\n            add new declaration to schema; process its children in add mode\n          \n          \n            add\n            yes\n            raise error\n          \n          \n            replace\n            no\n            raise error\n          \n          \n            replace\n            yes\n            retain existing declaration; process new children in replace mode; ignore existing\n              children\n          \n          \n            change\n            no\n            raise error\n          \n          \n            change\n            yes\n            process identifiable children according to their modes; process unidentifiable children in\n              replace mode; retain existing children where no replacement or change is provided \n          \n          \n            delete\n            no\n            raise error\n          \n          \n            delete\n            yes\n            ignore existing declaration and its children\n          \n        \n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDB1#TDB1\">22.8 Building a TEI Schema</a><a class=\"breadcrumb\" href=\"p5.xml?id=ST-aliens#ST-aliens\">22.8.2 Combining TEI and Non-TEI Modules</a>","content":"\n      22.8.2 Combining TEI and Non-TEI Modules\n      In the simplest case, all that is needed to include a non-TEI module in a schema is to reference its\n        RELAX NG source using the url attribute on moduleRef. The following specification,\n        for example, creates a schema in which declarations from the non-TEI module svg11.rng (defining Standard Vector Graphics) are included. To avoid any risk of name\n        clashes, the schema specifies that all TEI patterns generated should be prefixed by the string \"TEI_\".\n        \n      \n      This specification generates a single schema which might be used to validate either a TEI document\n        (with the root element TEI), or an SVG document (with a root element svg:svg), but\n        would not validate a TEI document containing svg:svg or other elements from the\n        SVG language. For that to be possible, the svg:svg element must become a member of a TEI\n        model class (1.3 The TEI Class System), so that it may be referenced by other TEI elements. To achieve\n        this, we modify the last moduleRef in the above example as follows:\n        \n      \n      This states that when the declarations from the svg11.rng module are\n        combined with those from the other modules, the declaration for the model class model.graphicLike in the TEI module should be extended to include the element\n          svg:svg as an alternative. This has the effect that elements in the TEI scheme which define\n        their content model in terms of that element class (notably figure) can now include it. A\n        RELAX NG schema generated from such a specification can be used to validate documents in which the TEI\n          figure element contains any valid SVG representation of a graphic, embedded within an\n          svg:svg element. \n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDB1#TDB1\">22.8 Building a TEI Schema</a><a class=\"breadcrumb\" href=\"p5.xml?id=TD-LinkingSchemas#TD-LinkingSchemas\">22.8.3 Linking Schemas to XML Documents</a>","content":"\n      22.8.3 Linking Schemas to XML Documents\n      Schemas can be linked to XML documents by means of the ?xml-model? processing\n        instruction described in the W3C Working Group Note Associating Schemas with XML\n          documents (https://www.w3.org/TR/xml-model/). ?xml-model? can be used for any type of schema, and may be used for multiple schemas: \n        This example includes a standard RELAX NG schema, a Schematron schema which might be used for checking\n        that all pointing attributes point at existing targets, and also a link to the TEI ODD file from which\n        the RELAX NG schema was generated. See also 2.3.10 The Schema Specification for details of another method\n        of linking an ODD specification into your file by including a schemaSpec element in\n          encodingDesc. \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=TD#TD\">22 Documentation Elements</a><a class=\"breadcrumb\" href=\"p5.xml?id=TDformal#TDformal\">22.9 Module for Documentation Elements</a>","content":"\n    22.9 Module for Documentation Elements\n    The module described in this chapter makes available the following components:\n    \n        Documentation Elements\n        Documentation of TEI and other XML markup languages\n        \n        \n        \n\t\n\t\n    \n    The selection and combination of modules to form a TEI schema is\n    described in 1.2 Defining a TEI Schema. The elements described\n    in this chapter are all members of one of three classes: model.oddDecl, model.oddRef, or model.phrase.xml, with the exceptions of\n    schemaSpec (a member of model.divPart) and both eg and egXML\n    (members of model.common and model.egLike). All of these classes are\n    declared along with the other general TEI classes, in the basic\n    structure module documented in 1 The TEI Infrastructure.  In\n    addition, some elements are members of the att.identified class, which is documented in\n    22.8.1 TEI customizations above.\n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a>","content":"\n  23 Using the TEI\n\n\n  This section discusses some technical topics concerning the deployment of the TEI markup schema\n    documented elsewhere in these Guidelines.\n    \n    In section 23.3 Customization we discuss the scope and variety of the TEI customization\n    mechanisms.\n    In 23.4 Conformance we define the notions of TEI Conformance and\n      TEI\n      Extension. Since the ODD markup description language defined in chapter 22 Documentation Elements is fundamental to the way conformance and customization are handled in the TEI\n    system, these two definitional sections are followed by a section (23.5 Implementation of an ODD System) which\n    describes the intended behaviour of an ODD processor. \n\n  \n  \n  \n\n  \n\n\n\n  \n\n\n\n  \n\n\n\n\n\n  \n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=MEDIATYPE#MEDIATYPE\">23.1 Serving TEI files with the TEI Media Type</a>","content":"\n    23.1 Serving TEI files with the TEI Media Type\n    In February 2011, the media type application/tei+xml was registered with IANA\n      for markup languages defined in accordance with the Text Encoding and Interchange\n        guidelines (RFC 6129). We\n      recommend that any XML file whose root element is in the TEI namespace be served with the\n      media type application/tei+xml to enable and encourage automated recognition and\n      processing of TEI files by external applications.\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=DT#DT\">23.2 Obtaining the TEI</a>","content":"\n    23.2 Obtaining the TEI\n    As discussed in chapter 22 Documentation Elements, all components of the TEI schema are generated\n      from a single set of TEI XML source files. Schemas can be generated in each of XML DTD\n      language, W3C schema language, and RELAX NG schema language. Documentation can be generated in\n      a variety of commonly-used document formats, including HTML, DOCX, or PDF.\n      \n    TEI components are freely available over the Internet and elsewhere. The canonical home for\n      the TEI source, the schema fragments generated from it, and example modifications, is the TEI\n      repository at https://github.com/TEIC/TEI; versions are also available in\n      other formats, along with copies of these Guidelines and related materials, from the TEI web\n      site at http://www.tei-c.org/.\n\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=MD#MD\">23.3 Customization</a>","content":"\n\n    23.3 Customization\n\n    These Guidelines provide an encoding schema suitable for encoding a very wide range of texts,\n      and capable of supporting a wide variety of applications. For this reason, the TEI schema\n      supports a variety of different approaches to solving similar problems, and also defines a\n      much richer set of elements than is likely to be necessary in any given project. Furthermore,\n      the TEI schema may be extended in well-defined and documented ways for texts that cannot be\n      conveniently or appropriately encoded using what is provided. For these reasons, it is almost\n      impossible to use the TEI schema without customizing it in some way. \n\n    This section describes how the TEI encoding schema may be customized, and should be read in\n      conjunction with chapter 22 Documentation Elements, which describes how a specific application of\n      the TEI encoding schema should be documented. The documentation system described in that\n      chapter is, like the rest of the TEI schema, independent of any particular schema or document\n      type definition language. \n\n    Formally speaking, these Guidelines provide both syntactic rules about how elements and\n      attributes may be used in valid documents and semantic recommendations about what\n      interpretation should be attached to a given syntactic construct. In this sense, they provide\n      both a document type definition and a document type declaration.\n      More exactly, we may distinguish between the TEI Abstract Model, which defines a\n      set of related concepts, and the TEI schema which defines a set of syntactic\n      rules and constraints. Many (though not all) of the semantic recommendations are provided\n      solely as informal descriptive prose, though some of them are also enforced by means of such\n      constructs as datatypes (see 1.4.2 Datatype Specifications), or by schema constraints expressed\n      using the Schematron language. Schematron constraints provide information about special kinds\n      of validation errors dependent on conditional relationships, such as the invalidity of an\n      attribute name or value on one element when another is present, or when, given a pair of\n      attributes such as minOccurs and maxOccurs, the minimum value exceeds\n      the maximum value. Schematron constraints also provide warnings when a particular element,\n      attribute, or combination is to be deprecated in future releases of the TEI scheme, to alert\n      users that the feature in question is no longer to be used after a certain date. Very rarely,\n      TEI Schematron constraints offer warnings that do not explicitly break with the TEI but\n      suggest a more efficient or less ambiguous encoding.\n      \n      Although the descriptions, validation errors, and warnings have been written with care, there\n      will inevitably be cases where the intention of the contributors has not been conveyed with\n      sufficient clarity to prevent users of these Guidelines from extending\n      them in the sense of attaching slightly variant semantics to them. \n\n    Beyond this unintentional semantic extension, some of the elements described can\n      intentionally be used in a variety of ways; for example, the element note has an\n      attribute type which can take on arbitrary string values, depending on how it is\n      used in a document. A new type of note, therefore, requires no change in the existing\n      model. On the other hand, for many applications, it may be desirable to constrain the possible\n      values for the type attribute to a small set of possibilities. A schema modified in\n      this way would no longer necessarily regard as valid the same set of documents as the\n      corresponding unmodified TEI schema, but would remain faithful to the same conceptual\n      model.\n\n\n    This section explains how the TEI schema can be customized by suppressing elements, modifying\n      classes of elements, or adding elements. Documents which\n      validate against an application of the TEI schema which has been customized in this way may or\n      may not be considered TEI-conformant, as further discussed in section\n        23.4 Conformance.\n\n    The TEI system is designed to support modification and customization in a documented way that\n      can be validated by an XML processor. This is achieved by writing a small TEI-conformant\n      document, known informally as an ODD (One Document Does it all), from which an appropriate\n      processor can generate both human-readable documentation, and a schema expressed in a language\n      such as RELAX NG or DTD. The mechanisms used to instantiate a TEI schema differ for different\n      schema languages, and are therefore not defined here. In XML DTDs, for example, extensive use\n      is made of parameter entities, while in RELAX NG schemas, extensive use is made of patterns.\n      In either case, the names of elements and, wherever possible, their attributes and content\n      models are defined indirectly. The syntax used to implement this indirection also varies with\n      the schema language used, but the underlying constructs in the TEI Abstract Model are given\n      the same names.\n      \n      This indirection makes it simpler to implement customization of the TEI system in an\n      accessible and human-readable way. \n\n    As further discussed in section 1 The TEI Infrastructure, the TEI encoding schema comprises a set\n      of class and macro declarations, and a number of modules. Each module is made up\n      of element and attribute declarations, and a schema is made by combining a particular set of\n      modules together. In the absence of any other kind of customization, when modules are combined\n      together: \n        all the elements defined by the module (and described in the corresponding section of\n          these Guidelines) are included in the schema;\n        each such element is identified by the canonical name given it in these\n          Guidelines;\n        the content model of each such element is as defined by these Guidelines;\n        the names, datatypes, and permitted values declared for each attribute associated with\n          each such element are as given in these Guidelines;\n        the elements comprising element classes and the meaning of macro declarations\n          expressed in terms of element classes is determined by the particular combination of\n          modules selected.\n       The TEI customization mechanisms allow the user to control this behaviour as follows:\n        \n        particular elements may be suppressed, removing them from any classes in which they\n          are members, and also from any generated schema; \n        new elements may be added to an existing class, thus making them available in macros\n          or content models defined in terms of those classes;\n        additional attributes, or attribute values, may be specified for an individual element\n          or for classes of elements; \n        within certain limits, attributes, or attribute values, may also be removed either\n          from an individual element or for classes of elements; \n        the characteristics inherited by one class from another class may be modified by\n          modifying its class membership: all members of the class then inherit the changed\n          characteristics;\n        the set of values legal for an attribute or attribute class may be constrained or\n          relaxed by supplying or modifying a value list, or by modifying its datatype.\n        within certain limits, the name (generic identifier) associated with an element may be\n          changed, without changing the semantic or syntactic properties of the element;\n\n       The modification mechanisms presented in this section are quite general, and may be\n      used to make all the types of changes just listed. \n\n    The recommended way of implementing and documenting all such modifications is by means of the\n      ODD system described in chapter 22 Documentation Elements; in the remainder of this section we give\n      specific examples to illustrate how that system may be applied. An ODD processor, such as the\n      Roma application supported by the TEI, or any other comparable set of stylesheets will use the\n      declarations provided by an ODD to generate appropriate sets of declarations in a specific\n      schema language such as RELAX NG or the XML DTD language. We do not discuss in detail here how\n      this should be done, since the details are schema language-specific; some background\n      information about the methods used for XML DTD and RELAX NG schema generation is however\n      provided in section 1.2 Defining a TEI Schema. Several example ODD files are also provided as part\n      of the standard TEI release: see further section 23.3.4 Examples of Modification  below.\n\n    \n\n    \n\n    \n\n\n\n    \n\n\n\n\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=MD#MD\">23.3 Customization</a><a class=\"breadcrumb\" href=\"p5.xml?id=MDMD#MDMD\">23.3.1 Kinds of Modification</a>","content":"\n      23.3.1 Kinds of Modification\n      For ease of discussion, we distinguish the following different kinds of modification: \n          deletion of elements;\n          modification of content models;\n          modification of attribute and attribute-value lists;\n          modification of class membership;\n          addition of new elements.\n          renaming of elements;\n  \n         Each of these is described in the following sections.\n\n      Each kind of modification changes the set of documents that will be considered valid\n        according to the resulting schema. A schema derived from any combination of unmodified TEI\n        declarations (an \"unmodified schema\") may be thought of as defining a certain set of\n        documents. A schema deriving from a combination of modified TEI declarations (a \"modified\n        schema\") will define a different set of documents. The set of documents valid according to\n        the modified schema may or may not be properly contained by the set of documents considered\n        to be valid according to the unmodified schema. The schema TEI-All is the\n        special case of the unmodified schema which includes all currently available TEI modules. We\n        use the term clean modification for cases where the set of documents defined by a\n        modified schema is a proper subset of the set of documents defined by TEI-All. Where this is\n        not the case, that is, where the modified schema considers valid some documents which\n        TEI-All does not, we use the term unclean modification. Despite this\n        terminology, unclean modifications are not particularly deprecated, and their use may often\n        be vital to the success of a project. The concept is introduced solely to distinguish the\n        effects of different kinds of modification.\n\n      \n\n      \n\n\n      \n\n\n      \n      \n\n\n      \n    \n      \n  \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=MD#MD\">23.3 Customization</a><a class=\"breadcrumb\" href=\"p5.xml?id=MDMD#MDMD\">23.3.1 Kinds of Modification</a><a class=\"breadcrumb\" href=\"p5.xml?id=MDMDSU#MDMDSU\">23.3.1.1 Deletion of Elements</a>","content":"\n        23.3.1.1 Deletion of Elements\n\n        The simplest way to modify the supplied modules is to suppress one or more of the\n          supplied elements. This is simply done by setting the mode attribute to\n            delete on an elementSpec for the element concerned. \n\n        For example, if the note element is not to be used in a particular application,\n          but has been included via one of the supplied modules, then the schema specification\n          concerned will contain a declaration like the following:  The ident attribute here supplies the\n          canonical name of the element to be deleted and the mode attribute specifies\n          what is to be done with it. There is no need to specify the module concerned, since\n          element names are unique across all TEI modules. The full specification for a schema in\n          which this modification is applied would thus be something like the following: \n        \n\n        In most cases, deletion is a clean modification, since most elements are optional.\n          Documents that are valid with respect to the modified schema are also valid according to\n          TEI-All. To say this another way, the set of documents matching the new schema is\n          contained by the set of documents matching the original schema.\n\n        There are however some elements in the TEI schema which have mandatory children; for\n          example, the element listPerson must contain at least one element from the\n            model.personLike class. If that class has no members because all of its\n          member elements have been removed, then the content model cannot be satisfied. A\n          modification which keeps listPerson but removes all of its possible children\n          would therefore be regarded as unclean. So long as at least one member of the class\n          remains available, however, deleting other members would not have this effect, and would\n          therefore be regarded as a clean modification. \n\n        In general, whenever the element deleted by a modification is mandatory within the\n          content model of some other (undeleted) element, the result is an unclean modification,\n          and may also break the TEI Abstract Model (23.4.3 Conformance to the TEI Abstract Model). However, the parent of\n          a mandatory child can be safely removed if it is itself optional.\n\n        To determine whether or not an element is mandatory in a given context, the user must\n          inspect the content model of the element concerned. In most cases, content models are\n          expressed in terms of model classes rather than elements; hence, removing an element will\n          generally be a clean modification, since there will generally be other members of the\n          class available. If a class is completely depopulated by a modification, then the\n          cleanliness of the modification will depend upon whether or not the class reference is\n          mandatory or optional, in the same way as for an individual element.\n\n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=MD#MD\">23.3 Customization</a><a class=\"breadcrumb\" href=\"p5.xml?id=MDMD#MDMD\">23.3.1 Kinds of Modification</a><a class=\"breadcrumb\" href=\"p5.xml?id=MDMDCM#MDMDCM\">23.3.1.2 Modification of Content Models</a>","content":"\n        23.3.1.2 Modification of Content Models\n\n        The content model for an element in the TEI schema is defined by means of a\n            content element within the elementSpec which specifies it. For\n          example, the specification for the element term provided by these Guidelines\n          contains a content element like the following:  This content model consists of a reference to a macro called macro.phraseSeq. Further examination shows that this macro in turn expands to\n          an optional repeatable alternation of text (textNode) with references to three\n          other classes (model.gLike, model.phrase, or model.global). For some particular\n          application it might be preferable to insist that term elements should only\n          contain plain text, excluding these other possibilities.1\n          This could be achieved simply by supplying a specification for term like the\n          following: \n        \n\n        This is a clean modification which does not change the meaning of a TEI element; there is\n          therefore no need to assign the element to some other namespace than that of the TEI,\n          though it may be considered good practice; see further 23.3.2 Modification and Namespaces below. \n        A change of this kind, which simplifies the possible content of an element by reducing\n          its model to one of its existing components, is always clean, because the set of documents\n          matched by the resulting schema is a subset of the set of documents which would have been\n          matched by TEI-All.\n\n        Note that content models are generally defined (as far as possible) in terms of\n          references to model classes, rather than to explicit elements. This means that the need to\n          modify content models is greatly reduced: if an element is deleted or modified, for\n          example, then the deletion or modification will be available for every content model which\n          references that element via its class, as well as those which reference it explicitly. For\n          this reason it is not (in general) good practice to replace class references by explicit\n          element references, since this may have unintended side effects. \n\n        An unqualified reference to an element class within a content model generates a content\n          model which is equivalent to an alternation of all the members of the class referenced.\n          Thus, a content model which refers to the model class model.phrase will generate a content model in which any one of the members of\n          that class is equally acceptable. The classRef element used to reference a class\n          has an expand attribute which may be used to vary this behaviour, for example\n          to require an optional repeatable alternation of all members of a class, a\n            sequence containing no more than one of each member of the class, etc. as described\n          further in 22.6 Class Specifications. \n\n        Content model changes which are not simple restrictions on an existing model should be\n          undertaken with caution. The set of documents matching the schema which results from such\n          changes is unlikely to be contained by the set of documents matching TEI-All, and such\n          changes are therefore regarded as unclean. When content models are changed or extended,\n          care should be taken to respect the existing semantics of the element concerned as stated\n          in these Guidelines. For example, the element l is defined as containing a line\n          of verse. It would not therefore make sense to redefine its content model so that it could\n          also include members of the class model.pLike such as\n            p or ab. Although syntactically feasible, such a modification would\n          not be regarded as TEI-conformant because it breaks the TEI Abstract Model. \n\n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=MD#MD\">23.3 Customization</a><a class=\"breadcrumb\" href=\"p5.xml?id=MDMD#MDMD\">23.3.1 Kinds of Modification</a><a class=\"breadcrumb\" href=\"p5.xml?id=MDMDAL#MDMDAL\">23.3.1.3 Modification of Attribute and Attribute Value Lists</a>","content":"\n        23.3.1.3 Modification of Attribute and Attribute Value Lists\n\n        The attributes applicable to a given element may be specified in two ways: they may be\n          given explicitly, by means of an attList element within the corresponding\n            elementSpec, or they may be inherited from an attribute class, as specified in\n          the classes element. To add a new attribute to an element, the designer should\n          therefore first check to see whether this attribute is already available from some\n          existing attribute class. If it is, then the simplest method of adding it will be to make\n          the element in question a member of that class, as further discussed below. If this is not\n          possible, then a new attDef element must be added to the existing\n            attList for the element in question. \n\n        Whichever method is adopted, the modification capabilities are the same as those\n          available for elements. Attributes may be added or deleted from the list, using the\n            mode attribute on attDef in the same way as on elementSpec.\n          The content of an attribute is defined by means of the datatype,\n            valList, or valDesc elements within the attDef element. Any\n          of these elements may be changed. \n\n        Suppose, for example, that we wish to add two attributes to the eg element (used\n          to indicate examples in a text), type to characterize the example in some way,\n          and valid to indicate whether the example is considered valid or not. A quick\n          glance through the Guidelines indicates that the attribute class att.typed could be used to provide the type attribute, but there is\n          no comparable class which will provide a valid attribute. The existing\n            eg element in fact has no local attributes defined for it at all: we will\n          therefore need to add not only an attDef element to define the new attribute, but\n          also an attList to hold it. \n        We begin by adding the new valid attribute: \n        \n        The value supplied for the mode attribute on the attDef element is\n            add; if this attribute already existed on the element we are modifying this\n          should generate an error, since a specification cannot have more than one attribute of the\n          same name. If the attribute is already present, we can replace the whole of the existing\n          declaration by supplying replace as the value for mode;\n          alternatively, we can change some parts of an existing declaration only by supplying just\n          the new parts, and setting change as the value for mode.\n\n        Because the new attribute is not defined by the TEI, it is good practice to specify a\n          namespace for it on the attDef; see further 23.3.2 Modification and Namespaces.\n\n\n        As noted above, adding the new type attribute involves changing this element's\n          class membership; we therefore discuss that in the next section (23.3.1.4 Class Modification).\n\n        The canonical name for the new attribute is valid, and is supplied on the\n            ident attribute of the attDef element. In this simple example, we\n          supply only a description and datatype for the new attribute; the former is given by the\n            desc element, and the latter by the datatype element. (There are of\n          course many other pieces of information which could be supplied, as documented in 22 Documentation Elements). The content of the datatype\n          element\n          is a dataRef element which references an existing TEI data specification.\n\n        It is often desirable to constrain the possible values for an attribute to a greater\n          extent than is possible by simply supplying a TEI datatype for it. This facility is\n          provided by the valList element, which can also appear as a child of the\n            attDef element. Suppose for example that, rather than simply indicating whether\n          or not the example is considered valid by means of the values true and\n            false we wish to provide a more nuanced indication, using encoded values such\n          as A, B, and C. A declaration like the following might be appropriate: \n        \n\n        The same technique may be used to replace or extend the valList supplied as part\n          of any attribute in the TEI schema.\n\n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=MD#MD\">23.3 Customization</a><a class=\"breadcrumb\" href=\"p5.xml?id=MDMD#MDMD\">23.3.1 Kinds of Modification</a><a class=\"breadcrumb\" href=\"p5.xml?id=MDMDCL#MDMDCL\">23.3.1.4 Class Modification</a>","content":"\n        23.3.1.4 Class Modification\n\n        The concept of element classes was introduced in 1.3.2 Model Classes; an\n          understanding of it is fundamental to successful use of the TEI system. As noted there, we\n          distinguish model classes, the members of which all have structural\n          similarity, from attribute classes, the members of which simply share a set\n          of attributes. \n        The part of an element specification which determines its class membership is an element\n          called classes. All classes to which the element belongs must be specified within\n          this, using a memberOf element for each. \n        To add an element to a class in which it is not already a member, all that is needed is\n          to supply a new memberOf element within the classes element for the\n          element concerned. For example, to add an element to the att.typed class, we include a declaration like the following:  Any existing class memberships for the element being changed are\n          not affected because the mode attribute of the classes element is set\n          to change (rather than its default value of replace). Consequently,\n          in this case, the eg element retains its membership of the two classes (model.common and model.graphicLike) to\n          which it already belongs. \n        Equally, to remove the attributes which an element inherits from its membership in some\n          class, all that is needed is to remove the relevant memberOf element. For\n          example, the element term defined in the core module is a member of two attribute\n          classes, att.typed and att.declaring. It inherits the attributes type and\n            subtype from the former, and the attribute decls from the latter.\n          To remove the last of these attributes from this element, we need to remove it from that\n          class: \n        \n        If the intention is to change the class membership of an element completely, rather than\n          simply add or remove it to or from one or more classes, the value of the mode\n          attribute of classes can be set to replace (which is the default if no\n          value is specified), indicating that the memberships indicated by its child\n            memberOf elements are the only ones applicable. Thus the following declaration:\n             would have the effect of removing the element term from\n          both its existing attribute classes, and adding it to the att.interpLike class.\n        If however the mode attribute is set to change, the implication is\n          that the memberships indicated by its child memberOf elements are to be combined\n          with the existing memberships for the element. \n\n        To change or remove attributes inherited from an attribute class for all members of the\n          class (as opposed to specific members of that class), it is also possible to modify the\n          class specification itself. For example, the class att.global.rendition defines several attributes which are available for all\n          elements, namely rend, style, and rendition. If we decide\n          that we never wish to use the rend attribute, the simplest way of removing it\n          is to supply a modified class specification for att.global.rendition as follows:  Because the mode attribute on the classSpec defining the\n          attributes inherited through membership of this class has the value change, any\n          of its existing identifiable components not specified in the modification above will\n          remain unchanged. The only effect will therefore be to delete the rend\n          attribute from the class, and hence from all elements which are members of the class.\n\n        The classes used in the TEI schema are further discussed in chapter 1 The TEI Infrastructure.\n          Note in particular that classes are themselves classified: the attributes inherited by a\n          member of attribute class A may come to it directly from that class, or from another class\n          of which A is itself a member. For example, the class att.global is itself a member of the classes att.global.linking and att.global.analytic. By\n          default, these two classes are predefined as empty. However, if (for example) the linking module is included in a schema, a number of attributes\n            (corresp, sameAs, etc.) are defined as members of the att.global.linking class. All elements which are members of att.global will then inherit these new attributes (see further\n          section 1.3.1 Attribute Classes). A new attribute may thus be added to the global class in\n          two ways: either by adding it to the attList defined within the class\n          specification for att.global; or by defining a new attribute\n          class, and changing the class membership of the att.global\n          class to reference it. \n\n\n        Such global changes should be undertaken with caution: in general removing existing\n          non-mandatory attributes from a class will always be a clean modification, in the same way\n          as removing non-mandatory elements. Adding a new attribute to a class however can be a\n          clean modification only if the new attribute is labelled as belonging to some namespace\n          other than the TEI.\n\n        The same mechanisms are available for modification of model classes. Care should be taken\n          when modifying the model class membership of existing elements since model class\n          membership is what determines the content model of most elements in the TEI schema, and a\n          small change may have unintended consequences. \n\n\n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=MD#MD\">23.3 Customization</a><a class=\"breadcrumb\" href=\"p5.xml?id=MDMD#MDMD\">23.3.1 Kinds of Modification</a><a class=\"breadcrumb\" href=\"p5.xml?id=MDMDNE#MDMDNE\">23.3.1.5 Addition of New Elements</a>","content":"\n        23.3.1.5 Addition of New Elements\n\n        To add a completely new element into a schema involves providing a complete element\n          specification for it. It is recommended that the classes element of this new\n          declaration should include a reference to at least one TEI model class. Without such a\n          reference, the new element would not otherwise be referenced by the content model of any\n          other TEI element, and would therefore be inaccessible within a TEI document. It is also\n          possible to modify the content models of one or more existing elements to refer to the new\n          element explicitly, as discussed in 23.3.1.2 Modification of Content Models\n           but this will generally be less convenient. \n\n        For example, the three elements bibl, biblFull, and biblStruct\n          are all defined as members of the class model.biblLike. To add\n          a fourth member (say myBibl) to this class, we need to include\n          in the elementSpec defining our new element a memberOf element which\n          nominates the intended class:  The other parts of this declaration will typically include a\n          description for the new element and information about its content model, its attributes,\n          etc., as further described in 22 Documentation Elements. \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=MD#MD\">23.3 Customization</a><a class=\"breadcrumb\" href=\"p5.xml?id=MDMD#MDMD\">23.3.1 Kinds of Modification</a><a class=\"breadcrumb\" href=\"p5.xml?id=MDMDNM#MDMDNM\">23.3.1.6 Renaming of Elements</a>","content":"\n        23.3.1.6 Renaming of Elements\n        \n        Every element and other named markup construct in the TEI schema has a canonical\n          name, usually composed of English language words or syllables: this name is supplied as the value of the\n          ident attribute on the elementSpec, attDef,\n          classSpec, or macroSpec used to define it. In some circumstances, it may be\n          convenient for the element or attribute\n          declaration used within a schema generated from that specification to take a different form, for example, permitting schemas to use generic identifiers\n          from a different language, or in an abbreviated form. There may be many alternative\n          identifiers for the same markup construct, and an ODD processor may choose which of them\n          to use for a given purpose. Each such alternative name is supplied by means of an\n          altIdent element within the specification element concerned.\n        For example, the following declaration converts note to nt:  Note that the mode attribute on the\n          elementSpec now takes the value change to indicate that those parts\n          of the element specification not supplied are to be inherited from the standard\n          definition. The content of the altIdent element is now available for use in place of the\n          canonical ident value in the schema generated. \n        \n        Renaming in this way is  is an\n          inherently unclean modification (because the set of documents matched by the resulting\n          schema is not contained by the set matched by TEI-All), even though the process of\n          converting any document in which elements have been renamed into an exactly equivalent\n          document using canonical names is completely deterministic. Documents using such a schema should not claim to be\n          in the TEI namespace,  but either use a null namespace or some user-defined\n          namespace, as further discussed in 23.3.2 Modification and Namespaces; this is necessary to\n          avoid the risk of name collision between the new name and all existing TEI names as well as for reasons\n          of conformance\n          (see further 23.3 Customization).\n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=MD#MD\">23.3 Customization</a><a class=\"breadcrumb\" href=\"p5.xml?id=MDNS#MDNS\">23.3.2 Modification and Namespaces</a>","content":"\n      23.3.2 Modification and Namespaces\n\n\n      All the elements defined by the TEI schema are labelled as belonging to a single\n          namespace, maintained by the TEI and with the URI\n          http://www.tei-c.org/ns/1.0.2\n        Only elements which are unmodified or which have undergone a clean modification may use this\n        namespace. Note however that TEI-defined attributes are not associated with any namespace.\n        \n\n      This implies that any other modification\n         must either specify a different\n        namespace or, equivalently, specify no namespace at all. The ns attribute is\n        provided on elements schemaSpec, elementSpec, and attDef for this\n        purpose. \n      Suppose, for example, that we wish to add a new attribute topic to the existing TEI element p. In the absence of namespace\n        considerations, this would be an unclean modification, since p does not currently\n        have such an attribute. The most appropriate action is to explicitly attach the new\n        attribute to a new namespace by a declaration such as the following: \n      \n      Document instances using a schema derived from this ODD can now indicate clearly the status\n        of this attribute: \n\n      Since topic is explicitly labelled as belonging to something\n        other than the TEI namespace, we regard the modification which introduced it as clean. A\n        namespace-aware processor will be able to validate those elements in the TEI namespace\n        against the unmodified schema.3\n\n      Similar considerations apply when modification is made to the content model or some other\n        aspect of an element, or when a new element is declared.\n        All such changes should be explicitly\n        labelled as belonging to some non-TEI namespace or to no namespace at all.\n      If the ns attribute is supplied on a schemaSpec element, it identifies\n        the namespace applicable to all components of the schema being specified. Even if such a\n        schema includes unmodified modules from the TEI namespace, the elements contained by such\n        modules will now be regarded as belonging to the namespace specified on the\n          schemaSpec. This can be useful if it is desired simply to avoid namespace\n        processing. For example, the following schema specification results in a schema called\n          noName which has no namespace, even though it comprises declarations from\n        the TEI header module: \n      \n      In addition to the TEI canonical namespace mentioned above, the TEI may also define\n        namespaces for approved translations of the TEI schema into other languages.\n        \n        The namespace for such translations is the same as that for the canonical namespace,\n        suffixed by the appropriate ISO language identifier (6.1 Language Identification). A schema\n        specification using the Chinese translation, for example, would use the namespace http://www.tei-c.org/ns/1.0/zh\n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=MD#MD\">23.3 Customization</a><a class=\"breadcrumb\" href=\"p5.xml?id=MDDO#MDDO\">23.3.3 Documenting the Modification</a>","content":"\n      23.3.3 Documenting the Modification\n\n      The elements used to define a TEI customization (schemaSpec, moduleRef,\n          elementSpec, etc.) will typically be used within a TEI document which supplies\n        further information about the intended use of the new schema, the meaning and application of\n        any new or modified elements within it, and so on. This document will typically conform to a\n         schema which includes components from the module described in\n        chapter 22 Documentation Elements.4\n      Where the customization to be documented simply consists in a selection of TEI modules,\n        perhaps with some deletion of unwanted elements or attributes, the documentation need not\n        specify anything further. Even here however it may be considered worthwhile to replace some\n        of the semantic information provided by the unmodified TEI specification. For example, the\n          desc element of an unmodified TEI elementSpec may describe an element in\n        terms more general than appropriate to a particular project, or the exemplum\n        elements within it may not illustrate the project's actual intended usage of the element, or\n        the remarks element may contain discussions of matters irrelevant to the project.\n        These elements may therefore be replaced or deleted within an elementSpec as\n        necessary. \n\n      \n\n      Radical revision is also possible. It is feasible to produce a modification in which the\n          teiHeader or text elements are not required, or in which any other rule\n        stated in these Guidelines is either not enforced or not enforceable. In fact, the\n        mechanism, if used in an extreme way, permits replacement of all that the TEI has to say\n        about every component of its schema. Such revisions would result in documents that are not\n        TEI-conformant in even the broadest sense, and it is not intended that encoders use the\n        mechanism in this way. We discuss exactly what is meant by the concept of TEI\n          conformance in the next section, 23.4 Conformance. \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=MD#MD\">23.3 Customization</a><a class=\"breadcrumb\" href=\"p5.xml?id=MDlite#MDlite\">23.3.4 Examples of Modification </a>","content":"\n      23.3.4 Examples of Modification \n\n      Several examples of customizations of the TEI are provided as part of the standard release.\n        They include the following: tei_bareThe schema generated from this customization is the minimum needed for TEI\n            Conformance. It provides only a handful of elements. tei_allThe schema generated from this customization combines all available TEI modules,\n            providing 585 elements.tei_allPlusThe schema generated from this customization combines all available TEI modules with\n            three other non-TEI vocabularies, specifically MathML, SVG, and XInclude.\n      \n      It is unlikely that any project would wish to use any of these extremes unchanged. However,\n        they form a useful starting point for customization, whether by removing modules from\n        tei_all or tei_allPlus, or by replacing elements deleted from tei_bare. They also\n        demonstrate how an ODD document may be constructed to provide a basic reference manual to\n        accompany schemas generated from it.\n\n      Shortly after publication of the first edition of these Guidelines, as a demonstration of\n        how the TEI encoding schema might be adopted to meet 90% of the needs of 90% of the TEI user\n        community, the TEI editors produced a brief tutorial defining one specific\n          clean modification of the TEI schema, which they called TEI Lite.\n        This tutorial and its associated DTD became very popular and are still available from the\n        TEI web site at http://www.tei-c.org/Guidelines/Customization/Lite/. The\n        tutorial and associated schema specification is also included as one of the exemplars\n        provided with TEI P5. \n      An updated and expanded version of this schema known as TEI simplePrint was\n        added to the Exemplars at release 3.1.0. The elements it defines have been modified to take\n        advantage of the processing model features (see further 22.5.4 Processing Models) introduced to the Guidelines at release 3.0.0. \n      The exemplars provided with TEI P5 also include a customization file from which a schema\n        for the validation of other customization files may be generated. This ODD, called tei_odds,\n        combines the four basic modules with the tagdocs, dictionaries, gaiji, linking, and figures\n        modules and also provides facilities for including RELAX NG or Schematron code within a\n        document.\n        \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=CF#CF\">23.4 Conformance</a>","content":"\n\n    23.4 Conformance\n\n    The notion of TEI Conformance is intended to assist in the description of the\n      format and contents of a particular XML document instance or set of documents. It may be found\n      useful in such situations as:  interchange or integration of documents amongst different researchers or users; software specifications for TEI-aware processing tools;  agreements for the deposit of texts in, and distribution of texts from, archives;  specifying the form of documents to be produced by or for a given project.  It is not intended to provide any other evaluation, for example of scholarly merit,\n      intellectual integrity, or value for money. A document may be of major intellectual importance\n      and yet not be TEI-conformant; a TEI-conformant document may be of no scholarly value\n      whatsoever.\n\n    In this section we explore several aspects of conformance, and in particular attempt to\n      define how the term TEI-conformant should be used. The terminology defined here\n      should be considered normative: users and implementors of the TEI Guidelines should use the\n      phrases TEI-conformant and\n        TEI Extension only in the senses given and with the usages described. \n\n     A document is TEI-conformant if it:  is a well-formed XML document (23.4.1 Well-formedness Criterion)can be validated against a TEI Schema, that is, a schema derived from the\n          TEI Guidelines (23.4.2 Validation Constraint) conforms to the TEI Abstract Model (23.4.3 Conformance to the TEI Abstract Model) uses the TEI namespace (and other namespaces where relevant) correctly\n            (23.4.4 Use of the TEI Namespace) is documented by means of a TEI-conformant ODD file (23.4.5 Documentation Constraint) which refers to the TEI Guidelines  Each of these criteria is discussed in more detail below. \n\n    \n\n    A document is said to use a TEI Extension if it is a well-formed XML document\n      which is valid against a TEI Schema which contains additional distinctions, representing\n      concepts not present in the TEI Abstract Model, and therefore not documented in these\n      Guidelines. Such a document \n      cannot necessarily be transformed automatically to a TEI-conformant document without loss of\n      information. However, since one of the goals of the TEI is to support extensions and\n      modifications, it should not be assumed that no TEI document can include extensions: an\n      extension which is expressed by means of the recommended mechanisms is also a TEI-conformant\n      document provided that those parts of it which are not extensions are\n      TEI-conformant.\n\n    A TEI-conformant document is said to follow TEI Recommended\n        Practice if, wherever these Guidelines prefer one encoding practice to another, the\n      preferred practice is used.\n\n    \n\n    \n\n    \n\n\n    \n\n    \n\n\n\n\n    \n\n\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=CF#CF\">23.4 Conformance</a><a class=\"breadcrumb\" href=\"p5.xml?id=CFWF#CFWF\">23.4.1 Well-formedness Criterion</a>","content":"\n\n      23.4.1 Well-formedness Criterion\n\n      These Guidelines mandate the use of well-formed XML as representation format. Documents\n        must conform to the World Wide Web Consortium recommendation of the Extensible Markup\n          Language (XML) 1.0 (Fourth Edition) or successor editions found at https://www.w3.org/TR/xml/. Other ways of\n        representing the concepts of the TEI Abstract Model are possible, and other representations\n        may be considered appropriate for use in particular situations (for example, for data\n        capture, or project-internal processing). But such alternative representations\n         should not be\n        considered in any way TEI-conformant.\n\n      Previous versions of these Guidelines used SGML as a representation format. With the\n        release of P5, the only representation format supported by these Guidelines became valid\n        XML; legacy documents in SGML format should therefore be converted using appropriate\n        software.\n      A TEI-conformant document must use the TEI namespace, and therefore must also include an\n        XML-conformant namespace declaration, as defined below (23.4.4 Use of the TEI Namespace).\n      The use of XML greatly reduces the need to consider hardware or software differences\n        between processing environments when exchanging data. No special packing or interchange\n        format is required for an XML document, beyond that defined by the W3C recommendations, and\n        no special interchange format is therefore proposed by these\n        Guidelines. For discussion of encoding issues that may arise in the processing of special\n        character sets or non-standard writing systems, see further chapter 6 Languages and Character Sets.\n\n      In addition to the well-formedness criterion, the W3C defines the notion of a\n          valid document, as being a well-formed document which matches a specific set\n        of rules or syntactic constraints, defined by a schema. As noted above, TEI\n        conformance implies that the schema used to determine validity of a given document should be\n        derived from the present Guidelines, by means of an ODD which references and documents\n        components which these Guidelines define. \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=CF#CF\">23.4 Conformance</a><a class=\"breadcrumb\" href=\"p5.xml?id=CFVL#CFVL\">23.4.2 Validation Constraint</a>","content":"\n      23.4.2 Validation Constraint\n\n      All TEI-conformant documents must validate against a schema file that has been\n        derived from the published TEI Guidelines, combined and documented in the manner described\n        in section 23.3 Customization. We call the formal output of this process a TEI\n          Schema. \n\n      The TEI does not mandate use of any particular schema language, only that this schema5 should have been generated from a TEI ODD file that references the\n        TEI Guidelines. Currently available tools permit the expression of schemas in any or all of\n        the XML DTD language, W3C XML Schema, and RELAX NG (both compact and XML formats). Some of\n        what is syntactically possible using the ODD formalism cannot be represented by all schema\n        languages; and there are some features of some schema languages which have no counterpart in\n        ODD. No single schema language fully captures all the constraints implied by conformance to\n        the TEI Abstract Model. A document which is valid according to a TEI schema represented\n        using one schema language may not be valid against the same schema expressed in other\n        languages; for example, the DTD language does not  support namespaces.\n        \n\n      As noted in section 23.3 Customization, many varieties of TEI schema are possible and not\n        all of them are necessarily TEI-conformant; derivation from an ODD is a\n        necessary but not a sufficient condition for TEI Conformance.\n\n\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=CF#CF\">23.4 Conformance</a><a class=\"breadcrumb\" href=\"p5.xml?id=CFAM#CFAM\">23.4.3 Conformance to the TEI Abstract Model</a>","content":"\n\n      23.4.3 Conformance to the TEI Abstract Model\n\n      The TEI Abstract Model is the conceptual schema instantiated by the TEI\n        Guidelines. These Guidelines define, both formally and informally, a set of abstract\n        concepts such as paragraph or heading, and their structural relationships, for\n        example stating that paragraphs do not contain\n          headings. These Guidelines also define classes of elements, which\n        have both semantic and structural properties in common. Those semantic and structural\n        properties are also a part of the TEI Abstract Model; the class membership of an existing\n        TEI element cannot therefore be changed without changing the model. Elements can however be\n        removed from a class by deletion, and new non-TEI elements within their own namespaces can\n        be added to existing TEI classes.\n\n\n      \n\n      \n\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=CF#CF\">23.4 Conformance</a><a class=\"breadcrumb\" href=\"p5.xml?id=CFAM#CFAM\">23.4.3 Conformance to the TEI Abstract Model</a><a class=\"breadcrumb\" href=\"p5.xml?id=CFAMsc#CFAMsc\">23.4.3.1 Semantic Constraints</a>","content":"\n        23.4.3.1 Semantic Constraints\n\n        It is an important condition of TEI conformance that elements defined in the TEI\n          Guidelines as having one specific meaning should not be used with another. For example,\n          the element l is defined in the TEI Guidelines as containing a line of verse. A\n          schema in which it is redefined to mean a typographic line, or an ordered queue of objects\n          of some kind, cannot therefore be TEI-conformant, whatever its other properties.\n\n        The semantics of elements defined in the TEI Guidelines are conveyed in a number of ways,\n          ranging from formally verifiable datatypes to informal descriptive prose. In addition, a\n          mapping between TEI elements and concepts in other conceptual models may be provided by\n          the equiv element where this is available. \n\n        A schema which shares equivalent concepts to those of the TEI conceptual model may be\n          mappable to the TEI Schema by means of such a mechanism. For example, the concept of\n          paragraph expressed in the TEI schema by the p element is probably the same\n          concept as that expressed in the DocBook schema by the para element.\n          Such\n          areas of overlap facilitate\n          interchange\n          because elements from one namespace may be readily integrated with those from another, but\n          do not affect the definition of conformance.\n\n        A document is said to conform to the TEI Abstract Model if features for\n          which an encoding is proposed by the TEI Guidelines are encoded within it using the markup\n          and other syntactic properties defined by means of a valid TEI-conformant\n          schema. Hence, even though the names of elements or attributes may vary, a TEI-conformant\n          document must respect the TEI Semantic Model, and be valid with respect to a\n          TEI-conformant Schema. Although it may be possible to transform a document which follows\n          the TEI Abstract Model into a TEI-conformant document, such a\n          document is not itself conformant.\n        As noted above, the notion of semantic conformance cannot be completely enforced in a\n          formal way. The TEI conceptual model is expressed by means of formal specification in a\n          customization file, by means of descriptive prose in the body of these Guidelines, and\n          implicitly by examples of usage. Any inconsistency between, for example, the text of these\n          Guidelines and a part of a specification should be considered an error and reported to the\n          TEI Council for correction. \n\n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=CF#CF\">23.4 Conformance</a><a class=\"breadcrumb\" href=\"p5.xml?id=CFAM#CFAM\">23.4.3 Conformance to the TEI Abstract Model</a><a class=\"breadcrumb\" href=\"p5.xml?id=CFAMmc#CFAMmc\">23.4.3.2 Mandatory Components of a TEI Document</a>","content":"\n        23.4.3.2 Mandatory Components of a TEI Document\n\n        It is a long-standing requirement for any TEI-conformant document that it\n          should contain a teiHeader element. To be more specific a\n            TEI-conformant document must contain  a single teiHeader element followed by one or more elements from the\n                model.resource class; or in the case of a corpus or collection, a single overall teiHeader\n              element followed by a series of TEI elements each with its own\n                teiHeader All teiHeader elements in a TEI-conformant document must\n          include elements for: Title StatementThis should include the title of the TEI document expressed using a\n                titleStmt element.Publication StatementThis should include the place and date of publication or distribution of the TEI\n              document, expressed using the publicationStmt element.Source StatementFor a document derived from some previously existing document, this must include a\n              bibliographic description of that source. For a document not so derived, this must\n              include a brief statement that the document has no pre-existing source. In either\n              case, this will be expressed using the sourceDesc element. \n\n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=CF#CF\">23.4 Conformance</a><a class=\"breadcrumb\" href=\"p5.xml?id=CFNS#CFNS\">23.4.4 Use of the TEI Namespace</a>","content":"\n      23.4.4 Use of the TEI Namespace\n\n      The Namespaces Recommendation of the W3C (1 ) provides a way for\n        an XML document to combine markup from different vocabularies without risking name collision\n        and consequent processing difficulties. While the scope of the TEI is large, there are many\n        areas in which it makes no particular recommendation, or where it recommends that other\n        defined markup schemas should be adopted, such as graphics or mathematics. It is also\n        considered desirable that users of other markup schemas should be able to integrate\n        documents using TEI markup with their own system. To meet these objectives without\n        compromising the reliability of its encoding, a TEI-conformant document is required to make\n        appropriate use of the TEI namespace.\n\n      Essentially all elements in a TEI Schema which represents concepts from the TEI Abstract\n        Model belong to the TEI namespace, http://www.tei-c.org/ns/1.0,\n        maintained by the TEI. A TEI-conformant document is required to declare the namespace for\n        all the elements it contains whether these come from the TEI namespace or from other\n        schemas. \n\n      A TEI Schema may be created which assigns TEI elements to some other namespace, or to no\n        namespace at all. A document using such a schema cannot be considered\n        TEI-conformant. A document which places non-TEI\n        elements or attributes within the TEI namespace cannot be considered TEI-conformant; such\n        practices are strongly deprecated as they may lead to serious difficulties for processing or\n        interchange. \n\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=CF#CF\">23.4 Conformance</a><a class=\"breadcrumb\" href=\"p5.xml?id=CFOD#CFOD\">23.4.5 Documentation Constraint</a>","content":"\n      23.4.5 Documentation Constraint\n\n      As noted in 23.4.2 Validation Constraint above, a TEI Schema can only be generated from a TEI ODD,\n        which also serves to document the semantics of the elements defined by it. A TEI-conformant\n        document should therefore always be accompanied by (or refer to) a valid TEI ODD\n          file specifying which modules, elements, classes, etc. are in use together with any\n        modifications applied, and from which a TEI Schema can be generated to\n        validate the document. The TEI supplies a number of predefined TEI Customization\n          exemplar ODD files and the schemas already generated from them (see 23.3.4 Examples of Modification ), but most projects will typically need to customize the TEI beyond\n        what these examples provide. It is assumed, for example, that most projects will customize\n        the TEI schema by removing those elements that are not needed for the texts they are\n        encoding, and by providing further constraints on the attribute values and element content\n        models the TEI provides. All such customizations must be specified by means of a valid\n          TEI ODD file. \n\n      As different sorts of customization have different implications for the interchange and\n        interoperability of TEI documents, it cannot be assumed that every customization will\n        necessarily result in a schema that validates only TEI-conformant documents. The ODD\n        language permits modifications which conflict with the TEI Abstract Model, even though\n        observing this model is a requirement for TEI Conformance. The ODD language can in fact be\n        used to describe many kinds of markup schema, including schemas which have nothing to do\n        with the TEI at all. \n\n      Equally, it is possible to construct a TEI Schema which is identical to that derived from a\n        given TEI ODD file without using the ODD schema. A schema can constructed simply by\n        combining the predefined schema language fragments corresponding with the required set of\n        TEI modules and other statements in the relevant schema language. However, the status of\n        such a schema with respect to the tei_all schema cannot in\n        general be easily determined; it may therefore be impractical to determine whether such a\n        schema represents a clean modification or an extension. This is one reason for making the\n        presence of a TEI ODD file a requirement for conformance. \n\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=CF#CF\">23.4 Conformance</a><a class=\"breadcrumb\" href=\"p5.xml?id=CFCATSCH#CFCATSCH\">23.4.6 Varieties of TEI Conformance</a>","content":"\n      23.4.6 Varieties of TEI Conformance\n\n      The conformance status of a given document may be assessed by answering the following\n        questions, in the order indicated: \n          Is it a valid XML document, for which a TEI Schema exists? If not, then the document\n            cannot be considered TEI-conformant in any sense.\n          Is the document accompanied by a TEI-conformant ODD specification describing its\n            markup schema and intended semantics? If not, then the document can only be considered\n            TEI-conformant if it validates against a predefined TEI Schema and conforms to the TEI\n            abstract model.\n          Does the markup in the document correctly represent the TEI abstract model? Though\n            difficult to assess, this is essential to TEI conformance.\n          Does the document claim that all of its elements come from some namespace other than\n            the TEI (or no namespace)? If so, the document cannot be TEI-conformant.\n          If the document claims to use the TEI namespace, in part or wholly, do the elements\n            associated with that namespace in fact belong to it? If not, the document cannot be\n            TEI-conformant; if so, and if all non-TEI elements and attributes are correctly\n            associated with other namespaces, then the document may be TEI-conformant.\n          Is the document valid according to a schema made by combining all TEI modules as\n            well as valid according to the schema derived from its associated ODD specification? If\n            so, the document is TEI-conformant. \n          Is the document valid according to the schema derived from its associated ODD\n            specification, but not according to tei_all? If so, the\n            document uses a TEI extension. \n          Is it possible automatically to transform the document into a document which is\n            valid according to tei_all, using only information supplied\n            in the accompanying ODD and without loss of information? If so, the document is\n            TEI-conformant.\n        \n      \n\n      In the following table, we examine more closely some specific, though imaginary, cases:\n          \n          \n            \n            A\n            B \n            C\n            D\n            E \n            F\n            G\n            H\n          \n          \n            Conforms to TEI Abstract Model\n            Y\n            N\n            Y\n            Y\n            ?\n            Y\n            N\n            ?\n          \n          \n            Valid ODD present\n            Y\n            Y\n            Y\n            Y\n            Y\n            Y\n            Y\n            N\n          \n          \n            Uses only non-TEI namespace(s) or none\n            N\n            N\n            N\n            N\n            Y\n            N\n            Y\n            N\n          \n          \n            Uses TEI and other namespaces correctly\n            Y\n            Y\n            N\n            Y\n            N\n            Y\n            N\n            Y\n          \n          \n            Document is valid as a subset of tei_all\n            Y\n            N\n            Y\n            N\n            N\n            Y\n            N\n            Y\n          \n          \n            Document can be converted automatically to a form which is valid as a subset of\n                tei_all\n            Y\n            N\n            Y\n            N\n            N\n            Y\n            N\n            ?\n          \n        \n      \n      We assume firstly that each sample document assessed here is a well-formed XML document,\n        and that it is valid against some schema. \n      The document in column A is TEI-conformant. Its tagging follows the TEI Abstract Model,\n        both as regards syntactic constraints (its l elements appear within div\n        elements and not the reverse) and semantic constraints (its l elements appear to\n        contain verse lines rather than typographic ones). It is accompanied by a valid ODD which\n        documents exactly how it uses the TEI. All the TEI-defined elements and attributes in the\n        document are placed in the TEI namespace. The schema against which it is valid is a\n          clean subset of the tei_all schema. \n\n      The document in column B is not a TEI document. Although it is accompanied by a valid TEI\n        ODD, the resulting schema includes some unclean modifications, and\n        represents some concepts from the TEI Abstract Model using non-TEI elements; for example, it\n        re-defines the content model of p to permit div within it, and it includes\n        an element pageTrimming which appears to have the same meaning\n        as the existing TEI fw element, but the equivalence is not made explicit in the\n        ODD. It uses the TEI namespace correctly to identify the TEI elements it contains, but the\n        ODD does not contain enough information automatically to convert its non-TEI elements into\n        TEI equivalents.\n\n      The document in column C is  TEI conformant. It is almost the same as\n        the document in column A, except that the names of the elements used are not those specified\n        for the TEI namespace. Because the ODD accompanying it contains an exact mapping for each\n        element name (using the altIdent element) and there are no name conflicts, it is\n        possible to make an automatic conversion of this document.\n\n      The document in column D is a TEI Extension. It combines elements from its own namespace\n        with unmodified TEI elements in the TEI namespace. Its usage of TEI elements conforms to the\n        TEI Abstract Model. Its ODD defines a new blort element which\n        has no exact TEI equivalent, but which is assigned to an existing TEI class; consequently\n        its schema is not a clean subset of tei_all. If the associated\n        ODD provided a way of mapping this element to an existing TEI element, then this would be\n        TEI-conformant.\n\n      The document in column E is superficially similar to document D, but because it does not\n        use any namespace declarations (or, equivalently, it assigns unmodified TEI elements to its\n        own namespace), it may contain name collisions; there is no way of knowing whether a\n          p within it is the same as the TEI's p or has some other meaning. The\n        accompanying ODD file may be used to provide the human reader with information about\n        equivalently named elements in the TEI namespace, and hence to determine whether the\n        document is valid with respect to the TEI Abstract Model but this is not an automatable\n        process. In particular, cases of apparent conflict (for example use of an element p\n        to represent a concept not in the TEI Abstract Model but in the abstract model of some other\n        system, whose namespace has been removed as well) cannot be reliably resolved. By our\n        current definition therefore, this is not a TEI document.\n\n      The document in column F is TEI-conformant. The difference between it and that in\n        column D is that the new element blort which is used in this\n        document is a specialization of an existing TEI element, and the ODD in which it is defined\n        specifies the mapping (a my:blort may be automatically converted\n        to a tei:seg type=\"blort\", for example). For this to work, however, the blort must observe the same syntactic constraints as the\n          seg; if it does not, this would also be a case of TEI Extension.\n\n      The document in column G is not a TEI document. Its structure is fully documented by a\n        valid TEI ODD, but it does not claim to represent the TEI Abstract Model, does not use the\n        TEI namespace, and is not intended to validate against any TEI schema. \n\n      The document in column H is very like that in column A, but it lacks an accompanying ODD.\n        Instead, the schema used to validate it is produced simply by combining TEI schema fragments\n        in the same way as an ODD processor would, given the ODD. If the resulting schema is a clean\n        subset of tei_all, such a document is indistinguishable from a\n        TEI-conformant one, but there is no way of determining (without inspection) whether this is\n        the case if any modification or extension has been applied. Its status is therefore, like\n        that of Text E, impossible to determine.\n\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=IM#IM\">23.5 Implementation of an ODD System</a>","content":"\n    23.5 Implementation of an ODD System\n    This section specifies how a processing system may take advantage of the markup specification\n      elements documented in chapter 22 Documentation Elements of these Guidelines in order to produce\n      project specific user documentation, schemas in one or more schema languages, and validation\n      tools for other processors.\n\n    The specifications in this section are illustrative but not normative. Its function is to\n      further illustrate the intended scope and application of the elements documented in chapter\n        22 Documentation Elements, since it is believed that these may have application beyond the areas\n      directly addressed by the TEI.\n\n    An ODD processing system has to accomplish two main tasks. A set of selections, deletions,\n      changes, and additions supplied by an ODD customization (as described in 23.3 Customization)\n      must first be merged with the published TEI P5 ODD specifications. Next, the resulting unified\n      ODD must be processed to produce the desired outputs.\n\n    An ODD processor is not required to do these two stages in sequence, but that may well be the\n      simplest approach; the ODD processing tools currently provided by the TEI Consortium, which\n      are also used to process the source of these Guidelines, adopt this approach.\n\n    \n\n    \n\n    \n\n    \n\n\n    \n\n    \n\n    \n\n    \n\n    \n\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=IM#IM\">23.5 Implementation of an ODD System</a><a class=\"breadcrumb\" href=\"p5.xml?id=IM-unified#IM-unified\">23.5.1 Making a Unified ODD</a>","content":"\n      23.5.1 Making a Unified ODD\n      An ODD customization must contain a single schemaSpec element, which defines the\n        schema to be constructed. \n          <schemaSpec> generates a TEI-conformant schema and documentation for it.\n         Amongst other attributes inherited from the att.identified class, this element also carries a required ident\n        attribute. This provides a name for the generated schema, which other components of the\n        processing system may use to refer to the schema being generated, e.g. in issuing error\n        messages or as part of the generated output schema file or files. The ns\n        attribute may be used to specify the default namespace within which elements valid against\n        the resulting schema belong, as discussed in 23.3.2 Modification and Namespaces. \n      The schemaSpec element contains an unordered series of specialized elements, each\n        of which is of one of the following four types: specificationselements from the class model.oddDecl (by default\n              elementSpec, classSpec, moduleSpec, and\n            macroSpec); these must have a mode attribute which determines how\n            they will be processed.6 If the value of mode is add, then\n            the object is simply copied to the output, but if it is change,\n              delete, or replace, then it will be looked at by other parts of\n            the process.references to specificationsspecGrpRef elements refer to specGrp elements that occur elsewhere\n            in this, or another, document. A specGrp element, in turn, groups together a\n            set of ODD specifications (among other things, including further specGrpRef\n            elements). The use of specGrp and specGrpRef permits the ODD markup to\n            occur at the points in documentation where they are discussed, rather than all inside\n              schemaSpec. The target attribute of any specGrpRef should\n            be followed, and the elementSpec, classSpec, and macroSpec,\n            elements in the corresponding specGrp should be processed as described in the\n            previous item; specGrpRef elements should be processed as described\n            here.references to TEI ModulesmoduleRef elements with key attributes refer to components of\n            the TEI. The value of the key attribute matches the ident\n            attribute of the moduleSpec element defining a TEI module. The key\n            must be dereferenced by some means, such as reading an XML file with the TEI ODD\n            specification (either from the local hard drive or off the Web), or looking up the\n            reference in an XML database (again, locally or remotely); whatever means is used, it\n            should return a stream of XML containing the element, class, and macro specifications\n            collected together in the specified module. These specification elements are then\n            processed in the same way as if they had been supplied directly within the\n              schemaSpec being processed.references to external modulesa moduleRef element may also refer to a compatible external module by means\n            of its url attribute; the content of such modules, which must be available in\n            the RELAX NG XML syntax, are passed directly and without modification to the output\n            schema when that is created. \n      \n\n      Each object obtained from the TEI ODD specification using moduleRef by means of\n        the key attribute must be checked against objects in the customization\n          schemaSpec according to the following rules: \n          if there is an object in the ODD customization with the same value for the\n              ident attribute, and a mode value of delete, then the\n            object from the module is ignored; \n          if there is an object in the ODD customization with the same value for the\n              ident attribute, and a mode value of replace, then\n            the object from the module is ignored, and the one from the ODD customization is used in\n            its place; \n          if there is an object in the ODD customization with the same value for the\n              ident attribute, and a mode value of change, then the\n            two objects must be merged, as described below; \n          if there is an object in the ODD customization with the same value for the\n              ident attribute, and a mode value of add, then an\n            error condition should be raised; \n\n          otherwise, the object from the module is copied to the result.\n        \n      \n\n      To merge two objects with the same ident, their component attributes and child\n        elements must be looked at recursively. Each component may fall into one of the following\n        four categories: \n\n          Some components may occur only once within the merged object (for example\n            attributes, and altIdent, content, or classes elements). If\n            such a component is found in the ODD customization, it will be copied to the output; if\n            it is not found there, but is present in the TEI ODD specification, then that will be\n            copied to the output. \n\n          Some components are grouping objects (attList, valList, for\n            example); these are always copied to the output, and their children are then processed\n            following the rules given in this list.\n\n          Some components are identifiable: this means that they are\n            members of the att.identified class from which they inherit\n            the ident attribute; examples include attDef and valItem. A\n            component of this type will be processed according to its mode attribute,\n            following the rules given above.\n\n          Some components may occur multiple times, but are neither grouped nor identifiable.\n            Examples include the members of model.glossLike such as\n              equiv, desc, gloss, the exemplum,\n            remarks, listRef, datatype or defaultVal elements.\n            These should be copied from both the TEI ODD specification and the ODD customization,\n            and all occurrences included in the output.\n\n        \n      \n\n      A special problem arises with elements which are members of attribute classes, as they are\n        permitted to override attributes inherited from a class. For example, consider this simple\n        modification:  The effect of its membership in the att.typed class is\n        to provide p with a type attribute and a subtype attribute.\n        If we wish p to not have subtype, we could extend the\n        customization in our schema as follows:  This means that when memberOf key=\"att.typed\"/ is processed, that class\n        is looked up, each attribute which it defines is examined in turn, and the customization is\n        searched for an override. If the modification is of the attribute class itself, work\n        proceeds as usual; if, however, the modification is at the element level, the class\n        reference is deleted and a series of attRef elements is added to the element, one\n        for each attribute inherited from the class. Since attribute classes can themselves be\n        members of other attribute classes, membership must be followed recursively.\n\n      The effect of the concatenation of unidentifiable components should be considered\n        carefully. An original may have  which would usefully be extended with this:  to provide an alternate description in another language. Nothing prevents the user\n        from supplying desc several times in the same language, and subsequent applications\n        will have to decide what that may mean.\n\n      Similar considerations apply to multiple example elements, though these are less likely to\n        cause problems in documentation. Note that existing examples can only be deleted by\n        supplying a completely new elementSpec in replace mode, since the\n          exemplum element is not identifiable.\n\n      In the processing of the content models of elements and the content of macros, deleted\n        elements may require special attention.7 A content model like this: \n         requires no special treatment because everything is expressed in terms of model\n        classes; if the class model.personPart is deleted explicitly, or\n        removed because all of its members have been deleted, then model.global is left as the only child of the inner alternate. An ODD\n        processor may or may not elect to simplify the resulting choice between nothing and model.global by removing the wrapper alternate element.\n        However, such simplification may be considerably more complex in the general case\n        and\n        an ODD processor is therefore likely to be more successful in carrying out such\n        simplification as a distinct stage during processing of ODD sources.\n      If an element refers directly to an element child, like this:  and figDesc has been deleted,8 it will be\n        necessary to remove that reference, or the resulting schema will be\n        invalid.\n\n      The result of the work carried out should be a new schemaSpec which contains a\n        complete and internally consistent set of element, class, and macro specifications, possibly\n        also including moduleRef elements with url attributes identifying\n        external modules. \n\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=IM#IM\">23.5 Implementation of an ODD System</a><a class=\"breadcrumb\" href=\"p5.xml?id=IMGS#IMGS\">23.5.2 Generating Schemas</a>","content":"\n      23.5.2 Generating Schemas\n      Assuming that any modifications have been resolved, as outlined in the previous section,\n        making a schema is now a four stage process: \n          all datatype and other macro specifications must be collected together and declared\n            at the start of the output schema;\n           all classes must be declared in the right order (order is significant because since\n            some classes reference others);\n          all elements are declared;\n          any moduleRef elements with a url attribute identifying an\n            external schema must be processed.\n         Working in this order gives the best chance of successfully supporting all the\n        schema languages. However, there are a number of obstacles to overcome along the way.\n\n      An ODD processor may choose to use any desired schema language or languages for its schema\n        output, since ODD specifications are expressed as far as possible in a form independent of\n        any schema language.\n        \n        The current TEI ODD processing system produces schema output in the three main schema\n        languages as follows: A RELAX NG (XML) schema is generated by converting content models, datatypes, and\n            macro specifications provided within the ODD specification; a version re-expressed in\n            the RELAX NG compact syntax is generated using James Clark's trang\n            application.A DTD schema is generated by converting the RELAX NG content models to DTD language,\n            often simplifying it to allow for the less-sophisticated output language.A W3C Schema schema is created by generating a RELAX NG schema and then using James\n            Clark's trang application. Note that the method used to generate W3C Schema means that a processor must ensure\n        that the RELAX NG it generates follows the subset which trang is able to\n        translate properly (see further below)—this may involve simple trial and error.\n\n      Other projects may decide to follow a different route, perhaps implementing a direct ODD to\n        W3C Schema translator.\n\n      Secondly, it is possible to create two rather different styles of schema. On the one hand,\n        the schema can try to maintain all the flexibility of ODD by using the facilities of the\n        schema language for parameterization; on the other, it can remove all customization features\n        and produce a flat result which is not suitable for further manipulation. The TEI project\n        currently generates both styles of schema; the first as a set of schema fragments in DTD and\n        RELAX NG languages, which can be included as modules in other schemas, and customized\n        further; the second as the output from a processor such as Roma, in which many of the\n        parameterization features have been removed.\n\n      The difference between the schema styles may be illustrated by considering this ODD\n        specification:  A simple rendering to RELAX NG produces this:\n         In the above, a subsequent redefinition of the attribute class (such as att.global) would have no effect, since references to such classes have been\n        expanded to reference their constituent attributes.\n       The equivalent parameterized version might look like this:\n         Here, the attribute class att.global is provided via an\n        explicit reference (att.global.attributes), and can therefore be redefined.\n        Moreover, the attributes are separated from the content model, allowing either to be\n        overridden.\n      In the remainder of these section, the terms simple schema and\n          parameterized schema are used to distinguish the two schema types. An ODD\n        processor is not required to support both, though the simple schema output is generally\n        preferable for most applications.\n\n      Thirdly, the problem of missing components must be resolved. For example, consider this\n        (fictitious) model for sp:  This proposes anything from the class model.global,\n        followed optionally by a speaker element followed by anything from the model.global class. What happens if speaker is removed from\n        the schema? The following would result:  which is illegal in DTD and W3C schema languages, since for a given member of\n          model.global it is impossible to be sure which rule is being\n        used. This situation is not detected when RELAX NG is used, since the language is able to\n        cope with non-deterministic content models of this kind and does not require that only a\n        single rule be used. \n      \n\n      Finally, an application will need to have some method of associating the schema with\n        document instances that use it. The TEI does not mandate any particular method of doing\n        this, since different schema languages and processors vary considerably in their\n        requirements. ODD processors may wish to build in support for some of the methods for\n        associating a document instance with a schema. The TEI does not mandate any particular\n        method, but does suggest that those which are already part of XML (the DOCTYPE declaration\n        for DTDs) and W3C Schema (the xsi:schemaLocation attribute) be supported where\n        possible.\n\n      In order for the xsi:schemaLocation attribute to be valid when a document is\n        validated against either a DTD or a RELAX NG schema, ODD processors may wish to add\n        declarations for this attribute and its namespace to the root element, even though these are\n        not part of the TEI per se. For DTDs this means adding  to the list of attributes on the root element,\n        which permits the non-namespace-aware DTD language to recognize the\n          xsi:schemaLocation notation. For RELAX NG, the namespace and attribute would\n        be declared in the usual way:  and  inside the root element\n        declaration.\n\n      Note that declaration of the xsi:schemaLocation attribute in a W3C Schema schema\n        is not permitted. Therefore, if W3C Schemas are being generated by converting the RELAX NG\n        schema (for example, with trang), it may be necessary to perform that\n        conversion prior to adding the xsi:schemaLocation declaration to the RELAX\n        NG.\n\n      It is recognized that this is an unsatisfactory solution, but it permits users to take\n        advantage of the W3C Schema facility for indicating a schema, while still permitting\n        documents to be validated using DTD and RELAX NG processors without any conflict.\n\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=IM#IM\">23.5 Implementation of an ODD System</a><a class=\"breadcrumb\" href=\"p5.xml?id=IM-naming#IM-naming\">23.5.3 Names and Documentation in Generated Schemas</a>","content":"\n      23.5.3 Names and Documentation in Generated Schemas\n      When processing class, element, or macro specifications, there are three general rules:\n          \n          If a RELAX NG pattern or DTD parameter entity is being created, its name is the\n            value of the corresponding ident attribute, prefixed by the value of any\n              prefix attribute on schemaSpec. This allows for elements from an\n            external schema to be mixed in without risk of name clashes, since all TEI elements can\n            be given a distinctive prefix such as tei_. Thus  may generate a RELAX NG (compact syntax) pattern like this:\n             References to these patterns (or, in DTDs, parameter entities) also need to be prefixed\n            with the same value. \n\n          If an element or attribute is being created, its default name is the value of the\n              ident attribute, but if there is an altIdent child, its content is\n            used instead. \n\n          Where appropriate, the documentation strings in gloss and desc\n            should be copied into the generated schema. If there is only one occurrence of either of\n            these elements, it should be used regardless, but if there are several, local processing\n            rules will need to be applied. For example, if there are several with different values\n            of xml:lang, a locale indication in the processing environment might be used\n            to decide which to use. For example, bibliography might generate a RELAX NG schema fragment like the following, if the locale is\n            determined to be French: \n          \n         Alternatively, a selection might be made on the basis of the value of the\n          version attribute which these elements carry as members of the att.translatable class. \n      In addition, there are three conventions about naming patterns relating to classes; ODD\n        processors need not follow them, but those reading the schemas generated by the TEI project\n        will find it necessary to understand them: \n          when a pattern for an attribute class is created, it is named after the attribute\n            class identifier (as above) suffixed by .attributes (e.g.\n              att.editLike.attributes); \n          when a pattern for an attribute is created, it is named after the attribute class\n            identifier (as above) suffixed by .attribute. and then the identifier of\n            the attribute (e.g. att.editLike.attribute.resp);\n\n          \n          when a parameterized schema is created, each element generates patterns for its\n            attributes and its contents separately, suffixing respectively .attributes\n            and .contents to the element name.\n        \n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=IM#IM\">23.5 Implementation of an ODD System</a><a class=\"breadcrumb\" href=\"p5.xml?id=IMRN#IMRN\">23.5.4 Making a RELAX NG Schema</a>","content":"\n      23.5.4 Making a RELAX NG Schema\n\n      To create a RELAX NG schema, the processor processes every macroSpec,\n          classSpec, and elementSpec in turn, creating a RELAX NG pattern for\n        each, using the naming conventions listed above. The order of declaration is not important,\n        and a processor may well sort them into alphabetical order of identifier.\n\n      A complete RELAX NG schema must have an rng:start element defining which elements\n        can occur as the root of a document. The ODD schemaSpec has an optional\n          start attribute, containing one or more patterns, which can be used to\n        construct the rng:start. A pattern normally corresponds to an element name, but if\n        a prefix (see above, 23.5.3 Names and Documentation in Generated Schemas) is supplied for an element, the pattern\n        consists of the prefix name with the element name.\n\n      \n\n      \n\n      \n\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=IM#IM\">23.5 Implementation of an ODD System</a><a class=\"breadcrumb\" href=\"p5.xml?id=IMRN#IMRN\">23.5.4 Making a RELAX NG Schema</a><a class=\"breadcrumb\" href=\"p5.xml?id=IMMA#IMMA\">23.5.4.1 Macros</a>","content":"\n        23.5.4.1 Macros\n        An ODD macro generates a corresponding RELAX NG pattern by processing the body of the\n            content element in the same way as elsewhere. Thus  produces the following \n          \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=IM#IM\">23.5 Implementation of an ODD System</a><a class=\"breadcrumb\" href=\"p5.xml?id=IMRN#IMRN\">23.5.4 Making a RELAX NG Schema</a><a class=\"breadcrumb\" href=\"p5.xml?id=IMCL#IMCL\">23.5.4.2 Classes</a>","content":"\n        23.5.4.2 Classes\n        An ODD model class always generates a RELAX NG pattern definition listing all the members\n          of the class in alternation. For example  will produce something like the following:  assuming that the elements num, measure, and\n            measureGrp are all defined in the schema concerned as members of that class. A\n          model declaration may also generate a number of other patterns corresponding with\n          sequences or alternations of the class members: \n           where the pattern name is created by appending an underscore and the name of the\n          generation type to the class name. \n        When classes are referenced using the classRef element, it is possible to\n          indicate which of the available patterns is required by means of the expand\n          attribute. \n        Attribute classes work by producing a pattern containing definitions of the appropriate\n          attributes. So bibliography produces  Since the processor may have expanded the attribute classes already, separate\n          patterns are generated for each attribute in the class as well as one for the class\n          itself. This allows an element to refer directly to a member of a class. Notice that the\n            desc element is used to add an a:documentation element to the schema,\n          which some editors use to provide help during composition. The desc elements in\n          the valList are used to create the human-readable sentence Sample values\n            include: 1] no; 2] yes; 3] weak; 4] strong Naturally, this behaviour is not\n          mandatory; and other ODD processors may create documentation in other ways, or ignore\n          those parts of the ODD specifications when creating schemas.\n\n        An individual attribute consists of an rng:attribute with a name\n          attribute derived according to the naming rules described above (23.5.3 Names and Documentation in Generated Schemas). In addition, the ODD model supports a defaultVal, which is transformed to a\n            defaultValue attribute in the namespace http://relaxng.org/ns/compatibility/annotations/1.0 on the\n            rng:attribute. The body of the attribute is taken from the datatype\n          child, unless there is a supporting valList with a type value of\n            closed. In that case an rng:choice is created, listing the allowed\n          values. Thus the following attribute definition  may generate this RELAX NG code:  Note the use of the http://relaxng.org/ns/compatibility/annotations/1.0 namespace to provide\n          default values and documentation. \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=IM#IM\">23.5 Implementation of an ODD System</a><a class=\"breadcrumb\" href=\"p5.xml?id=IMRN#IMRN\">23.5.4 Making a RELAX NG Schema</a><a class=\"breadcrumb\" href=\"p5.xml?id=IMEL#IMEL\">23.5.4.3 Elements</a>","content":"\n        23.5.4.3 Elements\n        An elementSpec produces a RELAX NG specification in two parts; firstly, it must\n          generate an rng:define pattern by which other elements can refer to it, and then\n          it must generate an rng:element with the content model and attributes. It may be\n          convenient to make two separate patterns, one for the element's attributes and one for its\n          content model.\n        The content model is created by processing the TEI declarations found within the\n            content element; ; the attributes are processed in the same way as those from\n          attribute classes, described above.\n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=IM#IM\">23.5 Implementation of an ODD System</a><a class=\"breadcrumb\" href=\"p5.xml?id=IM-makeDTD#IM-makeDTD\">23.5.5 Making a DTD</a>","content":"\n      23.5.5 Making a DTD\n      Generation of DTDs largely follows the same pattern as RELAX NG generation, with one\n        important exception—the order of declaration matters. A DTD may not refer to an\n        entity which has not yet been declared. Since both macros and classes generate DTD parameter\n        entities, the TEI Guidelines are constructed so that they can be declared in the right\n        order. A processor must therefore work in the following order: \n          declare all model classes which have a predeclare value of\n              true\n          declare all macros which have a predeclare value of\n            true\n          declare all other classes\n          declare the modules (if DTD fragments are being constructed)\n          declare any remaining macros\n          declare the elements and their attributes\n        \n        \n      Let us consider a complete example, a simple element with no attributes of its own:  If DTD fragments are being generated (for use as described in 23.5.7 Using TEI Parameterized Schema Fragments), this will result in the following:\n         Here the whole stanza is contained in a marked section (for use as described in 23.5.7.2 Inclusion and Exclusion of Elements), the element name is parameterized (see 23.5.7.3 Changing the Names of Generic Identifiers), and\n        the class attributes are entity references derived from the memberOf records in\n          classes. Note the additional attribute which provides a default xmlns declaration for the element; the effect of this is that if the document is\n        processed by a DTD-aware XML processor, the namespace declaration will be present\n        automatically without the document author even being aware of it.\n\n      A simpler rendition for a flattened DTD generated from a customization will result in the\n        following, with no containing marked section, and no parameterized name:\n         Here the attributes from classes have been expanded into individual entity references.\n\n\n\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=IM#IM\">23.5 Implementation of an ODD System</a><a class=\"breadcrumb\" href=\"p5.xml?id=IMGD#IMGD\">23.5.6 Generating Documentation</a>","content":"\n      23.5.6 Generating Documentation\n      In Donald Knuth's literate programming terminology (1 ), the previous\n        sections have dealt with the tangle process; to generate documentation, we now\n        turn to the weave process.\n\n      An ODD customization may consist largely of general documentation and examples, requiring\n        no ODD-specific processing. It will normally however also contain a schemaSpec\n        element and possibly some specGrp fragments.\n\n       The generated documentation may be of two forms. On the one hand, we may document the\n        customization itself, that is, only those elements (etc.) which differ in their\n        specification from that provided by the TEI reference documentation. Alternatively, we may\n        generate reference documentation for the complete subset of the TEI which results from\n        applying the customization. The TEI Roma tools take the latter approach, and operate on the\n        result of the first stage processing described in 23.5.1 Making a Unified ODD.\n\n      Generating reference documentation for elementSpec, classSpec, and\n          macroSpec elements is largely dependent on the design of the preferred output.\n        Some applications may, for example, want to turn all names of objects into hyperlinks, show\n        lists of class members, or present lists of attributes as tables, lists, or inline prose.\n        Another technique implemented in these Guidelines is to show lists of potential\n          parents for each element, by tracing which other elements have them\n        as possible members of their content models.\n      One model of display on a web page is shown in 23.5.6.1 Example reference documentation for faith, corresponding to\n        the faith element shown in section 23.5.5 Making a DTD.\n      \n\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=IM#IM\">23.5 Implementation of an ODD System</a><a class=\"breadcrumb\" href=\"p5.xml?id=STPE#STPE\">23.5.7 Using TEI Parameterized Schema Fragments</a>","content":"\n      23.5.7 Using TEI Parameterized Schema Fragments\n      The TEI parameterized DTD and RELAX NG fragments make use of parameter entities and\n        patterns for several purposes. In this section we describe their interface for the user. In\n        general we recommend use of ODD instead of this technique, which has been retained only for\n        compatability reasons.\n\n      \n\n\n      \n\n      \n\n\n      \n\n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=IM#IM\">23.5 Implementation of an ODD System</a><a class=\"breadcrumb\" href=\"p5.xml?id=STPE#STPE\">23.5.7 Using TEI Parameterized Schema Fragments</a><a class=\"breadcrumb\" href=\"p5.xml?id=STPED#STPED\">23.5.7.1 Selection of Modules</a>","content":"\n        23.5.7.1 Selection of Modules\n\n        Special-purpose parameter entities are used to specify which modules are to be combined\n          into a TEI DTD. They take the form TEI.xxxxx where xxxx is the\n          name of the module as given in table 1  in 1.1 TEI Modules.\n          For example, the parameter entity TEI.linking is used to define\n          whether or not to include the module linking. All such\n          parameter entities are declared by default with the value IGNORE: to select a\n          module, therefore, the encoder declares the appropriate parameter entities with the value\n            INCLUDE. \n\n        For XML DTD fragments, note that some modules generate two DTD fragments: for example the\n            analysis module generates fragments called analysis-decl and analysis. This is\n          because the declarations they contain are needed at different points in the creation of an\n          XML DTD. \n\n        The parameter entity named for the module is used as the keyword controlling a\n          conditional marked section in the DTD fragment generated by the tei module. The declarations for each DTD fragment constituting the module are\n          contained within such marked sections. For example, the parameter entity TEI.linking appears twice in tei.dtd, once for the\n            linking-decl schema fragment:\n           and once for the linking schema fragment:\n           If TEI.linking has its default value of IGNORE, neither declaration has any effect. If\n          however it has the value INCLUDE, then the content of each marked section is acted upon:\n          the parameter entities file.linking and file.linking-decl are referenced, which has the effect of embedding the content\n          of the files they represent at the appropriate point in the DTD. \n\n        The RELAX NG schema fragments can be combined in a wrapper schema using the standard\n          mechanism of rng:include in that language.\n\n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=IM#IM\">23.5 Implementation of an ODD System</a><a class=\"breadcrumb\" href=\"p5.xml?id=STPE#STPE\">23.5.7 Using TEI Parameterized Schema Fragments</a><a class=\"breadcrumb\" href=\"p5.xml?id=STPEEX#STPEEX\">23.5.7.2 Inclusion and Exclusion of Elements</a>","content":"\n        23.5.7.2 Inclusion and Exclusion of Elements\n\n        The TEI DTD fragments also use marked sections and parameter entity references to allow\n          users to exclude the definitions of individual elements, in order either to make the\n          elements illegal in a document or to allow the element to be redefined. The parameter\n          entities used for this purpose have exactly the same name as the generic identifier of the\n          element concerned. The default definition for these parameter entities is\n            INCLUDE but they may be changed to IGNORE in order to exclude the\n          standard element and attribute definition list declarations from the DTD. \n\n        The declarations for the element p, for example, are preceded by a definition\n          for a parameter entity with the name p and\n          contained within a marked section whose keyword is given as %p;: \n        These parameter entities are defined immediately preceding the element whose declarations\n          they control; because their names are completely regular, they are not documented further. \n        To define a DTD in which the element p is excluded therefore, the entity p needs to be redefined as IGNORE by\n          ensuring that a declaration such as\n           is added earlier in the\n          DTD than the default (see further 23.5.7.4 Embedding Local Modifications (DTD only)). \n\n        Similarly, in the parameterized RELAX NG schemas, every element is defined by a pattern\n          named after the element. To undefine an element therefore all that is necessary is to add\n          a declaration like the following:\n          \n        \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=IM#IM\">23.5 Implementation of an ODD System</a><a class=\"breadcrumb\" href=\"p5.xml?id=STPE#STPE\">23.5.7 Using TEI Parameterized Schema Fragments</a><a class=\"breadcrumb\" href=\"p5.xml?id=STPEGI#STPEGI\">23.5.7.3 Changing the Names of Generic Identifiers</a>","content":"\n        23.5.7.3 Changing the Names of Generic Identifiers\n\n        In the TEI DTD fragments, elements are not referred to directly by their generic\n          identifiers; instead, the DTD fragments refer to parameter entities which expand to the\n          standard generic identifiers. This allows users to rename elements by redefining the\n          appropriate parameter entity. Parameter entities used for this purpose are formed by\n          taking the standard generic identifier of the element and attaching the string\n            n. as a prefix. Thus the standard generic identifiers for paragraphs, notes,\n          and quotations, p, note, and persName are defined by\n          declarations of the following form:  Note that since all names are case-sensitive, the specific\n          mix of uppercase and lowercase letters in the standard generic identifier must be\n          preserved in the entity name. \n\n        These declarations are generated by an ODD processor when TEI DTD fragments are created. \n\n         In the RELAX NG schemas, all elements are normally defined using a pattern with the same\n          name as the element (as described in 23.5.3 Names and Documentation in Generated Schemas): for example\n           The easiest way of renaming the element is thus simply to rewrite the pattern with a\n          different element name; any references use the pattern, not the element, name.\n           More complex revisions, such as redefining the content of the element (defined by the\n          pattern abbr.content) or its attributes (defined by the pattern\n            abbr.attributes) can be accomplished in a similar way, using\n          the features of the RELAX NG language. The recommended method of carrying out such\n          modifications is however to use the ODD language as further described in section 22 Documentation Elements.\n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=USE#USE\">23 Using the TEI</a><a class=\"breadcrumb\" href=\"p5.xml?id=IM#IM\">23.5 Implementation of an ODD System</a><a class=\"breadcrumb\" href=\"p5.xml?id=STPE#STPE\">23.5.7 Using TEI Parameterized Schema Fragments</a><a class=\"breadcrumb\" href=\"p5.xml?id=STOVLO#STOVLO\">23.5.7.4 Embedding Local Modifications (DTD only)</a>","content":"\n        23.5.7.4 Embedding Local Modifications (DTD only)\n\n        Any local modifications to a DTD (i.e. changes to a schema other than simple inclusion or\n          exclusion of modules) are made by declarations stored in one of two local extension files,\n          one containing modifications to the TEI parameter entities, and the other new or changed\n          declarations of elements and their attributes. Entity declarations must be made which\n          associate the names of these two files with the appropriate parameter entity so that the\n          declarations they contain can be embedded within the TEI DTD at an appropriate point.\n\n        The following entities are referred to by the main tei.dtd\n          file to embed portions of the TEI DTD fragments or locally developed extensions. TEI.extensions.entidentifies a local file containing extensions to the TEI parameter entitiesTEI.extensions.dtdidentifies a local file containing extensions to the TEI module\n        For example, if the relevant files are called project.ent and project.dtd, then\n          declarations like the following would be appropriate: \n\n        When an entity is declared more than once, the first declaration is binding and the\n          others are ignored. The local modifications to parameter entities should therefore be\n          handled before the standard parameter entities themselves are declared in tei.dtd. The entity TEI.extensions.ent is\n          referred to before any TEI declarations are handled, to allow the user's declarations to\n          take priority. If the user does not provide a TEI.extensions.ent\n          entity, the entity will be expanded to the empty string.\n        For example the encoder might wish to add two phrase-level elements it and bd, perhaps as synonyms for\n            hi rend='italics' and hi rend='bold'. As described in chapter 23.3 Customization, this involves two distinct steps: one to define the new elements, and\n          the other to ensure that they are placed into the TEI document structure at the right\n          place. \n        Creating the new declarations is done in the same way for user-defined elements as for\n          any other; the same parameter entities need to be defined so that they may be referenced\n          by other elements. The content models of these new elements may also reference other\n          parameter entities, which is why they need to be declared after other declarations. \n        The second step involves modifying the element class to which the new elements should be\n          attached. This requires that the parameter entity macro.phraseSeq\n          should be modified to include the generic identifiers for the new elements we wish to\n          create. The declaration for each modifiable parameter entity in the DTD includes a\n          reference to an additional parameter entity with the same name prefixed by an\n            x.; these entities are declared by default as the null string. However, in\n          the file containing local declarations they may be redeclared to include references to the\n          new class members:  and this declaration will take precedence over the default when the declaration for\n          macro.phraseSeq is evaluated. \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=REF-CLASSES-MODEL#REF-CLASSES-MODEL\">1 Model Classes</a>","content":"\n\t1 Model Classes\n\n\n\tA B C D E F G H I L M N O P Q R S T \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=REF-CLASSES-MODEL#REF-CLASSES-MODEL\">1 Model Classes</a><span class=\"breadcrumb\">1.1 About the Model Classes Appendix</span>","content":"\n                1.1 About the Model Classes Appendix\n                This appendix gives you a list of model classes and links to the reference pages for them. There are 124 distinctly-named model classes in revision e64bcedf9 of TEI P5 Version 4.5.0a of the TEI Guidelines."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=REF-CLASSES-ATTS#REF-CLASSES-ATTS\">2 Attribute Classes</a>","content":"\n\t2 Attribute Classes\n\n\n\n\tA B C D E F G H I L M N P R S T W \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=REF-CLASSES-ATTS#REF-CLASSES-ATTS\">2 Attribute Classes</a><span class=\"breadcrumb\">2.1 About the Attribute Classes Appendix</span>","content":"\n                2.1 About the Attribute Classes Appendix\n                This appendix gives you a list of attribute classes and links to the reference pages for them. There are 81 distinctly-named attribute classes in revision e64bcedf9 of TEI P5 Version 4.5.0a of the TEI Guidelines."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=REF-ELEMENTS#REF-ELEMENTS\">3 Elements</a>","content":"\n\t3 Elements\n\t\n\tA B C D E F G H I J K L M N O P Q R S T U V W X Z \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=REF-ELEMENTS#REF-ELEMENTS\">3 Elements</a><span class=\"breadcrumb\">3.1 About the Elements Appendix</span>","content":"\n\t\t3.1 About the Elements Appendix\n\t\tThis appendix gives you links to reference pages for all elements in the TEI Guidelines. \n\t\t\tThere are 585 TEI elements in revision e64bcedf9 of \n\t\t\tTEI P5 Version 4.5.0a of the TEI Guidelines.\n\tThe elements listed here are in the TEI Namespace: \n\t\thttp://www.tei-c.org/ns/1.0\n\t\tunless otherwise noted on that element's reference page.\n\t\t\n\t\t\n\t"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=REF-ATTS#REF-ATTS\">4 Attributes</a>","content":"\n\t4 Attributes\n   \n\n\tabsolutewhen activeinteraction relation adjnode adjFromnode adjTonode ageperson personGrp persona agentatt.damaged gap unclear aloudsaid anaatt.global.analytic anchoredatt.anchoring aritytree assertedValuecertainty atLeastatt.ranging atMostatt.ranging attachmentsurface attsspecDesc autoPrefixcontent baseFormm baseTypesfsDecl behaviourmodel breakatt.breaking cRefatt.cReferencing calendaratt.datable causeatt.textCritical att.transcriptional certatt.global.responsibility certainty changeatt.global.change childreniNode root classatt.msClass attRef codeoccupation socecStatus colsatt.tableDecoration table columnslayout commodityatt.measurement confidenceatt.ranging contemporarybinding seal copyOfatt.global.linking correspatt.global.linking cssClassmodel datcatatt.datcat datingMethodatt.datable.custom datingPointatt.datable.custom datumgeoDecl declsatt.declaring defaultatt.declarable defaultExceptionsschemaSpec defectiveatt.msExcerpt degreeatt.damaged certainty node purpose delimciteStructure refState dimspace directsaid discretesound docLangschemaSpec domainsatt.pointing.group duratt.duration.w3c dur-isoatt.duration.iso edatt.edition edRefatt.edition encodingbinaryObject endatt.timed enjambatt.enjamb eolhyphenation evaluateatt.pointing evidenceatt.editLike persPronouns exceptanyElement classRef moduleRef excludeatt.global.linking expandatt.lexicographic classRef extentatt.dimensions att.partials fValf facsatt.global.facs featsfs featureshift filterequiv flippingsurface followiNode leaf forcepc formobjectDesc formulaatt.formula fromapp arc att.citing att.datable.w3c locus rt span from-customatt.datable.custom from-isoatt.datable.iso fromUnitconversion fullatt.personal functionatt.segLike material metamark genderperson persona generateclassSpec gitagUsage givencertainty gradualwriting groupatt.damaged handatt.written handshandDesc heightatt.media identapplication att.identified language prefixDef remarks transcriptionDesc valItem inDegreenode includeclassRef moduleRef indexNameindex instatt.interpLike instantatt.editLike persPronouns intervaltimeline when iteratedkinesic vocal joinatt.linguistic keyatt.canonical classRef dataRef elementRef macroRef memberOf moduleRef schemaRef specDesc labelrhyme langcode lemmaatt.linguistic lemmaRefatt.linguistic lengthrefState levellangKnown sense title locapp locationatt.lexicographic variantEncoding locuscertainty respons lrxatt.coordinated lryatt.coordinated mainLangtextLang markspunctuation quotation matchatt.scoping citeStructure matchPatternatt.patternReplacement materialsupportDesc maxatt.ranging memberOf numeric maxOccursatt.repeatable datatype mediumatt.handFeatures mergedInatt.lexicographic metatt.metrical methodcorrection normalization variantEncoding mimeTypeatt.internetMedia media minatt.ranging memberOf minOccursatt.repeatable datatype modealt altGrp att.combinable channel classes memberOf moduleatt.identified motivationannotation msdatt.linguistic mutualrelation natt.global nameatt.gaijiProp attRef dataFacet dataRef equiv f fDecl namespace param relation unicodeProp unihanProp vLabel newhandShift shift nextatt.global.linking normatt.lexicographic.normalized notAfteratt.datable.w3c notAfter-customatt.datable.custom notAfter-isoatt.datable.iso notBeforeatt.datable.w3c notBefore-customatt.datable.custom notBefore-isoatt.datable.iso notationatt.notated nsatt.namespaceable attDef nymRefatt.naming occurstagUsage optatt.lexicographic optionalfDecl ordiNode root tree ordergraph tree orderedlistChange orgatt.divLike attList vColl vMerge origatt.lexicographic.normalized origintimeline otherLangstextLang outDegreeiNode node root outputmodel modelGrp modelSequence parentiNode leaf partatt.fragmentable partialtagsDecl partsnym passiveinteraction relation patternmetDecl perfmove tech periodatt.datable placeatt.placement placementpunctuation pointsatt.coordinated path posatt.linguistic prepc precisionatt.dimensions precision predeclareatt.identified predicateatt.predicate modelSequence prefixelementSpec moduleRef schemaSpec preserveOrdersequence prevatt.global.linking propertyciteData quantityatt.dimensions att.measurement realatt.metrical reasongap secl supplied surplus unclear refatt.canonical dataRef g rendatt.global.rendition renditionatt.global.rendition replacementPatternatt.patternReplacement requireanyElement att.textCritical respatt.global.responsibility space restrictiondataRef resultjoin joinGrp rhymeatt.metrical roleatt.naming att.tableDecoration org person personGrp persona rotatezone rowsatt.tableDecoration table ruledLineslayout sameAsatt.global.linking sampleatt.divLike scaleatt.media schemeatt att.styleDef catRef classCode constraintSpec gi keywords locus locusGrp occupation socecStatus tag schemeVersionatt.styleDef scopeatt.dimensions att.handFeatures join outputRendition rendition scribeatt.handFeatures scribeRefatt.handFeatures scriptatt.handFeatures scriptRefatt.handFeatures selectatt.global.linking selectorrendition seqatt.transcriptional sexperson personGrp persona sincewhen sizegraph personGrp socialdistinct sortatt.personal sortKeyatt.sortable sourceatt.global.source spacedistinct spanToatt.spanning splitatt.lexicographic startatt.coordinated att.timed schemaSpec statusatt.docStatus att.transcriptional availability correction stdDeviationprecision streamslayout styleatt.global.rendition subtypeatt.interpLike att.typed synchatt.global.linking taglangKnown tagslangKnowledge targFuncatt.pointing.group targetalt annotation att.pointing att.scoping change fsdLink material metamark redo relatedItem rt specGrpRef undo targetEndatt.anchoring targetLangatt.pointing schemaSpec terminalmetSym timedistinct toapp arc att.citing att.datable.w3c locus rt span to-customatt.datable.custom to-isoatt.datable.iso toUnitconversion toWhomatt.ascribed.directed transu truncnumeric typeabbr affiliation age app att.entryLike att.interpLike att.textCritical att.typed birth castItem certainty classSpec constitution constraintSpec correspAction death derivation desc dimensions distinct divGen domain education factuality faith form fs fsDecl fsdLink fw gram graph iType idno interaction langKnowledge lbl list listForest measure metDecl move nationality node num oRef occupation orth preparedness purpose q recording residence socecStatus sound stage tag tech title titlePage titlePart usg valList witDetail xr ulxatt.coordinated ulyatt.coordinated unitatt.citing att.dimensions att.measurement att.milestoneUnit citeStructure pc timeline when unitRefatt.measurement uriequiv urlatt.resourced binaryObject moduleRef usageattDef language useatt.citeStructurePart useSourceRenditionmodel modelGrp modelSequence validegXML validUntilatt.deprecated valueage att.gaijiProp att.lexicographic binary dataFacet eLeaf eTree gender iNode leaf metSym node num numeric param persPronouns root sex symbol triangle unicodeProp unihanProp valueDatcatatt.datcat varSeqatt.textCritical versionTEI application att.gaijiProp teiCorpus transcriptionDesc versionDateatt.translatable weightsalt whenatt.datable.w3c docDate when-customatt.datable.custom when-isoatt.datable.iso whereatt.locatable move whoatt.ascribed widthatt.media witatt.rdgPart att.witnessed witDetail withIdtagUsage writtenLineslayout xml:baseatt.global xml:idannotation att.global xml:langatt.global xml:spaceatt.global \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=REF-ATTS#REF-ATTS\">4 Attributes</a><span class=\"breadcrumb\">4.1 About the Attributes Appendix</span>","content":"\n                4.1 About the Attributes Appendix\n                This appendix gives you a list of attributes and links to the reference pages for the elements on which they appear. There are 269 distinctly-named attributes in revision e64bcedf9 of TEI P5 Version 4.5.0a of the TEI Guidelines."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=REF-MACROS#REF-MACROS\">5 Datatypes and Other Macros</a>","content":"\n\t5 Datatypes and Other Macros\n\n\n\tdatatype macro \n      "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=REF-MACROS#REF-MACROS\">5 Datatypes and Other Macros</a><span class=\"breadcrumb\">5.1 About the Datatypes and Macros Appendix</span>","content":"\n\t5.1 About the Datatypes and Macros Appendix\n                This appendix gives you a list of datypes and links to the reference pages for them. There are 35 distinctly-named data specifications in revision e64bcedf9 of TEI P5 Version 4.5.0a of the TEI Guidelines."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=BIB#BIB\">6 Bibliography</a>","content":"\n  6 Bibliography\n  \n  \n  \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=BIB#BIB\">6 Bibliography</a><span class=\"breadcrumb\">6.1 Works Cited in Examples in these Guidelines</span>","content":"\n    6.1 Works Cited in Examples in these Guidelines\n\n    \n      阿城，《棋王》。\n      Académie française,\n          Rectifications de l'orthographe - J.O. du 06-12-1990, En ligne,\n          consulté le 05-03-2010.\n      \n        Adams, Douglas. The Hitchhiker's Guide to the\n          Galaxy (1979), chapter 31.\n      Agence bibliographique de l'enseignement\n          supérieur, ABES:Site internet\n        par l'ABES,consulté le 05-03-2010.   \n      阿拉伯短劍，國史館：嚴家淦總統文物。\n      Alighieri, Dante. Doglia mi\n          reca ne lo core ardire, Rime, XLIX.\n      Allinson, E.P. and B. Penrose.\n          Philadelphia 1681-1887 (1887), p. 138.\n      American National Standard for Bibliographic\n          References, ANSI Z39.29-1977, New York:  American\n          National Standards Institute (1977). \n      \n        \n        \n        Andersson, Theodore M..  A Preface to the Nibelungenlied,\n          Stanford University Press (1987).\n      \n        Andrews, Mr.. Song, Chambers's\n          Edinburgh Journal Series 1\n        9:463 (12\n          December 1840), 376. https://dvpp.uvic.ca/poems/chambers_series/1840/pom_5242_song.html\n      \n      Anouilh, Jean, \n          Antigone, 1842.\n      \n        [As in Visions of]  Single leaf of Notes for a poem about night \"visions,\"\n        possibly related to the untitled 1855 poem that Whitman eventually titled \"The Sleepers.\"\n        Fragments of an unidentified newspaper clipping about the Puget Sound area have been pasted\n        to the leaf. The Trent Collection of Walt Whitman Manuscripts, Duke University Rare Book,\n        Manuscript, and Special Collections Library. http://www.whitmanarchive.org/resources/sleepers/duk.00258.001.jpg\n      \n      \n        Atkins et al. \n        Collins Robert French-English English-French Dictionary.\n          London: Collins (1978). \n      \n        Atkinson, J. Maxwell and John Heritage. Structures of social action: Studies in conversation analysis,\n          Cambridge and Paris: Cambridge\n          University Press, Editions de la Maison des Sciences de\n          l'Homme (1984), ix-xvi.\n      Austen, Jane. Pride and\n          Prejudice. (1813), chapter\n        1.\n\n      \n\n      白先勇，〈金大班的最後一夜〉，《台北人》。\n      白先勇，《孽子》。      \n      白居易，《憶江南》。\n      \n        Baker, James K.. Night in Tarras. In Hilltop: A Literary Paper, vol 1 no 2. Wellington: Victoria University College\n        Literary Society. (1949). \n      Balzac, Honoré de,\n          Les Chouans, 1845.\n      Balzac, Honoré de,\n          Le Père Goriot, 1843.\n      Balzac, Honoré de, Petites misères de la\n          vie conjugale, 1850.\n      Barbauld, Lucy Aikin. The Works of Anna\n          Laetitia Barbauld (1826).\n      \n        Barker, Jane. The Lining to the Patch-Work Screen\n          (1726). \n      \n        Base de datos paleográfica da lírica galego-portuguesa (PalMed). Versión 1.2.\n          Santiago de Compostela: Centro Ramón Piñeiro para a\n          Investigación en Humanidades. http://www.cirp.gal/palmed.\n          f. B126r, column a, l. 21-32.\n      \n      Bataille, Michel ,\n          L'Arbre de Noël, 1967.\n      \n        Les Chats, in : Baudelaire, Charles, Les Fleurs du mal, 1861.\n      \n        La Vie antérieure, in : Baudelaire, Charles,\n          Les Fleurs du mal, 1861.\n      電影《霸王別姬》，1993年。\n      Beck, Béatrice, Léon\n          Morin, prêtre, 1952.\n      Beckett, Samuel. Waiting for\n          Godot, London: Faber and Faber\n          (1956).\n      Beckett, Samuel. Murphy\n          (1963), chap 2. \n      Becque, Henry, La\n          Parisienne. Edition\n          électronique par l'ATILF et le CNRTL, d'après\n        l'édition de Fasquelle (Paris, 1922). \n      \n        Beerbohm, Max. Autograph manuscript of The Golden Drugget,\n        Pierpont Morgan MA 3391. in 1  123. \n      Behn, Aphra. The Rover,\n          (1697).\n      Belloc, Denis ,\n          Képas, 1989.\n      \n        Belloc, Denis , Néons, 1987.\n      Bentham, Jeremy. The Book of\n          Fallacies.  (1824).\n      \n        Beowulf and The fight at Finnsburg; edited, with introduction, bibliography,\n        notes, glossary, and appendices, by Fr. Klaeber. Boston, New York\n          [etc.] \n        D.C. Heath & Co. (1922). \n      \n        Bibliographie dans le cadre de la semaine italienne du 11 au 18 mars 2006, ,\n          document électronique.\n      Bibliothèque nationale de\n          France,  Projet de description des reliures remarquables de la Réserve des\n          livres rares selon le modèle de la TEI manuscrits.\n      Billetdoux, Marie, Un\n          peu de désir sinon je meurs, 2006.\n      \n        Blake, William. London, in Songs\n          of Experience (1791). \n      \n        Blake, William. The Sick Rose, in Songs of Experience (1794). \n      \n        Blake, William. The Tyger, in Songs of Experience (1794). \n      Bloomfield, Leonard. Literate and\n          Illiterate Speech, American Speech, 2, (1927), pp.\n          432-441.\n      Borges, Jorge Luis, tr. R.\n          Simms. The Analytical Language of John Wilkins. In\n          Emir Rodriguez Monegal and Alistair Reid, eds. Borges: A reader, Dutton Adult\n        (1981), p.141.\n      Borges, Jorge Luis. Avatars of\n          the Tortoise In James E. Irby tr. Labyrinths: Selected Stories and Other Writings, New York:\n          New Directions, (1962), pp.202-203.\n      Bouillier, Grégoire,\n          Rapport sur moi,  2002.\n      Bresson, Robert, Mouchette : script, l'Avant-scène cinéma,\n          n° 80, avril 1968.\n       Extract from British National Corpus (http://www.natcorp.ox.ac.uk) Text KB7, sentence 13730.\n      \n        Browning, Robert. Letter to George Moulton-Barrett, Pierpont\n        Morgan MA 310, (1  23). \n      Buirette de Belloy, Pierre Laurent,\n          Gabrielle de Vergy, 1777.\n      \n        Bunyan, John. The Pilgrim's Progress from this world to that which\n          is to come..., London (1678). \n      Burgess, Anthony. A Clockwork\n          Orange. (1962), opening.\n      Burnard, Lou. Principles of\n          Database Design in S. Rahtz. ed. Information\n          Technology in the Humanities: tools, techniques and applications, Ellis\n          Horwood Ltd, Ellis Horwood Series in Computers and Their\n          Applications, (1987), p. 54.\n      Burnard, Lou,\n          Sperberg-McQueen, C. M., \n          La TEI simplifiée,\n            une introduction au codage des textes électroniques en vue de leur échange -- version de\n            travail \n        , 1996.\n      \n        Burton, Robert. Anatomy of Melancholy\n          (1621), 16th ed. reprinted 1846, p. 743.\n      Butler, Samuel. The Way of All\n          Flesh (1903), chapter 37.\n      Byron, George Gordon. Don Juan\n          (1819), I.xxii.\n      Byron, George Gordon. Vision of\n          Judgment In E.H. Coleridge ed. The Poetical\n          Works of Lord Byron, viii, 1922.\n      \n      \n      \n      C 60/16 Fine Roll 6 HENRY III (28 October 1221-27\n          October 1222), membrane 5, entry 154.      \n      CBETA\n      Cædmon's Hymn in Bede's Historia Ecclesiastica (MS Kk.\n        5. 16, Cambridge, University Library).\n      \n        Cabaret. A musical play, with book by Joe Masteroff, lyrics by Fred Ebb, and\n        music by John Kaner. Based on the play by John van Druten and stories by Christopher\n        Isherwood. 1966\n      Edward Barkley, describing how Essex drove the Irish from the\n        plains into the woods to freeze or famish in winter; quoted by Canny, Nicholas\n          P.\n        The Ideology of English Colonization: From Ireland to America. In\n          Stanley N. Katz and John M. Murrin eds. Colonial America: Essays in Politics and Social Development, 3d\n          ed\n        New York: Knopf, (1983), p.53. \n      \n      \n        Carroll, Lewis. Through the Looking Glass, and what Alice\n          found there. (1871). \n      Catéchisme de l'Eglise\n        catholique, 1968.\n      \n        Cavendish, Margaret. Nature's Pictures.\n          London, 1656. Women Writers Online. Women\n          Writers Project, Northeastern University. 29 Mar.\n        2015.\n      Centre national de la recherche scientifique\n          (France). UMR 7118 ATILF, Le\n            Trésor de la Langue Française Informatisé (TLFI),\n        2004.\n       Example recoded from Chafe, W. \n        Adequacy, user-friendliness, and practicality in transcribing In\n          Leech, G., G. Myers, J. Thomas eds.\n          Spoken English on Computer: Transcription, Markup and\n          Applications. Harlow: Longman,\n          1995.\n      \n        Chandler, Lloyd.\n        Conversation with Death (also known as Oh,\n          Death). In Journal of Folklore Research, 41.2/3, (2004), pp.\n          125-126. \n      Chapman, Graham, Cleese, John,\n          Gilliam, Terry, Idle, Eric, Jones,\n          Terry. The complete Monty Pythons Flying Circus. \n      Chapman, Graham, Cleese, John,\n          Gilliam, Terry, Idle, Eric, Jones,\n          Terry. Monty Python's Life of Brian (1979).\n        \n      \n        Chaucer, Geoffrey. Canterbury Tales, f52r, in Holkham MS. \n      \n        Chaucer, Geoffrey. The Tale of Sir Topas, The Canterbury Tales, In F. N. Robinson ed. The Works of Geoffrey Chaucer, 2nd edition\n        Boston: Houghton Mifflin Co.,\n        1957.      \n      陳政彥，〈戰後臺灣現代詩論戰史研究〉，2007。\n      \n        Cholières, Nicolas de, La Forest Nuptiale\n        (1600). \n      \n        Chomsky, Noam and Morris Halle. The Sound Pattern\n          of English. New York: Harper & Row (1968), p. 415. \n      Claude Simon\n        Le jardin des plantes, 1997, p 284\n      \n        Cleaver, Eldridge. Soul on Ice. New\n          York (1968). \n      \n        Cloud of Unknowing In Hodgson, Phyllis ed. The Cloud of Unknowing and The Book of Privy Counselling,\n          London: Oxford University Press, Early\n          English Text Society, 218, (1944). \n      Clover, Carol J.The Medieval\n          Saga, Ithaca: Cornell University Press\n          (1982). \n      \n        Cocteau, Jean. La Machine Infernale.\n      Coleridge, Samuel Taylor. The\n          Rime of the Ancient Mariner. In Wordsworth, William and\n          Samuel Taylor Coleridge. Lyrical Ballads\n          (1798). \n      Coleridge, Samuel Taylor. Frost at\n          Midnight In E.H. Coleridge ed. Poetical\n          Works, Oxford: Oxford University\n        Press, (1967), p.240.\n      Colette, Colette à\n          l'école, 1900.\n      \n        Collins English Dictionary, 12th edition\n        Glasgow: Collins\n        2014). \n      \n        Collins Pocket Dictionary of the English language.\n          London: Collins. \n      \n        Collins, Wilkie. The Moonstone,\n          Penguin, 6th narrative.\n      \n        Comenius, John Amos. Orbis Pictus: a facsimile of the\n          first English edition of 1659 (ed. John\n          E.\n          Sadler\n        ) Oxford University Press (1968). \n      Cope, Thomas Pym. Philadelphia\n          merchant: the diary of Thomas P. Cope, 1800-1851, Eliza Cope\n          Harrison ed.\n      Corneille, Pierre,\n          La Place Royale ou L'Amoureux extravagant, 1637.\n      Corneille, Pierre,\n          Théodore, vierge et martyre : tragédie chrétienne,\n        1646.\n      \n        Cowley, Hannah. The Runaway (1813). \n      \n        Crashaw, Richard, ed. J.R. Tutin. The\n          Poems of Richard Crashaw. Muses Library Edition:\n          (1900). \n      \n        Creeley, Robert\n        A counterpoint in For Love: Poems 1950-1960\n        (1962). \n      崔西．雪佛蘭。《戴珍珠耳環的少女》。台北：皇冠，2003。\n\n      \n\n      Dallas, George Mifflin. Unpublished\n          letter cited in Russell F. Weigley, Nicholas B.\n          Wainwright, Edwin Wolf eds. Philadelphia: A 300\n          Year History, New York and London:\n          W. W. Norton & Company, 1982, p. 349.\n      Danhauser, Adolphe-Leopold,\n          Théorie de la musique, 1872.\n      \n        Darwin, Charles. Narrative of the Surveying Voyages of His Majesty's\n          ships Adventure and Beagle... volume 3 : Journal and Remarks (The Voyage of the\n          Beagle), chap 3. 1839. \n      Daudet, Alphonse, Les\n          contes du lundi, 1873. \n      \n        Davenant, William. The vvitts. A comedie, presented at the\n          private house in Blacke Fryers, by his Majesties servants. The author VVilliam D'avenant,\n          servant to Her Majestie.\n        London, 1636. [STC S109311]\n      \n        De Nutrimento et Nutribili, Tractatus 1, fol 217r col b of Merton College\n        Oxford MS O.2.1; in 1  pl. 16.\n      \n        Dean of Sarum Churchwardens' presentments, 1731, Hurst; Wiltshire Record\n        Office; transcribed by Donald A. Spaeth. \n      Defoe, Daniel. The Fortunes and\n          Misfortunes of the Famous Moll Flanders (1722).\n      Defoe, Daniel. Robinson\n          Crusoe (1719).\n      \n        Defoe, Daniel. Journal of the Plague Year.\n          London (1722). \n      \n        Dekker, Thomas and Thomas Middleton. The Honest\n          Whore, Part One (1604). \n      Deloney, Thomas. Thomas of Reading or the\n          Sixe Worthie Yeomen of the West (1612).\n      Dennery, Annie. Du mélos à la note : Les notations musicales au Moyen Age, Médiévales, n° 3\n        1983.\n      Dickens, Charles. A Christmas\n          Carol in Prose, Being a Ghost Story of Christmas, Chapman and\n          Hall, (1843), p. 5, p.\n        12.\n      Dickens, Charles. Little\n          Dorrit, (1857).\n      Dickinson, Emily. 1755 In\n          Arthur Eastman et al. eds. The Norton Anthology of\n          Poetry, New York: W.W. Norton,\n          1970, p.859.\n      Diderot, Denis,\n          Lettres à Sophie Volland, 26 sept. 1762.      \n       〈第三屆第一次大會第一次會議記錄〉，臺灣省諮議會。\n      Disraeli, Benjamin. Coningsby (1844), preface.\n      Doyle, Arthur Conan. The\n          Red-headed league. In The Adventures of Sherlock Holmes\n          (1892).\n      \n        Doyle, Arthur Conan. The Original Illustrated Sherlock\n          Holmes, Castle Books, 1989.\n      Drawing of a leaden plaque bearing an inquiry by Hermon from the\n          oracular precinct at Dodona. Catalogue no 725; LSAG 230.13. Image from http://poinikastas.csad.ox.ac.uk/\n      Dubois, Jacques, Nyssen,\n          Hubert (dir. de collection), Babel, Actes\n          sud,1989-....\n      Dubois, Jean,\n          Dictionnaire de linguistique, 1974.\n      \n        Dudo of St Quentin. De moribus et actis primorum Normannie\n          ducum, fol 4v of British Library MS Harley 3742; in 1  pl\n        6(i). \n      Dufournaud, Nicole,\n          Numérisation des Titres de famille, édition électronique, 2002. \n      Duhamel, Georges,\n          Chronique des Pasquier, 1933-1945.\n      \n        Dutt, Toru. Lakshman In Ancient\n          Ballads and Legends of Hindustan, Kegan Paul, Trench &\n          Co., (1882) \n      Dylan, Bob. All Along the\n          Watchtower In John Wesley Harding\n        (1967).\n      Dylan, Bob. Positively 4th\n          Street In Highway 61 Revisited\n        (1965).\n\n      \n\n      \n        Eddic poems, in Reykjavík, Landsbókasafn Íslands, Lbs 1562 4to. \n      Editorial, .EXE\n          magazine, 6.11  (1992),\n          p. 2.\n      Eliot, George. Middlemarch (1871),  I.1.\n      \n        Eliot, George. Middlemarch (1871),\n          I.XXI. \n      \n        Eliot, George. Daniel Deronda (1876),\n          III.1.\n      Eliot, Thomas Stearns. The\n          waste land: a facsimile and transcript of the original drafts including the annotations of\n          Ezra Pound, Eliot, Valerie ed. Faber and Faber\n          Ltd. (1971), p. 37.\n      \n        Scalable Vector Graphics (SVG) 1.1 (Second Edition). Editors\n          Erik Dahlström, Jon Ferraiolo, 藤沢 淳, Anthony Grasso, Dean\n          Jackson, Chris Lilley, Cameron McCormack\n        Doug Schepers, Jonathan Watt and Patrick\n          Dengler. World Wide Web Consortium (W3C) (22 June\n          2010). Available from https://www.w3.org/TR/SVG11/. \n      Ernaux, Annie, Se\n          perdre, 1988.\n      Ernaux, Annie, L'usage\n          de la photo, 2005.\n      \n        \n          Études\n            littéraires\n        , consulté le 07-05-2010. \n\n      \n\n      Fallet , René, Le\n          Triporteur, 1951.\n      Field, Syd\n        Screenplay: the Foundations of Screenwriting (1998).\n      Fielding, Henry. The History of\n          the Adventures of Joseph Andrews and his Friend, Mr. Abraham Abrams\n          (1742).\n      \n        Fielding, Henry. Tragedy of Tragedies,\n          (1737).\n      \n        Fish, Stanley. Is there a text in this class? The authority of\n          interpretive communities. Harvard University Press\n          (1980). \n      Fisher, M. F. K. I Was Really Very\n          Hungry In As They Were,  Knopf\n          (1982), p. 43.\n      \n        \n        FitzGerald, Edward. The Rubáiyát of Omar Khayyám, translated into\n          English Verse (1859), stanza 25. \n      Flaubert, Gustave,\n          Salammbô, 1862.\n      Flaubert, Gustave, \n          La Tentation de saint Antoine, 1874.\n      Foley James D., Andries van Dam,\n          Steven K. Feiner and John F. Hughes. Computer Graphics: Principles and Practice, 2nd edition \n        Reading: Addison-Wesley, p.259.\n      Forster, E.M., Howards\n          End. Edward Arnold. (1910). \n      \n        \n          France inter, Là-bas si j'y suis\n        , consulté le 07-05-2010. \n      \n        \n          France inter, Le\n            téléphone sonne\n        , consulté le 07-05-2010. \n      \n        \n          Franglais et franricain\n        , consulté le 07-05-2010. \n      Fry, Christopher, The firstborn\n          (1948).\n      福春嫁女\n      \n        Fussell, Paul. The Norton Book of Travel.  W. W.\n          Norton (1987). \n\n      \n\n      Galilei, Galileo, Sidereus\n          Nuncius, Venetiis: Apud Thomam\n          Baglionum, 1610, quoted by Tufte, Edward R.,\n          Envisioning Information, Cheshire:\n          Graphics Press (1990), p.\n          97. \n      Galland, Antoine, Les\n          Mille et une nuits, 1704.\n      Galsworthy, John, Strife. In\n          Plays, vol 1. (1909). \n      Gaskell, Elizabeth Cleghorn. The Grey Woman, MS.\n      Gavioli, Laura and Gillian\n          Mansfield. The PIXI corpora: bookshop encounters in English and\n          Italian, Bologna: Cooperativa Libraria\n          Universitaria Editrice (1990), p.74.\n      Gay, John. The Beggar's Opera\n          (1728).\n      Gazdar, Gerald and Mellish,\n          Christopher. Natural language processing in Prolog.\n          Addison-Wesley (1989), p.5.\n      \n        Gazdar, Gerald, Ewan Klein, Geoffrey Pullum, and Ivan Sag:\n          Generalized Phrase Structure Grammar, Harvard\n          University Press (1985).\n      \n        Gershwin, Ira\n        By Strauss (from An American in Paris, 1953). \n      Gianfraco Contini, Poeti del\n        Duecento, Milano-Napoli:Ricciardi I, (1960). pp 155-64.\n      Gibbon, Edward, The History of the\n          Decline and Fall of the Roman Empire, (1789), chapter 58.\n      Gide, André, Le\n          Journal des Faux-Monnayeurs, 1927.\n      Gide, André, Journal :\n          1889-1939, 1939.\n      \n        Gilbert, William Schwenck and Sullivan, Arthur. HMS Pinafore (1878), I.\n      Gilbert, William Schwenck and Sullivan,\n          Arthur. The Mikado (1885).\n      Ginsberg, Allen. My alba,\n          Reality Sandwiches, San Francisco:\n          City Lights, (1963).\n      Giono, Jean,\n          Regain, 1930.\n      Giraudoux, Jean, La\n          guerre de Troie n'aura pas lieu, 1935.\n      \n        Godefroy, Frédéric, Dictionnaire de l'ancienne langue française et\n          de tous ses dialectes du IXe au XVe siècle, 1881.\n      Goethe, Johann Wolfgang von, tr. Philip Wayne. Faust, Part\n          1, London: Penguin. (1949).\n      \n        Goethe, Johann Wolfgang von. Auf dem See\n        (1775). \n      \n        [Goldsmith, Oliver], The History of Little GOODY TWO-SHOES;\n          Otherwise called, Mrs. MARGERY TWO-SHOES... (Printed for J. Newbery,\n          1766). \n      \n        Grallert, Till, Tools for the Computational Normalisation and\n          Analysis of Food Prices and Food Riots in the Eastern Mediterranean (Bilād al-Shām) in the\n          19th and 20th Centuries. Zenodo, 2021. https://doi.org/10.5281/zenodo.5159020. \n      \n        Graves, Robert. Rough draft of letter to Desmond Flower.\n          17 Dec 1938. (from Diary of Robert Graves 1935-39 and\n          ancillary materials, compiled by Beryl Graves, C.G. Petter, L.R. Roberts,\n        University of Victoria Libraries).\n      \n        Greene, Robert. Groatsworth of Wit Bought with a Million\n          of Repentance (1592).\n      \n        Gregory of Tours. Ecclesiastical History of the\n          Franks (translated by Lewis Thorpe). \n      Greimas, Algirdas Julien\n        et Courtés, Joseph, Sémiotique : dictionnaire raisonné de la théorie\n          du langage, 1979. \n      Grune, Dick and Ceriel J. H.\n          Jacobs. Parsing Techniques: A Practical Guide,\n          New York and London: Ellis\n          Horwood, 1990, p. 24.\n      \n        Guerard, Françoise. Le Dictionnaire de Notre Temps, ed.\n          Paris: Hachette, 1990\n      \n\n      \n\n      Hall, Radclyffe. The well of\n          loneliness. (1928).\n      Halliday, M.A.K.  and R.\n        Hassan. Language, Context and Text: Aspects of Language in a\n          Social-Semiotic Perspective, Oxford: Oxford\n          University Press, 1990, p.\n        104.\n      Hanks, Patrick. Definitions and\n          Explanations. In J. M. Sinclair ed. Looking Up.\n          Collins, 1987, p. 121\n        .\n      Hannam's last farewell to the world:: being a full and true\n          relation of the notorious life and shamfull death of Mr. Richard Hannam...\n          (1656).\n      \n        Hansberry, Lorraine. A raisin in the sun. \n          (1959). \n      Harvey, Gabriel. Four letters and certain\n          sonnets specially touching Robert Greene... (1592).\n      Hobbes, Thomas. Leviathan\n          (1681).\n      《紅樓夢》第六回：賈寶玉初試云雨情 劉姥姥一進榮國府      \n      〈紅頭嶼踏查報告〉，國立台灣大學圖書館：田代文庫。\n      Hoola Van Nooten,\n          BertheFleurs, fruits et feuillages choisis de l'île de Java peints d'après\n          nature, troisième édition par C. Muquardt, Bruxelles,\n          1880.\n      \n        Hornby, A.S. et al. Oxford Advanced Learner's Dictionary of Current\n          English. Oxford University Press (1974). \n      黃晨淳編著，《希臘羅馬神話故事》，p76。\n      Hugo, Victor,\n          Notre-Dame de Paris, 1845.\n      \n        Souvenir de la nuit du 4, in : Hugo, Victor,\n          Les Contemplations, 1853. \n      Hugo, Victor, Les\n          Misérables, 1862.\n      \n        A la fenêtre pendant la nuit, in : Hugo, Victor ,\n          Les Contemplations, 1856. \n      Huizinga, Johan,\n          L'Automne du Moyen-Âge, 1919.\n\n      \n\n      ISO 690:1987: Information and documentation –\n          Bibliographic references – Content, form and structure \n        clause 4.1, p.2.\n      \n        Ibsen, Henrik,  tr. William and Charles Archer.\n          Peer Gynt (1875).\n      \n        Ibsen, Henrik\n        Den episke Brand KBK Collin 2869, 4º I, fol. 11v. \n      \n        Ibsen, Henrik\n        Digte NBO Ms.4º 1110a, p. 36. \n      \n        Ibsen, Henrik\n        Brand, The Royal Library, Denmark. KBK Collin 262, 4°, I.1.1, fol.\n        [4]v\n      Ibsen, Henrik, tr. R.\n          Farquharson Sharp and Eleanor Marx-Aveling. \n        A Doll's House In A Doll's House; and Two Other\n          Plays by Henrik Ibsen, Everyman's library: the drama 494\n        , London: J. M. Dent & Sons,\n          1910.\n      Idle, Eric, Michael Palin,\n          Graham Chapman, John Cleese, Terry\n          Gilliam. The Complete Monty Python's Flying Circus: All the\n          Words, Pantheon Books, (1989), 2, p.230.\n      Imbs, Paul, Martin,\n          Robert, Straka, Georges, Mélanges de linguistique\n          française et de philologie et littérature médiévales offerts à Monsieur Paul\n          Imbs, 1973 .\n      Institut de Littérature Française Moderne de\n          l’Université de Neuchâtel, Présentation du projet Cyrus, En ligne, consulté le\n          05-03-2010.       \n      Ionesco, Eugène, La\n          cantatrice chauve, 1950.      \n      羅貫中，《三國演義》。\n      \n      \n\n      \n        Jakacki, Diane. Schema question: further constraining\n          @subtype based on @type. January 18,\n          2021. TEI (Text Encoding Initiative) public discussion\n          list, https://listserv.brown.edu/cgi-bin/wa?A2=TEI-L;b092ac32.2101. \n      Jarry, Alfred, tr. Simon Watson\n          Taylor and Cyril Connolly. The Ubu\n          plays, London: Methuen,\n          1968.\n      Jean-Jacques Rousseau\n        Les confessions vol 6\n      Jerome, Jerome K. \n        Three men in a boat (1889), chapter 6.\n      Joachim Heinrich\n          CampeWörterbuch der Deutschen Sprache. Erster Theil. A - bis - E.,\n          1807.\n      John, Lord Sheffield, The\n          Auto-biography of Edward Gibbon esq., (1846), 222.\n      Jonson, Ben. Bartholomew\n          Fair. \n      Jonson, Ben. Volpone,\n          J. B. Bamborough ed. Macmillan, 1963,\n          p.14.\n      Jonson, Ben. The Alchemist\n        , Douglas Brown ed. London:\n          Benn, 1966, I.1,\n          p.9.\n      Joyce, James. Ulysses:\n          The Bodley Head, 1960. p.\n          933.\n      \n        Judith Patt, Michiko Warkentyne and Barry\n          Till. Haiku: Japanese Art and Poetry. 2010.\n          Pomegranate Communications, Inc. San Francisco. http://www.pomegranate.com.\n      \n\n      \n\n      Karlstadt, Andreas\n          Bodenstein. Distinctiones Thomistarum.\n          Wittenberg\n        1507. In Harald Bollbuck ed. Kritische Gesamtausgabe\n          Karlstadt\n        I, available: http://diglib.hab.de/edoc/ed000216/start.htm\n      \n      Kersey, John. Dictionarium\n          Anglo-Brittannicum: Or, a General English Dictionary. London:\n          J. Wilde, 1715. 2nd ed.\n      Kilian, Wilfrid, Neige et glaciers ; notes prises au cours de géologie de la Faculté des Sciences de\n            Grenoble par M. Alamelle, 1891-1895.\n      King, Martin Luther. Letter from Birmingham City\n          Jail. Philadelphia, PA: American Friends Service\n          Committee (1963).\n      Kipling, Rudyard. The mother\n          hive. In Actions and Reactions,\n          London: Macmillan, (1909).\n      \n        Kipling, Rudyard. Stalky & Co.,\n          London: Macmillan (1899). \n      Kipling, Rudyard. Kim,\n          Macmillan, (1901), p.\n          9.\n      Knuth, Donald Ervin. The Potrzebie\n          System of Weights and Measures, Mad Magazine33June 1957. \n      Koltès,\n          Bernard-Marie, Quai ouest, 1985. \n      Krummrey, Hans, Panciera, Silvio\n        Criteri di edizione e segni diacritici, Tituli 2 (1980),\n        205-215.\n      Kyd, Thomas. Spanish Tragedy\n          (1592).\n\n      \n\n      La Fayette, Marie-Madeleine Pioche\n          de La Vergne, comtesse de, La Princesse de Clèves,\n          1678.\n      La Fontaine, Jean de. L'Astrologue\n          qui se laisse tomber dans un puits In Fables Choisies,\n          Classiques Larousse, Paris: Librairie\n          Larousse, 1, 1940.\n      La Fontaine, Jean de. Le corbeau\n          et le renard In Fables Choisies, Classiques\n          Larousse, Paris: Librairie Larousse,\n          1, 1940.\n      Laboratoire ATILF\n        \n          Analyse et traitement informatique de la langue\n            française (ATILF)\n        , consulté le 07-05-2010. \n      \n        Laclos, Pierre Choderlos de. Les Liaisons\n          dangereuses (1772), 1963, p.\n          13.\n      Ladurie, Emmanuel Le Roy. Montaillou, Middlesex: Penguin Books,\n          1980, p. 3.\n      Lamartine, Alphonse de,\n          Méditations poétiques, 1820.\n      Lamothe, Alexandre\n          de\n        Principaux manuscrits latins et français conservés dans la Bibliothèque\n          impériale et dans celle de l'Ermitage à Saint-Pétersbourg, édition numérique, Bibliothèque de l'école nationale des\n          chartes, 1864. \n      Langendoen, D. Terence and Paul M.\n          Postal. Vastness of Natural Languages,\n          Oxford: Basil Blackwell, 1984, p.\n          24, note 12.\n      Langendoen, D. Terence and Paul Postal. The\n          vastness of natural languages, Blackwell, , 1, 1984.\n      \n        Langland, William. The Vision of Piers Plowman. In\n          A.V.C. Schmidt ed. Langland: Vision of Piers Plowman:\n          \"B\" Text, opening.\n      Latin liturgical manuscript: Bod MS. Lat liturg. b.\n        19, folio 4r. Taken from the digitized image described at https://www.diamm.ac.uk/sources/522/.\n      Lavrentev, Alexei,\n            Manuel\n            d’encodage XML-TEI étendu des transcriptions de manuscrits dans le projet\n            BFM-Manuscrits, dernier enregistrement le 26 juin\n        2008.\n      \n        Lawrence, David Herbert. Autograph manuscript of Eloi, Eloi, lama\n          sabachthani, Pierpont Morgan MA 1892; in 1  p.129. \n      \n        Layamon. Brut, fol 65v of Bodleian MS. Rawlinson Poetry 32;\n        in 1  12(ii). \n      Le Grand Robert de la langue\n          française, 2004. \n      LeTourneau, Mark S. \n        English Grammar, 2001, New York:\n          Harcourt\n        p. 89.\n      \n        Leech, G., G. Myers, J. Thomas eds.\n          Spoken English on Computer: Transcription, Markup and\n          Applications. Harlow: Longman,\n          1995.\n      Leech, Geoffrey and Mick Short.\n          Style in Fiction, London:\n          Longman, 1981, p.272.\n      \n        Lennon, John and McCartney, Paul. She\n          Loves You. The Beatles Anthology 1.\n          Capitol, 1995. \n      Léry, Jean de, Histoire faict\n          en la terre de Brésil, 1580.\n      \n        Lessing, Doris. Martha Quest. 1952,\n          pp. 52-53. \n      Letter of Mikołaj Orlik to Mikołaj Serafin, Gródek, January 13\n          [1438]. Edited by Skolimowska et al. Available from https://teipublisher.com/exist/apps/serafin/letters/serafin02.xml\n      Lewis, Leopold Davis. The\n          Bells, (1871), translated from Erckmann-Chatrian,\n          Le Juif Polonais.\n      \n        Lewis, Wyndham. Tarr (1928),\n          Jupiter, 1968, p. 17.       \n      李白，《黃鶴樓送孟浩然之廣陵》。\n      李白，《靜夜思》。          \n      《梁山伯與祝英台》\n      電影《梁山伯與祝英台》，舊版。\n      〈歷代漢文大藏經概述〉，李圓淨，原載《南行》第六期（南行學社編印）。      \n      Lillo, George. The London\n          Merchant (1731), epilogue.      \n      林覺民，《與妻訣別書》。\n      \n        Lincoln, Abraham. A. Lincoln to Richard Yates and William\n          Butler, 10 Apr 1862. In Fehrenbacher, Don E. ed. Lincoln: Speeches and Writings, \n        2 (1859-1865). Library of America\n        46, 1989, p.315.\n      Lincoln, Abraham. Second Inaugural\n          Address, 4 March 1865. In H. S. Commager, ed.,\n          Documents of American History,  5th ed\n          Crofts American history series. New York:\n          Appleton-Century-Crofts, 1949, p.442.        \n      劉康，《對話的喧囂：巴赫汀文化理論評述》，台北：麥田，2005，二版。\n      劉康，《對話的喧聲：巴赫汀文化理論述評》，台北：麥田，2005，頁20-23。\n      \n        Longman Dictionary of Contemporary English. Harlow,\n          Essex: Longman (1978). \n      Lorris, Guillaume de et\n          Meun, Jean deLe Roman de la Rose, 1230,\n          1270-1285.\n      Lowe, David. Lost\n        Chicago, Boston: Houghton Mifflin,\n          (1978), p.30.\n        \n      Lowell, Amy. Autumn\n          haze.(1919). \n      Lucie Lichtig, M.\n          Klein de Joseph Losey : script, . l'Avant-scène cinéma,\n          n° 175, nov. 1976. \n      Luther, Martin [tr]. Die gantze\n          Heilige Schrifft Deudsch, Wittenberg 1545. Letzte zu Luthers Lebzeiten erchienene Ausgabe,\n          hsg. Hans Volz unter Mitarbeit von Heinz Blanke. Textredaktion Friedrich Kur,\n          München: Rogner & Bernhard,\n          1972.\n      《論語》卷七：憲問第十四。\n       羅貫中，《三國演義》。\n      魯迅，《狂人日記 》。\n      魯迅，《狂人日記》。\n      魯迅，《狂人日記》。\n\n      \n\n      MacNeice, Louis. The Sunlight on\n          the Garden In E.R. Dodds, \n        The collected poems of Louis MacNeice, London:\n          Faber, 1966.\n       Examples from MacWhinney, Brian, 88, 87, cited by Johansson, S. \n        The approach of the Text Encoding Initiative to the encoding of spoken\n          discourse In Leech, G., G. Myers, J.\n          Thomas eds. Spoken English on Computer: Transcription, Markup\n          and Applications. Harlow: Longman,\n          1995.\n      \n        Madan, Falconer, et al, A summary catalogue of western manuscripts\n          in the Bodleian Library at Oxford which have not hitherto been catalogued ... \n        Oxford, 1895-1953.  5: 515.\n          1\n      \n      Maingeneau, Dominique,\n          Analyser les textes de communication, 2007.\n      Any issue of the Malawi Daily Times.\n        \n      Malle, Louis, Zazie\n          dans le métro : script, l'Avant-scène cinéma, n°\n          104, juin 1970.\n      \n        Manuélian, Hélène, Schang, Emmanuel, XML, DTD et\n          TEI pour un dictionnaire étymologique des créoles, édition électronique,\n          12 Octobre 2007. \n      \n        The Manere of Good Lyuynge: fol. 126v of Bodleian MS Laud Misc 517;\n        in 1 , p.8. \n      Marbury v. Madison, 1 Cranch,\n          137 (1803), rpt. In H. S. Commager, ed., Documents of American History,  5th ed\n        Crofts American history series. New York:\n          Appleton-Century-Crofts, 1949,\n          p.192.\n      Marvell, Andrew. An Horatian\n          Ode, Bod. MS Eng. Poet d.49.\n      Mauriac, Claude, \n          La Marquise sortit à cinq heures, 1961.\n      Mauss, Marcel,\n          Sociologie et anthropologie, 1950.\n      McCarthy, Niall, No\n          Parachute: The Highest Falls People Survived, Statista,\n          November 18, 2020. https://www.statista.com/chart/19708/known-occasions-where-people-survived-falls/. \n      McCarty, Willard. Introduction in Collaborative Research in the Digital\n          Humanities: A volume in honour of Harold Short on the occasion of his 65th\n        birthday, September 2010, ed. Marilyn Deegan and Willard\n          McCarty. London: Ashgate\n          (2012).\n      Melville, Herman, Moby\n          Dick. (1851).\n      Mendès-France, Pierre,\n           Œuvres complètes, 1984-1985.\n      《孟子》〈三十三〉。 \n      \n        Miller, Henry. Death of a Salesman in\n          Atkinson, Brooks, \n        New Voices in the American Theatre, New York:\n          Modern Library, 1955, p.113.\n      \n        Milne, A. A. \n        The House at Pooh Corner. London:\n          Methuen & Co., 1928, p.\n          83.\n      \n        Milton, John. Paradise Lost: A poem in X books\n          (1667), I, 1-10. \n      Milton, John. Poems of Mr John Milton, both            \n          English and Latin... (1645). \n      Molière, L'École des\n          femmes, 1663.\n      Molière, Le Médecin\n          malgré lui, 1667.\n      Molière, Le Médecin\n          volant, 1673.\n      Montaigne, Michel de,\n          Essais, 1592.\n      Montesquieu, Charles-Louis de Secondat,\n          baron de la Brède et de,  Lettres persanes,\n        1721.\n      Montherlant, Henry de ,\n          Pitié pour les femmes, 1936.\n      \n        Moore, George. Autograph manuscript of Memoirs of my dead\n          life, Pierpont Morgan MA 3421; in 1 \n      \n        Moore, Thomas. Autograph manuscript of the second version of Lalla\n          Rookh, Pierpont Morgan MA 310; in 1  23. \n      \n        Moreland, Floyd L. and Rita M. Fleischer. Latin: An\n          Intensive Course,  (1977) p.53. \n      \n        Des Minnesangs Frühling, Moser, Hugo, Helmut\n          Tervooren eds. 36., neugestaltete und erweiterte Auflage\n        I Texte, Stuttgart: S.\n          Hirzel Verlag, 1977.\n      \n        Mrs Isabella Beeton. The book of Household Management,\n          London: S.O. Beeton\n        (1861).\n      Mréjen, Valérie, Eau\n          sauvage, 2004.\n      \n        Zuigan calls himself \"Master\". Mumon Ekai. (In\n          The Gateless Gate, Case 12.) \n      Mustafa Siddik Altinakar,\n          René Walther (éds.), Hydraulique fluviale. Tome 16, Écoulement et\n          phénomènes de transport dans les canaux à géométrie simple ,\n        2008.\n      Mégnin, Michel (éd.), Tunis\n          1900 Lehnert & Landrock photographes,2005.\n      \n        Nabokov, Vladimir\n        Pnin (1953) , p.14 \n      \n      \n        The New Penguin English Dictionary. London:\n          Penguin Books (1986). \n      \n        Njal's saga. tr. Magnus Magnusson and Hermann\n          Palsson. Penguin. (1960), chapter\n          12, p.60.\n      \n        O'Casey, Sean. Time to go (1951). \n      Ollagnier, Jeanne,\n          Main, 2008.\n       Herodotus. On Libya, from the\n        Histories. \n      \n        [Letter of Capt. E. Hopkins. Providence, 10 Sep 1764] \n      \n      \"[I am a curse]\" in Original Manuscript Drafts for the Song of\n          Myself, Collection MSS3829, part of the Papers of Walt Whitman, Clifton Waller\n        Barrett Library of American Literature, Albert and Shirley Small Special Collections\n        Library, University of Virginia. \n      Ormesson, Jean d', La Douane de mer, 1993.\n      \n        Orwell, George. Nineteen-Eighty-Four.\n          London: Gollancz (1949). \n      \n        大隅亜希子. 1996. 律令制下における権衡普及の実態:\n          海産物の貢納単位を中心として. 史論\n        49. pp. 22–44. http://id.nii.ac.jp/1632/00015761/. \n      \n        Owen, Wilfred. Dulce et decorum est, from autograph\n        manuscript in the English Faculty Library, Oxford University. \n      \n        Owenson, Sydney. The Wild Irish Girl. Ed.\n          Kathryn Kirkpatrick. Oxford: Oxford\n          University Press, 1999, p. 17. \n      \n      \n      \n      擺夷文經，中央研究院歷史語言研究所 。 \n      Pascal, Blaise, Le Mémorial, in Pensées,1670.\n      \n        Payne, J. \n        Report on the compatibility of J P French's spoken corpus transcription\n          conventions with the TEI guidelines for transcription of spoken texts, Working Paper, Dec 1992, NERC WP8/WP4 122.\n      \n        Peacock, Thomas Love. Gryll Grange\n          (1861), chapter 1.\n      Pennac, Daniel ,\n          La Petite marchande de prose, 1978.\n      Perec, Georges, Espèces\n          d'espaces, 1974.\n      Perec, Georges, La Vie\n          mode d'emploi : romans, 1978.\n      Perec, Georges , Les\n          Choses, 1965.\n      Partial family tree for Bertrand Russell\n        based on an example in Pereira, Fernando C.N. and Stuart M.\n          Shieber, Prolog and Natural Language Analysis,\n          Stanford: Center for the Study of Language and\n          Information. (1987), p.22.\n      Pernoud, Régine, La\n          Femme au temps des Cathédrales, 1982.\n      Perreault, Simon, vCard Format Specification\n        Internet Engineering Task Force (IETF) (2011). \n        https://datatracker.ietf.org/doc/html/rfc6350.\n      \n        Petit Larousse en Couleurs. Paris:\n          Larousse, (1990). \n      \n        Philipott, Thomas\n        Poems. (1646). \n      \n        Pinsky, Robert. Essays on Psychiatrists in Sadness and Happiness (1975). \n      Pix, Mary. The False Friend\n          (1699).\n      Plautus, Titus Macchius. Asinaria, or the\n          Comedy of Asses. Edited and translated by Wolfgang de Melo. Loeb\n        Classical Library 60. Cambridge, MA: Harvard University\n          Press (2011).\n      Plautus, Titus Macchius. Menaechmi.\n      Polac, Michel, Un\n          fils unique : script, l'Avant-scène cinéma, n°\n          99, janvier. 1970.\n      \n        Pope, Alexander. The Rape of the Lock\n          (1714) III.7.\n      Pope, Alexander. An Essay on\n          Criticism (1711).\n      Pope, Alexander. Dunciad Variorum\n          (1729), III.284.\n      From letter 'JK' found in Poulson's Daily\n          Advertiser, \n        8 Oct 1835.\n      Proust, Marcel, A la\n          recherche du temps perdu : Du côté de chez Swann, 1913.\n      Queneau, Raymond. Exercices de\n          style. Paris: Gallimard,\n          (1947), p. 192.\n\n      \n      \n      瓊瑤，《還珠格格》。\n      Queneau, Raymond ,\n          Journaux, 1914-1965.\n      \n      \n      \n      Rabelais, François.\n          Gargantua Lyon, 1542\n      Rabelais, François\n        Tiers livre des faictz et dictz Heroïques du noble Pantagruel...\n          (1546), adapted from the website at http://www.bvh.univ-tours.fr/Epistemon/\n      Renard, Jules,\n          Journal : 1887-1910, 1910.\n      Reference from the bibliography in Reps, Thomas\n          William and Teitelbaum, Tim eds. The\n          Synthesizer Generator: A system for constructing language-based editors,\n          New York and Berlin:\n          Springer-Verlag, 1989, p.304.      \n      日本法隆寺貝葉心經 (Wikipedia Sept 2008).\n      Richardson, Samuel. Clarissa;\n          or the History of a Young Lady (1748), 2 Letter XIV.\n      \n        Robert, Paul. Le Petit Robert. Paris:\n          Dictionnaires Le Robert (1967). \n      Rohmer, Eric, Ma nuit chez Maud : script, l'Avant-scène cinéma,\n          n°98, 2001.\n      Romains, Jules, \n          Knock, 1923. \n      Rostand, Edmond, Cyrano de\n          Bergerac, 1898.\n      Roubaud, Jacques, La\n          Boucle, 1993.\n      Rowling, J. K.\n        The Sorting Hat. In Harry Potter and the\n          Sorcerer's Stone, New York: Scholastic, Inc. (1999), chapter\n          7, p. 121.\n      \n      \n\n      \n        The Saga of the Volsungs: the Norse epic of Sigurd the Dragon\n          Slayer. trans. Jesse L. Byock. University of\n          California Press (1990). \n      Le Sanctoral du lectionnaire de\n          l'office dominicain (ms. Rome, Sainte-Sabine XIV L 1, f.142r et 189r-230v, Ecclesiasticum\n          officium secundum ordinem fratrum praedicatorum), édition électronique par\n          l'Ecole nationale des chartes, d'après l'édition d'Anne-Élisabeth\n          Urfels-Capot (Paris : Ecole nationale des chartes, 2007).\n      \n        崎山理. 1985\n        インドネシア語. 講座日本語学\n        11. 外国語との対照II.\n        東京:明治書院\n        61-80\n      \n      三毛，〈沙漠中的飯店〉，《撒哈拉的故事》。       \n       《三家詩鈔》，華培昌，藏於國家圖書館。\n      Sapir, Edward.  Language: an\n          introduction to the study of speech, New York:\n          Harcourt, Brace and World, 1921, p.79.\n      Shakespeare William,\n          Richard III, 1597.\n      Shakespeare, William. Henry V\n        In Mr. William Shakespeares Comedies, Histories, & Tragedies,\n          London: Jaggard and Blount,\n        1623.\n      Shakespeare, William. Henry V\n        In The Works of Shakespeare in seven volumes, ed. Lewis\n          Theobald, London: Bettesworth, Hitch, Tonson et\n          al, (1733).\n      Shakespeare, William. Antony and\n          Cleopatra, IV.4, 14-21. \n      Shakespeare, William. Merchant of\n          Venice, I.ii, speech 5 (Portia).\n      Shakespeare, William. Macbeth, Act V, Scene 1.\n      Shakespeare, William. Antony\n          and Cleopatra (1623), V.\n        ii.\n      Shakespeare, William. Hamlet In Stanley Wells and Gary Taylor eds.\n          The Complete Works, Oxford: Clarendon\n          Press, 1986, I.i.\n      Shakespeare, William. Hamlet, London: Valentine Simmes.\n          (1603), I.i.\n      Shakespeare, William. The Tempest\n         In Mr. William Shakespeares Comedies, Histories, &\n          Tragedies, London: Jaggard and Blount,\n          (1623).\n      Shakespeare, William. Twelfth Night, or\n          What you Will  In Mr. William Shakespeares Comedies, Histories,\n          & Tragedies, London: Jaggard and\n          Blount, (1623).\n      Shakespeare, William, The\n          Sonnets (1609), 18.\n      Shakespeare, William, The\n          Sonnets (1609), 130.\n      莎士比亞，《終成眷屬 》。\n      莎士比亞，《馬克白》。\n      Sharing Ancient Wisdoms, 2013,\n        available: http://www.ancientwisdoms.ac.uk/.\n      Shaw, George Bernard. Heartbreak\n          House: a fantasia in the Russian manner on English themes (1919). \n      Shaw, George Bernard. Pygmalion, 1913.\n      Shields, David. Dead\n          Languages, HarperCollins Canada/Perennial\n          Rack, rpt. 1990, p.10.\n      Sinclair, John ed. Collins\n          COBUILD English Language Dictionary. London and\n          Glasgow: Collins, (1987),\n          p. 337 s.v. croissant.\n      京劇《四郎探母》，1947年梅蘭芳演出。\n      Smith, Adam. An Inquiry into the\n          Nature and Causes of the Wealth of Nations, London.\n          (1776), index to vol. 1.\n      \n        Smith, Sydney. Autograph letter. In Pierpont Morgan library;\n          1  11. \n      \n        Smith, William. A New Classical Dictionary of Greek and\n          Roman Biography, Mythology, and Geography, Partly Based Upon the Dictionary of Greek and\n          Roman Biography and Mythology, New York: Harper\n          & Brothers, Publishers, 1860, 1026. \n      \n        Southey, Robert. Autograph manuscript of The Life of Cowper.\n        In Pierpont Morgan MA 412 (1  15).\n      Soyinka, Akinwande Oluwole Wole. Madmen and Specialists, London:\n          Methuen (1971).\n      \n        Spenser, Edmund. The Faerie Queene: Disposed into twelue\n          bookes, Fashioning XII. Morall vertues. (1596). \n      \n        Sterne, Laurence. The Life and Opinions of Tristram\n          Shandy, Gentleman. (1760).\n      \n        Stow, John A survey of the cities of London and Westminster:\n          containing the original, antiquity, increase, modern estate and government of those\n          cities. Written at first in the year MDXCVIII. By John Stow, citizen and native of London.\n          ... Now lastly, corrected, improved, and very much enlarged: ... by John Strype, ... In\n          six books. ...  (London c.1525 - London 1605). \n      Sudetic, Chuck Serbs Tighten Grip On Eastern\n          Bosnia. New York Times, \n        April 20, 1992.\n        \n      SUEtheTrex, Twitter biography. https://twitter.com/SUEtheTrex. Accessed March 25th,\n          2020.\n      Sutherland, L.S. and L.G.\n          Mitchell eds. The Eighteenth century, The\n          History of the University of Oxford V\n        , p.178.\n      蘇童，《妻妾成群》。      \n      蘇軾，《定風波》。\n      \n        Swift, Jonathan. Travels into Several Remote Nations of\n          the World, in Four Parts. By Lemuel Gulliver...  (1735).\n      Swift, Jonathan. Law is a bottomless pit, or\n          the history of John Bull (1712).\n      \n        Swinburne, Algernon Charles. Poems and Ballads (First\n          Series). London: Chatto & Windus.\n          (1904). \n      Swinnerton, Frank Arthur. The\n          Georgian Literary Scene 1910-1935, 1938, London:\n          J. M. Dent, p. 195.\n\n\n      \n\n      台灣，《結婚入盟誓》，1997年5月。\n      台灣區三碼與三加二碼郵遞區號\n      《台灣叢書》，伊能嘉矩著，藏於國立台灣大學圖書館。(http://catalog.ndap.org.tw/?URN=2155366 (Aug 2008)).      \n      唐．白居易．琵琶行      \n      \n        Taylor, John\n        The Cold Tearme or, The Frozen age, Or, The Metamorphosis of the Riuer of\n          Thames. London, 1621. [STC (2nd ed.) 23910]. \n      \n        The Castle of the Fly, in Russian Fairy Tales,\n        translated by Norbert Guterman from the collections of Aleksandr Afanas'ev, illustrations by\n        Alexander Alexeieff, folkloristic commentary by Roman Jakobson (New York: Pantheon Books,\n        1947, rpt. [n.d.]), p. 25. \n      The Daily Telegraph, 21 Dec\n          1992.\n      The Guardian, \n        26 Oct 1992, p. 2\n      The Guardian, \n        21 Dec 1992, p. 2.\n      The Holy Bible, conteyning the Old Testament and the new...\n          appointed to be read in Churches. (1611), Genesis\n          1:1.\n      The Independent, \n        26 Oct 1775, headline.\n      Thurber, James. The 13\n          Clocks (1950). \n      Tolkien, J. R. R.\n        The Monsters and the Critics. London:\n          George Allen & Unwin (1983).\n      \n        Townsend, Sue. The growing pains of Adrian Mole\n          (1984), p.43. \n      \n        Trollope, Anthony. An Autobiography\n          (1883).\n      \n        Trollope, Anthony. North America\n          (1862). \n      Truffaut, François et\n          Gruault, Jean, Les deux Anglaises et le continent :\n          script, l'Avant-scène cinéma, n° 121,\n          nov. 1971. \n      Tufte, Edward R., Envisioning\n          Information, Cheshire: Graphics Press.\n          (1990).\n\n      \n\n      United States Code Title 17, Section 107, found at http://www.copyright.gov/title17/92chap1.html#107. \n      \n        United States District Court for the Middle District of Pennsylvania.\n          Kitzmiller v. Dover Area School District et al.: 2005.\n          04cv2688, p. 33. Available from http://ncse.com/files/pub/legal/kitzmiller/highlights/2005-12-20_Kitzmiller_decision.pdf and transcribed at http://en.wikisource.org/wiki/Kitzmiller_v._Dover_Area_School_District_et_al.. \n\n      \n\n      Valéry, Paul, Monsieur\n          Teste, 1929. \n      \n        Vergil (Publius Vergilius Naso). Aeneid,\n          I.1. \n      Verne, Jules,  Cinq\n          semaines en ballon, 1863.\n      Verne, Jules, La\n          Chasse au météore, 1908.\n      Verne, Jules, Vingt\n          mille lieues sous les mers, 1870.\n      \n        Vinge, Vernor\n        Across realtime\n        ch 10 (1986). \n      Viton de Saint-Allais, Nicolas\n        , Dictionnaire encyclopédique de la noblesse de France,\n          1816.\n      \n        Vóluspá recto of folio 5 of the unique manuscript of the Elder Edda. Codex\n        Regius, ed. L. F. A. Wimmer and F. Jónsson (Copenhagen 1891). \n\n      \n\n      \n        Wanklyn, M.D.G.  et al. Gloucester Port Books, 1575-1765.\n        Available from http://discover.ukdataservice.ac.uk/catalogue?sn=3218.\n      \n        Wanton, Joseph. Unpublished letter to Nicholas Brown and Co,\n          1761\n        Brown University Steering Committee on Slavery and Justice: Repository of\n          Historical Documents.  (http://library.brown.edu/cds/slaveryandjustice/). \n      \n        Warriner, John E. \n        English Composition and Grammar (1988), p.280.\n      \n        Webster's Seventh Collegiate Dictionary. Springfield, Mass. \n        G. & C. Merriam Co. (1975). \n      魏飴，《小說鑑賞入門》，台北：萬卷樓，1999。\n      Weil, Simone,  Lettres à Antonio Atarès, in Oeuvres\n          complètes1988-.\n      \n        Williams, Nigel. The Wimbledon Poisoner\n          (1990), p. 204.\n      Winock, Michel,\n          Jeanne et les siens : récit, 2003.\n      \n        Wölfflin, Heinrich, trans. Hottinger, Marie\n          Donald Mackie (1932). Principles of art history: the problem\n          of the development of style in later art.. Originally published as Kunstgeschichtliche Grundbegriffe (1915).\n      \n        Woolf, Virginia. Mrs Dalloway (1925),\n          p.64, p.65.\n      \n        Wordsworth, William. Scorn not the sonnet in\n          Poetical Works (1827). \n      \n        Wordsworth, William. The Prelude (1850). \n      \n        Wrenn C. L. ed. Beowulf: with the Finnesburg\n          fragment, London: Harrap\n          (1953).\n\n      吳承恩，《西遊記》。\n\n      \n        Wycherley, William. The Country Wife\n          (1675).\n      \n\n      夏宇，〈甜蜜的復仇〉，《備忘錄》。\n      蕭紅，《呼蘭河傳》。\n      \n      \n      \n      幼莘貢俚賀曉濤之新婚賀詞      \n      余秋雨      \n      元曲。馬致遠，《天淨沙：秋思》。\n\n      \n\n      張錯， 《西洋文學術與手冊》，台北：書林，2005。頁201。\n\n      珍．奧斯丁，《傲慢與偏見》。\n\n      中國青年守則\n      中國學位論文全文數據庫\n      周慧玲，《表演中國：女明星表演文化視覺政治1910-1945》，2004。      \n      朱自清， 《憶》跋。\n      \n        Zimman, Lal. Lal Zimman\n        http://lalzimman.com/bio.html, accessed February 1,\n          2021. \n      \n        Zupko, Ronald Edward\n        British Weights & Measures: A History from Antiquity to the Seventeenth\n          Century. Madison: University of Wisconsin\n          Press, 141-151. \n\n\n\n      No source, made up for these Guidelines.\n      Example is copied from the source of these\n        Guidelines.\n      Undetermined.\n\n\n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=BIB#BIB\">6 Bibliography</a><span class=\"breadcrumb\">6.2 Works Cited Elsewhere in the Text of these Guidelines</span>","content":"\n    6.2 Works Cited Elsewhere in the Text of these Guidelines\n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=BIB#BIB\">6 Bibliography</a><a class=\"breadcrumb\" href=\"p5.xml?id=BIB-RDG#BIB-RDG\">6.3 Reading List</a>","content":"\n    6.3 Reading List\n    The following lists of readings in markup theory and the TEI derive from work\n      originally prepared by Susan Schreibman and Kevin Hawkins for the TEI Education Special\n      Interest Group, recoded in TEI P5 by Sabine Krott and Eva Radermacher. They should be regarded\n      only as a snapshot of work in progress, to which further contributions and corrections are\n      welcomed (see further http://www.tei-c.org/Support/Learn/tei_bibliography.xml).\n    \n    \n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=BIB#BIB\">6 Bibliography</a><a class=\"breadcrumb\" href=\"p5.xml?id=BIB-RDG#BIB-RDG\">6.3 Reading List</a><span class=\"breadcrumb\">6.3.1 Theory of Markup and XML</span>","content":"\n      6.3.1 Theory of Markup and XML\n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=BIB#BIB\">6 Bibliography</a><a class=\"breadcrumb\" href=\"p5.xml?id=BIB-RDG#BIB-RDG\">6.3 Reading List</a><span class=\"breadcrumb\">6.3.2 TEI</span>","content":"\n      6.3.2 TEI\n      \n      \n    "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DEPRECATIONS#DEPRECATIONS\">7 Deprecations</a>","content":"\n  7 Deprecations\n  \n  \n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=DEPRECATIONS#DEPRECATIONS\">7 Deprecations</a><span class=\"breadcrumb\">7.1 Items Scheduled to be Removed</span>","content":"\n    7.1 Items Scheduled to be Removed\n    This appendix provides a partial list of items (elements,\n    attributes, attribute values, datatypes etc.) which are deprecated\n    in this revision of the TEI Guidelines (revision e64bcedf9 of TEI P5 Version 4.5.0a).\n  "}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PREFS#PREFS\">8 Prefatory Notes</a>","content":"8 Prefatory Notes\nThis Appendix contains (in reverse chronological\norder) the Introductory Notes prefixed to each \nrevision of the TEI Guidelines since its first publication in 1994. \n\n\n\n\n\n\n\n\n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PREFS#PREFS\">8 Prefatory Notes</a><a class=\"breadcrumb\" href=\"p5.xml?id=p4pf02#p4pf02\">8.1 Prefatory Note (March 2002)</a>","content":"8.1 Prefatory Note (March 2002)\nThe primary goal of this revision has been to make available a new\nand corrected version of the TEI Guidelines which:\nis expressed in XML and conforms to a TEI-conformant XML\n       DTD;generates a set of DTD fragments that can be combined\n       together to form either SGML or XML document type\n       definitions;corrects blatant errors, typographical mishaps, and other\n\t\tegregious editorial oversights;can be processed and maintained using readily available XML\n       tools instead of the special-purpose ad hoc software originally\n       used for TEI P3.\n\nA second major design goal of this revision has been to ensure that the\n      DTD fragments generated would not break existing documents: in\n      other words, that any document conforming to the original TEI P3\n      SGML DTD would also conform to the new XML version of\n      it. Although full backwards compatibility cannot be guaranteed,\n      we believe our implementation is consistent with that goal.\n      \nIn most respects, the TEI Guidelines have stood the test of time remarkably\nwell. The present edition makes no substantial attempt to rewrite those few parts\nof them which have now been rendered obsolete by changes since their\nfirst publication, though an indication is given in the text of where such rewriting is\nnow considered necessary. Neither does the present version attempt to\naddress any of the many possible new areas of digital activity in which\nthe TEI approach to standardization may have something to offer. Both\nthese tasks require the existence of an informed and active TEI\nCouncil to direct and validate such extension and maintenance work,\nin response to the changing needs and priorities of the TEI user community. \n\nTwo exceptions to the above principles may be cited: firstly, the\nchapter which originally provided a Gentle\nIntroduction to SGML has been completely rewritten to\nprovide a similarly gentle introduction to XML; secondly the chapter\non character sets has been completely revised in light of the\nclose connexion between Unicode and XML. The editors gratefully\nacknowledge the assistance of the ad hoc workgroup chaired by Christian\nWittern, which undertook to provide expert advice and correction at\nvery short notice, in the latter task.\nThe preparation of this new version relied extensively on\npreliminary work carried out by the former North American editor of\nthe TEI Guidelines, C.M. Sperberg-McQueen. In a TEI working paper\nwritten in 19991 he sketched\nout a precise blueprint for the conversion of the TEI from SGML to\nXML, which we have implemented, with only slight modification.\nThe Editors would also like to express thanks to the\nteam of volunteers from the TEI community who helped us with the task\nof proofreading the first draft during the summer of 2001; and to \n      Sebastian Rahtz of Oxford University Computing Services, without\n      whose skill and enthusiasm this new edition would not have been\n      possible.\n\nA substantial proportion of the work of preparing this new edition was\nfunded with the assistance of a grant from the US National\nEndowment for the Humanities, whose continued support of the TEI has\nalso been crucial to the effort of setting up the TEI Consortium.\n\nFinally, we would like to thank all our colleagues on the interim\nmanagement board of the TEI Consortium, in particular its Chairman\nJohn Unsworth, for their continued support of\nthe TEI's work, and their willingness to devote effort to the\ndifficult task of overseeing its transition to a new organizational\ninfrastructure.\nSummary details of the changes made in the present and previous\neditions are given in their Prefatory Notes, all of which are now\nreproduced in an Appendix to the present edition: see 8 Prefatory Notes.\n\nLou Burnard and Syd Bauman (TEI Editors)\nOxford and Providence, March 2002.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PREFS#PREFS\">8 Prefatory Notes</a><a class=\"breadcrumb\" href=\"p5.xml?id=p4pf01#p4pf01\">8.2 Introductory Note (November 2001)</a>","content":"8.2 Introductory Note (November 2001)\nTo complete the work started in June of this year, the TEI Editors\nasked for volunteers from the TEI community to proofread the preliminary XML\nversion. 24 volunteers responded to this call during August, and gave invaluable help both by identifying\na number of previously un-noticed errors, and by suggesting areas in\nwhich more substantial revision should be undertaken in the\nfuture. The Editors gratefully acknowledge the assistance of the following\nindividuals during this exercise:\n\n\nJimmy Adair,\nSyd Bauman,\nMichael Beddow,\nSteven Bird,\nLisa Charlong, \nMatthew Driscoll,\nPatrick Durusau,\nTomaz Erjavec,\nNick Finke,\nTim Finney,\nJulia Flanders,\nMike Fraser,\nPankaj Kamthan,\nFrançois Lachance,\nTerry Langendoen,\nAnne Mahoney,\nGregory Murphy,\nDaniel Pitti,\nRafal Prinke,\nLaurent Romary,\nStewart Russell,\nGary Simons,\nElisabeth Solopova,\nChristian Wittern, \nMartin Wynne.\n\nIn addition to error correction, and clear delineation of those sections in\nwhich substantial revision is yet to be undertaken for TEI P5, the\npresent draft differs from earlier ones in the following respects:\nFormal Public Identifiers have been introduced as a means of\nconstructing TEI DTDs and an SGML Open Catalog is now included with the\nstandard release; Some systematic errors and omissions in the reference section\nhave been removed; the format of this  section  has been substantially changed, we\nhope for the better;The chapters on obtaining the TEI DTDs and WSDs have been\nbrought up to date; the chapter on modification has been expanded to\ninclude a discussion of the TEI Lite customization;All examples and cited markup has been checked for XML validity\nagainst the published DTDs, and corrected where faulty; examples have\nbeen formatted in a (more or less) consistent style.\n\nLou Burnard and Syd Bauman (Editors)\nOxford and Providence, November 2001.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PREFS#PREFS\">8 Prefatory Notes</a><a class=\"breadcrumb\" href=\"p5.xml?id=PPF2#PPF2\">8.3 Introductory Note (June 2001)</a>","content":"8.3 Introductory Note (June 2001)\nThis is a preliminary version of a revised and fully XML-compliant\nedition of the TEI Guidelines. Although work on revising and\ncorrecting the text of the document is incomplete, by making\navailable this preliminary version we hope to facilitate testing of\nthe XML document type declarations which it describes by as wide a\nrange of TEI users as possible. \nThe primary goal of this revision is to make available the\ncorrected (May 1999) edition of the Guidelines in a new version which:\nis expressed  in XML and itself conforms to a TEI-conformant XML\n       DTD;generates a set of XML DTD fragments that can be combined\n       together in the same way as the existing TEI (P3) SGML DTD\n       fragments to form true TEI XML DTD fragments without loss of functionality;can be processed and maintained using readily available XML\n       tools instead of the special-purpose ad hoc software originally\n       used for TEI P3.\nAs noted elsewhere, a number of errors were corrected in\nthe May 1999 edition. A (much) smaller number of errors have also been\ncorrected in this edition, but no new material has been added. We\nexpect the expansion and modification of the Guidelines to become\na real possibility in the context of the newly formed TEI Consortium,\nwhich has funded the preparation of this present edition.\nA major design goal of both this and the previous revision has been\n      to ensure that the DTD fragments generated would not break\n      existing documents: in other words, that any document conforming\n      to the original TEI P3 SGML DTD would also conform to the new\n      XML version of it. Although full backwards compatibility cannot\n     be guaranteed, we believe our implementation is consistent with\n      that goal.  \nIn making this new version, we relied extensively on preliminary\n      work carried out by the outgoing North American editor of the\n      TEI Guidelines, Michael Sperberg-McQueen. In a TEI working paper\n      written in 1999, TEI ED\n      W69, Michael sketched out a precise blueprint for the\n      conversion of the TEI from SGML to XML, which we have\n      implemented, with only slight modification. The current TEI\n      editors wish to express here our admiration for the detailed\n      care put into that paper, without which our task would have been\n      forbiddingly difficult, if not impossible. We would also like to\n      express our thanks to Sebastian Rahtz of Oxford University\n      Computing Services, for his invaluable assistance in preparing\n      this new edition.\nWe list here in summary form all the changes made in the present\nedition. Full technical details are provided in documents TEI EDW69\nand TEI EDW70, available from the TEI web site. \n\nA new keyword TEI.XML has been added. By setting\nits value to INCLUDE, rather than the default IGNORE,\nthe user can request generation of an XML rather than an SGML DTD;\nThe content models of all elements have been checked, and, where\nnecessary, changed so that they are equally valid as SGML or as\nXML; \nThe declared value for all attributes has been changed to a form\nwhich is equally valid as SGML or as XML;\nAll the examples have been checked for conformance and converted to\nuse XML syntax, where possible. (This process is currently incomplete.)\nSome errors and duplications in the class\nmembership of elements from the names and dates tagsets have been corrected. \nTo implement the first of these, we have parameterized the\ntag omissibility indicators - o and - -\nused within element declarations in the DTD. When XML is to be\ngenerated, the parameter entities concerned are redeclared with the null\nstring as their value. \nThe second change was achieved by removing SGML-specific features\n(ampersand connectors, inclusion and exclusion exceptions, various\ntypes of attribute content) from the DTD and revising the syntax of\nthe DTD to conform to XML requirements (specifically in the\nrepresentation of mixed-content models, and by removing redundant\nparentheses). In making these changes, we took care to ensure that the\nresulting content model would continue to accept existing valid\ndocuments, though in the nature of things it could not be guaranteed\nto reject the same set of documents. As further discussed in EDW69 and\nEDW70, some constraints (exclusion exceptions, for example) which\ncould be carried out by a generic SGML parser using TEI P3 will have\nto be implemented by a special purpose TEI validator using TEI\nP4. \nMuch work remains to be done, firstly in testing the new DTD\nfragments against as wide a range of TEI materials as possible,\nsecondly in revising the discussion of markup theory and practice\nwithin the text to reflect current thinking. A few sections of the\ncurrent text (the Gentle Introduction to SGML and the discussion of\nExtended Pointer syntax are two examples) will need substantial\nrewriting. For the most part, however, we think the Guidelines have\nstood the test of time well and can be recommended to a new generation of\ntext encoders scarcely born at the time they were first formulated.\n\nLou Burnard and Steve De Rose (Editors)\nOxford and Providence, May 2001.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PREFS#PREFS\">8 Prefatory Notes</a><a class=\"breadcrumb\" href=\"p5.xml?id=ppf#ppf\">8.4 Introductory Note (May 1999)</a>","content":"\n8.4 Introductory Note (May 1999)\nNo work of the size and complexity of the TEI\nGuidelines could reasonably be expected to be error-free on\npublication, nor to remain long uncorrected. It has however taken rather longer\nthan might have been anticipated to complete production of the present\ncorrected reprint of the first edition, for which we present our apologies,\nboth to the many individuals and institutions whose enthusiastic adoption and\npromotion of the TEI encoding scheme have ensured its continued survival in the\nrapidly changing world of digital scholarship, and also to the many helpfully\ncritical users whose assiduous uncovering and reporting of our errors have made\npossible the present revision. \nAt its first meeting in Bergen, in June 1996, the TEI Technical Review\nCommittee (TRC) approved the setting up of a small working committee to oversee the\nproduction of a revised edition of the TEI\nGuidelines, to include corrections of as many as possible of the\n`corrigible errors' notified to the editors since publication\nof the first edition in May 1994, the bulk of which are summarized in a TEI\nworking paper (TEI EDW67, available from the TEI web site). \nDuring the spring of 1997, this TRC Core Subcommittee reviewed nearly 200\ncomments and proposals which the editors had collected from public debate and\ndiscussion over the preceding two years, and provided invaluable technical\nguidance in disposition of them. We are glad to take this opportunity of\nexpressing our thanks to this subcommittee, whose members were Elli Mylonas,\nDominic Dunlop, and David T. Barnard. \nThe work of making the corrections and regenerating the text proceeded\n  rather fitfully during 1998 and 1999, largely because of increasing demands on\n  the editors' time from their other responsibilities. With the\n  establishment of the new TEI Consortium, it is be hoped that maintenance of the\n  Guidelines will be placed on a more secure footing. Some specific areas in which we\n  anticipate future revisions being carried out are listed below. \n\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PREFS#PREFS\">8 Prefatory Notes</a><a class=\"breadcrumb\" href=\"p5.xml?id=ppf#ppf\">8.4 Introductory Note (May 1999)</a><a class=\"breadcrumb\" href=\"p5.xml?id=ppf-tcm#ppf-tcm\">8.4.1 Typographic Corrections Made</a>","content":"\n8.4.1 Typographic Corrections Made\nexamples of TEI markup throughout the text were all checked against the\n\t relevant DTD fragment and an embarassingly large number of tagging errors\n\t corrected;various minor typographic and spelling errors were corrected;the corrigible errors listed in working paper TEI EDW67 were all\n\t corrected: some of these required specific changes to the DTD which are listed\n\t in the next section.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PREFS#PREFS\">8 Prefatory Notes</a><a class=\"breadcrumb\" href=\"p5.xml?id=ppf#ppf\">8.4 Introductory Note (May 1999)</a><a class=\"breadcrumb\" href=\"p5.xml?id=ppf-spc#ppf-spc\">8.4.2 Specific Changes in the DTD</a>","content":"\n8.4.2 Specific Changes in the DTD\nA major goal of this revision was to avoid changes which might invalidate\n  existing data, even where existing constructs seemed erroneous in retrospect.\n  To that end, wherever changes have been made in content models for existing\n  elements, they have as far as possible been made so that the DTD will now\n  accept a superset of what was previously legal. Only one new element\n  (ab) has been added.\nWhere possible, a few content models have been changed in such a way as to\n  facilitate conversion to XML, but XML compatibility is\n  not a goal\n  of this revision.\nBrief details of all changes made in the DTD follow:\nSeveral changes were made in class membership, in order to correct\n\t unreachability problems. Specifically:\n\t elements geogName, persName,\n\t\t  placeName were added to the m.data class; geogName and placeName were removed from the\n\t\t  m.placepart class;the elements addSpan, delSpan, gap, were\n\t\t  added to the m.Edit class; a new class m.editIncl was defined, with members\n\t\t  addSpan, delSpan, and gap; this class was then added\n\t\t  to the global inclusion class\nm.globIncl along with\n\t\t  anchor (erroneously a member of the\nm.Seg  class, from\n\t\t  which it is now removed), m.metadata and m.refsys;\n\t\t  added name element to m.addrPart class;added dateline to m.divtop and \n     m.divbot classes;added epilogue and castList to\n     m.dramafront class;added divGen to m.front class;added dateline to m.divtop and\n\t m.divtop classes;added u element to a.declaring class;defined new class m.fmchunk (front matter chunk),\n\t comprising argument, byline, docAuthor,\n\t docDate, docEdition, docImprint, docTitle,\n\t epigraph, head, and titlePart for use in\n\t simplification of the content model for front element;defined new element ab (anonymous block), and added it to the\n\t m.chunk class;corrected an error whereby global attributes were not properly defined\n\t for elements specifying a non-default value for any of the\n\t a.global attributes: elements affected include: foreign,\n\t hi, del, pb, lb, cb,\n\t language, anchor, and when;changed content models to permit empty list and empty\n\t availability elements;changed content model for series element to permit #PCDATA;\n  changed content model for setting element to permit\n\t date element as a direct child; added a key attribute to the distance element,\n\t for consistency with other elements in its class;changed content model for orgName element to make it more\n\t consistent with e.g. persName;changed content model for opener element to include\n\t argument, byline, and epigraph;changed content models for app, rdgGrp, and\n\t wit elements;revised attributes on hand element.\nA number of content models were changed with a view to\neasing the creation of an XML compatible version of the\nGuidelines. Specifically:\n removed ampersand connectors from  cit,\nrespStmt, publicationStmt, and graph;changed the mixed content models for sense, re, persName,\nplaceName, geogName, dateStruct, timeStruct, and dateline\nto make them XML-conformant.\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PREFS#PREFS\">8 Prefatory Notes</a><a class=\"breadcrumb\" href=\"p5.xml?id=ppf#ppf\">8.4 Introductory Note (May 1999)</a><a class=\"breadcrumb\" href=\"p5.xml?id=ppf-err#ppf-err\">8.4.3 Outstanding Errors</a>","content":"\n8.4.3 Outstanding Errors\nA small number of other known problems remain uncorrected in this version\n  and are briefly listed below. Please watch the TEI mailing list for\n  announcements of their correction.\nelements of class model.inter don't always behave\n        as they should (e.g. one cannot insert a table before\n        anything else in a div);\n  some mixed-content problems consequent on the definition of\n         macro.specialPara need to be addressed systematically;\n         in particular, the treatment of list items or notes which contain\n         several paragraphs continues to surprise many users:  no \n         whitespace is allowed between the paragraphs;the resp attributes on editorial elements are not\n         consistently defined; the discussions of DTD invocation, and the DTD itself, all use\n        system identifiers instead of formal public identifiers.\nOur next priority however will be the production of a fully XML-compliant version\n  of the TEI DTD, work on which is already well advanced.\nC.M. Sperberg-McQueen and Lou Burnard, May 1999\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PREFS#PREFS\">8 Prefatory Notes</a><a class=\"breadcrumb\" href=\"p5.xml?id=PF#PF\">8.5 Preface (April 1994)</a>","content":"8.5 Preface (April 1994)\nThese Guidelines are the result of over five years' effort by\nmembers of the research and academic community within the\nframework of an international cooperative project called the Text\nEncoding Initiative (TEI), established in 1987 under the joint\nsponsorship of the Association for Computers and the Humanities,\nthe Association for Computational Linguistics, and the Association\nfor Literary and Linguistic Computing.\n \nThe impetus for the project came from the humanities computing\ncommunity, which sought a common encoding scheme for complex textual\nstructures in order to reduce the diversity of existing encoding\npractices, simplify processing by machine, and encourage the sharing of\nelectronic texts. It soon became apparent that a sufficiently flexible\nscheme could provide solutions for text encoding problems generally. The\nscope of the TEI was therefore broadened to meet the varied encoding\nrequirements of any discipline or application. Thus, the TEI became the\nonly systematized attempt to develop a fully general text encoding model\nand set of encoding conventions based upon it, suitable for processing\nand analysis of any type of text, in any language, and intended to serve\nthe increasing range of existing (and potential) applications and use.\n \nWhat is published here is a major milestone in this effort. It\nprovides a single, coherent framework for all kinds of text encoding\nwhich is hardware-, software- and application-independent. Within this\nframework, it specifies encoding conventions for a number of key text\ntypes and features. The ongoing work of the TEI is to extend the\nscheme presented here to cover additional text types and features, as\nwell as to continue to refine its encoding recommendations on the\nbasis of extensive experience with their actual application and use.\n \nWe therefore offer these Guidelines to the user community for use in\nthe same spirit of active collaboration and cooperation with which\nthey have so far been developed. The TEI is committed to actively\nsupporting the wide-spread and large-scale use of the Guidelines\nwhich, with the publication of this volume, is now for the first time\npossible. In addition, we anticipate that users of the TEI Guidelines\nwill in some instances adapt and extend them as necessary to suit\nparticular needs; we invite such users to engage in the further\ndevelopment of these Guidelines by working with us as they do so.\n \nLike any standard which is actually used, these Guidelines do not\nrepresent a static finished work, but rather one which will evolve\nover time with the active involvement of its community of users. We\ninvite and encourage the participation of the user community in\nthis process, in order to ensure that the TEI Guidelines become and\nremain useful in all sorts of work with machine-readable texts.\n \nThis document was made possible in part by financial support from\nthe U.S. National Endowment for the Humanities, an independent federal\nagency; Directorate General XIII of the Commission of the European\nCommunities; the Andrew W. Mellon Foundation; and the Social Science\nand Humanities Research Council of Canada.  Direct and indirect\nsupport has also been received from the University of Illinois at\nChicago, the Oxford University Computing Services, the University of\nArizona, the University of Oslo and Queen's University (Kingston,\nOnt.), Bellcore (Bell Communications Research), the Istituto di\nLinguistica Computazionale (C.N.R.) Pisa, the British Academy, and\nOhio State University, as well as the employers and host institutions\nof the members of the TEI working committees and work groups listed in\nthe acknowledgments.\n \nThe production of this document has been greatly facilitated by the\nwillingness of many software vendors to provide us with evaluation\nversions of their products. Most parts of this text have been processed\nat some time by almost every currently available SGML-aware software\nsystem. In particular, we gratefully acknowledge the\nassistance of the following vendors:\nBerger-Levrault AIS s.a. (for Balise);E2S n.v. (for E2S Advanced SGML Editor);Electronic Book Technology (for DynaText);SEMA Group and Yard Software (for Mark-It and Write-It);Software Exoterica (for CheckMark and Xtran);SoftQuad, Inc., (for Author/Editor and RulesBuilder);Xerox Corporation (for Ventura Publisher).\n \nDetails of the software actually used to produce the current document\nare given in the colophon at the end of the work.\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PREFS#PREFS\">8 Prefatory Notes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WG#WG\">8.6 Acknowledgments</a>","content":"8.6 Acknowledgments\nMany people have given of their time, energy, expertise, and support\nin the creation of this document; it is unfortunately not possible to\nthank them all adequately.  Below are listed those who have served as\nformal members of the TEI's Work Groups and Working Committees during\nits six-year history; others not so officially enfranchised also\ncontributed much to the quality of the result.\nThe editors take this opportunity to acknowledge our debt to those\nwho have patiently endured and corrected our misunderstandings of their\nwork; we hope that they will feel the wait has not been in vain.  For\nany errors and inconsistencies remaining, we must accept responsibility;\nany virtue in what is here presented, we gladly ascribe to the energies\nof the keen intellects listed below.\nC. M. Sperberg-McQueen and Lou Burnard\n\n\n"}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PREFS#PREFS\">8 Prefatory Notes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WG#WG\">8.6 Acknowledgments</a><a class=\"breadcrumb\" href=\"p5.xml?id=WGWC#WGWC\">8.6.1 TEI Working Committees (1990-1993)</a>","content":"8.6.1 TEI Working Committees (1990-1993)2\nCommittee on Text Documentation:\nChair:  Dominik Wujastyk (Wellcome Institute for the History of\nMedicine)\nMembers 1990–1992:  J. D. Byrum (Library of Congress);\nMarianne Gaunt (Rutgers University);\nRichard Giordano (Manchester University);\nBarbara Ann Kipfer (Independent Consultant);\nHans Jørgen Marker (Danish Data Archive, Odense);\nMarcia Taylor (University of Essex);Committee on Text Representation\nChair:  Stig Johansson (University of Oslo)\nMembers 1990–1992:  Roberto Cencioni (Commission of the European\nCommunities);\nDavid R. Chesnutt (University of South Carolina);\nRobin C. Cover (Dallas Theological Seminary);\nSteven J. DeRose (Electronic Book Technology Inc);\nDavid G. Durand (Boston University);\nSusan M. Hockey (Oxford University Computing Service);\nClaus Huitfeldt (University of Bergen);\nFrancisco Marcos-Marin (University Madrid);\nElli Mylonas (Harvard University);\nWilhelm Ott (University of Tübingen);\nAllen H. Renear (Brown University);\nManfred Thaller (Max-Planck-Institut für Geschichte,\nGöttingen)Committee on Text Analysis and Interpretation\nChair:  D. Terence Langendoen (University of Arizona)\nMembers 1990–1992:\nRobert Amsler (Bell Communications Research);\nStephen Anderson (Johns Hopkins University);\nBranimir Boguraev (IBM T. J. Watson Research Center);\nNicoletta Calzolari (University of Pisa);\nRobert Ingria (Bolt Beranek Newman Inc);\nWinfried Lenders (University of Bonn);\nMitch Marcus (University of Pennsylvania);\nNelleke Oostdijk (University of Nijmegen);\nWilliam Poser (Stanford University);\nBeatrice Santorini (University of Pennsylvania);\nGary Simons (Summer Institute of Linguistics);\nAntonio Zampolli, University of Pisa.Committee on Metalanguage and Syntax\nChair:  David T. Barnard (Queen's University)\nMembers 1990–1994: David G. Durand (Boston University);\nJean-Pierre Gaspart (Associated Consultants and\nSoftware Engineers sa/nv);\nNancy M. Ide (Vassar College);\nLynne A. Price (Software Exoterica / Xerox PARC);\nFrank Tompa (University of Waterloo);\nGiovanni Battista Varile (Commission of the European Communities).\nIn addition, the two TEI editors served ex officio on each\ncommittee.\nFollowing publication of the first draft of the TEI Guidelines (P1)\nin November 1990, a number of specialist work groups were charged with\nresponsibility for drafting revisions and extensions, which, together\nwith material already presented in P1, constitute the basis of the\npresent work.\nIn addition, many members of the work groups listed below met on\nthree occasions to review the emerging proposals in detail at\ntechnical review meetings convened by the TEI Steering Committee.\nThese meetings, held in Myrdal, Norway (November 1991), Chicago (May\n1992) and Oxford (May 1993), were largely responsible for the\ntechnical content and organization of the present work.  Attendants at\nthese meetings are starred in the list below.\nTR1 Character setsChair:  Harry Gaylord* (University of Groningen);\nSyun Tutiya* (Chiba University).TR2 Text criticismChair:  Peter Robinson* (Oxford University);\nDavid Chesnutt* (University of South Carolina);\nRobin Cover* (Dallas Theological Seminary);\nRobert Kraft (University of Pennsylvania);\nPeter Shillingsburg (Mississippi State University).TR3 Hypertext and hypermediaChair:  Steven J. DeRose* (Electronic Book Technologies Inc);\nDavid Durand (Boston University);\nEdward A. Fox (Virginia State University); Eve Wilson (University of\nKent).TR4 Formulæ, Tables, figures, and graphicsChair:  Paul Ellison* (University of Exeter);\nAnders Berglund (Independent Consultant); Dale Waldt (Thompson\nProfessional Publishing).TR6 Language corporaChair:  Douglas Biber* (University of Northern Arizona);\nJeremy Clear (Birmingham University);\nGunnel Engwall (University of Stockholm).TR9 Manuscripts and codicologyChair:  Claus Huitfeldt* (University of Bergen);\nDino Buzzetti (University of Bologna);\nJacqueline Hamesse (University of Louvain);\nMary Keeler (Georgetown University);\nChristian Kloesel (Indiana University);\nAllen Renear* (Brown University);\nDonald Spaeth (Glasgow University).TR10 VerseChair:  David Robey* (University of Manchester);\nElaine Brennan* (Brown University);\nDavid Chisholm (University of Arizona);\nWillard McCarty (University of Toronto).TR11 Drama and performance textsChair:  Elli Mylonas* (Harvard University);\nJohn Lavagnino* (Brandeis University);\nRosanne Potter (University of Iowa).TR12 Literary proseChair Thomas N. Corns* (University of Wales);\nChristian Delcourt (University of Liège).\n\tAI1 Linguistic descriptionChair:  D. Terence Langendoen* (University of Arizona);\nStephen R. Anderson (Johns Hopkins University);\nNicoletta Calzolari (University of Pisa);\nGeoffrey Sampson* (University of Sussex);\nGary Simons* (Summer Institute of Linguistics).AI2 Spoken textChair: Stig Johansson* (University of Oslo);\nJane Edwards (University of California at Berkeley);\nAndrew Rosta (University College London).AI3 Literary studiesChair: Paul Fortier* (University of Manitoba);\nChristian Delcourt  (University of Liège;);\nIan Lancashire  (University of Toronto);\nRosanne Potter (University of Iowa);\nDavid Robey* (University of Manchester).AI4 Historical studiesChair: Daniel Greenstein* (University of Glasgow);\nPeter Denley (Queen Mary Westfield College, London);\nIngo Kropac (University of Graz);\nHans Jørgen Marker (Danish Data Archive, Odense);\nJan Oldervoll (University of Tromsø);\nKevin Schurer (University of Cambridge);\nDonald Spaeth (Glasgow University);\nManfred Thaller (Max-Planck-Institut für Geschichte,\nGöttingen).3AI5 Print dictionariesChairs: Robert Amsler* (Bell Communications Research) and\nNicoletta Calzolari (University of Pisa);\nSusan Armstrong-Warwick (University of Geneva);\nJohn Fought (University of Pennsylvania);\nLouise Guthrie (University of New Mexico);\nNancy M. Ide* (Vassar College);\nFrank Tompa (University of Waterloo);\nCarol Van Ess-Dykema (US Department of Defense);\nJean Veronis (University of Aix-en-Provence).AI6 Machine lexicaChair:  Robert Ingria* (Bolt Beranek Newman Inc);\nSusan Armstrong-Warwick (University of Geneva);\nNicoletta Calzolari (University of Pisa).AI7 Terminological dataChair:  Alan Melby* (Brigham Young University)\nGerhard Budin (University of Vienna);\nGregory Shreve (Kent State University);\nRichard Strehlow (Oak Ridge National Laboratory);\nSue Ellen Wright (Kent State University)."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PREFS#PREFS\">8 Prefatory Notes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WG#WG\">8.6 Acknowledgments</a><a class=\"breadcrumb\" href=\"p5.xml?id=WGAB#WGAB\">8.6.2 Advisory Board</a>","content":"8.6.2 Advisory Board\nMembers of the TEI Advisory Board during the lifetime of the\nproject are listed below, grouped under the name of the organization\nrepresented.\nAmerican Anthropological Association:Chad McDaniel (University of Maryland).American Historical Association:Elizabeth A. R. Brown (Brooklyn College, CUNY).American Philological Association:Jocelyn Penny Small (Rutgers University).American Philosophical Association:Allen Renear (Brown University).American Society for Information Science:Clifford A. Lynch (University of California).Association for Computing Machinery, Special Interest Group for\nInformation Retrieval:1989–93:  Scott Deerwester (University of Chicago); 1993- :\nMartha Evens (Illinois Institute of Technology).Association for Documentary Editing:David Chesnutt (University of South Carolina).Association for History and Computing:1989–91:  Manfred Thaller, Max-Planck-Institut für\nGeschichte, Göttingen; 1991- :  Daniel Greenstein (Glasgow\nUniversity).Association Internationale Bible et Informatique1989–93:  Wilhelm Ott (University of Tübingen); 1993- :\nWinfried Bader (University of Tübingen).Canadian Linguistic Association:Anne-Maria di Sciullo (Université du Québec\nà Montréal)Dictionary Society of North America:Barbara Ann Kipfer (Independent Consultant).AAP Electronic Publishing Special Interest Group:1989–92:  Betsy Kiser (OCLC); 1992- :\nDeborah Bendig and Andrea Keyhani (OCLC).International Federation of Library Associations and\nInstitutions:J. D. Byrum Jr. (The Library of Congress).Linguistic Society of America:Stephen Anderson (The Johns Hopkins University)Modern Language Association:Randall Jones (Brigham Young University) and\nIan Lancashire (University of Toronto)."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=PREFS#PREFS\">8 Prefatory Notes</a><a class=\"breadcrumb\" href=\"p5.xml?id=WG#WG\">8.6 Acknowledgments</a><a class=\"breadcrumb\" href=\"p5.xml?id=WGSC#WGSC\">8.6.3 Steering Committee Membership</a>","content":"8.6.3 Steering Committee Membership\nMembers of the Steering Committee of the TEI during the preparation\nof this work were:\nAssociation for Computational Linguistics:\n1987–1993:  Robert A. Amsler (Bell Communications Research);1987–1993:  Donald E. Walker (Bell Communications Research);1993–1994:  Susan Armstrong-Warwick (University of Geneva);1994–1999:  Judith Klavans (Columbia University).Association for Computers and the Humanities:\n1987–1999:  Nancy M. Ide (Vassar College);1987–1994:  C. M. Sperberg-McQueen (University of Illinois at\nChicago);1994–1999:  David Barnard (Queen's University).Association for Literary and Linguistic Computing:\n1987–1999:  Susan M. Hockey (Center for Electronic Texts in the\nHumanities);1987–1999:  Antonio Zampolli (University of Pisa)."}
{"tag":"guidelines","title":"<a class=\"breadcrumb\" href=\"p5.xml?id=COL#COL\">9 Colophon</a>","content":"\n  9 Colophon\n  The text of this manual was prepared electronically on a variety of\n    systems.  Most sections were originally drafted by members of the work\n    groups and working committees of the TEI; all have been revised by the\n    editors to achieve greater uniformity of style and greater consistency\n    in the tag set.\n  \n  The web release of the Guidelines was created using a library of\n    XSLT stylesheets to convert to XHTML; the PDF version for printing was\n    produced by conversion to LaTeX markup, processed using XeLaTeX.\n    The XSLT libraries were written by Sebastian Rahtz.\n  \n  \n  Almost every available SGML and XML editor or processing program\n    has been used at one time or another by the TEI; but\n    without the open source implementations of XML parsers, editors and\n    XSLT engines by James Clark, Richard Stallman, Michael Kay, and Daniel\n    Veillard, the TEI could not survive, and we thank these\n    individuals. We would also like to thank the staff at SyncRO Soft SRL,\n    creators of the oXygen editor, for their  support for the TEI during\n    the creation on P5.\n  \n  Many volunteers contributed to the preparation of this release of\n    the Guidelines; we particularly note the work of Sabine Krott, Eva\n    Radermacher and Arianna Ciula for their work in structuring the\n    bibliographies.\n  \n  The production and release process for TEI P5 was originally developed by\n    Sebastian Rahtz for the TEI Technical Council.\n"}
{"content":"contains material which is distinguished from the\n    surrounding text using quotation marks or a similar method, for any one of a variety of reasons including, but not limited to: direct\n    speech or thought, technical terms or jargon, authorial distance, quotations from elsewhere, and\n    passages that are mentioned but not used. Elements common to all TEI documents may be used to indicate whether the offset passage is spoken or thought, or to\n        characterize it more finely. May be used to indicate that a passage is distinguished from the surrounding text for reasons concerning which no claim is made. When used in this manner,\n      q may be thought of as syntactic sugar for hi with a value of\n      rend that indicates the use of such mechanisms as quotation marks.","title":"<a href=\"ref/q\">q</a>","tag":"reference"}
{"content":"contains a quotation from some other document, together with a bibliographic reference to\n    its source. In a dictionary it may contain an example text with at least one occurrence of the\n    word form, used in the sense being described, or a translation of the headword, or an example. Elements common to all TEI documents","title":"<a href=\"ref/cit\">cit</a>","tag":"reference"}
{"content":"marks words or phrases mentioned, not used. Elements common to all TEI documents","title":"<a href=\"ref/mentioned\">mentioned</a>","tag":"reference"}
{"content":"contains a word or phrase for which the author or narrator indicates a disclaiming of\n    responsibility, for example by the use of scare quotes or italics. Elements common to all TEI documents","title":"<a href=\"ref/soCalled\">soCalled</a>","tag":"reference"}
{"content":"contains a short description of the purpose, function, or\n    use of its parent element,\n    or when the parent is a documentation element, describes or defines the object being documented. \n   \n   Elements common to all TEI documents When used in a specification element such as elementSpec, TEI convention requires that this be expressed as a finite clause, begining\n      with an active verb. Example of a desc element inside a documentation element. A desc with\n    a type of deprecationInfo should only occur\n    when its parent element is being deprecated. Furthermore, it\n    should always occur in an element that is being deprecated when\n    desc is a valid child of that element.","title":"<a href=\"ref/desc\">desc</a>","tag":"reference"}
{"content":"identifies a phrase or word used to provide a gloss or definition for some other word or\n    phrase. Elements common to all TEI documents The target and cRef attributes are mutually exclusive.","title":"<a href=\"ref/gloss\">gloss</a>","tag":"reference"}
{"content":"contains a single-word, multi-word, or symbolic\n    designation which is regarded as a technical term. Elements common to all TEI documents When this element appears within an index element, it is understood to supply the\n      form under which an index entry is to be made for that location. Elsewhere, it is understood\n      simply to indicate that its content is to be regarded as a technical or specialised term. It\n      may be associated with a gloss element by means of its ref attribute;\n      alternatively a gloss element may point to a term element by means of its\n        target attribute.  In formal terminological work, there is frequently discussion over whether terms must be\n      atomic or may include multi-word lexical items, symbolic designations, or phraseological\n      units. The term element may be used to mark any of these. No position is taken on the\n      philosophical issue of what a term can be; the looser definition simply allows the\n        term element to be used by practitioners of any persuasion. As with other members of the att.canonical class, instances of\n      this element occuring in a text may be associated with a canonical definition, either by means\n      of a URI (using the ref attribute), or by means of some system-specific code value\n      (using the key attribute). Because the mutually exclusive target and\n        cRef attributes overlap with the function of the ref attribute, they\n      are deprecated and may be removed at a subsequent release. ","title":"<a href=\"ref/term\">term</a>","tag":"reference"}
{"content":"contains a\n  passage of base text along with its associated ruby gloss(es). Elements common to all TEI documents The word 入学試験 nyūgakushiken\n    (university entrance exam) is glossed with a hiragana phonation guide.","title":"<a href=\"ref/ruby\">ruby</a>","tag":"reference"}
{"content":"provides references to\n        preceding or following correspondence related to this piece of\n        correspondence. The TEI header","title":"<a href=\"ref/correspContext\">correspContext</a>","tag":"reference"}
{"content":"groups elements which define the\n        parts (usually names, dates and places) of one action related to the correspondence. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.correspActionPart\">model.correspActionPart</a>","tag":"reference"}
{"content":"contains the\n    base text annotated by a ruby gloss. Elements common to all TEI documents The word 你 好 nǐ hǎo\n        (hello) is glossed in pinyin to provide a pronunciation guide.","title":"<a href=\"ref/rb\">rb</a>","tag":"reference"}
{"content":"contains a ruby\n    text, an annotation closely associated with a passage of the\n    main text. Elements common to all TEI documents supplies a pointer to the\n        base being glossed by this ruby text. points to the starting point of the span of text\n        being glossed by this ruby text. points to the ending point of the span of text\n        being glossed. Where the place attribute is not provided on the rt\n      element, the default assumption is that the \n      ruby gloss is above where the text is horizontal, and to the\n      right of the text where it is vertical.  The word 大統領 daitōryō\n      (president) is glossed character by character in hiragana to provide a pronunciation guide.","title":"<a href=\"ref/rt\">rt</a>","tag":"reference"}
{"content":"groups a number of alternative encodings for the same point in\n        a text. Elements common to all TEI documents Because the children of a  choice element all\n            represent alternative ways of encoding the same sequence, it is\n            natural to think of them as mutually exclusive. However, there may\n            be cases where a full representation of a text requires the\n            alternative encodings to be considered as parallel.  Note also that choice elements may self-nest. Where the purpose of an encoding is to record multiple\n            witnesses of a single work, rather than to identify\n    multiple possible encoding decisions at a given point, the\n    app element and associated elements discussed in  section\n    12.1 The Apparatus Entry, Readings, and Witnesses should be preferred. An American encoding of Gulliver's Travels which\n            retains the British spelling but also provides a version\n            regularized to American spelling might be encoded as follows.","title":"<a href=\"ref/choice\">choice</a>","tag":"reference"}
{"content":"indicates a point where material has been omitted in a transcription, whether for editorial\n    reasons described in the TEI header, as part of sampling practice, or because the material is\n    illegible, invisible, or inaudible. Elements common to all TEI documents gives the reason for omission in the case of text omitted because of damage, categorizes the cause of the damage, if\n        it can be identified. The gap, unclear, and del core tag elements may be closely allied\n      in use with the damage and supplied elements, available when using the\n      additional tagset for transcription of primary sources. See section 11.3.3.2 Use of the gap, del, damage, unclear, and\n                  supplied Elements in Combination\n      for discussion of which element is appropriate for which circumstance. The gap tag simply signals the editors decision to omit or inability to transcribe a span of\n    text. Other information, such as the interpretation that text was deliberately erased or covered, should be\n    indicated using the relevant tags, such as del in the case of deliberate deletion.","title":"<a href=\"ref/gap\">gap</a>","tag":"reference"}
{"content":"contains a reading which has been regularized or normalized in some sense. Elements common to all TEI documents If all that is desired is to call attention to the fact that the copy text has been\n            regularized, reg may be used alone:","title":"<a href=\"ref/reg\">reg</a>","tag":"reference"}
{"content":"contains a reading which is marked as following the original, rather than being normalized\n        or corrected. Elements common to all TEI documents If all that is desired is to call attention to the original version in the copy text,\n                orig may be used alone:","title":"<a href=\"ref/orig\">orig</a>","tag":"reference"}
{"content":"indicates a purposeful\n  marking in the source document signalling that content has been\n  omitted, and may also supply or describe the omitted content. Elements common to all TEI documents Unlike gap, which indicates content that the encoder\n    cannot or chooses not to represent, ellipsis indicates a\n    passage explicitly signalled in the source document as absent. The\n    ellipsis element is not appropriate for every use of\n    ellipsis points, such as when they indicate that a speaker is\n    pausing.","title":"<a href=\"ref/ellipsis\">ellipsis</a>","tag":"reference"}
{"content":"contains letters, words, or phrases inserted in the source\n  text by an author, scribe, or a previous annotator or corrector. Elements common to all TEI documents In a diplomatic edition attempting to represent an original\n    source, the add element should not be used for additions\n    to the current TEI electronic edition made by editors or encoders.\n    In these cases, either the corr or supplied\n    element are recommended. In a TEI edition of a historical text with previous editorial\n    emendations in which such additions or reconstructions are\n    considered part of the source text, the use of add may be\n    appropriate, dependent on the editorial philosophy of the\n    project.","title":"<a href=\"ref/add\">add</a>","tag":"reference"}
{"content":"contains a word, phrase, or passage which cannot be transcribed with certainty because it\n        is illegible or inaudible in the source. Elements common to all TEI documents indicates why the material is hard to transcribe. Where the difficulty in transcription arises from damage, categorizes the cause of\n                the damage, if it can be identified. The same element is used for all cases of uncertainty in the transcription of element\n            content, whether for written or spoken material. For other aspects of certainty,\n            uncertainty, and reliability of tagging and transcription, see chapter 21 Certainty, Precision, and Responsibility. The damage, gap, del, unclear and supplied\n            elements may be closely allied in use. See section 11.3.3.2 Use of the gap, del, damage, unclear, and\n                  supplied Elements in Combination for\n            discussion of which element is appropriate for which\n    circumstance. The hand attribute points to a definition of the hand\nconcerned, as further discussed in section 11.3.2.1 Document Hands.","title":"<a href=\"ref/unclear\">unclear</a>","tag":"reference"}
{"content":"contains a proper noun or noun phrase. Elements common to all TEI documents Proper nouns referring to people, places, and organizations may be tagged instead with\n                persName, placeName, or orgName, when the TEI module for\n            names and dates is included.","title":"<a href=\"ref/name\">name</a>","tag":"reference"}
{"content":"contains a letter, word, or passage deleted, marked as deleted, or otherwise indicated as\n    superfluous or spurious in the copy text by an author, scribe, or a previous annotator or corrector. Elements common to all TEI documents This element should be used for deletion of shorter sequences of text, typically single words\n      or phrases. The delSpan element should be used for longer sequences of text, for\n      those containing structural subdivisions, and for those containing overlapping additions and\n      deletions. The text deleted must be at least partially legible in order for the encoder to be able to\n      transcribe it (unless it is restored in a supplied tag). Illegible or lost text within a \n      deletion may be marked using the gap tag to signal that text is present but has not\n      been transcribed, or is no longer visible. Attributes on the gap\n      element may be used to indicate how much text is omitted, the reason for omitting it, etc. If\n      text is not fully legible, the unclear element (available when using the additional\n      tagset for transcription of primary sources) should be used to signal the areas of text which\n      cannot be read with confidence in a similar way. Degrees of uncertainty over what can still be read, or whether a deletion was intended may be\n      indicated by use of the certainty element (see 21 Certainty, Precision, and Responsibility). There is a clear distinction in the TEI between del\n    and surplus on the one hand and gap or\n    unclear on the other. del indicates a\n    deletion present in the source being transcribed, which states\n     the author's or a later scribe's intent to cancel or remove\n     text. surplus indicates material present in the source\n     being transcribed which  should have been so\n     deleted, but which is not in fact. gap or unclear, by contrast, signal an\n     editor's or encoder's decision to omit something or their\n     inability to read the source text.\n    See  sections 11.3.1.7 Text Omitted from or Supplied in the Transcription and 11.3.3.2 Use of the gap, del, damage, unclear, and\n                  supplied Elements in Combination for the relationship between these and other\n    related elements used in detailed transcription. ","title":"<a href=\"ref/del\">del</a>","tag":"reference"}
{"content":"contains an email address identifying a location to which\n        email messages can be delivered. Elements common to all TEI documents The format of a modern Internet email address is defined in\n            RFC 2822\n        ","title":"<a href=\"ref/email\">email</a>","tag":"reference"}
{"content":"contains a general purpose name or referring string. Elements common to all TEI documents","title":"<a href=\"ref/rs\">rs</a>","tag":"reference"}
{"content":"contains a postal address, for example of a publisher, an organization, or an\n    individual. Elements common to all TEI documents This element should be used for postal addresses only. Within it, the generic element addrLine may\n      be used as an alternative to any of the more specialized elements available from the model.addrPart class, such as street, postCode etc. Using just the elements defined by the core module, an address could be represented as follows:","title":"<a href=\"ref/address\">address</a>","tag":"reference"}
{"content":"contains one line of a postal address. Elements common to all TEI documents Addresses may be encoded either as a sequence of lines, or\n    using any sequence of component elements from the model.addrPart class. Other non-postal forms\n    of address, such as telephone numbers or email, should not be\n    included within an address element directly but may be\n    wrapped within an addrLine if they form part of the\n    printed address in some source text. ","title":"<a href=\"ref/addrLine\">addrLine</a>","tag":"reference"}
{"content":"contains a numerical or alphanumeric code used as part of a postal address to simplify\n        sorting or delivery of mail. Elements common to all TEI documents The position and nature of postal codes is highly country-specific; the conventions\n            appropriate to the country concerned should be used.","title":"<a href=\"ref/postCode\">postCode</a>","tag":"reference"}
{"content":"contains a number or other identifier for some postal delivery point other than a street\n    address. Elements common to all TEI documents The position and nature of postal codes is highly country-specific; the conventions\n      appropriate to the country concerned should be used.","title":"<a href=\"ref/postBox\">postBox</a>","tag":"reference"}
{"content":"contains a full street address including any name or number identifying a\n        building as well as the name of the street or route on which it is\n        located. Elements common to all TEI documents The order and presentation of house names and numbers and\n            street names, etc., may vary considerably in different countries.  The\n            encoding should reflect the order which is appropriate in the country\n            concerned. ","title":"<a href=\"ref/street\">street</a>","tag":"reference"}
{"content":"contains a number, written in any form. Elements common to all TEI documents indicates the type of numeric value. supplies the value of the number in standard form. Detailed analyses of quantities and units of measure in historical documents may also use\n            the feature structure mechanism described in chapter 18 Feature Structures. The\n            num element is intended for use in simple applications.","title":"<a href=\"ref/num\">num</a>","tag":"reference"}
{"content":"contains a word or phrase referring to some quantity of an object or commodity, usually\n        comprising a number, a unit, and a commodity name. Elements common to all TEI documents specifies the type of measurement in any convenient typology. This example references a definition of a measurement unit declared in the TEI header: ","title":"<a href=\"ref/measure\">measure</a>","tag":"reference"}
{"content":"contains a group of dimensional specifications which relate to the same object, for example\n    the height and width of a manuscript page. Elements common to all TEI documents","title":"<a href=\"ref/measureGrp\">measureGrp</a>","tag":"reference"}
{"content":"contains a symbol, a word or a phrase referring to a unit of measurement in any kind of formal or informal system. Elements common to all TEI documents Here is an example of a unit element holding a unitRef attribute that points to a definition of the unit in the TEI header.","title":"<a href=\"ref/unit\">unit</a>","tag":"reference"}
{"content":"contains a date in any format. Elements common to all TEI documents","title":"<a href=\"ref/date\">date</a>","tag":"reference"}
{"content":"contains a phrase defining a time of day in any format. Elements common to all TEI documents","title":"<a href=\"ref/time\">time</a>","tag":"reference"}
{"content":"contains an abbreviation of any sort. Elements common to all TEI documents allows the encoder to classify the abbreviation according to some convenient\n                typology. If abbreviations are expanded silently, this practice should be\n    documented in the editorialDecl, either with a\n    normalization element or a p.","title":"<a href=\"ref/abbr\">abbr</a>","tag":"reference"}
{"content":"contains the expansion of an abbreviation. Elements common to all TEI documents The content of this element should be the expanded\n      abbreviation, usually (but not always) a complete word or\n      phrase. The ex element provided by the transcr module may be used to mark up\n      sequences of letters supplied within such an expansion. If abbreviations are expanded silently, this practice should be\n      documented in the editorialDecl, either with a\n      normalization element or a p.","title":"<a href=\"ref/expan\">expan</a>","tag":"reference"}
{"content":"defines a reference to another location, possibly modified by additional text or comment. Elements common to all TEI documents The target and cRef attributes are mutually exclusive.","title":"<a href=\"ref/ref\">ref</a>","tag":"reference"}
{"content":"defines a pointer to another location. Elements common to all TEI documents","title":"<a href=\"ref/ptr\">ptr</a>","tag":"reference"}
{"content":"contains any sequence of items organized as a list. Elements common to all TEI documents describes the nature of the items in the list. May contain an optional heading followed by a series of items, or a series of\n      label and item pairs, the latter being optionally preceded by one or two specialized\n    headings.","title":"<a href=\"ref/list\">list</a>","tag":"reference"}
{"content":"contains one component of a list. Elements common to all TEI documents May contain simple prose or a sequence of chunks. Whatever string of characters is used to label a list item in the copy text may be used as\n      the value of the global n attribute, but it is not required that numbering be\n      recorded explicitly. In ordered lists, the n attribute on the item element\n      is by definition synonymous with the use of the label element to record the\n      enumerator of the list item. In glossary lists, however, the term being defined should be\n      given with the label element, not n.","title":"<a href=\"ref/item\">item</a>","tag":"reference"}
{"content":"contains any label or heading used to identify part of a text,\n  typically but not exclusively in a list or glossary. Elements common to all TEI documents Labels are commonly used for the headwords in glossary\n    lists; note the use of the global xml:lang attribute to\n    set the default language of the glossary list to Middle English,\n    and identify the glosses and headings as modern English or\n    Latin:","title":"<a href=\"ref/label\">label</a>","tag":"reference"}
{"content":"contains any type of heading, for example the title of a section, or the heading of a list,\n    glossary, manuscript description, etc. Elements common to all TEI documents The head element is used for headings at all levels; software which treats (e.g.)\n      chapter headings, section headings, and list titles differently must determine the proper\n      processing of a head element based on its structural position. A head\n      occurring as the first element of a list is the title of that list; one occurring as the first\n      element of a div1 is the title of that chapter or section. The most common use for the head element is to mark the headings of sections. In\n      older writings, the headings or incipits may be rather longer than usual in\n      modern works. If a section has an explicit ending as well as a heading, it should be marked as\n      a trailer, as in this example:","title":"<a href=\"ref/head\">head</a>","tag":"reference"}
{"content":"contains the heading for the label or term column in a glossary list or similar structured\n        list. Elements common to all TEI documents The headLabel element may appear only if each item in the list is preceded by a\n                label.","title":"<a href=\"ref/headLabel\">headLabel</a>","tag":"reference"}
{"content":"contains the heading for the item or gloss column in a glossary list or similar structured\n        list. Elements common to all TEI documents The headItem element may appear only if each item in the list is preceded by a\n                label.","title":"<a href=\"ref/headItem\">headItem</a>","tag":"reference"}
{"content":"contains a group of notes Elements common to all TEI documents In the following example, there are two notes in different\n    languages, each specifying the content of the annotation relating\n    to the same fragment of text:","title":"<a href=\"ref/noteGrp\">noteGrp</a>","tag":"reference"}
{"content":"contains a note or annotation. Elements common to all TEI documents In the following example, the translator has supplied a footnote\n      containing an explanation of the term translated as \"painterly\": For this example to be valid, the\n      code MDMH must be defined elsewhere, for example by\n      means of a responsibility statement in the associated TEI header.","title":"<a href=\"ref/note\">note</a>","tag":"reference"}
{"content":"marks a location to be indexed for whatever purpose. Elements common to all TEI documents a single word which follows the rules defining a\n        legal XML name (see 1 ), supplying a name to specify which index (of several) the index entry belongs to.","title":"<a href=\"ref/index\">index</a>","tag":"reference"}
{"content":"indicates the location of any form of external media such as\n  an audio or video clip etc. Elements common to all TEI documents The attributes available for this element are not appropriate in\nall cases. For example, it makes no sense to specify the temporal duration of a\ngraphic. Such errors are not\ncurrently detected. The mimeType attribute must be used to specify the MIME media type of\nthe resource specified by the url attribute.","title":"<a href=\"ref/media\">media</a>","tag":"reference"}
{"content":"provides encoded binary data representing an inline graphic,\n  audio, video or other object. Elements common to all TEI documents The encoding used to encode the binary data. If not specified, this is assumed to be\n          Base64.","title":"<a href=\"ref/binaryObject\">binaryObject</a>","tag":"reference"}
{"content":"indicates the location of a graphic or illustration, either forming\n    part of a text, or providing an image of it. Elements common to all TEI documents The mimeType attribute should be used to supply the MIME media type of the image\n      specified by the url attribute. Within the body of a text, a graphic element  indicates the \n      presence of a graphic component in the source itself. Within the context of a facsimile or sourceDoc element, however, \n      a graphic element provides an additional digital representation of some part of the source being encoded.\n      ","title":"<a href=\"ref/graphic\">graphic</a>","tag":"reference"}
{"content":"marks a boundary point separating any kind of section of a text, typically but not\n    necessarily indicating a point at which some part of a standard reference system changes, where\n    the change is not represented by a structural element. Elements common to all TEI documents For this element, the global n attribute indicates the new number or other value\n      for the unit which changes at this milestone. The special value\n      unnumbered should be used in passages which fall outside the normal\n      numbering scheme, such as chapter or other headings, poem numbers or titles, etc. The order in which milestone elements are given at a given point is not normally significant.\n      \n    ","title":"<a href=\"ref/milestone\">milestone</a>","tag":"reference"}
{"content":"marks the beginning of a new gathering or quire in a transcribed codex. Elements common to all TEI documents By convention, gb elements should appear at the start\n    of the first page in the gathering. The global n\n    attribute indicates the number or other value used to identify\n    this gathering in a collation.   The type attribute may be used to further\n    characterize the gathering  in any respect.","title":"<a href=\"ref/gb\">gb</a>","tag":"reference"}
{"content":"marks the beginning of a new page in a paginated document. Elements common to all TEI documents A pb element should appear at the start of the page\n    which it identifies. The global n attribute indicates\n    the number or other value associated with this page. This will\n    normally be the page number or signature printed on it, since the\n    physical sequence number is implicit in the presence of the\n    pb element itself.  The type attribute may be used to characterize \n      the page break in any respect. The more specialized attributes \n      break, ed, or edRef should be \n      preferred when the intent is to indicate whether or not the \n      page break is word-breaking, or to note the source from \n      which it derives. Page numbers may vary in different editions of a text.","title":"<a href=\"ref/pb\">pb</a>","tag":"reference"}
{"content":"marks the beginning of a new (typographic) line in some edition or version of a text. Elements common to all TEI documents By convention, lb elements should appear at the point in the text where a new line\n      starts. The n attribute, if used, indicates the number or other value associated\n      with the text between this point and the next lb element, typically the sequence\n      number of the line within the page, or other appropriate unit. This element is intended to be\n      used for marking actual line breaks on a manuscript or printed page, at the point where they\n      occur; it should not be used to tag structural units such as lines of verse (for which the\n        l element is available) except in circumstances where structural units cannot\n      otherwise be marked.  The type attribute may be used to characterize the\n    line break in any respect. The more specialized attributes\n    break, ed, or edRef should be preferred when the\n    intent is to indicate whether or not the line\n    break is word-breaking, or to note the source from which it\n    derives.   This example shows typographical line breaks within metrical lines, where they occur at different\n      places in different editions:","title":"<a href=\"ref/lb\">lb</a>","tag":"reference"}
{"content":"contains bibliographic elements describing an item (e.g. an article or poem) published\n    within a monograph or journal and not as an independent publication. Elements common to all TEI documents May contain titles and statements of responsibility (author, editor, or\n      other), in any order. The analytic element may only occur within a biblStruct, where its use\n      is mandatory for the description of an analytic level bibliographic item.","title":"<a href=\"ref/analytic\">analytic</a>","tag":"reference"}
{"content":"marks the beginning of a new column of a text on a\n  multi-column page. Elements common to all TEI documents On this element, the global n attribute indicates the number or other value associated with the column\n            which follows the point of insertion of this cb element. Encoders should adopt a clear and consistent policy as to\n            whether the numbers associated with column breaks relate to the physical\n            sequence number of the column in the whole text, or whether columns are\n            numbered within the page.\n            The cb element is placed at the head of the\n            column to which it refers. Markup of an early English dictionary printed in two columns:","title":"<a href=\"ref/cb\">cb</a>","tag":"reference"}
{"content":"contains information about the series in which a book or other bibliographic item has\n    appeared. Elements common to all TEI documents","title":"<a href=\"ref/series\">series</a>","tag":"reference"}
{"content":"contains bibliographic elements describing an item (e.g. a book or journal) published as an\n    independent item (i.e. as a separate physical object). Elements common to all TEI documents May contain specialized bibliographic elements, in a prescribed order. The monogr element may only occur only within a biblStruct, where its use\n      is mandatory for the description of a monographic-level bibliographic item.","title":"<a href=\"ref/monogr\">monogr</a>","tag":"reference"}
{"content":"in a bibliographic reference, contains the name(s) of an\n  author, personal or corporate, of a work; for example in the same\n  form as that provided by a recognized bibliographic name authority. Elements common to all TEI documents Particularly where cataloguing is likely to be based on the\n    content of the header, it is advisable to use a generally recognized\n    name authority file to supply the content for this element.  The\n    attributes key or ref may also be used to\n    reference canonical information about the author(s) intended from any\n    appropriate authority, such as a library catalogue or online\n    resource.  In the case of a broadcast, use this element for the name of\n    the company or network responsible for making the broadcast. Where an author is unknown or unspecified, this element may contain\ntext such as Unknown or\nAnonymous. When the appropriate TEI modules are\nin use, it may also contain detailed tagging of the names used for people, organizations or\nplaces, in particular where  multiple names are given.","title":"<a href=\"ref/author\">author</a>","tag":"reference"}
{"content":"contains a secondary statement of responsibility for a bibliographic item, for example the name of an\n    individual, institution or organization, (or of several such) acting as editor, compiler,\n    translator, etc. Elements common to all TEI documents A consistent format should be adopted. Particularly where cataloguing is likely to be based on the content of the header, it is\n      advisable to use generally recognized authority lists for the exact form of personal names.\n    ","title":"<a href=\"ref/editor\">editor</a>","tag":"reference"}
{"content":"supplies a statement of responsibility for the intellectual content of a text, edition,\n    recording, or series, where the specialized elements for authors, editors, etc. do not suffice\n    or do not apply. May also be used to encode information about individuals or organizations \n    which have played a role in the production or distribution of a bibliographic work. Elements common to all TEI documents","title":"<a href=\"ref/respStmt\">respStmt</a>","tag":"reference"}
{"content":"contains a phrase describing the nature of a person's intellectual responsibility, or an organization's role \n    in the production or distribution of a work. Elements common to all TEI documents The attribute ref, inherited from the class att.canonical may be used to indicate the kind of responsibility in a normalized\n      form by referring directly to a\n      standardized list of responsibility types, such as that maintained by a naming authority, for\n      example the list maintained at 1 \n      for bibliographic usage.","title":"<a href=\"ref/resp\">resp</a>","tag":"reference"}
{"content":"contains a title for any kind of work. Elements common to all TEI documents indicates the bibliographic level for a title, that is, whether\n                                        it identifies an article, book, journal, series, or\n                                        unpublished material. classifies the title according to some convenient typology. The attributes key and ref, inherited from the class\n                                        att.canonical may be used to\n                              indicate the canonical form for the title; the former, by supplying\n                              (for example) the identifier of a record in some external library\n                              system; the latter by pointing to an XML element somewhere containing\n                              the canonical form of the title.","title":"<a href=\"ref/title\">title</a>","tag":"reference"}
{"content":"contains the formalized descriptive title for a meeting or conference, for use in a\n    bibliographic description for an item derived from such a meeting, or as a heading or preamble\n    to publications emanating from it. Elements common to all TEI documents","title":"<a href=\"ref/meeting\">meeting</a>","tag":"reference"}
{"content":"groups information relating to the publication or distribution\n        of a bibliographic item. Elements common to all TEI documents","title":"<a href=\"ref/imprint\">imprint</a>","tag":"reference"}
{"content":"provides the name of the organization responsible for the publication or distribution of a\n        bibliographic item. Elements common to all TEI documents Use the full form of the name by which a company is usually referred to,\n            rather than any abbreviation of it which may appear on a title page","title":"<a href=\"ref/publisher\">publisher</a>","tag":"reference"}
{"content":"defines the scope of a bibliographic reference, for\n    example as a list of page numbers, or a named subdivision of a larger work. Elements common to all TEI documents When a single page is being cited, use the from and to attributes with\n      an identical value. When no clear endpoint is provided, the from attribute may be\n      used without to; for example a citation such as p. 3ff might be encoded\n        <biblScope from=\"3\">p. 3ff</biblScope>. It is now considered good practice to supply this element as a sibling (rather than a child)\n      of imprint, since it supplies information which does not constitute part of the\n      imprint. ","title":"<a href=\"ref/biblScope\">biblScope</a>","tag":"reference"}
{"content":"defines the range of cited content, often represented by pages or other units Elements common to all TEI documents When a single page is being cited, use the from and to attributes with\n      an identical value. When no clear endpoint is provided, the from attribute may be\n      used without to; for example a citation such as p. 3ff might be encoded\n      <citedRange from=\"3\">p. 3ff</citedRange>.","title":"<a href=\"ref/citedRange\">citedRange</a>","tag":"reference"}
{"content":"contains the name of the place where a bibliographic item was published. Elements common to all TEI documents","title":"<a href=\"ref/pubPlace\">pubPlace</a>","tag":"reference"}
{"content":"contains a loosely-structured bibliographic citation of which the sub-components may or may\n    not be explicitly tagged. Elements common to all TEI documents Contains phrase-level elements, together with any combination of elements from the\n      model.biblPart class","title":"<a href=\"ref/bibl\">bibl</a>","tag":"reference"}
{"content":"contains a structured bibliographic citation, in which only bibliographic sub-elements\n    appear and in a specified order. Elements common to all TEI documents","title":"<a href=\"ref/biblStruct\">biblStruct</a>","tag":"reference"}
{"content":"contains or references some other bibliographic item which is related to the present one in\n    some specified manner, for example as a constituent or alternative version of it. Elements common to all TEI documents points to the related bibliographic element by means of an\n      absolute or relative URI reference If the target attribute is used to reference\n  the related bibliographic item, the element must be\n  empty.","title":"<a href=\"ref/relatedItem\">relatedItem</a>","tag":"reference"}
{"content":"contains a list of bibliographic citations of any kind. Elements common to all TEI documents","title":"<a href=\"ref/listBibl\">listBibl</a>","tag":"reference"}
{"content":"contains a single, possibly incomplete, line of verse. Elements common to all TEI documents","title":"<a href=\"ref/l\">l</a>","tag":"reference"}
{"content":"contains an individual speech in a performance text, or a passage presented as such in a prose or\n    verse text. Elements common to all TEI documents The who attribute on this element may be used either in addition to the\n        speaker element or as an alternative.","title":"<a href=\"ref/sp\">sp</a>","tag":"reference"}
{"content":"contains a specialized form of heading or label, giving the name of one or more speakers in a\n        dramatic text or fragment. Elements common to all TEI documents Cet élément est utilisé pour indiquer quel personnage prend la parole dans une pièce de\n            théâtre ; l'attribut who est utilisé pour pointer vers un autre élément qui fournit des\n            informations sur ce personnage. L'un et ou l'autre peuvent être utilisés.","title":"<a href=\"ref/speaker\">speaker</a>","tag":"reference"}
{"content":"contains one or more verse lines functioning as a formal unit, e.g. a stanza, refrain,\n        verse paragraph, etc. Elements common to all TEI documents contains verse lines or nested line groups only, possibly prefixed by a\n            heading.","title":"<a href=\"ref/lg\">lg</a>","tag":"reference"}
{"content":"contains a single TEI-conformant document, combining\n    a single TEI header with one or more members of the model.resource class. Multiple TEI\n    elements may be combined within a TEI (or teiCorpus) element. Default text structure specifies the version number of the TEI Guidelines against\n      which this document is valid. This element is required. It is customary to specify the TEI\n    namespace http://www.tei-c.org/ns/1.0 on\n    it, for example: TEI version=\"4.4.0\"\n    xml:lang=\"it\" xmlns=\"http://www.tei-c.org/ns/1.0\".","title":"<a href=\"ref/TEI\">TEI</a>","tag":"reference"}
{"content":"contains the whole of a TEI encoded corpus, comprising a single corpus header and one or\n    more TEI elements, each containing a single text header and a text. Elements common to all TEI documents specifies the version number of the TEI Guidelines against\n        which this document is valid. Should contain one TEI header for the corpus, and\n    a series of TEI elements, one for each text.","title":"<a href=\"ref/teiCorpus\">teiCorpus</a>","tag":"reference"}
{"content":"contains any kind of stage direction within a dramatic text or fragment. Elements common to all TEI documents indicates the kind of stage direction. The who attribute may be used to indicate more\nprecisely the person or persons participating in the action described\nby the stage direction.","title":"<a href=\"ref/stage\">stage</a>","tag":"reference"}
{"content":"contains a single text of any kind, whether unitary or composite, for example a poem or\n    drama, a collection of essays, a novel, a dictionary, or a corpus sample. Default text structure This element should not be used to represent a text which is inserted at an arbitrary point\n      within the structure of another, for example as in an embedded or quoted narrative; the\n        floatingText is provided for this purpose.","title":"<a href=\"ref/text\">text</a>","tag":"reference"}
{"content":"contains the body of a composite text, grouping together a sequence of distinct texts (or\n    groups of such texts) which are regarded as a unit for some purpose, for example the collected\n    works of an author, a sequence of prose essays, etc. Default text structure","title":"<a href=\"ref/group\">group</a>","tag":"reference"}
{"content":"contains a single text of any kind, whether unitary or composite, which interrupts the text\n    containing it at any point and after which the surrounding text resumes. Default text structure A floating text has the same content as any other text\n    and may thus be interrupted by another floating text, or contain a\n    group of tesselated texts.","title":"<a href=\"ref/floatingText\">floatingText</a>","tag":"reference"}
{"content":"contains the whole body of a single unitary text, excluding any front or back matter. Default text structure","title":"<a href=\"ref/body\">body</a>","tag":"reference"}
{"content":"contains a subdivision of the front, body, or back of a text. Default text structure","title":"<a href=\"ref/div\">div</a>","tag":"reference"}
{"content":"contains a first-level subdivision of the front, body, or back of a text. Default text structure any sequence of low-level structural elements, possibly grouped into lower\n    subdivisions.","title":"<a href=\"ref/div1\">div1</a>","tag":"reference"}
{"content":"contains a second-level subdivision of the front, body, or back of a\n  text. Default text structure any sequence of low-level structural elements, possibly grouped\n    into lower subdivisions.","title":"<a href=\"ref/div2\">div2</a>","tag":"reference"}
{"content":"contains a third-level subdivision of the front, body, or back of a text. Default text structure any sequence of low-level structural elements, possibly grouped into lower\n    subdivisions.","title":"<a href=\"ref/div3\">div3</a>","tag":"reference"}
{"content":"contains a fourth-level subdivision of the front, body, or back of a text. Default text structure any sequence of low-level structural elements, possibly grouped into lower\n    subdivisions.","title":"<a href=\"ref/div4\">div4</a>","tag":"reference"}
{"content":"contains a fifth-level subdivision of the front, body, or back of a text. Default text structure any sequence of low-level structural elements, possibly grouped into lower\n    subdivisions.","title":"<a href=\"ref/div5\">div5</a>","tag":"reference"}
{"content":"indicates the location at which a textual division generated\n        automatically by a text-processing application is to appear. Elements common to all TEI documents specifies what type of generated text division (e.g. index,\n                table of contents, etc.) is to appear. This element is intended primarily for use in document\n            production or manipulation, rather than in the transcription of\n            pre-existing materials; it makes it easier to specify the location of\n            indices, tables of contents, etc., to be generated by text preparation\n            or word processing software.\n         One use for this element is to allow document preparation\n            software to generate an index and insert it in the appropriate place in\n            the output.  The example below assumes that the indexName            \n            attribute on index elements in the text has been used to specify index\n            entries for the two generated indexes, named NAMES and THINGS:","title":"<a href=\"ref/divGen\">divGen</a>","tag":"reference"}
{"content":"contains a sixth-level subdivision of the front, body, or back of a text. Default text structure any sequence of low-level structural elements, possibly grouped into lower\n    subdivisions.","title":"<a href=\"ref/div6\">div6</a>","tag":"reference"}
{"content":"contains the smallest possible subdivision of the front, body or back of a text, larger than\n    a paragraph. Default text structure any sequence of low-level structural elements, e.g., paragraphs (p),\n      lists (list), or examples (eg or egXML).","title":"<a href=\"ref/div7\">div7</a>","tag":"reference"}
{"content":"contains a closing title or footer appearing at the end of a division of a text. Default text structure","title":"<a href=\"ref/trailer\">trailer</a>","tag":"reference"}
{"content":"contains the primary statement of responsibility given for a work\non its title page or at the head or end of the work. Default text structure The byline on a title page may include either the name\nor a description for the document's author. Where the name is included,\nit may optionally be tagged using the docAuthor element.","title":"<a href=\"ref/byline\">byline</a>","tag":"reference"}
{"content":"contains a brief description of the place, date, time, etc. of production of a letter,\n    newspaper story, or other work, prefixed or suffixed to it as a kind of heading or trailer. Default text structure","title":"<a href=\"ref/dateline\">dateline</a>","tag":"reference"}
{"content":"contains a formal list or prose description of the topics addressed by\n\ta subdivision of a text. Default text structure","title":"<a href=\"ref/argument\">argument</a>","tag":"reference"}
{"content":"contains a quotation, anonymous or attributed, appearing at\n  the start or end of a section or on a title page. Default text structure","title":"<a href=\"ref/epigraph\">epigraph</a>","tag":"reference"}
{"content":"groups together salutations, datelines, and similar phrases appearing as a final group at\n    the end of a division, especially of a letter. Default text structure","title":"<a href=\"ref/closer\">closer</a>","tag":"reference"}
{"content":"groups together dateline, byline, salutation, and similar phrases appearing as a preliminary\n    group at the start of a division, especially of a letter. Default text structure","title":"<a href=\"ref/opener\">opener</a>","tag":"reference"}
{"content":"contains a salutation or greeting prefixed to a foreword, dedicatory epistle, or other\n    division of a text, or the salutation in the closing of a letter, preface, etc. Default text structure","title":"<a href=\"ref/salute\">salute</a>","tag":"reference"}
{"content":"contains the closing salutation, etc., appended to a foreword,\ndedicatory epistle, or other division of a text. Default text structure","title":"<a href=\"ref/signed\">signed</a>","tag":"reference"}
{"content":"contains the title page of a text, appearing within the front or back matter. Default text structure classifies the title page according to any convenient typology.","title":"<a href=\"ref/titlePage\">titlePage</a>","tag":"reference"}
{"content":"contains a postscript, e.g. to a letter. Default text structure","title":"<a href=\"ref/postscript\">postscript</a>","tag":"reference"}
{"content":"contains the title of a document, including all its\nconstituents, as given on a title page. Default text structure","title":"<a href=\"ref/docTitle\">docTitle</a>","tag":"reference"}
{"content":"contains a subsection or division of the title of a work, as\nindicated on a title page. Default text structure specifies the role of this subdivision of the title.","title":"<a href=\"ref/titlePart\">titlePart</a>","tag":"reference"}
{"content":"contains the name of the author of the document, as given on the\ntitle page (often but not always contained in a byline). Default text structure The document author's name often occurs within a byline, but\n    the docAuthor element may be used whether the\n    byline element is used or not. It should be used only for\n    the author(s) of the entire document, not for author(s) of any\n    subset or part of it. (Attributions of authorship of a subset or\n    part of the document, for example of a chapter in a textbook or an\n    article in a newspaper, may be encoded with byline\n    without docAuthor.)","title":"<a href=\"ref/docAuthor\">docAuthor</a>","tag":"reference"}
{"content":"contains a formal statement authorizing the publication of a work, sometimes required to\n    appear on a title page or its verso. Default text structure","title":"<a href=\"ref/imprimatur\">imprimatur</a>","tag":"reference"}
{"content":"contains an edition statement as presented on a title page of a\ndocument. Default text structure Cf. the edition element of bibliographic\ncitation.  As usual, the shorter name has been given to the\nmore frequent element.","title":"<a href=\"ref/docEdition\">docEdition</a>","tag":"reference"}
{"content":"contains the imprint statement (place and date of publication,\npublisher name), as given\n(usually) at the foot of a title page. Default text structure Cf. the imprint element of bibliographic\ncitations.  As with title, author, and editions, the shorter name is\nreserved for the element likely to be used more often. Imprints may be somewhat more complex:\n ","title":"<a href=\"ref/docImprint\">docImprint</a>","tag":"reference"}
{"content":"contains the date of a document, as given\non a title page or in a dateline. Default text structure gives the value of the date in standard form, i.e. YYYY-MM-DD. Cf. the general date element in the core tag set.\nThis specialized element is provided for convenience in marking and\nprocessing the date of the documents, since it is likely to require\nspecialized handling for many applications. It should be used only for\nthe date of the entire document, not for any subset or part of it.","title":"<a href=\"ref/docDate\">docDate</a>","tag":"reference"}
{"content":"contains any prefatory matter\n  (headers, abstracts, title page, prefaces, dedications, etc.) found at the\n  start of a document, before the main body. Default text structure Because cultural conventions differ as to which elements are grouped as\n    front matter and which as back matter, the content models for the\n    front and back elements are identical.","title":"<a href=\"ref/front\">front</a>","tag":"reference"}
{"content":"contains any appendixes, etc. following the main part\n  of a text. Default text structure Because cultural conventions differ as to which elements are grouped as back matter and which\n    as front matter, the content models for the back and front elements are\n    identical.","title":"<a href=\"ref/back\">back</a>","tag":"reference"}
{"content":"represents a glyph, or a non-standard character. Character and glyph documentation points to a description of the character or glyph intended. The name g is short for gaiji, which is the Japanese term for a\n      non-standardized character or glyph. This example points to a glyph element with the identifier ctlig like\n      the following:  ","title":"<a href=\"ref/g\">g</a>","tag":"reference"}
{"content":"provides information about nonstandard characters and glyphs. Character and glyph documentation","title":"<a href=\"ref/charDecl\">charDecl</a>","tag":"reference"}
{"content":"provides descriptive information about a character. Character and glyph documentation","title":"<a href=\"ref/char\">char</a>","tag":"reference"}
{"content":"provides descriptive information about a character\n  glyph. Character and glyph documentation","title":"<a href=\"ref/glyph\">glyph</a>","tag":"reference"}
{"content":"provides a locally defined character (or glyph) property. Character and glyph documentation No definitive list of local names is proposed. However, the name entity is recommended as a means of naming the property identifying the recommended\n            character entity name for this character or glyph.","title":"<a href=\"ref/localProp\">localProp</a>","tag":"reference"}
{"content":"holds the name and value of a normative or\n        informative Unihan character (or glyph) property as part of its attributes. Character and glyph documentation specifies the normalized name of a unicode\n                han database (Unihan) property specifies the value of a named Unihan\n                property A definitive list of current Unihan property names is provided in the Unicode Han Database.","title":"<a href=\"ref/unihanProp\">unihanProp</a>","tag":"reference"}
{"content":"contains one or more\n\t characters which are related to the parent character or glyph\n\t in some respect, as specified by the type\n\t attribute.\n Character and glyph documentation Suggested values for the type attribute include\nexact for exact equivalences, uppercase\nfor uppercase equivalences, lowercase   for lowercase equivalences,\nand simplified  for simplified characters. The\n\t g elements contained by this element can  point to either another\n\t char or glyphelement or contain a character\n\t that is intended to be the target of this mapping.","title":"<a href=\"ref/mapping\">mapping</a>","tag":"reference"}
{"content":"provides attributes for defining the properties of\n        non-standard characters or glyphs.  Character and glyph documentation provides the name of the character or glyph\n                property being defined. provides the value of the character or\n                glyph property being defined. specifies the version number of the Unicode\n                Standard in which this property name is defined.","title":"<a href=\"ref/att.gaijiProp\">att.gaijiProp</a>","tag":"reference"}
{"content":"provides a Unicode property for a character (or\n        glyph). Character and glyph documentation specifies the normalized name of a Unicode\n                property. specifies the value of a named Unicode\n                property. A definitive list of current Unicode property names is provided in The Unicode\n            Standard.","title":"<a href=\"ref/unicodeProp\">unicodeProp</a>","tag":"reference"}
{"content":"documents the notation employed to represent a metrical pattern when this is specified as\n    the value of a met, real, or rhyme attribute on any structural\n    element of a metrical text (e.g. lg, l, or seg). Verse structures indicates whether the notation conveys the abstract metrical form, its actual prosodic\n        realization, or the rhyme scheme, or some combination thereof. specifies a regular expression defining any value that is legal for this notation. The encoder may choose whether to define the notation formally or informally.\n      However, the two methods may not be mixed. That is, metDecl may contain either a\n      sequence of metSym elements or, alternately, a series of paragraphs or other\n      components. If the pattern attribute is specified and metSym elements are\n      used, then all the codes appearing within the pattern attribute should be\n      documented. Only usable within the header if the verse module is used. This example is intended for the far more restricted case typified by the Shakespearean\n      iambic pentameter. Only metrical patterns containing exactly ten syllables, alternately\n      stressed and unstressed, (except for the first two which may be in either order) to each\n      metrical line can be expressed using this notation.","title":"<a href=\"ref/metDecl\">metDecl</a>","tag":"reference"}
{"content":"defines a set of attributes that certain elements may use to\nrepresent metrical information. Verse structures contains a user-specified encoding for the conventional\nmetrical structure of the element. contains a user-specified encoding for the actual realization\nof the conventional metrical structure applicable to the element. specifies the rhyme scheme applicable to a group of verse lines.","title":"<a href=\"ref/att.metrical\">att.metrical</a>","tag":"reference"}
{"content":"provides attributes that may be used to indicate\n    enjambement of the parent element. Verse structures indicates that the end of a verse line is marked by enjambement.","title":"<a href=\"ref/att.enjamb\">att.enjamb</a>","tag":"reference"}
{"content":"documents the intended significance of a particular character or character sequence within a\n    metrical notation, either explicitly or in terms of other metSym elements in the same metDecl. Verse structures specifies the character or character sequence being documented. specifies whether the symbol is defined in terms of other symbols (terminal\n        is set to false) or in prose (terminal is set to true).","title":"<a href=\"ref/metSym\">metSym</a>","tag":"reference"}
{"content":"marks the point at which a metrical line may be divided. Verse structures","title":"<a href=\"ref/caesura\">caesura</a>","tag":"reference"}
{"content":"contains the prologue to a drama, typically spoken by an actor out of character, possibly in\n    association with a particular performance or venue. Performance texts","title":"<a href=\"ref/prologue\">prologue</a>","tag":"reference"}
{"content":"marks the rhyming part of a metrical line. Verse structures provides a label\n      (usually a single letter) to identify which part of a rhyme scheme this rhyming string\n        instantiates.","title":"<a href=\"ref/rhyme\">rhyme</a>","tag":"reference"}
{"content":"contains a description of the setting, time, locale, appearance, etc., of the action of a\n    play, typically found in the front matter of a printed performance text (not a stage direction). Performance texts Contains paragraphs or phrase level tags. This element should not be used outside the front or back matter; for similar contextual descriptions\n      within the body of the text, use the stage element.","title":"<a href=\"ref/set\">set</a>","tag":"reference"}
{"content":"contains the epilogue to a drama, typically spoken by an actor out of character, possibly in\n    association with a particular performance or venue. Performance texts Contains optional headings, a sequence of one or more component-level\n      elements, and an optional sequence of closing material. ","title":"<a href=\"ref/epilogue\">epilogue</a>","tag":"reference"}
{"content":"contains a section of front or back matter describing how a dramatic piece is to be\n    performed in general or how it was performed on some specific occasion. Performance texts contains paragraphs and an optional cast list only. ","title":"<a href=\"ref/performance\">performance</a>","tag":"reference"}
{"content":"contains a single cast list or dramatis personae. Performance texts","title":"<a href=\"ref/castList\">castList</a>","tag":"reference"}
{"content":"groups one or more individual castItem\nelements within a cast list. Performance texts The rend attribute may be used, as here, to indicate\nwhether the grouping is indicated by a brace, whitespace, font change,\netc.  Note that in this example the role description friends of\nMathias is understood to apply to both roles equally. ","title":"<a href=\"ref/castGroup\">castGroup</a>","tag":"reference"}
{"content":"contains a description\n    of the actions related to one act of correspondence. The TEI header","title":"<a href=\"ref/correspDesc\">correspDesc</a>","tag":"reference"}
{"content":"describes a character's role in a drama. Performance texts","title":"<a href=\"ref/roleDesc\">roleDesc</a>","tag":"reference"}
{"content":"contains text reproduced although apparently incorrect or inaccurate. Elements common to all TEI documents","title":"<a href=\"ref/sic\">sic</a>","tag":"reference"}
{"content":"contains the name of an actor appearing within a cast list. Performance texts This element should be used only to mark the name of the actor as\n    given in the source. Chapter 13 Names, Dates, People, and Places discusses ways of\n    marking the components of names, and also of associating names with\n    biographical information about a person. ","title":"<a href=\"ref/actor\">actor</a>","tag":"reference"}
{"content":"contains a group of speeches or songs in a performance text presented\n  in a source as constituting a single unit or\n  number. Performance texts","title":"<a href=\"ref/spGrp\">spGrp</a>","tag":"reference"}
{"content":"marks the actual movement of one or more characters. Performance texts characterizes the movement, for example as an entrance or exit. specifies the direction of a stage movement. identifies the\n      performance or performances in which this movement occurred as\n      specified by pointing to one or more performance elements.","title":"<a href=\"ref/move\">move</a>","tag":"reference"}
{"content":"describes the visual context of some part of a screen play in\nterms of what the spectator sees, generally independent of any\ndialogue. Performance texts A view is a particular form of stage direction.","title":"<a href=\"ref/view\">view</a>","tag":"reference"}
{"content":"describes a particular camera angle or viewpoint in a screen play. Performance texts","title":"<a href=\"ref/camera\">camera</a>","tag":"reference"}
{"content":"describes a sound effect or musical sequence specified within a screen play or radio script. Performance texts categorizes the sound in some respect, e.g. as music, special effect, etc. indicates whether the sound overlaps the surrounding speeches or interrupts them. A specialized form of stage direction.","title":"<a href=\"ref/sound\">sound</a>","tag":"reference"}
{"content":"contains the text of a caption or other text displayed as part of\na film script or screenplay. Performance texts A specialized form of stage direction.","title":"<a href=\"ref/caption\">caption</a>","tag":"reference"}
{"content":"contains a citation giving details of the script used for\na spoken text. Transcribed Speech","title":"<a href=\"ref/scriptStmt\">scriptStmt</a>","tag":"reference"}
{"content":"describes a set of recordings used as the basis for transcription of a\nspoken text. Transcribed Speech","title":"<a href=\"ref/recordingStmt\">recordingStmt</a>","tag":"reference"}
{"content":"describes a special-purpose stage direction that is not\nmeant for the actors. Performance texts categorizes the technical stage direction. points to one or\n      more performance elements documenting the performance or performances to which this\ntechnical direction applies.","title":"<a href=\"ref/tech\">tech</a>","tag":"reference"}
{"content":"provides technical details of the equipment and media used for\nan audio or video recording used as the source for a spoken text. Transcribed Speech","title":"<a href=\"ref/equipment\">equipment</a>","tag":"reference"}
{"content":"provides details of an audio or video recording event\nused as the source of a spoken text, either directly or from\na public broadcast. Transcribed Speech the kind of recording. The dur attribute is used to indicate the original\n    duration of the recording.","title":"<a href=\"ref/recording\">recording</a>","tag":"reference"}
{"content":"describes a broadcast used as the source of a spoken text. Transcribed Speech","title":"<a href=\"ref/broadcast\">broadcast</a>","tag":"reference"}
{"content":"describes the set of transcription conventions used, particularly for spoken material. Transcribed Speech supplies an identifier for the encoding convention,  independent of any version number. supplies a version number for the encoding conventions\n                used, if any.","title":"<a href=\"ref/transcriptionDesc\">transcriptionDesc</a>","tag":"reference"}
{"content":"marks a pause either between or within utterances. Transcribed Speech","title":"<a href=\"ref/pause\">pause</a>","tag":"reference"}
{"content":"marks any vocalized but not necessarily lexical phenomenon, for\n  example voiced pauses, non-lexical backchannels, etc. Transcribed Speech indicates whether or not the phenomenon is repeated.","title":"<a href=\"ref/vocal\">vocal</a>","tag":"reference"}
{"content":"contains a stretch of speech usually preceded and followed by\nsilence or by a change of speaker. Transcribed Speech indicates the nature of the transition between this utterance\n          and the previous one. Prose and a mixture of speech\nelements Although individual transcriptions may consistently use\nu elements for turns or other units, and although in most\ncases a u will be delimited by pause or change of speaker,\nu is not required to represent a turn or any communicative\nevent, nor to be bounded by pauses or change of speaker.  At a minimum,\na u is some phonetic production by a given speaker.","title":"<a href=\"ref/u\">u</a>","tag":"reference"}
{"content":"marks any communicative phenomenon, not necessarily vocalized, for\n  example a gesture, frown, etc. Transcribed Speech indicates whether or not the phenomenon is\n      repeated.","title":"<a href=\"ref/kinesic\">kinesic</a>","tag":"reference"}
{"content":"marks any phenomenon or occurrence, not necessarily vocalized or\ncommunicative, for example incidental noises or other events affecting\ncommunication. Transcribed Speech","title":"<a href=\"ref/incident\">incident</a>","tag":"reference"}
{"content":"marks the point at which some paralinguistic feature of a series of\nutterances by any one speaker changes. Transcribed Speech a\nparalinguistic feature. specifies the new state of the paralinguistic feature specified. The word Elizabeth is spoken loudly, the words Yes and\nCome and try this with normal volume, and the words come on\nvery loudly.","title":"<a href=\"ref/shift\">shift</a>","tag":"reference"}
{"content":"contains a passage of written text revealed to participants in the\n  course of a spoken text. Transcribed Speech indicates whether the writing is revealed all at once or\n\tgradually. The writing element will usually be short\n    and most simply transcribed as a character string; the content\n    model also allows a sequence of paragraphs and paragraph-level\n    elements, in case the writing has enough internal structure to\n    warrant such markup.  In either case the usual phrase-level\n    tags for written text are available.","title":"<a href=\"ref/writing\">writing</a>","tag":"reference"}
{"content":"groups together various annotations, e.g.\n  for parallel interpretations of a spoken segment. Transcribed Speech","title":"<a href=\"ref/annotationBlock\">annotationBlock</a>","tag":"reference"}
{"content":"groups elements structurally analogous to paragraphs within spoken texts. Transcribed Speech Spoken texts may be structured in many ways; elements in this class are typically larger\n      units such as turns or utterances. ","title":"<a href=\"ref/model.divPart.spoken\">model.divPart.spoken</a>","tag":"reference"}
{"content":"groups elements structurally analogous to paragraphs within dictionaries. Dictionaries","title":"<a href=\"ref/model.entryLike\">model.entryLike</a>","tag":"reference"}
{"content":"provides attributes used to distinguish \n    different styles of dictionary entries. Dictionaries indicates type of entry, in dictionaries with multiple types.","title":"<a href=\"ref/att.entryLike\">att.entryLike</a>","tag":"reference"}
{"content":"provides a set of attributes for specifying standard and normalized values, grammatical functions, alternate or equivalent forms, and information about composite parts. Dictionaries gives an expanded form of information presented more concisely in the dictionary gives the list of split values for a merged form gives a value which lacks any realization in the printed source text. indicates an anchor element typically elsewhere in the document, but possibly in another document, \n                which is the original location of this component. gives a reference to another element, where the original appears as a merged form. indicates whether the element is optional or not","title":"<a href=\"ref/att.lexicographic\">att.lexicographic</a>","tag":"reference"}
{"content":"provides attributes for describing the extent of lexical references for a dictionary term. Declarations for classes, datatypes, and macros available to all TEI modules indicates whether the pronunciation or orthography applies to all or part of a word.","title":"<a href=\"ref/att.partials\">att.partials</a>","tag":"reference"}
{"content":"groups a sequence of entries within any kind of lexical resource, such\n  as a dictionary or lexicon which function as a single unit, for\n  example a set of homographs. Dictionaries","title":"<a href=\"ref/superEntry\">superEntry</a>","tag":"reference"}
{"content":"contains a single structured entry in any kind of lexical resource, such\n  as a dictionary or lexicon. Dictionaries Like all elements, entry inherits an xml:id attribute from the class\n        global. No restrictions are placed on the method used to construct\n      xml:ids; one convenient method is to use the orthographic form of the headword,\n      appending a disambiguating number where necessary. Identification codes are sometimes included\n      on machine-readable tapes of dictionaries for in-house use.  It is recommended to use the sense element even for an entry that has only one sense \n      to group together all parts of the definition relating to the word sense since this leads to \n      more consistent encoding across entries.","title":"<a href=\"ref/entry\">entry</a>","tag":"reference"}
{"content":"groups information relating to one homograph within an entry. Dictionaries","title":"<a href=\"ref/hom\">hom</a>","tag":"reference"}
{"content":"contains a single unstructured entry in any kind of lexical\n  resource, such as a dictionary or lexicon. Dictionaries May contain any dictionary elements in any combination.","title":"<a href=\"ref/entryFree\">entryFree</a>","tag":"reference"}
{"content":"groups together all information relating to one word sense in a dictionary entry, for\n    example definitions, examples, and translation equivalents. Dictionaries gives the nesting depth of this sense. May contain character data mixed with any other elements defined in the\n      dictionary tag set.","title":"<a href=\"ref/sense\">sense</a>","tag":"reference"}
{"content":"encloses a part of a dictionary entry in which other phrase-level dictionary elements are\n        freely combined. Dictionaries May contain any dictionary elements in any combination. This element is used to mark part of a dictionary entry in which lower level dictionary\n            elements appear, but which does not itself form an identifiable structural unit.","title":"<a href=\"ref/dictScrap\">dictScrap</a>","tag":"reference"}
{"content":"groups all the information on the written and spoken forms of one headword. Dictionaries classifies form as simple, compound, etc. (from TLFi)","title":"<a href=\"ref/form\">form</a>","tag":"reference"}
{"content":"gives the orthographic form of a dictionary headword. Dictionaries gives the type of spelling.","title":"<a href=\"ref/orth\">orth</a>","tag":"reference"}
{"content":"contains the pronunciation(s) of the word. Dictionaries The values used to\nspecify the notation may be taken from any appropriate project-defined\nlist of values. Typical values might be IPA,\nMurray, for example.","title":"<a href=\"ref/pron\">pron</a>","tag":"reference"}
{"content":"contains a hyphenated form of a dictionary headword, or hyphenation information in some\n    other form. Dictionaries","title":"<a href=\"ref/hyph\">hyph</a>","tag":"reference"}
{"content":"contains the syllabification of the headword. Dictionaries","title":"<a href=\"ref/syll\">syll</a>","tag":"reference"}
{"content":"contains the stress pattern for a dictionary headword, if given separately. Dictionaries Usually stress information is included within pronunciation information.","title":"<a href=\"ref/stress\">stress</a>","tag":"reference"}
{"content":"within an entry in a dictionary or a terminological data file, contains grammatical\n    information relating to a term, word, or form. Dictionaries classifies the grammatical information given according to some convenient typology—in\n        the case of terminological information, preferably the dictionary of data element types\n        specified in ISO 12620.","title":"<a href=\"ref/gram\">gram</a>","tag":"reference"}
{"content":"identifies the morphological gender of a lexical item, as given in the dictionary. Dictionaries May contain character data and phrase-level elements. Typical content\n            will be masculine, feminine,\n            neuter etc. This element is synonymous with gram type=\"gender\".","title":"<a href=\"ref/gen\">gen</a>","tag":"reference"}
{"content":"contains grammatical case information given by a dictionary for a given form. Dictionaries May contain character data and phrase-level elements. Typical values will be\n      of the form nominative, accusative,\n        dative, genitive, etc. This element is synonymous with gram type=\"case\". Taken from Wörterbuch der Deutschen Sprache. Veranstaltet und herausgegeben von\n          Joachim Heinrich Campe. Erster Theil. A - bis - E. (Braunschweig 1807. In der\n        Schulbuchhandlung): Das Evangelium, des Evangelii, ... \n      ","title":"<a href=\"ref/case\">case</a>","tag":"reference"}
{"content":"contains an indication of the grammatical person (1st, 2nd, 3rd, etc.) associated with a\n    given inflected form in a dictionary. Dictionaries This element is synonymous with gram type=\"person\". Taken from Wörterbuch der Deutschen Sprache. Veranstaltet und herausgegeben von\n          Joachim Heinrich Campe. Vierter Theil. S - bis - T. (Braunschweig 1810. In der\n        Schulbuchhandlung): Treffen, v. unregelm. ... du triffst, ... \n      ","title":"<a href=\"ref/per\">per</a>","tag":"reference"}
{"content":"indicates the grammatical tense associated with a given inflected form in a dictionary. Dictionaries This element is synonymous with gram type=\"tense\". Taken from Wörterbuch der Deutschen Sprache. Veranstaltet und herausgegeben von\n          Joachim Heinrich Campe. Vierter Theil. S - bis - T. (Braunschweig 1810. In der\n        Schulbuchhandlung): Treffen, v. unregelm. ... du triffst, ... \n      ","title":"<a href=\"ref/tns\">tns</a>","tag":"reference"}
{"content":"contains information about the grammatical mood of verbs (e.g. indicative, subjunctive,\n    imperative). Dictionaries This element is synonymous with gram type=\"mood\". Taken from Wörterbuch der Deutschen Sprache. Veranstaltet und herausgegeben von\n          Joachim Heinrich Campe. Vierter Theil. S - bis - T. (Braunschweig 1810. In der\n        Schulbuchhandlung): Treffen, v. unregelm. ... du triffst, ... \n      ","title":"<a href=\"ref/mood\">mood</a>","tag":"reference"}
{"content":"groups elements which provide morphological information within a dictionary entry. Dictionaries","title":"<a href=\"ref/model.morphLike\">model.morphLike</a>","tag":"reference"}
{"content":"elements adding further precision to the lexico-grammatical information\n    provided for a dictionary entry. Dictionaries","title":"<a href=\"ref/model.lexicalRefinement\">model.lexicalRefinement</a>","tag":"reference"}
{"content":"groups elements allowed within a gramGrp element in a dictionary. Dictionaries","title":"<a href=\"ref/model.gramPart\">model.gramPart</a>","tag":"reference"}
{"content":"indicates the inflectional class associated with a lexical item. Dictionaries indicates the type of indicator used to specify the inflection class, when it is\n        necessary to distinguish between the usual abbreviated indications (e.g.\n        inv) and other kinds of indicators, such as special codes referring\n        to conjugation patterns, etc. May contain character data and phrase-level elements. Typical content will be\n        invariant, n 3 etc.","title":"<a href=\"ref/iType\">iType</a>","tag":"reference"}
{"content":"groups elements allowed within a form element in a dictionary. Dictionaries","title":"<a href=\"ref/model.formPart\">model.formPart</a>","tag":"reference"}
{"content":"groups morpho-syntactic information about a lexical item, e.g. pos, gen, number, case, or\n        iType (inflectional class). Dictionaries","title":"<a href=\"ref/gramGrp\">gramGrp</a>","tag":"reference"}
{"content":"indicates the part of speech assigned to a dictionary \nheadword  such as noun, verb, or adjective. Dictionaries","title":"<a href=\"ref/pos\">pos</a>","tag":"reference"}
{"content":"contains subcategorization information (transitive/intransitive, countable/non-countable,\n        etc.) Dictionaries","title":"<a href=\"ref/subc\">subc</a>","tag":"reference"}
{"content":"contains any sequence of words that co-occur with the headword with significant frequency. Dictionaries","title":"<a href=\"ref/colloc\">colloc</a>","tag":"reference"}
{"content":"contains definition text in a dictionary entry. Dictionaries","title":"<a href=\"ref/def\">def</a>","tag":"reference"}
{"content":"encloses the etymological information in a dictionary entry. Dictionaries May contain character data mixed with any other elements defined in the\n      dictionary tag set. There is no consensus on the internal structure of etymologies, or even on whether such a\n      structure is appropriate. The etym element accordingly simply contains prose, within\n      which names of languages, cited words, or parts of words, glosses, and examples will typically\n      be prominent. The tagging of such internal objects is optional.","title":"<a href=\"ref/etym\">etym</a>","tag":"reference"}
{"content":"contains the name of a language mentioned in etymological or other linguistic discussion. Dictionaries May contain character data mixed with phrase-level elements.","title":"<a href=\"ref/lang\">lang</a>","tag":"reference"}
{"content":"contains usage information in a dictionary entry. Dictionaries classifies the usage information using any convenient typology.","title":"<a href=\"ref/usg\">usg</a>","tag":"reference"}
{"content":"contains a label for a form, example, translation, or other piece of information, e.g.\n    abbreviation for, contraction of, literally, approximately, synonyms:, etc. Dictionaries classifies the label using any convenient typology. Labels specifically relating to usage should be tagged with the special-purpose usg\n      element rather than with the genericlbl element.","title":"<a href=\"ref/lbl\">lbl</a>","tag":"reference"}
{"content":"groups elements used for purposes of location of particular orthographic or pronunciation\n    forms within a dictionary entry. Dictionaries","title":"<a href=\"ref/model.ptrLike.form\">model.ptrLike.form</a>","tag":"reference"}
{"content":"contains a phrase, sentence, or icon referring the reader to some other location in this or\n    another text. Dictionaries indicates the type of cross reference, using any convenient typology. May contain character data and phrase-level elements; usually contains a\n        ref or a ptr element. This element encloses both the actual indication of the location referred to, which may be\n      tagged using the ref or ptr elements, and any accompanying material which\n      gives more information about why the reader is being referred there.","title":"<a href=\"ref/xr\">xr</a>","tag":"reference"}
{"content":"in a dictionary example, indicates a reference to the orthographic form(s) of the headword. Dictionaries indicates the kind of typographic modification made to the headword in the reference.","title":"<a href=\"ref/oRef\">oRef</a>","tag":"reference"}
{"content":"contains a dictionary entry for a lexical item related to the headword, such as a compound\n    phrase or derived form, embedded inside a larger entry. Dictionaries May contain character data mixed with any other elements defined in the\n      dictionary tag set. Identical in sub-elements to an entry tag, and used where a dictionary has embedded\n      information inside one entry which could have formed a separate entry. Some authorities\n      distinguish related entries, run-on entries, and various other types of degenerate entries; no\n      such typology is attempted here. The following example from Webster's New Collegiate Dictionary\n        (Springfield, Mass.: G. & C. Merriam Company, 1975) shows a single related\n      entry for which no definition is given, since its meaning is held to be readily derivable from\n      the root entry:","title":"<a href=\"ref/re\">re</a>","tag":"reference"}
{"content":"in a dictionary example, indicates a reference to the pronunciation(s) of the headword. Dictionaries","title":"<a href=\"ref/pRef\">pRef</a>","tag":"reference"}
{"content":"contains a description of a single identifiable\n    manuscript or other text-bearing object such as an early printed book. Manuscript Description Although the msDesc has primarily been designed with a view to encoding manuscript descriptions, it may also be \n      used for other objects such as early printed books, fascicles, epigraphs, or any text-bearing objects that require substantial description. \n      If an object is not text-bearing or the reasons for describing the object is not primarily the textual content, the more general object may be \n      more suitable.","title":"<a href=\"ref/msDesc\">msDesc</a>","tag":"reference"}
{"content":"contains a dimensional specification. Manuscript Description indicates which aspect of the object is being measured. Contains no more than one of each of the specialized elements\n    used to express a three-dimensional object's height, width, and\n    depth, combined with any number of other kinds of dimensional\n    specification.","title":"<a href=\"ref/dimensions\">dimensions</a>","tag":"reference"}
{"content":"describes the system used to ensure\ncorrect ordering of the quires or similar making up a codex, incunable, or other object \ntypically by means of annotations at the foot of the page. Manuscript Description","title":"<a href=\"ref/catchwords\">catchwords</a>","tag":"reference"}
{"content":"contains any single measurement forming part of a dimensional\nspecification of some sort. Manuscript Description The specific elements width, height, and\ndepth should be used in preference to this generic element\nwherever appropriate.","title":"<a href=\"ref/dim\">dim</a>","tag":"reference"}
{"content":"contains a measurement measured along the axis at a right angle to the bottom of the object. Manuscript Description","title":"<a href=\"ref/height\">height</a>","tag":"reference"}
{"content":"contains a measurement from the front to the back of an object, perpendicular to the measurement given by the width element. Manuscript Description","title":"<a href=\"ref/depth\">depth</a>","tag":"reference"}
{"content":"contains a measurement of an object along the axis parallel to its bottom, e.g. perpendicular to the spine of a book or codex. Manuscript Description If  used to specify the depth of a non text-bearing\nportion of some object, for example a monument, this element\nconventionally refers to the axis\nfacing the observer, and perpendicular to that indicated by the\ndepth axis.","title":"<a href=\"ref/width\">width</a>","tag":"reference"}
{"content":"defines a location within a manuscript, manuscript part, or other object typically \n    as a (possibly discontinuous) sequence of folio references. Manuscript Description identifies the foliation scheme in terms of which the location is being\n        specified by pointing to some foliation element\n\tdefining it, or to some other equivalent resource. specifies the\n      starting point of the location in a normalized form, typically a\n      page number. specifies the\n      end-point of the location in a normalized form, typically as a\n      page number. The target attribute should only be used to point to\n    elements that contain or indicate a transcription of the locus\n    being described, as in the Ben Jonson example. To associate a locus element with a page image or\n    other comparable representation, the global facs\n    attribute should be used, as shown in the Birds Praise of\n    Love example. The facs attribute may be used to\n    indicate one or more image files, as in that example, or\n    alternatively it may point to one or more appropriate XML\n    elements, such as the surface, zone,\n    graphic, or binaryObject elements. When a single page is being cited, use the from and\n    to attributes with an identical value. When no clear\n    endpoint is provided, the from attribute may be used\n    without to; for example a citation such as p.\n    3ff might be encoded <locus from=\"3\">p.\n    3ff</locus>.","title":"<a href=\"ref/locus\">locus</a>","tag":"reference"}
{"content":"contains a heraldic formula\nor phrase, typically found as part of a blazon, coat of arms, etc. \n Manuscript Description","title":"<a href=\"ref/heraldry\">heraldry</a>","tag":"reference"}
{"content":"groups a number of locations which together form a\n  distinct but discontinuous item within a manuscript, manuscript part, or other object. Manuscript Description identifies the foliation scheme in terms of which all the\n      locations contained by the group are specified by pointing to some foliation element\n\tdefining it, or to some other equivalent resource. ","title":"<a href=\"ref/locusGrp\">locusGrp</a>","tag":"reference"}
{"content":"contains a word or phrase describing the material of which the object being described is composed. Manuscript Description describes the\n      function or use of the material in relation to the object\n      as a whole. identifies one or more elements to which the metamark applies. The ref attribute may be used to point to one\n    or more items within a\n    taxonomy of types of material, defined either internally or\n    externally.","title":"<a href=\"ref/material\">material</a>","tag":"reference"}
{"content":"contains a word or phrase describing the type of object being referred to. Manuscript Description The ref attribute may be used to point to one\nor more items within a taxonomy of types of object, defined either internally or\nexternally.","title":"<a href=\"ref/objectType\">objectType</a>","tag":"reference"}
{"content":"contains any form of date, used to\n  identify the date of origin for a manuscript, manuscript part, or other object. Manuscript Description","title":"<a href=\"ref/origDate\">origDate</a>","tag":"reference"}
{"content":"contains any form of place name, used to identify the\nplace of origin for a manuscript, manuscript part, or other object. Manuscript Description The type attribute may be used to distinguish\ndifferent kinds of origin, for example original\nplace of publication, as opposed to original place of\nprinting.","title":"<a href=\"ref/origPlace\">origPlace</a>","tag":"reference"}
{"content":"marks the word or words taken from a fixed point in a codex \n    (typically the beginning of the second leaf) in order to provide a unique identifier for it.\n Manuscript Description","title":"<a href=\"ref/secFol\">secFol</a>","tag":"reference"}
{"content":"contains discussion of the leaf or quire signatures found within a codex or similar object. Manuscript Description","title":"<a href=\"ref/signatures\">signatures</a>","tag":"reference"}
{"content":"contains a word or phrase describing a\nstamp or similar device. Manuscript Description","title":"<a href=\"ref/stamp\">stamp</a>","tag":"reference"}
{"content":"contains the information required to identify\nthe manuscript or similar object being described. Manuscript Description","title":"<a href=\"ref/msIdentifier\">msIdentifier</a>","tag":"reference"}
{"content":"contains a word or phrase describing a\nwatermark or similar device. Manuscript Description","title":"<a href=\"ref/watermark\">watermark</a>","tag":"reference"}
{"content":"contains the name of an organization such as a university or\n  library, with which a manuscript or other object is identified, generally its holding institution. Manuscript Description","title":"<a href=\"ref/institution\">institution</a>","tag":"reference"}
{"content":"provides attributes for defining a mathematical formula. Declarations for classes, datatypes, and macros available to all TEI modules A formula is provided to describe a mathematical calculation such as a conversion between measurement systems.","title":"<a href=\"ref/att.formula\">att.formula</a>","tag":"reference"}
{"content":"contains the name of a repository within which manuscripts or other objects are stored, possibly forming part of an institution. Manuscript Description","title":"<a href=\"ref/repository\">repository</a>","tag":"reference"}
{"content":"contains any form of unstructured alternative\nname used for a manuscript or other object, such as an  ocellus\nnominum, or nickname. Manuscript Description","title":"<a href=\"ref/msName\">msName</a>","tag":"reference"}
{"content":"indicates grammatical number associated with a form, as given in a dictionary. Dictionaries This element is synonymous with gram type=\"num\".","title":"<a href=\"ref/number\">number</a>","tag":"reference"}
{"content":"contains the  colophon\nof an item: that is, a statement providing information regarding the date, place, agency, or reason for production of the manuscript or other object. Manuscript Description","title":"<a href=\"ref/colophon\">colophon</a>","tag":"reference"}
{"content":"contains information concerning the manuscript or other object's filiation, i.e. its relationship to other surviving manuscripts or other objects of the same text or contents, its protographs, antigraphs and apographs. Manuscript Description In this example, the reference to Dujchev N17 includes a\nlink to some other manuscript description which has the identifier DN17. ","title":"<a href=\"ref/filiation\">filiation</a>","tag":"reference"}
{"content":"contains the  explicit of a\nitem, that is, the closing words of the text proper, exclusive of any rubric or colophon which might follow it. Manuscript Description","title":"<a href=\"ref/explicit\">explicit</a>","tag":"reference"}
{"content":"contains the incipit of a manuscript or similar object item, that is the opening words of the text proper, exclusive of any rubric which might precede it, of sufficient length to identify the work uniquely; such incipits were, in former times, frequently used a means of reference to a work, in place of a title. Manuscript Description","title":"<a href=\"ref/incipit\">incipit</a>","tag":"reference"}
{"content":"describes the intellectual content of a manuscript, manuscript\n    part, or other object either as a series of paragraphs or as a series of structured manuscript items. Manuscript Description Unless it contains a simple prose description, this element should contain at least one of\n      the elements summary, msItem, or msItemStruct. This constraint is\n      not currently enforced by the schema.","title":"<a href=\"ref/msContents\">msContents</a>","tag":"reference"}
{"content":"contains the string of words that denotes the end of a text division, often with an assertion as to its author and title, usually set off from the text itself by red ink, by a different size or type of script, or by some other such visual device. Manuscript Description","title":"<a href=\"ref/finalRubric\">finalRubric</a>","tag":"reference"}
{"content":"describes an individual work or item within the intellectual\n  content of a manuscript, manuscript part, or other object. Manuscript Description","title":"<a href=\"ref/msItem\">msItem</a>","tag":"reference"}
{"content":"contains a structured description for an\n  individual work or item within the intellectual content of a manuscript, manuscript part, or other object. Manuscript Description","title":"<a href=\"ref/msItemStruct\">msItemStruct</a>","tag":"reference"}
{"content":"contains the text of any rubric or heading attached to a particular manuscript item, that is, a string of words through which a\nmanuscript or other object signals the beginning of a text division, often with an assertion as to its author and title, which is in some way set off from the text itself, typically in red ink, or by use of different size or type of script, or some other such visual device. Manuscript Description","title":"<a href=\"ref/rubric\">rubric</a>","tag":"reference"}
{"content":"contains an overview of the available\n  information concerning some aspect of an item or object (for example, its\nintellectual content, history, layout, typography etc.) as a\ncomplement or alternative to the  more detailed information  carried by\n  more specific elements. Manuscript Description","title":"<a href=\"ref/summary\">summary</a>","tag":"reference"}
{"content":"provides attributes used to describe excerpts from a manuscript placed in a description thereof. Manuscript Description indicates whether the passage being quoted is defective,\n      i.e. incomplete through loss or damage.","title":"<a href=\"ref/att.msExcerpt\">att.msExcerpt</a>","tag":"reference"}
{"content":"provides attributes to indicate text type or classification. Manuscript Description identifies the text types or classifications applicable to this\n            item by pointing to other elements or resources defining the\n            classification concerned. ","title":"<a href=\"ref/att.msClass\">att.msClass</a>","tag":"reference"}
{"content":"contains a full physical description of a\nmanuscript, manuscript part, or other object optionally subdivided using more\nspecialized elements from the model.physDescPart class. Manuscript Description","title":"<a href=\"ref/physDesc\">physDesc</a>","tag":"reference"}
{"content":"describes the languages and writing systems identified within the bibliographic work  \n  being described, rather than its description. Elements common to all TEI documents supplies a code which identifies the chief language used in the bibliographic work. one or more codes identifying any other languages used in the bibliographic work. This element should not be used to document the\nlanguages or writing systems used for the bibliographic or manuscript description itself: as for\nall other TEI elements, such information should be provided by means of the\nglobal xml:lang attribute attached to the element\ncontaining the description.  In all cases, languages should be identified by means of a standardized\nlanguage tag generated according to BCP 47. Additional\ndocumentation for the language may be provided by a language\nelement in the TEI header.\n","title":"<a href=\"ref/textLang\">textLang</a>","tag":"reference"}
{"content":"contains a description of the physical components making up the object which is being described. Manuscript Description a short  project-specific name identifying the physical form of\n      the carrier, for example as a codex, roll, fragment, partial leaf,\n      cutting etc.","title":"<a href=\"ref/objectDesc\">objectDesc</a>","tag":"reference"}
{"content":"groups elements describing the physical support for the written part of a manuscript or other object. Manuscript Description a short project-defined name for the material composing\n      the majority of the support","title":"<a href=\"ref/supportDesc\">supportDesc</a>","tag":"reference"}
{"content":"contains a description of the materials\netc. which make up the physical support for the written part of a manuscript or other object. Manuscript Description","title":"<a href=\"ref/support\">support</a>","tag":"reference"}
{"content":"contains a description of how the leaves, bifolia, or similar objects are physically\narranged. Manuscript Description","title":"<a href=\"ref/collation\">collation</a>","tag":"reference"}
{"content":"contains a description of the physical\ncondition of the manuscript or object. Manuscript Description","title":"<a href=\"ref/condition\">condition</a>","tag":"reference"}
{"content":"describes the numbering system or systems used to \ncount the leaves or pages in a codex or similar object. Manuscript Description","title":"<a href=\"ref/foliation\">foliation</a>","tag":"reference"}
{"content":"collects the set of layout descriptions applicable to a manuscript or other object. Manuscript Description","title":"<a href=\"ref/layoutDesc\">layoutDesc</a>","tag":"reference"}
{"content":"contains a description of all the different hands used in a manuscript or other object. Manuscript Description specifies the number of distinct hands identified within the manuscript","title":"<a href=\"ref/handDesc\">handDesc</a>","tag":"reference"}
{"content":"contains a description of the typefaces or other aspects of\n  the printing of an incunable or other printed source. Manuscript Description","title":"<a href=\"ref/typeDesc\">typeDesc</a>","tag":"reference"}
{"content":"describes how text is laid out on the\n  page or surface of the object, including information about any ruling, pricking, or other evidence of page-preparation techniques. Manuscript Description specifies the number of columns per page indicates the number of streams per page, each of which contains an independent textual stream specifies the number of ruled lines per column specifies the number of written lines per\n      column","title":"<a href=\"ref/layout\">layout</a>","tag":"reference"}
{"content":"describes a particular font or other significant typographic feature distinguished within\n    the description of a printed resource. Manuscript Description","title":"<a href=\"ref/typeNote\">typeNote</a>","tag":"reference"}
{"content":"contains a description of the scripts used in a manuscript or other object. Manuscript Description","title":"<a href=\"ref/scriptDesc\">scriptDesc</a>","tag":"reference"}
{"content":"describes a particular script distinguished within\n    the description of a manuscript or similar resource. The TEI header","title":"<a href=\"ref/scriptNote\">scriptNote</a>","tag":"reference"}
{"content":"contains description of type of musical notation. Manuscript Description","title":"<a href=\"ref/musicNotation\">musicNotation</a>","tag":"reference"}
{"content":"contains a description of the decoration of a manuscript or other object, either as in paragraphs, or as one or more decoNote elements. Manuscript Description","title":"<a href=\"ref/decoDesc\">decoDesc</a>","tag":"reference"}
{"content":"contains a note describing either a\ndecorative component of a manuscript or other object, or a fairly homogenous class of\nsuch components. Manuscript Description","title":"<a href=\"ref/decoNote\">decoNote</a>","tag":"reference"}
{"content":"contains a description of any significant additions found\nwithin a manuscript or other object, such as marginalia or other annotations. Manuscript Description","title":"<a href=\"ref/additions\">additions</a>","tag":"reference"}
{"content":"contains a description of one binding, i.e. type of covering, boards,\n    etc. applied to a manuscript or other object. Manuscript Description specifies whether or not the binding is contemporary with the majority of its\n        contents","title":"<a href=\"ref/binding\">binding</a>","tag":"reference"}
{"content":"describes the present and former bindings of a manuscript or other object, either\nas a series of paragraphs or as a series of distinct binding elements,\none for each binding of the manuscript. Manuscript Description","title":"<a href=\"ref/bindingDesc\">bindingDesc</a>","tag":"reference"}
{"content":"describes the seals or similar items related to the object described, either as a series of paragraphs or as a series of seal elements. Manuscript Description","title":"<a href=\"ref/sealDesc\">sealDesc</a>","tag":"reference"}
{"content":"contains a description of one seal or similar applied to the object described Manuscript Description specifies whether or not the seal is contemporary with the\n      item to which it is affixed","title":"<a href=\"ref/seal\">seal</a>","tag":"reference"}
{"content":" groups elements\ndescribing the full history of a manuscript, manuscript part, or other object. Manuscript Description","title":"<a href=\"ref/history\">history</a>","tag":"reference"}
{"content":"contains details of any significant additional\nmaterial which may be closely associated with the manuscript or object being\ndescribed, such as non-contemporaneous documents or fragments bound in\nwith it at some earlier historical period. Manuscript Description","title":"<a href=\"ref/accMat\">accMat</a>","tag":"reference"}
{"content":"contains any descriptive or other information\nconcerning the origin of  a manuscript, manuscript part, or other object. Manuscript Description","title":"<a href=\"ref/origin\">origin</a>","tag":"reference"}
{"content":"contains any descriptive or other information\nconcerning a single identifiable episode during the history of a manuscript, manuscript part, or other object after its creation but before its acquisition. Manuscript Description","title":"<a href=\"ref/provenance\">provenance</a>","tag":"reference"}
{"content":"groups additional information, combining\n    bibliographic information about a manuscript or other object, or surrogate copies of\nit, with curatorial or administrative information. Manuscript Description","title":"<a href=\"ref/additional\">additional</a>","tag":"reference"}
{"content":"contains information about the present\ncustody and availability of the manuscript or other object, and also about the record\ndescription itself. Manuscript Description","title":"<a href=\"ref/adminInfo\">adminInfo</a>","tag":"reference"}
{"content":"contains any descriptive or other information\nconcerning the process by which a manuscript or manuscript part or other object entered the holding\ninstitution. Manuscript Description","title":"<a href=\"ref/acquisition\">acquisition</a>","tag":"reference"}
{"content":"provides information about the source and\nrevision status of the parent manuscript or object description itself. Manuscript Description","title":"<a href=\"ref/recordHist\">recordHist</a>","tag":"reference"}
{"content":"describes the original source for the information contained with a manuscript or object description. Manuscript Description","title":"<a href=\"ref/source\">source</a>","tag":"reference"}
{"content":"describes a single event during the custodial history of a manuscript or other object. Manuscript Description","title":"<a href=\"ref/custEvent\">custEvent</a>","tag":"reference"}
{"content":"contains a description of a manuscript or other object's custodial history, either\nas running prose or as a series of dated custodial events. Manuscript Description","title":"<a href=\"ref/custodialHist\">custodialHist</a>","tag":"reference"}
{"content":"contains information about an originally\n    distinct manuscript or part of a manuscript, which is now part of a composite manuscript. Manuscript Description As this last example shows, for compatibility reasons the identifier of a manuscript part may\nbe supplied as a simple altIdentifier rather than using the\nmore structured msIdentifier element. This usage is however\ndeprecated.\n","title":"<a href=\"ref/msPart\">msPart</a>","tag":"reference"}
{"content":"contains information about a fragment described in relation to a prior context, typically as a description of a virtual reconstruction of a manuscript or other object whose fragments were catalogued separately Manuscript Description","title":"<a href=\"ref/msFrag\">msFrag</a>","tag":"reference"}
{"content":"contains information about any representations of the manuscript or other object being described which\nmay exist in the holding institution or elsewhere. Manuscript Description","title":"<a href=\"ref/surrogates\">surrogates</a>","tag":"reference"}
{"content":"contains a representation of some written source in the form of\na set of images rather than as transcribed or encoded text. Transcription of primary sources","title":"<a href=\"ref/facsimile\">facsimile</a>","tag":"reference"}
{"content":" contains a transcription or other representation of a single\n source document potentially forming part of a dossier\n génétique or collection of sources. Transcription of primary sources This element may be used as an alternative to\nfacsimile for TEI documents containing only page images, or\nfor documents containing both images and\ntranscriptions. Transcriptions may be provided within the\nsurface elements making up a source document, in parallel\nwith them as part of a text element, or in both places if\nthe encoder wishes to distinguish these two modes of transcription.","title":"<a href=\"ref/sourceDoc\">sourceDoc</a>","tag":"reference"}
{"content":"provides attributes used to express correspondence between an element and all or part of a facsimile image or surface. Transcription of primary sources points to one or more images, portions of an image, or surfaces which correspond to the current element.","title":"<a href=\"ref/att.global.facs\">att.global.facs</a>","tag":"reference"}
{"content":"provides attributes allowing its member\nelements to specify one or more states or revision campaigns with which they are\nassociated. Transcription of primary sources points to one or more change elements documenting\n      a state or revision campaign to which the element bearing this\n      attribute and its children have been assigned by the encoder.","title":"<a href=\"ref/att.global.change\">att.global.change</a>","tag":"reference"}
{"content":"defines any kind of useful grouping of written surfaces, for\n  example the recto and verso of a single leaf, which the encoder\n  wishes to treat as a single unit. Transcription of primary sources Where it is useful or meaningful to do so, any grouping of multiple\nsurface elements may be indicated using the\nsurfaceGrp elements. ","title":"<a href=\"ref/surfaceGrp\">surfaceGrp</a>","tag":"reference"}
{"content":"provides attributes that can be used to position their parent \n    element within a two dimensional coordinate system. Transcription of primary sources indicates the element within a transcription of the text\ncontaining at least the start of the writing represented by this zone\nor surface. gives the x coordinate value for the upper left corner of a\nrectangular space. gives the y coordinate value for the upper left corner of a\nrectangular space. gives the x coordinate value for the lower right corner of a\nrectangular space. gives the y coordinate value for the lower right corner of a\nrectangular space. identifies a two dimensional area by means of a series of pairs of numbers, each of which gives the x,y coordinates of a point on a line enclosing the area.","title":"<a href=\"ref/att.coordinated\">att.coordinated</a>","tag":"reference"}
{"content":"defines a written surface as a two-dimensional \ncoordinate space, optionally grouping one or more graphic representations of\nthat space, zones of interest within that space, and transcriptions of the\n  writing within them. Transcription of primary sources describes the method by which this surface is or was\n         connected to the main surface indicates whether the\n      surface is attached and folded in such a way as to provide two\n      writing surfaces The surface element  represents any two-dimensional space on\nsome physical surface forming part of the source material, such as a piece of\npaper, a face of a monument, a billboard, a scroll, a leaf etc. The coordinate space defined by this element may be thought of\n    as a grid lrx - ulx units wide and\n    uly - lry units high.  The  surface element may contain graphic representations\nor transcriptions of written zones, or both. The coordinate values used by every\n    zone element contained by this element are to be\n    understood with reference to the same grid.   Where it is useful or meaningful to do so, any grouping of multiple\nsurface elements may be indicated using the\nsurfaceGrp element.","title":"<a href=\"ref/surface\">surface</a>","tag":"reference"}
{"content":"defines any line passing through two or more points within a surface\nelement. Transcription of primary sources identifies a line \n        within the container or bounding box\n        specified by the parent element by means of\n        a series of two or more pairs of numbers, each of which \n        gives the x,y coordinates\n        of a point on the line. Although the simplest form of a path is a straight line between\n    two points, a line with more than two points may bend at any point. The order\n    of coordinates in points is significant, because the line follows\n    the coordinate sequence. To specify a closed polygon, use\n        the zone element rather than the path element. ","title":"<a href=\"ref/path\">path</a>","tag":"reference"}
{"content":"groups separate elements\n    which constitute the content of a digital resource, as opposed to its\n    metadata. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.resource\">model.resource</a>","tag":"reference"}
{"content":"defines any two-dimensional area within a surface\nelement. Transcription of primary sources indicates the amount by which this zone has been\n         rotated clockwise, with respect to the normal orientation of\n         the parent surface element as implied by the\n         dimensions given in the msDesc element or by the\n         coordinates of the surface itself. The orientation\n         is expressed in arc degrees. The position of every zone for a given surface is always\ndefined by reference to the coordinate system defined for that\nsurface.  A graphic element contained by a zone represents the whole\nof the zone. A zone may be of any shape. The attribute points may be\nused to define a polygonal zone, using the coordinate system defined\nby its parent surface. A zone is always a closed polygon. Repeating the initial coordinate\n    at the end of the sequence is optional. To encode an \n    unclosed path, use the path element. This example defines a non-rectangular zone: see the illustration\nin section 11.2.2.1 Advanced Uses of surface and zone.    ","title":"<a href=\"ref/zone\">zone</a>","tag":"reference"}
{"content":"groups elements which\n  contain the content of a digital resource and its metadata; these\n  elements may serve as the outermost or root\n  element of a TEI-conformant document Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.describedResource\">model.describedResource</a>","tag":"reference"}
{"content":"marks the beginning of a longer sequence of text added by an\n  author, scribe, annotator or corrector (see also add). Transcription of primary sources Both the beginning and the end of the added material must be\n    marked; the beginning by the addSpan element itself, the\n    end by the spanTo attribute.","title":"<a href=\"ref/addSpan\">addSpan</a>","tag":"reference"}
{"content":"marks the beginning of a longer sequence of text which is\n  damaged in some way but still legible. Transcription of primary sources Both the beginning and ending of the damaged sequence must be\n    marked: the beginning by the damageSpan element, the ending\n    by the target of the spanTo attribute: if no other\n    element available, the anchor element may be used for\n    this purpose. The damaged text must be at least partially legible, in order\n    for the encoder to be able to transcribe it. If it is not legible\n    at all, the damageSpan element should not be used. Rather, the\n    gap or unclear element should be employed, with the value of the reason attribute\n    giving the cause. See further sections 11.3.3.1 Damage, Illegibility, and Supplied Text and\n 11.3.3.2 Use of the gap, del, damage, unclear, and\n                  supplied Elements in Combination.","title":"<a href=\"ref/damageSpan\">damageSpan</a>","tag":"reference"}
{"content":"contains an area of damage to the text witness. Transcription of primary sources Since damage to text witnesses frequently makes them harder to\n    read, the damage element will often contain an\n    unclear element.  If the damaged area is not continuous\n    (e.g. a stain affecting several strings of text), the\n    group attribute may be used to group together several\n    related damage elements; alternatively the join\n    element may be used to indicate which damage and\n    unclear elements are part of the same physical\n    phenomenon. The damage, gap, del, unclear\nand supplied elements may be closely allied in use.  See\nsection 11.3.3.2 Use of the gap, del, damage, unclear, and\n                  supplied Elements in Combination for discussion of which element is\nappropriate for which circumstance.","title":"<a href=\"ref/damage\">damage</a>","tag":"reference"}
{"content":"marks the beginning of a longer sequence of text deleted,\nmarked as deleted, or otherwise signaled as superfluous or spurious by an\nauthor, scribe, annotator, or corrector. Transcription of primary sources Both the beginning and ending of the deleted sequence must be\n    marked: the beginning by the delSpan element, the ending\n    by the target of the spanTo attribute. The text deleted must be at least partially legible, in order\n    for the encoder to be able to transcribe it. If it is not legible\n    at all, the delSpan tag should not be used. Rather, the\n    gap tag should be employed to signal that text cannot be\n    transcribed, with the value of the reason attribute\n    giving the cause for the omission from the transcription as\n    deletion. If it is not fully legible, the unclear element\n    should be used to signal the areas of text which cannot be read\n    with confidence. See further sections 11.3.1.7 Text Omitted from or Supplied in the Transcription and,\n    for the close association of the delSpan tag with the\n    gap, damage, unclear and\n    supplied elements, 11.3.3.2 Use of the gap, del, damage, unclear, and\n                  supplied Elements in Combination. The delSpan tag should not be used for deletions made\n    by editors or encoders. In these cases, either the corr\n    tag or the gap tag should be used.","title":"<a href=\"ref/delSpan\">delSpan</a>","tag":"reference"}
{"content":"contains a sequence of letters added by an editor or\n  transcriber when expanding an abbreviation. Transcription of primary sources","title":"<a href=\"ref/ex\">ex</a>","tag":"reference"}
{"content":"contains one or more handNote elements documenting the\ndifferent hands identified within the source texts. Transcription of primary sources","title":"<a href=\"ref/handNotes\">handNotes</a>","tag":"reference"}
{"content":"contains a running head (e.g. a header, footer), catchword, or\n  similar material appearing on the current page. Transcription of primary sources classifies the material encoded according to some useful typology. Where running heads are consistent throughout a chapter or\n    section, it is usually more convenient to relate them to the\n    chapter or section, e.g. by use of the rend attribute.\n    The fw element is intended for cases where the running\n    head changes from page to page, or where details of page layout\n    and the internal structure of the running heads are of paramount\n    importance.","title":"<a href=\"ref/fw\">fw</a>","tag":"reference"}
{"content":"marks the beginning of a sequence of text written in a new\nhand, or the beginning of a scribal stint. Transcription of primary sources indicates a\n      handNote element describing the hand\n      concerned. The handShift element may be used either to\ndenote a shift in the document hand (as from one scribe to another,\non one writing style to another).  Or, it may indicate a shift within\na document hand, as a change of writing style, character or ink. Like\n    other milestone elements, it should appear at the point of\n    transition from some other state to the state which it describes.","title":"<a href=\"ref/handShift\">handShift</a>","tag":"reference"}
{"content":"contains a sequence of letters or signs present in an\n  abbreviation which are omitted or replaced in the expanded form of\n  the abbreviation. Transcription of primary sources","title":"<a href=\"ref/am\">am</a>","tag":"reference"}
{"content":"indicates the location of a significant space in the text. Transcription of primary sources indicates whether the space is horizontal or vertical. (responsible party) indicates the individual responsible for identifying and measuring the space This element should be used wherever it is desired to record\nan unusual space in the source text, e.g. space left for a word to be\nfilled in later, for later rubrication, etc.  It is not intended to be\nused to mark normal inter-word space or the like.","title":"<a href=\"ref/space\">space</a>","tag":"reference"}
{"content":"indicates restoration of text to an earlier state by\ncancellation of an editorial or authorial marking or instruction. Transcription of primary sources On this element, the type attribute categorizes the\n    way that the cancelled intervention has been indicated in some\n    way, for example by means of a marginal note, over-inking,\n    additional markup, etc. ","title":"<a href=\"ref/restore\">restore</a>","tag":"reference"}
{"content":"groups one or more deletions (or surplus text) with one or more additions when\n  the combination is to be regarded as a single intervention in the text. Transcription of primary sources","title":"<a href=\"ref/subst\">subst</a>","tag":"reference"}
{"content":"identifies a series of  possibly fragmented additions, deletions, or other revisions on a manuscript that combine to make up a single intervention in the text Transcription of primary sources","title":"<a href=\"ref/substJoin\">substJoin</a>","tag":"reference"}
{"content":"signifies text supplied by the transcriber or editor for any\n  reason; for example because the original cannot be read due to\n  physical damage, or because of an obvious omission by the author or scribe. Transcription of primary sources one or more words indicating why the text has had to be supplied, e.g.\n      overbinding, faded-ink, lost-folio, omitted-in-original. The damage, gap, del,\nunclear and supplied elements may be closely allied\nin use.  See section 11.3.3.2 Use of the gap, del, damage, unclear, and\n                  supplied Elements in Combination for discussion of which\nelement is appropriate for which circumstance.","title":"<a href=\"ref/supplied\">supplied</a>","tag":"reference"}
{"content":"Secluded. Marks text present in the source which the editor believes to be genuine but out of its original place (which is unknown). Transcription of primary sources one or more words indicating why this text has been secluded, e.g.\n      interpolated etc.","title":"<a href=\"ref/secl\">secl</a>","tag":"reference"}
{"content":"contains the transcription of a topographic line in the source\n   document Transcription of primary sources This element should be used only to mark up writing which\nis topographically organized as a series of lines, horizontal or\nvertical. It should not be used to mark lines of verse (for which use\nl) nor to mark linebreaks within text which has been encoded\nusing structural elements such as p (for which use\nlb).","title":"<a href=\"ref/line\">line</a>","tag":"reference"}
{"content":"marks text present in the source which the editor believes to\n  be superfluous or redundant. Transcription of primary sources one or more words indicating why this text is believed to be superfluous, e.g.\nrepeated,\n      interpolated etc.","title":"<a href=\"ref/surplus\">surplus</a>","tag":"reference"}
{"content":"groups a number of change descriptions associated \nwith either the creation of a source text or the revision of an encoded text. The TEI header indicates whether the ordering of its child change\nelements is to be considered significant or not When this element appears within the creation\nelement it documents the set of revision campaigns or stages\nidentified during the evolution of the original text. When it appears within\nthe revisionDesc element, it documents only changes made\nduring the evolution of the encoded representation of that text.","title":"<a href=\"ref/listChange\">listChange</a>","tag":"reference"}
{"content":"supplies a list of transpositions, each of which is  indicated at some point in\n   a document typically by means of metamarks. Transcription of primary sources This example might be used for a source document which indicates in\nsome way that the elements identified by ib02 and code\nib01 should be read in that order (ib02 followed by\nib01), rather than in the reading order in which they are presented in the\nsource.","title":"<a href=\"ref/listTranspose\">listTranspose</a>","tag":"reference"}
{"content":"contains or describes any kind of graphic or written signal\n   within a document the function of which is to determine how it\n   should be read rather than forming part of the actual content of\n   the document. Transcription of primary sources describes the function (for example  status, insertion,\n\t deletion, transposition) of the metamark. identifies one or more elements to which the metamark applies.","title":"<a href=\"ref/metamark\">metamark</a>","tag":"reference"}
{"content":"represents any kind of modification identified within a single document. Transcription of primary sources","title":"<a href=\"ref/mod\">mod</a>","tag":"reference"}
{"content":"indicates one or more cancelled interventions in a\n\t\t  document which have subsequently been\n\t\t  marked as reaffirmed or repeated. Transcription of primary sources points to one or more elements representing the\n\t interventions which are being reasserted. This encoding represents the following sequence of events:\n ","title":"<a href=\"ref/redo\">redo</a>","tag":"reference"}
{"content":"contains the correct form of a passage apparently erroneous in the copy text. Elements common to all TEI documents If all that is desired is to call attention to the\n      fact that the copy text has been corrected, corr may be used alone:","title":"<a href=\"ref/corr\">corr</a>","tag":"reference"}
{"content":"contains the name of a dramatic role, as given in a cast list. Performance texts It is important to assign a meaningful ID attribute to the role element, since this\n      ID is referred to by who attributes on many other elements.","title":"<a href=\"ref/role\">role</a>","tag":"reference"}
{"content":" describes a single textual transposition as an ordered list\n   of at least two pointers specifying the order in which the elements\n   indicated should be re-combined. Transcription of primary sources Transposition is usually indicated in a document by a\nmetamark such as a wavy line or numbering.  The order in which  ptr elements appear within a\ntranspose element should correspond with the desired order,\nas indicated by the metamark. The transposition recorded here indicates that the content of the element with\nidentifier ib02 should appear before the content of the\nelement with identifier ib01.","title":"<a href=\"ref/transpose\">transpose</a>","tag":"reference"}
{"content":"contains a single entry within a cast list, describing\neither a single role or a list of non-speaking roles. Performance texts characterizes the cast item.","title":"<a href=\"ref/castItem\">castItem</a>","tag":"reference"}
{"content":"contains one entry in a critical apparatus, with an optional\nlemma and usually one or more readings or notes on the relevant passage. Critical Apparatus classifies the variation contained in this element according to\nsome convenient typology. identifies the beginning of the lemma in the base text. identifies the endpoint of the lemma in the base text. indicates the location of the variation, when the\nlocation-referenced method of apparatus markup is used.","title":"<a href=\"ref/app\">app</a>","tag":"reference"}
{"content":"contains a list of apparatus entries. Critical Apparatus listApp elements would normally be located in the back part of a document,\n    but they may appear elsewhere. In the following example from the exegetical Yasna, the base text is encoded in the body of \n    the document, and two separate listApp elements are used in the back, containing \n    variant readings written in different scripts.","title":"<a href=\"ref/listApp\">listApp</a>","tag":"reference"}
{"content":"contains the lemma, or base text, of a textual variation. Critical Apparatus The term lemma is used in text criticism to describe the reading given in the\n      main text, which may be used as a heading in the apparatus itself. This usage connects it to\n      mathematics (where a lemma is a proven proposition used as a step in a proof, a \"given\") and\n      natural-language processing (where a lemma is the dictionary headword associated with an\n      inflected form in the running text). ","title":"<a href=\"ref/lem\">lem</a>","tag":"reference"}
{"content":"within a textual variation,\ngroups two or more readings perceived to have a genetic\nrelationship or other affinity. Critical Apparatus May contain readings and nested reading groups. Usually, only one lem element should appear within\n       a single apparatus entry, whether it appears outside a rdgGrp\n       element or within it.","title":"<a href=\"ref/rdgGrp\">rdgGrp</a>","tag":"reference"}
{"content":"contains a single reading within a textual variation. Critical Apparatus","title":"<a href=\"ref/rdg\">rdg</a>","tag":"reference"}
{"content":"gives further information about a particular witness, or\nwitnesses, to a particular reading. Critical Apparatus indicates the sigil\n      or sigla identifying the witness or witnesses to which the\ndetail refers. describes the type of information given about the witness. The witDetail element was formerly permitted anywhere that note\n    could appear, but since it should only be used in association with lem and\n    rdg, it is recommended that it be placed immediately following the reading that it modifies, \n    in the same app. A witDetail without a target attribute \n    should be assumed to refer to the closest preceding lem or rdg.\n    ","title":"<a href=\"ref/witDetail\">witDetail</a>","tag":"reference"}
{"content":"contains a list of one or more sigla of witnesses attesting a\ngiven reading, in a textual variation. Critical Apparatus This element represents the same  information as that provided by the\nwit attribute of the reading; it may be used to record the\nexact form of the sigla given in the source edition, when that is of\ninterest.","title":"<a href=\"ref/wit\">wit</a>","tag":"reference"}
{"content":"lists definitions for all the witnesses referred to by a critical\n  apparatus, optionally grouped hierarchically. Critical Apparatus May contain\na series of witness  or listWit elements.\n The provision of a listWit element simplifies\nthe automatic processing of the apparatus, e.g. the reconstruction\nof the readings for all witnesses from an exhaustive apparatus. Situations commonly arise where there are many more or less\nfragmentary witnesses, such that there may be quite distinct groups\nof witnesses for different parts of a text or collection of\ntexts. Such groups may be given separately, or nested within a single\nlistWit element at the beginning of the file listing all the\nwitnesses, partial and complete, for the text, with the attestation\nof fragmentary witnesses indicated within the apparatus by use of the\nwitStart and witEnd elements described in section\n12.1.5 Fragmentary Witnesses. Note however that a given witness can only be defined once, and can\ntherefore only appear within a single listWit element. ","title":"<a href=\"ref/listWit\">listWit</a>","tag":"reference"}
{"content":"indicates the beginning, or resumption, of the text of a\nfragmentary witness. Critical Apparatus","title":"<a href=\"ref/witStart\">witStart</a>","tag":"reference"}
{"content":"indicates the end, or suspension, of the text of a fragmentary\nwitness. Critical Apparatus","title":"<a href=\"ref/witEnd\">witEnd</a>","tag":"reference"}
{"content":"indicates the beginning of a lacuna in the text of a mostly\ncomplete textual witness. Critical Apparatus","title":"<a href=\"ref/lacunaStart\">lacunaStart</a>","tag":"reference"}
{"content":"contains either a description of a single witness referred to\nwithin the critical apparatus, or a list of witnesses which is to be\nreferred to by a single sigil. Critical Apparatus The content of the witness element may give\nbibliographic information about the witness or witness group, or it\nmay be empty.","title":"<a href=\"ref/witness\">witness</a>","tag":"reference"}
{"content":"indicates the end of a lacuna in a mostly complete textual\nwitness. Critical Apparatus","title":"<a href=\"ref/lacunaEnd\">lacunaEnd</a>","tag":"reference"}
{"content":"groups elements which mark the beginning or ending of a fragmentary manuscript or other\n    witness. Critical Apparatus These elements may appear anywhere within the elements lem and rdg, and\n      also within any of their constituent elements. ","title":"<a href=\"ref/model.rdgPart\">model.rdgPart</a>","tag":"reference"}
{"content":"declares the method used to encode text-critical variants. Critical Apparatus indicates which method is used to encode the apparatus of\nvariants. indicates whether the apparatus appears within the running text\nor external to it.","title":"<a href=\"ref/variantEncoding\">variantEncoding</a>","tag":"reference"}
{"content":"provides attributes to mark the beginning or ending of a fragmentary\nmanuscript or other witness. Critical Apparatus contains a space-delimited list of one or more sigla indicating the witnesses\nto this reading  beginning or ending at this point.","title":"<a href=\"ref/att.rdgPart\">att.rdgPart</a>","tag":"reference"}
{"content":"provides attributes used to identify the witnesses\n  supporting a particular reading in a critical apparatus. Critical Apparatus contains a space-delimited list of one or more pointers indicating the witnesses\nwhich attest to a given reading.","title":"<a href=\"ref/att.witnessed\">att.witnessed</a>","tag":"reference"}
{"content":"defines a set of attributes common to all elements representing variant readings in text critical work. Critical Apparatus classifies the reading according to some useful typology. classifies the cause for the variant reading, according to\nany appropriate typology of possible origins. provides a number indicating the position of this reading in a\nsequence, when there is reason to presume a sequence to the variants.\n points to other readings that are required when adopting the current reading or lemma.","title":"<a href=\"ref/att.textCritical\">att.textCritical</a>","tag":"reference"}
{"content":"contains an organizational name. Names and dates","title":"<a href=\"ref/orgName\">orgName</a>","tag":"reference"}
{"content":"contains a proper noun or proper-noun phrase referring to a\n  person, possibly including one or more of\n  the person's forenames, surnames, honorifics, added names, etc. Names and dates","title":"<a href=\"ref/persName\">persName</a>","tag":"reference"}
{"content":"contains a name component used to distinguish otherwise similar names on the basis of the relative ages or generations of the persons\n        named. Names and dates","title":"<a href=\"ref/genName\">genName</a>","tag":"reference"}
{"content":"contains a family (inherited) name, as opposed to a given, baptismal, or nick name. Names and dates","title":"<a href=\"ref/surname\">surname</a>","tag":"reference"}
{"content":"contains a forename, given or baptismal name. Names and dates","title":"<a href=\"ref/forename\">forename</a>","tag":"reference"}
{"content":"contains a connecting phrase or link used within a name but not regarded as part of it, such as van der or\n            of. Names and dates","title":"<a href=\"ref/nameLink\">nameLink</a>","tag":"reference"}
{"content":"contains a name component which indicates that the referent has a particular role or position in society, such as an official title or\n        rank. Names and dates A roleName may be distinguished from an addName by virtue of the fact that, like a title, it typically exists\n            independently of its holder.","title":"<a href=\"ref/roleName\">roleName</a>","tag":"reference"}
{"content":"contains an additional name component, such as a nickname, epithet, or alias, or any other descriptive phrase used within a personal\n    name. Names and dates","title":"<a href=\"ref/addName\">addName</a>","tag":"reference"}
{"content":"contains an absolute or relative place name. Names and dates","title":"<a href=\"ref/placeName\">placeName</a>","tag":"reference"}
{"content":"contains the name of a geo-political unit consisting of two or more nation states or\n    countries. Names and dates","title":"<a href=\"ref/bloc\">bloc</a>","tag":"reference"}
{"content":"contains the name of a geo-political unit, such as a nation, country, colony, or\n    commonwealth, larger than or administratively superior to a region and smaller than a bloc. Names and dates The recommended source for codes to represent coded country names is ISO 3166.","title":"<a href=\"ref/country\">country</a>","tag":"reference"}
{"content":"contains the name of an administrative unit such as a state, province, or county, larger\n    than a settlement, but smaller than a country. Names and dates","title":"<a href=\"ref/region\">region</a>","tag":"reference"}
{"content":"contains the name of a settlement such as a city, town, or village identified as a single geo-political or administrative unit. Names and dates","title":"<a href=\"ref/settlement\">settlement</a>","tag":"reference"}
{"content":"contains the name of any kind of subdivision of a settlement, such as a parish, ward, or other administrative or geographic unit. Names and dates","title":"<a href=\"ref/district\">district</a>","tag":"reference"}
{"content":"marks that part of a relative temporal or spatial expression which indicates the direction of the offset between the two place names, dates, or\n        times involved in the expression. Names and dates","title":"<a href=\"ref/offset\">offset</a>","tag":"reference"}
{"content":"identifies a name associated with some geographical feature such as Windrush Valley or Mount Sinai. Names and dates","title":"<a href=\"ref/geogName\">geogName</a>","tag":"reference"}
{"content":"contains a common noun identifying some geographical feature contained within a geographic\n        name, such as valley, mount, etc. Names and dates","title":"<a href=\"ref/geogFeat\">geogFeat</a>","tag":"reference"}
{"content":"contains an informal description of a person's present or past affiliation with some\n        organization, for example an employer or sponsor. Names and dates If included, the name of an organization may be tagged using either the name\n            element as above, or the more specific orgName element.","title":"<a href=\"ref/affiliation\">affiliation</a>","tag":"reference"}
{"content":"specifies the age of a person. Names and dates supplies a numeric code representing the age or age group As with other culturally-constructed traits such as\n    sex, the way in which this concept is described in different\n    cultural contexts may vary. The normalizing attributes are\n    provided as a means of simplifying that variety to Western\n    European norms and should not be used where that is\n    inappropriate. The content of the element may be used to describe\n    the intended concept in more detail, using plain text. ","title":"<a href=\"ref/age\">age</a>","tag":"reference"}
{"content":"contains information about a person's birth, such as its date and place. Names and dates","title":"<a href=\"ref/birth\">birth</a>","tag":"reference"}
{"content":"contains information about the physical climate of a place. Names and dates","title":"<a href=\"ref/climate\">climate</a>","tag":"reference"}
{"content":"contains information about a person's death, such as its date and place. Names and dates","title":"<a href=\"ref/death\">death</a>","tag":"reference"}
{"content":"contains a description of the educational experience of a person. Names and dates","title":"<a href=\"ref/education\">education</a>","tag":"reference"}
{"content":"contains data relating to any kind of significant event associated with a person, place, or organization. Names and dates","title":"<a href=\"ref/event\">event</a>","tag":"reference"}
{"content":"specifies the faith, religion, or belief set of a person. Names and dates","title":"<a href=\"ref/faith\">faith</a>","tag":"reference"}
{"content":"contains information about a person's period of activity. Names and dates","title":"<a href=\"ref/floruit\">floruit</a>","tag":"reference"}
{"content":"contains any expression of a set of geographic coordinates, representing a point, line, or area on the surface of the earth in some\n        notation. Names and dates Uses of geo can be associated with a coordinate\n    system, defined by a geoDecl element supplied in the TEI\n    header, using the decls attribute. If no such link is\n    made, the assumption is that the content of each geo\n    element will be a pair of numbers separated by whitespace, to be\n    interpreted as latitude followed by longitude according to the\n    World Geodetic System.","title":"<a href=\"ref/geo\">geo</a>","tag":"reference"}
{"content":"summarizes the state of a person's linguistic knowledge, either as prose or by a list of langKnown elements. Names and dates supplies one or more valid language tags for the languages specified","title":"<a href=\"ref/langKnowledge\">langKnowledge</a>","tag":"reference"}
{"content":"specifies the gender identity of a person, persona, or character. Names and dates supplies a coded value for gender identity As with other culturally-constructed traits such as\n    age and sex, the way in which this concept is described in different\n    cultural contexts varies. The normalizing attributes are\n    provided only as an optional means of simplifying that variety for purposes of interoperability\n    or project-internal taxonomies for consistency, and should not be used where that is\n    inappropriate or unhelpful. The content of the element may be used to describe\n    the intended concept in more detail.","title":"<a href=\"ref/gender\">gender</a>","tag":"reference"}
{"content":"summarizes the state of a person's linguistic competence, i.e., knowledge of a single language. Names and dates supplies a valid language tag for the language concerned. a code indicating the person's level of knowledge for this language","title":"<a href=\"ref/langKnown\">langKnown</a>","tag":"reference"}
{"content":"contains a list of descriptions, each of which provides information\n    about an identifiable event. Names and dates","title":"<a href=\"ref/listEvent\">listEvent</a>","tag":"reference"}
{"content":"contains a list of elements, each of which provides information about an identifiable\n        organization. Names and dates The type attribute may be used to distinguish lists of organizations of a\n            particular type if convenient.","title":"<a href=\"ref/listOrg\">listOrg</a>","tag":"reference"}
{"content":"contains a list of descriptions, each of which provides information about an identifiable\n    person or a group of people, for example the participants in a language interaction, or the\n    people referred to in a historical source. Names and dates The type attribute may be used to distinguish lists of people of a particular\n      type if convenient.","title":"<a href=\"ref/listPerson\">listPerson</a>","tag":"reference"}
{"content":"contains a list of places, optionally followed by a list of relationships (other than\n        containment) defined amongst them. Names and dates","title":"<a href=\"ref/listPlace\">listPlace</a>","tag":"reference"}
{"content":"provides information about relationships identified amongst people, places, and\n    organizations, either informally as prose or as formally expressed relation links. Names and dates May contain a prose description organized as paragraphs, or a sequence of\n        relation elements. The persons with identifiers pp1 and pp2 are the parents of pp3 and pp4; they are also married to\n      each other; pp1 is the employer of pp3, pp5, pp6, and pp7.","title":"<a href=\"ref/listRelation\">listRelation</a>","tag":"reference"}
{"content":"defines the location of a place as a set of geographical coordinates, in terms of other named geo-political entities, or as an\n        address. Names and dates","title":"<a href=\"ref/location\">location</a>","tag":"reference"}
{"content":"contains an informal description of a person's present or past nationality or citizenship. Names and dates","title":"<a href=\"ref/nationality\">nationality</a>","tag":"reference"}
{"content":"contains an informal description of a person's trade, profession or occupation. Names and dates indicates the\n      classification system or taxonomy in use, for example by\n      supplying the identifier of a taxonomy element, or\n      pointing to some other resource. identifies an occupation code defined within the classification system or taxonomy defined by the scheme\n                attribute. The content of this element may be used as an alternative to the more formal specification made possible by its attributes; it may also be\n            used to supplement the formal specification with commentary or clarification.","title":"<a href=\"ref/occupation\">occupation</a>","tag":"reference"}
{"content":"provides information\n  about an identifiable organization such as a business, a tribe, or\n  any other grouping of people. Names and dates specifies a primary\n      role or classification for the organization.","title":"<a href=\"ref/org\">org</a>","tag":"reference"}
{"content":"provides information about an identifiable individual, for example a participant in a language interaction, or a person referred to in a\n        historical source. Names and dates specifies a primary role or classification for the person. specifies the sex of the person. specifies the gender of the person. specifies an age group for the person. May contain either a prose description organized as paragraphs, or a sequence of more specific demographic elements drawn\n            from the model.personPart class.","title":"<a href=\"ref/person\">person</a>","tag":"reference"}
{"content":"provides information about one of the personalities identified for a given individual, where\n    an individual has multiple personalities. Names and dates specifies a primary role or classification for the persona. specifies the sex of the persona. specifies the gender of the persona. specifies an age group for the persona. Note that a persona is not the same as a role. A role \n   may be assumed by different people on different occasions, whereas a persona is\n unique to a particular person, even though it may resemble others. Similarly, when an actor takes on or enacts the role of a historical person, they do not\n thereby acquire a new persona. ","title":"<a href=\"ref/persona\">persona</a>","tag":"reference"}
{"content":"describes a group of individuals treated as a single person for analytic purposes. Names and dates specifies the role of this group of participants in the interaction. specifies the sex of the participant group. specifies the age group of the participants. describes\n      informally the size or approximate size of the group for example\n      by means of a number and an indication of accuracy e.g. approx 200. May contain a prose description organized as paragraphs, or any sequence of demographic elements in any combination. The global xml:id attribute should be used to identify each speaking participant in a spoken text if the who\n            attribute is specified on individual utterances.","title":"<a href=\"ref/personGrp\">personGrp</a>","tag":"reference"}
{"content":"contains data about a geographic location Names and dates","title":"<a href=\"ref/place\">place</a>","tag":"reference"}
{"content":"indicates the personal pronouns used, or assumed to be used, by the individual being described. Names and dates indicates support\n      for the listed personal pronouns. supplies a\n      regularized value for personal pronouns.","title":"<a href=\"ref/persPronouns\">persPronouns</a>","tag":"reference"}
{"content":"contains information about the population of a place. Names and dates","title":"<a href=\"ref/population\">population</a>","tag":"reference"}
{"content":"describes any kind of relationship or linkage amongst a\n  specified group of places, events, persons, objects or other items. Names and dates supplies a name for the kind of relationship of which this is an instance. identifies the active participants in a non-mutual relationship, or all the participants in a mutual\n                    one. supplies a list of participants amongst all of whom the relationship holds equally. identifies the passive participants in a non-mutual relationship. Only one of the attributes active and mutual may be supplied; the attribute passive may be supplied only\n            if the attribute active is supplied. Not all of these constraints can be enforced in all schema languages. This indicates that the person with identifier p1 is supervisor of persons p2, p3, and p4.","title":"<a href=\"ref/relation\">relation</a>","tag":"reference"}
{"content":"describes a person's present or past places of residence. Names and dates","title":"<a href=\"ref/residence\">residence</a>","tag":"reference"}
{"content":"specifies the sex of an organism. Names and dates supplies a coded value for sex As with other culturally-constructed traits such as age and gender, the way in which this\n      concept is described in different cultural contexts varies. The normalizing attributes are\n      provided only as an optional means of simplifying that variety for purposes of\n      interoperability or project-internal taxonomies for consistency, and should not be used where\n      that is inappropriate or unhelpful. The content of the element may be used to describe the\n      intended concept in more detail.","title":"<a href=\"ref/sex\">sex</a>","tag":"reference"}
{"content":"contains an informal description of a person's perceived social or economic status. Names and dates identifies the classification system or taxonomy in use, for example by pointing to a locally-defined taxonomy element or by supplying a URI for an externally-defined system. identifies a status code defined within the classification system or taxonomy defined by the scheme attribute. The content of this element may be used as an alternative to the more formal specification made possible by its attributes; it may also be\n            used to supplement the formal specification with commentary or clarification.","title":"<a href=\"ref/socecStatus\">socecStatus</a>","tag":"reference"}
{"content":"contains a description of some status or quality attributed to a person, place, or organization often at some specific time or for a specific date range. Names and dates Where there is confusion between trait and state the more general purpose\n      element state should be used even for unchanging characteristics. If you wish to\n      distinguish between characteristics that are generally perceived to be time-bound states and\n      those assumed to be fixed traits, then trait is available for the more static of\n      these. The state element encodes characteristics which are sometimes assumed to\n      change, often at specific times or over a date range, whereas the trait elements are\n      used to record characteristics, such as eye-colour, which are less subject to change. Traits are typically, but not necessarily, \n      independent of the volition or action of the holder.","title":"<a href=\"ref/state\">state</a>","tag":"reference"}
{"content":"contains information about the physical terrain of a place. Names and dates","title":"<a href=\"ref/terrain\">terrain</a>","tag":"reference"}
{"content":"contains a description of some status or quality attributed to a person, place, or organization typically, but not necessarily, \n    independent of the volition or action of the holder and usually not at some specific time or for a specific date range. Names and dates Where there is confusion between trait and state the more general purpose\n      element state should be used even for unchanging characteristics. If you wish to\n      distinguish between characteristics that are generally perceived to be time-bound states and\n      those assumed to be fixed traits, then trait is available for the more static of\n      these. The state element encodes characteristics which are sometimes assumed to\n      change, often at specific times or over a date range, whereas the trait elements are\n      used to record characteristics, such as eye-colour, which are less subject to change. Traits are typically, but not necessarily, \n      independent of the volition or action of the holder.","title":"<a href=\"ref/trait\">trait</a>","tag":"reference"}
{"content":"contains a description of a single identifiable physical object. Names and dates \n        \n        The object element is a recent addition to the TEI P5 Guidelines as of version 3.5.0 and as such may\n        be more prone to further revision in the next few releases as its use develops. This may be particularly evident where its \n        contents have been borrowed from msDesc and have yet to be generalized from their use in the context of manuscript descriptions.  \n         The object element may be used for describing any object, text-bearing or not, though where the textuality of the object is the \n    primary concern or a collection is mostly composed of manuscripts, encoders may prefer the msDesc element (a more specific form of object) which may be used not only to\n    describe manuscripts but any form of text-bearing objects such as early printed books.    \n  ","title":"<a href=\"ref/object\">object</a>","tag":"reference"}
{"content":"contains a list of descriptions, each of which provides information about an\n    identifiable physical object. Names and dates The type attribute may be used to distinguish different types of objects.","title":"<a href=\"ref/listObject\">listObject</a>","tag":"reference"}
{"content":"groups elements which describe objects. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.objectLike\">model.objectLike</a>","tag":"reference"}
{"content":"contains a proper noun or noun phrase used to refer to an object. Names and dates","title":"<a href=\"ref/objectName\">objectName</a>","tag":"reference"}
{"content":"contains the definition for a canonical name or name component of any kind. Names and dates points to constituent nyms","title":"<a href=\"ref/nym\">nym</a>","tag":"reference"}
{"content":"groups one or more identifiers or pieces of locating information concerning a single object. Names and dates","title":"<a href=\"ref/objectIdentifier\">objectIdentifier</a>","tag":"reference"}
{"content":"groups elements describing changeable characteristics of an organization which have a\n    definite duration. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.orgStateLike\">model.orgStateLike</a>","tag":"reference"}
{"content":"common attributes for those elements which form part of a name usually, but not necessarily, a personal name. Declarations for classes, datatypes, and macros available to all TEI modules indicates whether the name component is given in full, as an\nabbreviation or simply as an initial. specifies the sort order of the name component in relation to others within the name.","title":"<a href=\"ref/att.personal\">att.personal</a>","tag":"reference"}
{"content":"contains a list of nyms, that is, standardized names for any thing. Names and dates The type attribute may be used to distinguish lists of names of a particular type if convenient.","title":"<a href=\"ref/listNym\">listNym</a>","tag":"reference"}
{"content":"groups elements used to provide information about places and their relationships. Declarations for classes, datatypes, and macros available to all TEI modules","title":"<a href=\"ref/model.placeLike\">model.placeLike</a>","tag":"reference"}
{"content":"provides attributes for recording normalized temporal durations. Declarations for classes, datatypes, and macros available to all TEI modules indicates the length of this element in time.","title":"<a href=\"ref/att.duration.iso\">att.duration.iso</a>","tag":"reference"}
{"content":"provides attributes for normalization of elements that contain datable events using the ISO 8601:2004 standard. Names and dates supplies the value of a date or time in a standard form. The following are examples of ISO date, time, and date & time formats that are not valid W3C format\n                    normalizations. All of the examples of the when attribute in the att.datable.w3c class are also valid with\n                    respect to this attribute. specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd. specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd. indicates the starting point of the period in standard form. indicates the ending point of the period in standard form.","title":"<a href=\"ref/att.datable.iso\">att.datable.iso</a>","tag":"reference"}
{"content":"defines the range of attribute values expressing a temporal expression such as a date, a\n    time, or a combination of them, that conform to the international standard Data elements\n      and interchange formats – Information interchange – Representation of dates and times. If it is likely that the value used is to be compared with another, then a time zone\n      indicator should always be included, and only the dateTime representation should be used. For all representations for which ISO 8601:2004 describes both a basic and an\n        extended format, these Guidelines recommend use of the extended format. While ISO 8601:2004 permits the use of both 00:00 and 24:00 to represent\n      midnight, these Guidelines strongly recommend against the use of 24:00.\n        当該属性値が他の値と比較される場合，時間帯は必ず示されるべきである． またはdateTimeを使うべきである(訳注：この文は修正されるかもしれな い)．   ISO 8601:2004には基本形式と拡張形式がある． 本ガイドラインでは拡張形式を使うことを推奨する．   ISO 8601:2004では，深夜の12時を示す方法として， 00:00と24:00の両方を認めているが，\n        本ガイドラインでは，24:00とは表記しないことを強く推奨 している．\n      \n      S'il est vraisemblable que la valeur utilisée soit destinée à être comparer à d’autres\n      valeurs, alors une indication du fuseau horaire devrait toujours être incluse, et seule la\n      représentation dateTime devrait être employée. Pour toutes les représentations pour lesquelles l’ISO 8601:2004 décrit à la fois un format\n        basique et un format étendu , ce guide d’encodage recommandande\n      l’emploi du format  étendu .  Même si l’ ISO 8601:2004 permet d’écrire à la fois 00:00 et 24:00 pour\n      minuit, ce guide d’encodage déconseille vivement d’écrire 24:00.\n      ","title":"<a href=\"ref/teidata.temporal.iso\">teidata.temporal.iso</a>","tag":"reference"}
{"content":"defines the range of attribute values available for representation of a duration in time\n    using ISO 8601 standard formats A duration is expressed as a sequence of number-letter pairs, preceded by the letter P; the\n      letter gives the unit and may be Y (year), M (month), D (day), H (hour), M (minute), or S\n      (second), in that order. The numbers are all unsigned integers, except for the last, which may\n      have a decimal component (using either . or , as the decimal point;\n      the latter is preferred). If any number is 0, then that number-letter\n      pair may be omitted. If any of the H (hour), M (minute), or S (second) number-letter pairs are\n      present, then the separator T must precede the first time\n      number-letter pair. For complete details, see ISO 8601 Data elements and interchange formats — Information\n        interchange — Representation of dates and times.  時間幅は，先頭文字Pに続いて，数値-文字のペア列で示される． 文字は単位を示している．Y(年), M(月), D(日), H(時間), M(分), S(秒)\n      の順番になる．数値は符号のない整数である．但し，最後に10進数の 表記記号(小数点を示す.または,．後者が望\n        ましい)をとることはある．数値が0の場合， 数値-文字のペアは省略されることがある． H(時間), M(分),\n      S(秒)が数値-文字のペアを作る場合，区切子 Tを先頭にして時間を示す数値-文字 のペアを示す必要がある．   詳細については，ISO 8601Data elements and interchange formats - Information interchange -\n        Representation of dates and timesを参照のこと．  Une durée est exprimée par une suite de paires alphanumériques, précédée par la lettre P ;\n      la lettre donne l'unité et peut être Y (année), M (mois), D (jour), H (heure), M (minute), ou\n      S (seconde), dans cet ordre. Les nombres sont des entiers sans\n      signe,  à l'exception du dernier,\n      qui peut comporter une décimale (en utilisant soit . soit , pour la\n      virgule ; la dernière possibilité est préférable). Si un nombre est 0,\n      alors la paire alphanumérique peut être omise. Si les paires alphanumériques H (heure), M\n      (minute), ou S (seconde) sont présentes, alors le séparateur T doit précéder la\n      première paire alphanumérique time. Pour des détails complets, voir ISO 8601 Data elements and interchange formats —\n        Information interchange — Representation of dates and times.","title":"<a href=\"ref/teidata.duration.iso\">teidata.duration.iso</a>","tag":"reference"}
{"content":"contains one row of a table. Tables, formulæ, notated music, and figures","title":"<a href=\"ref/row\">row</a>","tag":"reference"}
{"content":"contains text displayed in tabular form, in rows and columns. Tables, formulæ, notated music, and figures indicates the number of rows in the table. indicates the number of columns in each row of the table. Contains an optional heading and a series of rows. Any rendition information should be supplied using the global rend attribute, at\n      the table, row, or cell level as appropriate.","title":"<a href=\"ref/table\">table</a>","tag":"reference"}
{"content":"contains a mathematical or other formula. Tables, formulæ, notated music, and figures","title":"<a href=\"ref/formula\">formula</a>","tag":"reference"}
{"content":"contains one cell of a table. Tables, formulæ, notated music, and figures","title":"<a href=\"ref/cell\">cell</a>","tag":"reference"}
{"content":"encodes the presence of music notation in a text Tables, formulæ, notated music, and figures It is possible to describe\n        the content of the notation using elements from the model.labelLike class and it is possible\n        to point to an external representation using elements from model.ptrLike. It is possible to\n        specify the location of digital objects representing the notated music in other media such\n        as images or audio-visual files. The encoder's interpretation of the correspondence between\n        the notated music and these digital objects is not encoded explicitly. We recommend the use\n        of graphic and binaryObject mainly as a fallback mechanism when the notated music format is\n        not displayable by the application using the encoding. The alignment of encoded notated\n        music, images carrying the notation, and audio files is a complex matter for which we refer\n        the encoder to other formats and specifications such as MPEG-SMR. It is also recommended, when useful, to embed XML-based music notation formats, such as the \n      Music Encoding Initiative format as content of \n      notatedMusic. This must be done by means of customization.","title":"<a href=\"ref/notatedMusic\">notatedMusic</a>","tag":"reference"}
{"content":"groups elements representing or containing graphic information\n  such as an illustration, formula,  or    figure. Tables, formulæ, notated music, and figures","title":"<a href=\"ref/figure\">figure</a>","tag":"reference"}
{"content":"contains a brief prose description of the appearance or content\nof a graphic figure, for use when documenting an image without\ndisplaying it. Tables, formulæ, notated music, and figures This element is intended for use as an alternative to the\ncontent of its parent figure element ; for example, to display\nwhen the image is required but the equipment in use cannot display\ngraphic images. It may also be used for indexing or documentary\npurposes.","title":"<a href=\"ref/figDesc\">figDesc</a>","tag":"reference"}
{"content":"provides a description of a text in terms of its\nsituational parameters. Corpus texts","title":"<a href=\"ref/textDesc\">textDesc</a>","tag":"reference"}
{"content":"describes the identifiable speakers, voices, or\n        other participants in any kind of text or other persons named or otherwise referred to in a\n        text, edition, or metadata. Corpus texts May contain a prose description organized as paragraphs, or a structured\n            list of persons and person groups, with an optional formal specification of any\n            relationships amongst them. This example shows both a very simple person description, and a very detailed one, using\n            some of the more specialized elements from the module for Names and Dates. ","title":"<a href=\"ref/particDesc\">particDesc</a>","tag":"reference"}
{"content":"describes the setting or settings within which a\n        language interaction takes place, or other places otherwise referred to in a text, edition,\n        or metadata. Corpus texts May contain a prose description organized as paragraphs, or a series of\n            setting elements. If used to record not settings of language interactions, but\n            other places mentioned in the text, then place optionally grouped by\n            listPlace inside standOff should be preferred.","title":"<a href=\"ref/settingDesc\">settingDesc</a>","tag":"reference"}
{"content":"describes the medium or channel by which a text is delivered or\nexperienced. For a written text, this might be print, manuscript, email, etc.;\nfor a spoken one, radio, telephone, face-to-face, etc. Corpus texts specifies the mode of this channel with respect to speech and\n         writing.","title":"<a href=\"ref/channel\">channel</a>","tag":"reference"}
{"content":"describes the internal composition of a text or text sample,\nfor example\nas fragmentary, complete, etc. Corpus texts specifies how the text was constituted. The function of this element seems to overlap with both\nthe org attribute on div and the\nsamplingDecl\n in the encodingDesc.","title":"<a href=\"ref/constitution\">constitution</a>","tag":"reference"}
{"content":"describes the nature and extent of originality of this text. Corpus texts categorizes the derivation of the text. For derivative texts, details of the ancestor\nmay be included in the source description.","title":"<a href=\"ref/derivation\">derivation</a>","tag":"reference"}
{"content":"describes the most important social context in which the text was\nrealized or for which it is intended, for example private vs. public,\neducation, religion, etc. Corpus texts categorizes the domain of use. Usually empty, unless some further clarification of the type\nattribute is needed, in which case it may contain running\nprose. The list presented here is primarily for illustrative\npurposes.","title":"<a href=\"ref/domain\">domain</a>","tag":"reference"}
{"content":"describes the extent to which the text may be regarded as\nimaginative or non-imaginative, that is, as describing a fictional\nor a non-fictional world. Corpus texts categorizes the factuality of the text. Usually empty, unless some further clarification of the type\nattribute is needed, in which case it may contain running prose For many literary texts, a simple binary opposition between\n fiction\nand fact is naïve in the extreme; this parameter is not intended\nfor purposes of subtle literary analysis, but as a simple means of\ncharacterizing the claimed fictiveness of a given text. No claim is made\nthat works characterized as fact are in  any sense true.","title":"<a href=\"ref/factuality\">factuality</a>","tag":"reference"}
{"content":"describes the extent, cardinality and nature of any interaction\namong those producing and experiencing the text, for example in the\nform of response or interjection, commentary, etc. Corpus texts specifies the degree of interaction between\n  active and passive participants in the text. specifies the number of active participants\n   (or addressors) producing parts of the text. specifies the number of passive participants\n   (or addressees) to whom a text is directed\n   or in whose presence it is created or performed.","title":"<a href=\"ref/interaction\">interaction</a>","tag":"reference"}
{"content":"characterizes a single purpose or communicative function of the\ntext. Corpus texts specifies a particular kind of purpose. specifies the extent to which this purpose predominates. Usually empty, unless some further clarification of the type\nattribute is needed, in which case it may contain running prose","title":"<a href=\"ref/purpose\">purpose</a>","tag":"reference"}
{"content":"describes the extent to which a text may be regarded as\nprepared or spontaneous. Corpus texts a keyword characterizing the type of preparedness.","title":"<a href=\"ref/preparedness\">preparedness</a>","tag":"reference"}
{"content":"describes one particular setting in which a language\n  interaction takes place. Corpus texts If the who attribute is not supplied, the setting is\n    assumed to be that of all participants in the language\n    interaction.","title":"<a href=\"ref/setting\">setting</a>","tag":"reference"}
{"content":"contains a brief informal description of what a participant in a\nlanguage interaction is doing other than speaking, if anything. Corpus texts For more fine-grained description of participant\nactivities during a spoken text, the event element should\nbe used.","title":"<a href=\"ref/activity\">activity</a>","tag":"reference"}
{"content":"contains a brief informal description of the kind of\nplace concerned, for example: a room, a restaurant, a park bench, etc. Corpus texts","title":"<a href=\"ref/locale\">locale</a>","tag":"reference"}
{"content":"defines an association or hypertextual link among elements or passages, of some type not more precisely specifiable by other elements. Linking, segmentation, and alignment This element should only be used to encode associations not otherwise provided for by more specific elements. The location of this element within a document has no significance, unless it is included within a linkGrp, in which case it may inherit the value of the type attribute from the value given on the linkGrp.","title":"<a href=\"ref/link\">link</a>","tag":"reference"}
{"content":"attaches an identifier to a point within a text, whether or not it corresponds with a textual element. Linking, segmentation, and alignment On this element, the global xml:id attribute must be supplied to specify an identifier for the point at which this element occurs within a document. The value used may be chosen freely provided that it is unique within the document and is a syntactically valid name. There is no requirement for values containing numbers to be in sequence.","title":"<a href=\"ref/anchor\">anchor</a>","tag":"reference"}
{"content":"defines a collection of associations or hypertextual links. Linking, segmentation, and alignment May contain one or more link or ptr elements. A web or link group is an administrative convenience, which should be used to collect a set of links together for any purpose, not simply to supply a default value for the type attribute.","title":"<a href=\"ref/linkGrp\">linkGrp</a>","tag":"reference"}
{"content":"contains any arbitrary component-level unit of text, acting as an anonymous container for phrase or inter level elements analogous to, but without the semantic baggage of, a paragraph. Linking, segmentation, and alignment The ab element may be used at the encoder's discretion to mark any component-level elements in a text for which no other more specific appropriate markup is defined.","title":"<a href=\"ref/ab\">ab</a>","tag":"reference"}
{"content":"represents any segmentation of text below the chunk level. Linking, segmentation, and alignment The seg element may be used at the encoder's discretion to mark any segments of the text of interest for processing. One use of the element is to mark text features for which no appropriate markup is otherwise defined. Another use is to provide an identifier for some segment which is to be pointed at by some other element—i.e. to provide a target, or a part of a target, for a ptr or other similar element.","title":"<a href=\"ref/seg\">seg</a>","tag":"reference"}
{"content":"indicates a point in time either relative to other elements in the same timeline tag, or absolutely. Linking, segmentation, and alignment supplies an absolute value for the time. specifies the unit of time in which the interval value is expressed, if this is not inherited from the parent timeline. specifies a time\n      interval either as a number or as one of the keywords defined\n      by the datatype teidata.interval identifies the reference point for determining the time of the current when element, which is obtained by adding the interval to the time of the reference point. On this element, the global xml:id attribute must be supplied to specify an identifier for this point in time. The value used may be chosen freely provided that it is unique within the document and is a syntactically valid name. There is no requirement for values containing numbers to be in sequence.","title":"<a href=\"ref/when\">when</a>","tag":"reference"}
{"content":"provides a set of ordered points in time which can be linked to elements of a spoken text to create a temporal alignment of that text. Linking, segmentation, and alignment designates the origin of the timeline, i.e. the time at which it begins. specifies the unit of time corresponding to the interval value of the timeline or of its constituent points in time. specifies a time\n      interval either as a positive integral value or using one of a\n      set of predefined codes.","title":"<a href=\"ref/timeline\">timeline</a>","tag":"reference"}
{"content":"identifies a possibly fragmented segment of text, by pointing at the possibly discontiguous elements which compose it. Linking, segmentation, and alignment specifies the name of an element which this aggregation may be understood to represent. indicates whether the targets to be joined include the entire element indicated (the entire subtree including its root), or just the children of the target (the branches of the subtree). The following example is discussed in section 16.7 Aggregation: The join element here identifies a linegroup (lg) comprising the three lines indicated by the target attribute. The value root for the scope attribute indicates that the resulting virtual element contains the three l elements linked to at #frog_l1 #frog_l2 #frog_l3, rather than their character data content.","title":"<a href=\"ref/join\">join</a>","tag":"reference"}
{"content":"groups a collection of join elements and possibly pointers. Linking, segmentation, and alignment supplies the default value for the result on each join included within the group. Any number of join or ptr elements.","title":"<a href=\"ref/joinGrp\">joinGrp</a>","tag":"reference"}
{"content":"identifies an alternation or a set of choices among elements or passages. Linking, segmentation, and alignment states whether the alternations gathered in this collection are exclusive or\n                inclusive. If mode is excl, each weight states the probability that\n                the corresponding alternative occurs. If mode is incl each\n                weight states the probability that the corresponding alternative occurs given that\n                at least one of the other alternatives occurs.","title":"<a href=\"ref/alt\">alt</a>","tag":"reference"}
{"content":"groups a collection of alt elements and possibly pointers. Linking, segmentation, and alignment states whether the alternations gathered in this collection are exclusive or\n                inclusive. Any number of alternations, pointers or extended pointers.","title":"<a href=\"ref/altGrp\">altGrp</a>","tag":"reference"}
{"content":"contains a list of annotations, typically encoded as\n      annotation, annotationBlock, or note, possibly organized with\n    nested listAnnotation elements. Linking, segmentation, and alignment The enclosed annotations may use the general-purpose note element; or, for\n      annotations pertaining to transcriptions of speech, the special-purpose\n        annotationBlock element; or the annotation element, which is intended to\n      map cleanly onto the Web Annotation Data Model.","title":"<a href=\"ref/listAnnotation\">listAnnotation</a>","tag":"reference"}
{"content":"Functions as a\n  container element for linked data, contextual information, and\n  stand-off annotations embedded in a TEI document. Linking, segmentation, and alignment This example shows an encoding of morphosyntactic features similar to the encoding\n    system used by ISO 24611 (MAF).","title":"<a href=\"ref/standOff\">standOff</a>","tag":"reference"}
{"content":"represents an annotation following the Web\n      Annotation Data Model. Linking, segmentation, and alignment","title":"<a href=\"ref/annotation\">annotation</a>","tag":"reference"}
{"content":"provides a set of attributes for hypertextual linking. Linking, segmentation, and alignment points to elements that correspond to the current\n      element in some way. In this example a group contains two texts, each containing the same document in a different language. The correspondence is indicated using corresp. The language is indicated using xml:lang, whose value is inherited; both the tag with the corresp and the tag pointed to by the corresp inherit the value from their immediate parent.   points to elements that are synchronous with the current\n      element. points to an element that is the same as the current\n      element. points to an element of which the current element is a\n\tcopy. points to the next element of a virtual aggregate of which\n      the current element is part. points to the previous element of a virtual aggregate of\n      which the current element is part. points to elements that are in exclusive alternation\n      with the current element. selects one or more alternants; if one alternant is\n      selected, the ambiguity or uncertainty is marked as resolved. If\n      more than one alternant is selected, the degree of ambiguity or\n      uncertainty is marked as reduced by the number of alternants not\n      selected.","title":"<a href=\"ref/att.global.linking\">att.global.linking</a>","tag":"reference"}
{"content":"contains a sentence-like division of a text. Simple analytic mechanisms The s element may be used to mark orthographic sentences, or any other segmentation\n      of a text, provided that the segmentation is end-to-end, complete, and non-nesting. For\n      segmentation which is partial or recursive, the seg should be used instead.  The type attribute may be used to indicate the type of segmentation intended,\n      according to any convenient typology.","title":"<a href=\"ref/s\">s</a>","tag":"reference"}
{"content":"represents a grammatical clause. Simple analytic mechanisms The type attribute may be used to indicate the\ntype of clause, taking values such as  finite, nonfinite,\ndeclarative, interrogative, relative\netc. as appropriate.","title":"<a href=\"ref/cl\">cl</a>","tag":"reference"}
{"content":"represents a grammatical phrase. Simple analytic mechanisms The type attribute may be used to indicate the type of phrase, taking values such\n      as noun, verb, preposition, etc. as appropriate.","title":"<a href=\"ref/phr\">phr</a>","tag":"reference"}
{"content":"represents a grammatical morpheme. Simple analytic mechanisms supplies the morpheme's base form. The type attribute may be used to indicate the type of morpheme, taking values\n      such as clitic, prefix, stem, etc. as appropriate.","title":"<a href=\"ref/m\">m</a>","tag":"reference"}
{"content":"represents a grammatical (not necessarily orthographic) word. Simple analytic mechanisms This example is adapted from the Folger Library’s Early Modern\n    English Drama version of The Wits: a Comedy by\n    William Davenant.","title":"<a href=\"ref/w\">w</a>","tag":"reference"}
{"content":"represents a character. Simple analytic mechanisms Contains a single character, a g element, or a\n    sequence of graphemes to be treated as a single character. The\n    type attribute is used to indicate the function of this\n    segmentation, taking values such as letter,\n    punctuation, or digit etc. ","title":"<a href=\"ref/c\">c</a>","tag":"reference"}
{"content":"contains a character or string of characters regarded as constituting a\n  single punctuation mark. Simple analytic mechanisms indicates the extent to which this punctuation mark\n      conventionally separates words or phrases provides a name for the kind of unit delimited by  this punctuation mark. indicates whether this punctuation mark precedes or\n      follows the unit it delimits.","title":"<a href=\"ref/pc\">pc</a>","tag":"reference"}
{"content":"provides attributes for usage within word-level elements in the analysis module and within lexicographic microstructure in the dictionaries module. Simple analytic mechanisms provides the normalized/standardized form of information present in the source text in a\n          non-normalized form Normalization of part-of-speech information within a dictionary entry. gives the original string or is the empty string when the element does not appear\n        in the source text. Example from a language documentation project of the Mixtepec-Mixtec language (ISO 639-3:\n          'mix'). This is a use case where speakers spell something incorrectly but we would\n          like to preserve it for any number of reasons, the use of orig is essential and could\n          have uses for both the speaker to see past mistakes, researchers to get insight into how\n          untrained speakers write their language instinctually (in contrast to prescribed\n          convention), etc.:","title":"<a href=\"ref/att.lexicographic.normalized\">att.lexicographic.normalized</a>","tag":"reference"}
{"content":"provides a set of attributes concerning linguistic features of tokens, for usage within token-level elements, specifically w and pc in the analysis module. Simple analytic mechanisms provides a lemma (base form) for the word, typically uninflected and serving both as an identifier (e.g. in dictionary contexts, as a headword), and as a basis for potential inflections. provides a pointer to a definition of the lemma for the\n        word, for example in an online lexicon. (part of speech) indicates the part of speech assigned to a token \n        (i.e. information on whether it is a noun, adjective, or verb), usually according to some official reference \n        vocabulary (e.g. for German: STTS, for English: CLAWS, for Polish: NKJP, etc.). The German sentence Wir fahren in den Urlaub. tagged with the Stuttgart-Tuebingen-Tagset (STTS). (morphosyntactic description) supplies\n        morphosyntactic information for a token, usually according to some official reference\n        vocabulary (e.g. for German: STTS-large tagset; for a feature description system designed as (pragmatically) universal, see Universal Features).\n       when present, provides information on whether the token in question is adjacent to another, and if so, on which side. The example below assumes that the lack of whitespace is marked redundantly, by using the appropriate values of join. Note that a project may make a decision to only indicate lack of whitespace in one\n          direction, or do that non-redundantly. The existing proposal is the broadest possible,\n          on the assumption that we adopt the \"streamable view\", where all the information on the\n          current element needs to be represented locally.","title":"<a href=\"ref/att.linguistic\">att.linguistic</a>","tag":"reference"}
{"content":"provides additional global attributes for associating specific analyses or\ninterpretations with appropriate portions of a text. Simple analytic mechanisms indicates one or more elements containing interpretations of the\nelement on which the ana attribute appears.","title":"<a href=\"ref/att.global.analytic\">att.global.analytic</a>","tag":"reference"}
{"content":"associates an interpretative annotation directly with a span of text. Simple analytic mechanisms gives the identifier of the node which is the starting point of the span of text being annotated; if not accompanied by a to attribute, gives the identifier of the node of the entire span of text being annotated. gives the identifier of the node which is the end-point of the span of text being annotated.","title":"<a href=\"ref/span\">span</a>","tag":"reference"}
{"content":"summarizes a specific\n  interpretative annotation which can be linked to a span of\n  text. Simple analytic mechanisms Generally, each interp element carries an\n    xml:id attribute. This permits the encoder to\n    explicitly associate the interpretation represented by the content\n    of an interp with any textual element through its\n    ana attribute. Alternatively (or, in addition) an interp may carry an\n    inst attribute that points to one or more textual\n    elements to which the analysis represented by the content of the\n    interp applies.","title":"<a href=\"ref/interp\">interp</a>","tag":"reference"}
{"content":"collects together span tags. Simple analytic mechanisms","title":"<a href=\"ref/spanGrp\">spanGrp</a>","tag":"reference"}
{"content":"provides a feature system declaration comprising one or more\n  feature structure declarations or feature structure declaration links. Feature structures","title":"<a href=\"ref/fsdDecl\">fsdDecl</a>","tag":"reference"}
{"content":"collects together a set of related interpretations which share responsibility or type. Simple analytic mechanisms Any number of interp elements.","title":"<a href=\"ref/interpGrp\">interpGrp</a>","tag":"reference"}
{"content":"declares one type of feature structure. Feature structures gives a name for the type of feature structure being declared. gives the name of one or more typed feature structures\n\tfrom which this type inherits feature specifications and\n\tconstraints; \t\n\tif this type includes a feature specification\n\twith the same name as that of any of those specified by this\n\tattribute, or if more than one specification of the same name\n\tis inherited, then the set of possible values is defined by\n\tunification. Similarly, the set of constraints applicable is\n\tderived by combining those specified explicitly within this\n\telement with those implied by the baseTypes\n\tattribute. When no baseTypes attribute is specified, no\n\tfeature specification or constraint is inherited.\n","title":"<a href=\"ref/fsDecl\">fsDecl</a>","tag":"reference"}
{"content":"associates the name of a typed feature structure with a feature\nstructure declaration for it. Feature structures identifies the type of feature structure to be documented;\n      this will be the value of the type attribute on at least one\nfeature structure. supplies a pointer to a feature structure declaration\n      (fsDecl) element within the current document or elsewhere.","title":"<a href=\"ref/fsdLink\">fsdLink</a>","tag":"reference"}
{"content":"describes in prose what is represented by the type of feature\nstructure declared in the enclosing fsDecl. Feature structures May contain character data, phrase-level elements, and\ninter-level elements. ","title":"<a href=\"ref/fsDescr\">fsDescr</a>","tag":"reference"}
{"content":"declares a single feature, specifying its name, organization,\nrange of allowed values, and optionally its default value. Feature structures a single word which follows the rules defining a\n        legal XML name (see 1 ), indicating the name of the feature being declared; matches the\nname attribute of f elements in the text. indicates whether or not the value of this feature may\n\tbe present.","title":"<a href=\"ref/fDecl\">fDecl</a>","tag":"reference"}
{"content":"declares the default value to be supplied when a feature structure\ndoes not contain an instance of f for this name; if\nunconditional, it is specified as one (or, depending on the value of\nthe org attribute of the enclosing fDecl) more\nfs elements or primitive values;\nif conditional, it is specified as\none or more if elements; if no default is specified, or no\ncondition matches, the value none is assumed. Feature structures May contain a legal feature value, or a series of if\nelements.","title":"<a href=\"ref/vDefault\">vDefault</a>","tag":"reference"}
{"content":"defines the range of allowed values for a feature, in the form of\nan fs, vAlt, or primitive value;\nfor the value of an f to be valid, it must be\nsubsumed by the specified range; if the f\ncontains multiple values (as sanctioned by the org attribute),\nthen each value must be subsumed by the vRange. Feature structures May contain any legal feature-value specification. ","title":"<a href=\"ref/vRange\">vRange</a>","tag":"reference"}
{"content":"describes in prose what is represented by the feature being\ndeclared and its values. Feature structures May contain character data, phrase-level elements, and\ninter-level elements. ","title":"<a href=\"ref/fDescr\">fDescr</a>","tag":"reference"}
{"content":"defines a conditional default value for a feature; the condition\nis specified as a feature structure, and is met if it\nsubsumes the feature structure in the text for which a\ndefault value is sought. Feature structures May contain a feature structure, followed by a feature value;\nthe two are separated by a then element. ","title":"<a href=\"ref/if\">if</a>","tag":"reference"}
{"content":"separates the condition from the default in an if, or\nthe antecedent and the consequent in a cond element. Feature structures This element is provided primarily to enhance the\nhuman readability of the feature-system declaration.","title":"<a href=\"ref/then\">then</a>","tag":"reference"}
{"content":"contains an alternative or former structured identifier used for a manuscript or other object, such as a former catalogue number. Manuscript Description Un numéro identifiant quelconque doit être fourni s'il est connu ; si on ne le\n    connaît pas, cela devrait être signalé.","title":"<a href=\"ref/altIdentifier\">altIdentifier</a>","tag":"reference"}
{"content":"defines a conditional feature-structure constraint; the consequent\nand the antecedent are specified as feature structures or\nfeature-structure collections; the constraint is satisfied if both the\nantecedent and the consequent subsume a given feature\nstructure, or if the antecedent does not. Feature structures May contain an antecedent feature structure, an empty\nthen element, and a consequent feature structure. ","title":"<a href=\"ref/cond\">cond</a>","tag":"reference"}
{"content":"defines a biconditional feature-structure constraint; both\nconsequent and antecedent are specified as feature structures or groups\nof feature structures; the constraint is satisfied if both\nsubsume a given feature structure, or if both do not. Feature structures","title":"<a href=\"ref/bicond\">bicond</a>","tag":"reference"}
{"content":"separates the condition from the consequence in a bicond\nelement. Feature structures This element is provided primarily to enhance the\nhuman readability of the feature-system declaration.","title":"<a href=\"ref/iff\">iff</a>","tag":"reference"}
{"content":"represents a feature value specification, that\n  is, the association of a name with a value of any of several different types. Feature structures a single word which follows the rules defining a\n        legal XML name (see 1 ), providing a name for the feature. references any element which can be used to represent the\n  value of a feature. The content of f may be textual, with the assumption\n    that the data type of the feature value is determined by the\n    schema—this is the approach used in many\n    language-technology-oriented projects and recommendations.","title":"<a href=\"ref/f\">f</a>","tag":"reference"}
{"content":"represents a feature structure, that is, a\n  collection of feature-value pairs organized as a\nstructural unit. Feature structures specifies the type of the feature structure. references the feature-value specifications making up this feature structure.","title":"<a href=\"ref/fs\">fs</a>","tag":"reference"}
{"content":"represents the value part of a feature-value specification\n  which contains one of a finite list of symbols. Feature structures supplies a symbolic value for the feature, one of a finite list that\nmay be specified in a feature declaration.","title":"<a href=\"ref/symbol\">symbol</a>","tag":"reference"}
{"content":"represents the value part of a feature-value specification which can contain either\n  of exactly two possible values. Feature structures supplies a binary value. The value attribute may take any value permitted for\n  attributes of the W3C datatype Boolean: this includes for example \nthe strings\n  true or 1 which are\n  equivalent. ","title":"<a href=\"ref/binary\">binary</a>","tag":"reference"}
{"content":"represents the value part of a feature-value specification\n  which contains a string. Feature structures","title":"<a href=\"ref/string\">string</a>","tag":"reference"}
{"content":"represents the value part of a feature-value specification\n  which contains a numeric value or range. Feature structures supplies a lower bound for the numeric value represented,\n      and also (if max is not supplied) its upper bound. supplies an upper bound for the numeric value represented. specifies whether the value represented should be\n\t  truncated to give an integer value. It is an error to supply the max attribute\nin the absence of a value for the value attribute. This represents the numeric value 42.","title":"<a href=\"ref/numeric\">numeric</a>","tag":"reference"}
{"content":"represents the value part of a feature-value specification\n  which contains multiple values organized as a set, bag, or list. Feature structures indicates organization of given value or values as  set, bag or list.","title":"<a href=\"ref/vColl\">vColl</a>","tag":"reference"}
{"content":"represents the value part of a feature-value specification\n  which appears at more than one point in a feature structure. Feature structures supplies a name\n      identifying the sharing point.","title":"<a href=\"ref/vLabel\">vLabel</a>","tag":"reference"}
{"content":"represents the value part of a feature-value specification\n  which contains a defaulted value. Feature structures","title":"<a href=\"ref/default\">default</a>","tag":"reference"}
{"content":"represents the value part of a feature-value specification\n  which contains a set of values, only one of which can be valid. Feature structures","title":"<a href=\"ref/vAlt\">vAlt</a>","tag":"reference"}
{"content":"represents a feature value which is the negation of its content. Feature structures","title":"<a href=\"ref/vNot\">vNot</a>","tag":"reference"}
{"content":"represents a feature value which is the result of merging\n  together the feature values contained by its children, using the organization\n  specified by the org attribute. Feature structures indicates the organization of the resulting merged values as  set, bag or list. This example returns a list,  concatenating the indeterminate value\nwith the set of values masculine, neuter and feminine.","title":"<a href=\"ref/vMerge\">vMerge</a>","tag":"reference"}
{"content":"assembles a library of f (feature) elements. Feature structures The global n attribute may be used to supply an informal\nname to categorize the library's contents.","title":"<a href=\"ref/fLib\">fLib</a>","tag":"reference"}
{"content":"assembles a library of reusable feature value elements\n  (including complete feature structures). Feature structures A feature value library may include any number\n  of values of any kind, including multiple occurrences of identical\n  values such as <binary value=\"true\"/> or default. The only\n  thing guaranteed unique in a feature value library is the set of\n  labels used to identify the values. ","title":"<a href=\"ref/fvLib\">fvLib</a>","tag":"reference"}
{"content":"groups elements which can occur as direct children of fsdDecl. Feature structures","title":"<a href=\"ref/model.fsdDeclPart\">model.fsdDeclPart</a>","tag":"reference"}
{"content":"encodes a node, a possibly labeled point in a graph. Graphs, networks, and trees provides the value of a node, which is a feature structure or\nother analytic element. provides a type for a node. gives the identifiers of the nodes which are adjacent to the current node. gives the identifiers of the nodes which are adjacent from the current\nnode. gives the identifiers of the nodes which are both adjacent to and\nadjacent from the current node. gives the in degree of the node, the number of nodes which\nare adjacent from the given node. gives the out degree of the node, the number of nodes which\nare adjacent to the given node. gives the degree of the node, the number of arcs with which\nthe node is incident. Zero, one, or two children label elements may be\n    present. The first occurence of label provides a label\n    for the arc; the second provides a second label for the arc, and\n    should be used if a transducer is being encoded whose actions are\n    associated with nodes rather than with arcs.","title":"<a href=\"ref/node\">node</a>","tag":"reference"}
{"content":"encodes an arc, the connection from one node to another in a graph. Graphs, networks, and trees gives the identifier of the node which is adjacent from this arc. gives the identifier of the node which is adjacent to this arc. The arc element must be used if the arcs are labeled.\n    Otherwise, arcs can be encoded using the adj,\n    adjTo and adjFrom attributes on the\n    node tags in the graph. Both arc tags and\n    adjacency attributes can be used, but the resulting encoding would\n    be highly redundant. Zero, one, or two children label elements may be\n    present. The first occurence of label provides a label\n    for the arc; the second provides a second label for the arc, and\n    should be used if a transducer is being encoded.","title":"<a href=\"ref/arc\">arc</a>","tag":"reference"}
{"content":"encodes a graph, which is a collection of nodes, and arcs which\nconnect the nodes. Graphs, networks, and trees describes the type of graph. states the order of the graph, i.e., the number of its nodes. states the size of the graph, i.e., the number of its arcs. One\nor more nodes and zero or more arcs in any order.","title":"<a href=\"ref/graph\">graph</a>","tag":"reference"}
{"content":"encodes a tree, which is made up of a root, internal nodes,\nleaves, and arcs from root to leaves. Graphs, networks, and trees gives the maximum number of children of the root and internal\nnodes of the tree. indicates whether or not the tree is ordered, or if it is\npartially ordered. gives the order of the tree, i.e., the number of its nodes. A root, and zero or more internal nodes and leaves, but if\nthere is an internal node, there must also be at least one leaf.","title":"<a href=\"ref/tree\">tree</a>","tag":"reference"}
{"content":"represents the root node of a tree. Graphs, networks, and trees identifies the root node of the network by pointing to a feature structure or\nother analytic element. identifies the elements which are the children of the root node. indicates whether or not the root is ordered. gives the out degree of the root, the number of its children.","title":"<a href=\"ref/root\">root</a>","tag":"reference"}
{"content":"represents an intermediate (or internal) node of a tree. Graphs, networks, and trees indicates an intermediate node, which is a feature\nstructure or other analytic element. provides a list of identifiers of the elements which are the children of\nthe intermediate node. provides the identifier of the element which is the parent of this node. indicates whether or not the internal node is ordered. provides the identifier of\nan element which this node follows. gives the out degree of an intermediate node, the number of its\nchildren.","title":"<a href=\"ref/iNode\">iNode</a>","tag":"reference"}
{"content":"encodes the leaves (terminal nodes) of a tree. Graphs, networks, and trees provides a pointer to a feature\nstructure or other analytic element. provides the identifier of parent of a leaf. provides an identifier of an element which this leaf follows. The in degree of a leaf is always 1, its out degree always\n0.","title":"<a href=\"ref/leaf\">leaf</a>","tag":"reference"}
{"content":"provides an alternative to the tree element for representing ordered rooted tree structures. Graphs, networks, and trees provides the value of an embedding tree, which is a feature\nstructure or other analytic element. an optional label followed by zero or more\n    embedding trees, triangles, or embedding leafs.","title":"<a href=\"ref/eTree\">eTree</a>","tag":"reference"}
{"content":"provides for an underspecified eTree, that is, an eTree with\n  information left out. Graphs, networks, and trees supplies a value\n      for the triangle, in the form of the identifier of a feature\nstructure or other analytic element. An optional label followed by zero or more\n    embedding trees, triangles, or embedding leafs.","title":"<a href=\"ref/triangle\">triangle</a>","tag":"reference"}
{"content":"provides explicitly for a leaf of an embedding tree, which may also\nbe encoded with the eTree element. Graphs, networks, and trees indicates the value of an embedding leaf, which is a feature\nstructure or other analytic element. The eTree tag may be used if the encoder does not\nwish to distinguish by name between nonleaf and leaf nodes in\nembedding trees; they are distinguished by their arrangement.","title":"<a href=\"ref/eLeaf\">eLeaf</a>","tag":"reference"}
{"content":"provides for lists of forests. Graphs, networks, and trees identifies the type of the forest group. One or more forests representing the same object.","title":"<a href=\"ref/listForest\">listForest</a>","tag":"reference"}
{"content":"provides for groups of rooted trees. Graphs, networks, and trees One or more trees, embedding trees, or underspecified embedding\ntrees (triangles).","title":"<a href=\"ref/forest\">forest</a>","tag":"reference"}
{"content":"indicates the numerical accuracy or precision  associated\n  with some aspect of the text markup. Certainty, Precision, and Responsibility characterizes the precision of the element or attribute pointed \n        to by the precision element. supplies a standard deviation associated with the value in\n      question","title":"<a href=\"ref/precision\">precision</a>","tag":"reference"}
{"content":"indicates the degree of certainty associated\n  with some aspect of the text markup. Certainty, Precision, and Responsibility characterizes the element in some sense, using any convenient\n         classification scheme or typology; sample categorization of annotations of uncertainty might use following values: signifies the degree of certainty associated with the object pointed to by the certainty element. indicates more exactly the aspect concerning which\n      certainty is being expressed: specifically, whether the markup\n      is correctly located, whether the correct element or attribute\n      name has been used, or whether the content of the element or\n      attribute is correct,\n\tetc. provides an alternative value for the aspect of the markup in\nquestion—an alternative generic identifier, transcription,\nor attribute value, or the identifier of an anchor element (to\nindicate an alternative starting or ending location).  If an\nassertedValue is given, the confidence level specified by\ndegree applies to the alternative markup specified by\nassertedValue; if none is given, it applies to the markup\nin the text. indicates one or\n      more element(s) characterizing the conditions which\n      are assumed in the assignment of a degree of confidence. indicates the degree of confidence assigned to the aspect\nof the markup named by the locus attribute. (For discussion of this example, see section 21.1.2.1 Contingent Conditions)","title":"<a href=\"ref/certainty\">certainty</a>","tag":"reference"}
{"content":"contains the name of an attribute appearing within running text. Documentation of TEI and other XML markup languages supplies an identifier for the scheme in which this name is defined. As an alternative to using  the scheme attribute a namespace prefix may be used. Where both scheme and a prefix are used, the prefix takes precedence.","title":"<a href=\"ref/att\">att</a>","tag":"reference"}
{"content":"identifies the individual(s) responsible for some aspect of the content or\nmarkup of particular element(s). Certainty, Precision, and Responsibility indicates the specific aspect of the encoding (markup or\n      content) for which responsibility is being assigned. The respons element is designed for cases in which\nfine-grained information about specific aspects of the markup of a text\nis desirable for whatever reason.  Global responsibility for certain\naspects of markup is usually more simply indicated in the TEI header,\nusing the respStmt element within the title statement, edition\nstatement, or change log.","title":"<a href=\"ref/respons\">respons</a>","tag":"reference"}
{"content":"contains literal code from some formal language such as a\nprogramming language. Documentation of TEI and other XML markup languages a name identifying the formal language in which  the\n\tcode is expressed","title":"<a href=\"ref/code\">code</a>","tag":"reference"}
{"content":"indicates one or more marked-up interventions in a document\n   which have subsequently been marked for cancellation. Transcription of primary sources points to one or more elements representing the\n\t interventions which are to be reverted or undone. This encoding represents the following sequence of events:\n ","title":"<a href=\"ref/undo\">undo</a>","tag":"reference"}
{"content":"contains any kind of illustrative example. Documentation of TEI and other XML markup languages If the example contains material in XML markup, either it must be\nenclosed within a CDATA marked  section, or character entity\nreferences must be used to represent the markup delimiters. If the\n    example contains well-formed XML, it should be marked using the\n    more specific egXML element.","title":"<a href=\"ref/eg\">eg</a>","tag":"reference"}
{"content":"contains a sequence of writing which has been retraced, for\n      example by over-inking, to clarify or fix it. Transcription of primary sources Multiple retraces are indicated by nesting one\n      retrace within another. In principle, a retrace\n      differs from a substitution in that second and subsequent\n      rewrites do not materially alter the content of an\n      element. Where minor changes have been made during the retracing action\n      however these may be marked up using del, add,\n      etc. with an appropriate value for the change\n      attribute.","title":"<a href=\"ref/retrace\">retrace</a>","tag":"reference"}
{"content":"a single XML fragment demonstrating the use of some XML, such as \n    elements, attributes, or processing instructions, etc., in which the egXML element functions as the \n    root element. Documentation of TEI and other XML markup languages indicates the intended validity of the example with respect to\na schema. In the source of the TEI Guidelines, this element declares itself and its content as\n      belonging to the namespace http://www.tei-c.org/ns/Examples. This\n      enables the content of the element to be validated independently against the TEI scheme. Where\n      this element is used outside this context, a different namespace or none at all may be\n      preferable. The content must however be a well-formed XML fragment or document: where this is\n      not the case, the more general eg element should be used in preference.  \n    ","title":"<a href=\"ref/egXML\">egXML</a>","tag":"reference"}
{"content":"contains the name (generic identifier) of an element. Documentation of TEI and other XML markup languages supplies the name of the scheme in which this name is defined. This example shows the use of both a namespace prefix and the scheme attribute as alternative\n      ways of indicating that the gi in question is not a TEI element name: in practice only one\n      method should be adopted.","title":"<a href=\"ref/gi\">gi</a>","tag":"reference"}
{"content":"contains an identifier or name for an object of some kind in a formal language. ident is used for tokens such as variable names, class names, type names, function names etc. in formal programming languages. Documentation of TEI and other XML markup languages In running prose, this element may be used for any kind of\n      identifier in any formal language. It should not be used for element and\n      attribute names in XML, for which the special elements gi\n       and att are provided.","title":"<a href=\"ref/ident\">ident</a>","tag":"reference"}
{"content":"contains a single attribute value. Documentation of TEI and other XML markup languages","title":"<a href=\"ref/val\">val</a>","tag":"reference"}
{"content":"contains text of a complete start- or end-tag, possibly including attribute specifications,\n    but excluding the opening and closing markup delimiter characters. Documentation of TEI and other XML markup languages indicates the type of XML tag intended supplies the name of the schema in which this tag is defined.","title":"<a href=\"ref/tag\">tag</a>","tag":"reference"}
{"content":"indicates that a description of the specified element, class, or macro should be included at this\n    point within a document. Documentation of TEI and other XML markup languages supplies the\n      identifier of the documentary element or class for which a\n      description is to be obtained. supplies attribute names for which descriptions should additionally be obtained. The description is usually displayed as a label and an item. The\n      list of attributes may include some which are inherited by virtue of an element's class\n      membership; descriptions for such attributes may also be retrieved using another\n      specDesc, this time pointing at the relevant class.","title":"<a href=\"ref/specDesc\">specDesc</a>","tag":"reference"}
{"content":"marks where a list of descriptions is to be inserted into the prose documentation. Documentation of TEI and other XML markup languages","title":"<a href=\"ref/specList\">specList</a>","tag":"reference"}
{"content":"points to the specification for an attribute or model class which is to be included in a schema Documentation of TEI and other XML markup languages the identifier used for the required class within the\n        source indicated. indicates how references\n      to this class within a content model should be interpreted. supplies a list of class members which are to be included in the schema being defined. supplies a list of class members which are to be excluded from the schema being defined. Attribute and model classes are identified by the name supplied as value for the\n    ident attribute on the classSpec element in\n    which they are declared. All TEI class names are unique; attribute\n    class names conventionally begin with the letters att..\n    ","title":"<a href=\"ref/classRef\">classRef</a>","tag":"reference"}
{"content":"points to the specification for some element which is to be included in a schema Documentation of TEI and other XML markup languages the identifier used for the required element within the\n        source indicated. Elements are identified by the name supplied as value for the\n    ident attribute on the elementSpec element in\n    which they are declared. TEI element names are unique.\n     Include in the schema an element named p  available from the\n    current default source.","title":"<a href=\"ref/elementRef\">elementRef</a>","tag":"reference"}
{"content":"points to the specification for some pattern which is to be included in a schema Documentation of TEI and other XML markup languages the identifier used for the required pattern within the\n        source indicated. Patterns or macros are identified by the name supplied as value for the\n    ident attribute on the macroSpec element in\n    which they are declared. All TEI macro names are unique.\n    ","title":"<a href=\"ref/macroRef\">macroRef</a>","tag":"reference"}
{"content":"references a module which is to be incorporated into a schema. Documentation of TEI and other XML markup languages specifies a default prefix which will be\n      prepended to all patterns from the imported module supplies a list of the elements which are to be copied from the\nspecified module into the schema being defined. supplies a list of the elements which are not to be copied from the\nspecified module into the schema being defined. the name of a TEI module refers to a non-TEI module of RELAX NG code by external location If neither include nor except is\n    supplied, the effect of this element is to make all the declarations\n    contained by the referenced module available to the schema being\n    compiled. If both attributes are supplied, an ODD\nprocessor should signal an error.  A TEI module is identified by the name supplied as value for\n    the ident attribute on a moduleSpec\n    element. The source attribute may be used to specify an\n    online source from which the specification of that module may be\n    read. A URI may alternatively be supplied in the case of a non-TEI\n    module, and this is expected to be written as a RELAX NG schema.\n     If the url attribute is used, the content element may also be supplied as \n    a child of this element. Its content (which is assumed to be a fragment of RELAX NG code) will be copied\n    along with the content of the resource indicated by the  url attribute into the \n      target RELAX NG schema.  This includes all objects available  from  the linking module.","title":"<a href=\"ref/moduleRef\">moduleRef</a>","tag":"reference"}
{"content":"documents the structure, content, and purpose of a single\nmodule, i.e. a named and externally visible group of declarations. Documentation of TEI and other XML markup languages","title":"<a href=\"ref/moduleSpec\">moduleSpec</a>","tag":"reference"}
{"content":"generates a TEI-conformant schema and documentation for it. Documentation of TEI and other XML markup languages specifies entry points to the schema, i.e. which patterns\n      may be used as the root of documents conforming to\n      it. specifies a default prefix which will be prepended to all\n      patterns relating to TEI elements, unless otherwise stated. specifies which language to use when creating\n      the objects in a schema if names for elements or attributes are available in more\n      than one language specifies which\n      languages to use when creating documentation if the description\n      for an element, attribute, class or macro is available in more\n      than one language provides a list of namespaces and/or prefixed element names to be excluded by default from anyName in RELAX NG schemas A schemaSpec combines references to modules,\n    individual element or macro declarations, and specification groups\n    together to form a unified schema. The processing of the schemaSpec element must resolve\n    any conflicts amongst the declarations it either contains or\n    refers to. Different ODD processors may generate schemas and\n    documentation using different concrete syntaxes. The source may be specified (on the source\n    attribute) in the form of a private URI, for which the recommended\n    format is tei:x.y.z, where x.y.z\n    indicates the version number, e.g. tei:1.5.1 for\n    1.5.1 release of TEI P5 or (as a special case)\n    tei:current for whatever is the latest release. The\n    source indicated must provide a set of TEI-conformant\n    specifications in a form directly usable by an ODD processor. By\n    default, this will be the location of the current release of the\n    TEI Guidelines. This schema combines elements from the current versions of the drama and core\n    modules,  the current release version of the header module, and elements\n    from an existing RELAX NG schema available from the URL indicated.","title":"<a href=\"ref/schemaSpec\">schemaSpec</a>","tag":"reference"}
{"content":"indicates that the declarations contained by the specGrp referenced should be\n    inserted at this point. Documentation of TEI and other XML markup languages points at the specification group which logically belongs here. In ODD documentation processing, a specGrpRef usually produces a comment indicating\n      that a set of declarations printed in another section will be inserted at this point in the\n        specGrp being discussed. In schema processing, the contents of the specified\n        specGrp are made available for inclusion in the generated schema.  The specification group identified by the target attribute will normally be part\n      of the current ODD document.","title":"<a href=\"ref/specGrpRef\">specGrpRef</a>","tag":"reference"}
{"content":"contains any convenient grouping of specifications for use within\n  the current module. Documentation of TEI and other XML markup languages A specification group is referenced by means of its\n    xml:id attribute. The declarations it contains may be\n    included in a schemaSpec or moduleSpec element\n    only by reference (using a specGrpRef element): it may\n    not be nested within a moduleSpec element.  Different ODD processors may generate \n  representations of the specifications contained by a\n  specGrp in different concrete syntaxes.  This specification group with identifier xDAILC\ncontains specifications for the elements\ns,cl,w, etc.","title":"<a href=\"ref/specGrp\">specGrp</a>","tag":"reference"}
{"content":"documents the structure, content, and purpose of a\n  single element type. Documentation of TEI and other XML markup languages specifies a default prefix which will be\n      prepended to all patterns relating to the element, unless otherwise stated.","title":"<a href=\"ref/elementSpec\">elementSpec</a>","tag":"reference"}
{"content":"contains reference information for a TEI element class; \nthat is a group of \n  elements which appear together in  content models, or \n  which share some common attribute, or both. Documentation of TEI and other XML markup languages indicates whether this is a model class or an attribute class indicates which alternation and sequence instantiations\n\tof a model class may be referenced. By default, all variations\n\tare permitted.","title":"<a href=\"ref/classSpec\">classSpec</a>","tag":"reference"}
{"content":"documents a datatype. Documentation of TEI and other XML markup languages","title":"<a href=\"ref/dataSpec\">dataSpec</a>","tag":"reference"}
{"content":"documents the function and implementation of a pattern. Documentation of TEI and other XML markup languages","title":"<a href=\"ref/macroSpec\">macroSpec</a>","tag":"reference"}
{"content":"provides attributes used to  indicate the status of a translatable\nportion of an ODD document. Documentation of TEI and other XML markup languages specifies the date on which the source text was extracted and sent to the translator","title":"<a href=\"ref/att.translatable\">att.translatable</a>","tag":"reference"}
{"content":"contains any commentary or discussion about the usage of an element, attribute, class, or\n    entity not otherwise documented within the containing element. Documentation of TEI and other XML markup languages specifies the remark concerned. Contains at least one paragraph, unless it is empty. As defined in ODD, must contain paragraphs; should be special.para","title":"<a href=\"ref/remarks\">remarks</a>","tag":"reference"}
{"content":"supplies a list of significant references in the current document or elsewhere. Documentation of TEI and other XML markup languages When listRef is used in the context of tagdocs, further restrictons apply:\n     ","title":"<a href=\"ref/listRef\">listRef</a>","tag":"reference"}
{"content":"groups an example demonstrating the use of an element along with optional paragraphs of\n    commentary. Documentation of TEI and other XML markup languages","title":"<a href=\"ref/exemplum\">exemplum</a>","tag":"reference"}
{"content":"specifies class membership of the documented element or class. Documentation of TEI and other XML markup languages specifies the identifier for a class of which the documented element or class is a\n        member or subclass specifies the effect of this declaration on its parent module. supplies the maximum number of times the element can occur in elements which use this model class in their content model supplies the minumum number of times the element must occur in elements which use this model class in their content model Elements or classes which are members of multiple (unrelated) classes will have more than one\n        memberOf element, grouped by a classes element. If an element is a member\n      of a class C1, which is itself a subclass of a class C2, there is no need to state this, other\n      than in the documentation for class C1.  Any additional comment or explanation of the class membership may be provided as content for\n      this element. This element will appear in any content model which references model.divLike,\n      and will have attributes defined in att.identified (in addition to any defined\n      explicitly for this element).","title":"<a href=\"ref/memberOf\">memberOf</a>","tag":"reference"}
{"content":"specifies all the classes of which the documented element or\nclass is a member or subclass. Documentation of TEI and other XML markup languages specifies the effect of this declaration on its parent\n    module. An empty classes element indicates that the\n  element documented is not a member of any class. This should not\n  generally happen. This classes element indicates that the element documented\n(which may be an element or a class) is a member of two distinct  classes: model.attributable and\n  att.declarable. ","title":"<a href=\"ref/classes\">classes</a>","tag":"reference"}
{"content":"specifies a component which is considered equivalent to the parent element, either by\n    co-reference, or by external link. Documentation of TEI and other XML markup languages a single word which follows the rules defining a\n        legal XML name (see 1 ), naming the underlying concept of which the parent is a representation. references the underlying concept of which the parent is a representation by means of\n        some external identifier references an external script which contains a method to transform instances of this\n        element to canonical TEI The mimeType attribute should be used to supply the MIME media type of the filter\n      script specified by the filter attribute. The following example declares that the bo element is\n      conceptually equivalent to the markup construct hi rend='bold', and that an\n      external definition of this concept is available from the URI indicated","title":"<a href=\"ref/equiv\">equiv</a>","tag":"reference"}
{"content":"describes the processing intended for a specified\n    element. Documentation of TEI and other XML markup languages names the process or function which this\n        processing model uses in order to produce output. whether to obey any rendition attribute that is\n        present. the intended output. the name of a CSS class which should be\n        associated with this element The intended output to be generated for a particular behaviour of a processing model may be\n      documented in one or all of the three following ways. Firstly, the cssClass\n      attribute may be used to specify the name of a CSS style in some associated CSS stylesheet\n      which is to be applied to each occurrence of a specified element found (in a given context,\n      for a specified output). Secondly, the attribute useSourceRendition may be used to\n      indicate that the default rendition for occurrences of this element, as defined by a\n        rendition element in the document header, should be applied. Thirdly, the styling\n      to be applied may be specified explicitly as content of a child outputRendition\n      element. When more than one of these options is used, they are understood to be combined in\n      accordance with the rules for multiple declaration of the styling language used. It is ambigous to have 2 models\n      that have both the same output and have no predicate\n      (and thus select the same set of nodes). It is ambigous to have 2 models\n      that have both the same output and the same predicate\n      (and thus select the same set of nodes).","title":"<a href=\"ref/model\">model</a>","tag":"reference"}
{"content":"supplies the recommended XML name for an element, class,\n  attribute, etc. in some language. Documentation of TEI and other XML markup languages All documentation elements in ODD have a canonical name,\n    supplied as the value for their ident attribute. The\n    altIdent element is used to supply an alternative name\n    for the corresponding XML object, perhaps in a different\n    language. \n      The altIdent element should only be a child of\n      attDef, classSpec, constraintSpec,\n      dataSpec, elementSpec, macroSpec, or\n      valItem. Thus its use in other places is being\n      deprecated.\n     \n      Other than when used to indicate the formal public identifier of\n      a module (which is a deprecated usage), the content of\n      altIdent should be a single teidata.xmlName.\n      ","title":"<a href=\"ref/altIdent\">altIdent</a>","tag":"reference"}
{"content":"any grouping of model or modelSequence elements with\n    a common output method Documentation of TEI and other XML markup languages whether to obey any rendition attribute which is\n        present the intended output method The child model elements of a modelGrp are always processed\n      independently.","title":"<a href=\"ref/modelGrp\">modelGrp</a>","tag":"reference"}
{"content":"any sequence of model or modelSequence elements which\n    is to be processed as a single set of actions Documentation of TEI and other XML markup languages the condition under which this model applies\n        given as an XPath Predicate Expression whether to obey any rendition attribute that is\n        present the intended output method All of the model elements inside a modelSequence \n      element must be processed. The operations indicated by each model \n      child cannot be dependent on any other operation in the sequence. The results \n      must be rendered in the order given by the list of models in the \n      modelSequence.","title":"<a href=\"ref/modelSequence\">modelSequence</a>","tag":"reference"}
{"content":"\n    describes the rendering or\n    appearance intended for all occurrences of an element in a specified\n    context for a specified type of output. Documentation of TEI and other XML markup languages provides a way of defining\n          pseudo-elements, that is, styling rules applicable to specific\n        sub-portions of an element. This component of an element specification describes the rendering or\n      appearance intended for all occurrences of the element in a specified\n      context for a specified type of output. The rendition element, by\n        contrast, describes the actual rendering or appearance of all occurrences\n        of the specified element in a source document. The\n        useSourceRendition attribute may however be used to indicate\n        that formatting information provided by a rendition element is to\n        be combined with any provided by an outputRendition element. It is strongly recommended that the W3C Cascading Stylesheet language\n      (CSS2 or later) be used to express the required formatting information.","title":"<a href=\"ref/outputRendition\">outputRendition</a>","tag":"reference"}
{"content":"list of parameter specifications Documentation of TEI and other XML markup languages The paramList element provides a a mechanism to document parameter specifications using child paramSpec elements.","title":"<a href=\"ref/paramList\">paramList</a>","tag":"reference"}
{"content":"provides a parameter for a model behaviour by\n    supplying its name and an XPath expression identifying the location of its content. Documentation of TEI and other XML markup languages a name for the parameter being supplied supplies an XPath expression which when evaluated\n        provides the value for the parameter An implementation may require parameters other than those listed here, and is not required to\n      follow this partial specification.  The names and datatypes of the expected parameters should be documented in the corresponding\n      customization using a paramSpec element. Literal strings provided in an XPath\n      expression should be quoted. In this example, which will be processed for a choice element which has both\n        sic and corr child elements, the default parameter will\n      provide the value of the child corr element, and the alternate\n      parameter will provide that of the child sic elements. If neither param\n      element was supplied, both elements would still be available to an application, but the\n      application would need to distinguish them for itself.","title":"<a href=\"ref/param\">param</a>","tag":"reference"}
{"content":"provides attributes for the elements which define\n  component parts of a content model. Documentation of TEI and other XML markup languages indicates the smallest number of times this\n      component may occur. indicates the largest number of times this\n      component may occur.","title":"<a href=\"ref/att.repeatable\">att.repeatable</a>","tag":"reference"}
{"content":"groups elements which\n  may appear as part of the content element. Documentation of TEI and other XML markup languages","title":"<a href=\"ref/model.contentPart\">model.contentPart</a>","tag":"reference"}
{"content":"indicates that the constructs referenced by its children form a sequence Documentation of TEI and other XML markup languages if true, indicates that\n      the order in which component elements of a sequence\n      appear in a document must correspond to the order in\n      which they are given in the content model. This example content model matches a sequence consisting of either\n    a name or a persName followed by nothing, or by a\n    sequence of up to five placeName elements. ","title":"<a href=\"ref/sequence\">sequence</a>","tag":"reference"}
{"content":"indicates that the constructs referenced by its children form an alternation Documentation of TEI and other XML markup languages This example content model permits either a name or a\n    persName. ","title":"<a href=\"ref/alternate\">alternate</a>","tag":"reference"}
{"content":"the formal rules of a constraint Documentation of TEI and other XML markup languages","title":"<a href=\"ref/constraint\">constraint</a>","tag":"reference"}
{"content":"contains a formal constraint, typically expressed in a rule-based schema language, to which a construct must conform in order to be considered valid Documentation of TEI and other XML markup languages supplies the name of the language in which the constraints\n      are defined characterizes the\n      constraintSpec element in some sense; used to indicate\n      when a constraintSpec warns about a deprecated\n      construct. A child constraint is required when the\n    mode attribute has the value replace or\n    add (or is not specified, as add is the\n    default). No child elements are permitted when the mode\n    attribute has the value delete. At least one child\n    element is required when the mode attribute has the\n    value change. This constraint uses Schematron to enforce the presence of the\n    spanTo attribute (which comes from an attribute class)\n    on the addSpan element:  Relationship between scheme attribute and contents: Schematron 1.x Relationship between scheme attribute and contents: ISO Schematron","title":"<a href=\"ref/constraintSpec\">constraintSpec</a>","tag":"reference"}
{"content":"contains documentation for all the attributes associated with this element, as a series of\n      attDef elements. Documentation of TEI and other XML markup languages specifies whether all the attributes in the list are available (org=\"group\") or only one\n        of them (org=\"choice\")","title":"<a href=\"ref/attList\">attList</a>","tag":"reference"}
{"content":"points to the definition of an attribute or group of attributes. Documentation of TEI and other XML markup languages the name of the attribute class the name of the attribute","title":"<a href=\"ref/attRef\">attRef</a>","tag":"reference"}
{"content":"contains the definition of a single attribute. Documentation of TEI and other XML markup languages specifies the optionality of the attribute. specifies the namespace to which this attribute belongs","title":"<a href=\"ref/attDef\">attDef</a>","tag":"reference"}
{"content":"specifies the declared value for an attribute, by referring to\n  any datatype defined by the chosen schema language. Documentation of TEI and other XML markup languages indicates the minimum number of times this datatype may\n      occur in an instance of the attribute being defined indicates the maximum number of times this datatype may\n      occur in an instance of the attribute being defined In the TEI scheme, most datatypes are expressed using\n    pre-defined TEI macros, which map a name in the form\n    teidata.xxxx to a datatype defined by RELAX NG or the W3C Schema Language.","title":"<a href=\"ref/datatype\">datatype</a>","tag":"reference"}
{"content":"identifies the datatype of an attribute value, either by referencing an item in an externally defined datatype library, or by\n    pointing to a TEI-defined data specification Documentation of TEI and other XML markup languages the identifier used for this datatype specification the name of a datatype in the list provided by \n        XML Schemas: Part 2: Datatypes  a pointer to a datatype defined in some datatype library supplies a string representing a regular expression providing additional constraints \n      on the strings used to represent values of this datatype Only one of the attributes key, name, and ref may be used. \n     dataFacet children are only allowed when dataRef refers with name to a datatype from the specification XML Schemas: Part 2: Datatypes.\n     restriction is only permitted when dataRef uses the name attribute.","title":"<a href=\"ref/dataRef\">dataRef</a>","tag":"reference"}
{"content":"specifies the default declared value for an attribute. Documentation of TEI and other XML markup languages any legal declared value or TEI-defined keyword","title":"<a href=\"ref/defaultVal\">defaultVal</a>","tag":"reference"}
{"content":"Restricts the value of the strings used to represent values of a datatype, \n    according to XML Schemas: Part 2: Datatypes. \n  Documentation of TEI and other XML markup languages the name of the facet. the facet value. This element is only allowed when the parent dataRef refers with\n        name to a datatype from the specification XML Schemas: Part 2: Datatypes. \n    ","title":"<a href=\"ref/dataFacet\">dataFacet</a>","tag":"reference"}
{"content":"documents a single value in a predefined list of values. Documentation of TEI and other XML markup languages specifies the value concerned.","title":"<a href=\"ref/valItem\">valItem</a>","tag":"reference"}
{"content":"specifies any semantic or syntactic constraint on the value that\nan attribute may take, additional to the information carried by the\ndatatype element. Documentation of TEI and other XML markup languages","title":"<a href=\"ref/valDesc\">valDesc</a>","tag":"reference"}
{"content":"contains one or more valItem elements defining possible values. Documentation of TEI and other XML markup languages specifies the extensibility of the list of values specified.","title":"<a href=\"ref/valList\">valList</a>","tag":"reference"}
{"content":"indicates the presence\n   of any elements in a content model Documentation of TEI and other XML markup languages supplies a list of namespaces to one of which the\n        permitted elements must belong.\n        supplies a list of namespaces or prefixed element \n        names which are not permitted. This  content element permits one occurrence of any element which \n      does not belong to the TEI namespace.","title":"<a href=\"ref/anyElement\">anyElement</a>","tag":"reference"}
{"content":"indicates the presence\n   of a text node in a content model Documentation of TEI and other XML markup languages","title":"<a href=\"ref/textNode\">textNode</a>","tag":"reference"}
{"content":"provides attributes indicating how multiple\n    references to the same object in a schema should be combined Documentation of TEI and other XML markup languages specifies the effect of this declaration on its\n        parent object.","title":"<a href=\"ref/att.combinable\">att.combinable</a>","tag":"reference"}
{"content":"indicates the presence of an empty node within a\n    content model Documentation of TEI and other XML markup languages","title":"<a href=\"ref/empty\">empty</a>","tag":"reference"}
{"content":"provides attributes indicating how a deprecated feature will be treated in future releases. Documentation of TEI and other XML markup languages provides a date before which the construct being defined\n      will not be removed.","title":"<a href=\"ref/att.deprecated\">att.deprecated</a>","tag":"reference"}
{"content":"provides identifying attributes for elements which can be\n  subsequently referenced by means of a key\n  attribute. Documentation of TEI and other XML markup languages supplies the identifier by which this element may be referenced. says whether this object should be predeclared in the\n      tei infrastructure module. supplies a name for the module in which this object is to be declared.","title":"<a href=\"ref/att.identified\">att.identified</a>","tag":"reference"}
{"content":"provides attributes indicating the target namespace for an\n  object being created Documentation of TEI and other XML markup languages specifies the namespace to which this element belongs","title":"<a href=\"ref/att.namespaceable\">att.namespaceable</a>","tag":"reference"}
{"content":"provides attributes for filtering \n        by an XPath predicate expression. Documentation of TEI and other XML markup languages the condition under which the element \n                bearing this attribute applies, given as an XPath predicate expression.","title":"<a href=\"ref/att.predicate\">att.predicate</a>","tag":"reference"}
{"content":"contains a declaration of the intended content model for the element (or other construct) being specified. Documentation of TEI and other XML markup languages controls whether or\n      not pattern names generated in the corresponding RELAX NG schema\n      source are automatically prefixed to avoid potential\n      nameclashes. This sample content element indicates that the element\n    being specified has no content:","title":"<a href=\"ref/content\">content</a>","tag":"reference"}
{"content":"supplies specification for one parameter of a model\n    behaviour Documentation of TEI and other XML markup languages Where a model behaviour uses more than one parameter, individual paramSpec elements\n      should be grouped together using a paramList element, as above. Parameter\n      specifications are provided within the valItem used to define a particular behaviour,\n      which forms part of the specification of a model element's behaviour\n      attribute. In the example above, the behaviour link has two parameters:\n        content and link. Using a desc element within a paramSpec is optional but recommended\n      practice.","title":"<a href=\"ref/paramSpec\">paramSpec</a>","tag":"reference"}
{"content":"contains the name of a collection of\nmanuscripts or other objects, not necessarily located within a single repository. Manuscript Description","title":"<a href=\"ref/collection\">collection</a>","tag":"reference"}
{"content":"specifies constraints on the content of valid feature\nstructures. Feature structures May contain a series of conditional or biconditional elements. ","title":"<a href=\"ref/fsConstraints\">fsConstraints</a>","tag":"reference"}
